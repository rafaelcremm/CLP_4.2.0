

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat May 10 16:05:56 2025

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F18877
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK3,global,class=CODE,delta=2
     6                           	psect	idataBANK5,global,class=CODE,delta=2
     7                           	psect	stringtext1,global,class=STRCODE,delta=2
     8                           	psect	stringtext2,global,class=STRCODE,delta=2
     9                           	psect	stringtext3,global,class=STRCODE,delta=2
    10                           	psect	stringtext4,global,class=STRCODE,delta=2
    11                           	psect	stringtext5,global,class=STRCODE,delta=2
    12                           	psect	stringtext6,global,class=STRCODE,delta=2
    13                           	psect	stringtext7,global,class=STRCODE,delta=2
    14                           	psect	stringtext8,global,class=STRCODE,delta=2
    15                           	psect	stringtext9,global,class=STRCODE,delta=2
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	stringtext18,global,class=STRCODE,delta=2
    25                           	psect	stringtext19,global,class=STRCODE,delta=2
    26                           	psect	stringtext20,global,class=STRCODE,delta=2
    27                           	psect	stringtext21,global,class=STRCODE,delta=2
    28                           	psect	stringtext22,global,class=STRCODE,delta=2
    29                           	psect	stringtext23,global,class=STRCODE,delta=2
    30                           	psect	stringtext24,global,class=STRCODE,delta=2
    31                           	psect	stringtext25,global,class=STRCODE,delta=2
    32                           	psect	stringtext26,global,class=STRCODE,delta=2
    33                           	psect	stringtext27,global,class=STRCODE,delta=2
    34                           	psect	stringtext28,global,class=STRCODE,delta=2
    35                           	psect	stringtext29,global,class=STRCODE,delta=2
    36                           	psect	stringtext30,global,class=STRCODE,delta=2
    37                           	psect	stringtext31,global,class=STRCODE,delta=2
    38                           	psect	stringtext32,global,class=STRCODE,delta=2
    39                           	psect	stringtext33,global,class=STRCODE,delta=2
    40                           	psect	stringtext34,global,class=STRCODE,delta=2
    41                           	psect	stringtext35,global,class=STRCODE,delta=2
    42                           	psect	stringtext36,global,class=STRCODE,delta=2
    43                           	psect	stringtext37,global,class=STRCODE,delta=2
    44                           	psect	stringtext38,global,class=STRCODE,delta=2
    45                           	psect	stringtext39,global,class=STRCODE,delta=2
    46                           	psect	stringtext40,global,class=STRCODE,delta=2
    47                           	psect	stringtext41,global,class=STRCODE,delta=2
    48                           	psect	stringtext42,global,class=STRCODE,delta=2
    49                           	psect	stringtext43,global,class=STRCODE,delta=2
    50                           	psect	stringtext44,global,class=STRCODE,delta=2
    51                           	psect	stringtext45,global,class=STRCODE,delta=2
    52                           	psect	stringtext46,global,class=STRCODE,delta=2
    53                           	psect	stringtext47,global,class=STRCODE,delta=2
    54                           	psect	stringtext48,global,class=STRCODE,delta=2
    55                           	psect	stringtext49,global,class=STRCODE,delta=2
    56                           	psect	stringtext50,global,class=STRCODE,delta=2
    57                           	psect	stringtext51,global,class=STRCODE,delta=2
    58                           	psect	stringtext52,global,class=STRCODE,delta=2
    59                           	psect	stringtext53,global,class=STRCODE,delta=2
    60                           	psect	stringtext54,global,class=STRCODE,delta=2
    61                           	psect	stringtext55,global,class=STRCODE,delta=2
    62                           	psect	stringtext56,global,class=STRCODE,delta=2
    63                           	psect	stringtext57,global,class=STRCODE,delta=2
    64                           	psect	stringtext58,global,class=STRCODE,delta=2
    65                           	psect	stringtext59,global,class=STRCODE,delta=2
    66                           	psect	stringtext60,global,class=STRCODE,delta=2
    67                           	psect	stringtext61,global,class=STRCODE,delta=2
    68                           	psect	stringtext62,global,class=STRCODE,delta=2
    69                           	psect	stringtext63,global,class=STRCODE,delta=2
    70                           	psect	stringtext64,global,class=STRCODE,delta=2
    71                           	psect	stringtext65,global,class=STRCODE,delta=2
    72                           	psect	stringtext66,global,class=STRCODE,delta=2
    73                           	psect	stringtext67,global,class=STRCODE,delta=2
    74                           	psect	stringtext68,global,class=STRCODE,delta=2
    75                           	psect	stringtext69,global,class=STRCODE,delta=2
    76                           	psect	stringtext70,global,class=STRCODE,delta=2
    77                           	psect	stringtext71,global,class=STRCODE,delta=2
    78                           	psect	stringtext72,global,class=STRCODE,delta=2
    79                           	psect	stringtext73,global,class=STRCODE,delta=2
    80                           	psect	stringtext74,global,class=STRCODE,delta=2
    81                           	psect	stringtext75,global,class=STRCODE,delta=2
    82                           	psect	stringtext76,global,class=STRCODE,delta=2
    83                           	psect	stringtext77,global,class=STRCODE,delta=2
    84                           	psect	stringtext78,global,class=STRCODE,delta=2
    85                           	psect	stringtext79,global,class=STRCODE,delta=2
    86                           	psect	stringtext80,global,class=STRCODE,delta=2
    87                           	psect	stringtext81,global,class=STRCODE,delta=2
    88                           	psect	stringtext82,global,class=STRCODE,delta=2
    89                           	psect	stringtext83,global,class=STRCODE,delta=2
    90                           	psect	stringtext84,global,class=STRCODE,delta=2
    91                           	psect	stringtext85,global,class=STRCODE,delta=2
    92                           	psect	stringtext86,global,class=STRCODE,delta=2
    93                           	psect	stringtext87,global,class=STRCODE,delta=2
    94                           	psect	stringtext88,global,class=STRCODE,delta=2
    95                           	psect	stringtext89,global,class=STRCODE,delta=2
    96                           	psect	stringtext90,global,class=STRCODE,delta=2
    97                           	psect	stringtext91,global,class=STRCODE,delta=2
    98                           	psect	stringtext92,global,class=STRCODE,delta=2
    99                           	psect	stringtext93,global,class=STRCODE,delta=2
   100                           	psect	stringtext94,global,class=STRCODE,delta=2
   101                           	psect	stringtext95,global,class=STRCODE,delta=2
   102                           	psect	stringtext96,global,class=STRCODE,delta=2
   103                           	psect	stringtext97,global,class=STRCODE,delta=2
   104                           	psect	stringtext98,global,class=STRCODE,delta=2
   105                           	psect	stringtext99,global,class=STRCODE,delta=2
   106                           	psect	stringtext100,global,class=STRCODE,delta=2
   107                           	psect	stringtext101,global,class=STRCODE,delta=2
   108                           	psect	stringtext102,global,class=STRCODE,delta=2
   109                           	psect	stringtext103,global,class=STRCODE,delta=2
   110                           	psect	cinit,global,class=CODE,merge=1,delta=2
   111                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
   112                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
   113                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
   114                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
   115                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
   116                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
   117                           	psect	dataBANK5,global,class=BANK5,space=1,delta=1
   118                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
   119                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1
   120                           	psect	clrtext,global,class=CODE,delta=2
   121                           	psect	cstackBANK8,global,class=BANK8,space=1,delta=1
   122                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
   123                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
   124                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
   125                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
   126                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
   127                           	psect	text1,local,class=CODE,merge=1,delta=2
   128                           	psect	text2,local,class=CODE,merge=1,delta=2
   129                           	psect	text3,local,class=CODE,merge=1,delta=2
   130                           	psect	text4,local,class=CODE,merge=1,delta=2
   131                           	psect	text5,local,class=CODE,merge=1,delta=2
   132                           	psect	text6,local,class=CODE,merge=1,delta=2
   133                           	psect	text7,local,class=CODE,merge=1,delta=2
   134                           	psect	text8,local,class=CODE,merge=1,delta=2
   135                           	psect	text9,local,class=CODE,merge=1,delta=2
   136                           	psect	swtext1,local,class=CONST,delta=2
   137                           	psect	text10,local,class=CODE,merge=1,delta=2
   138                           	psect	text11,local,class=CODE,merge=1,delta=2
   139                           	psect	text12,local,class=CODE,merge=1,delta=2
   140                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
   141                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
   142                           	psect	text15,local,class=CODE,merge=1,delta=2
   143                           	psect	text16,local,class=CODE,merge=1,delta=2
   144                           	psect	text17,local,class=CODE,merge=1,delta=2
   145                           	psect	swtext2,local,class=CONST,delta=2
   146                           	psect	text18,local,class=CODE,merge=1,delta=2
   147                           	psect	text19,local,class=CODE,merge=1,delta=2
   148                           	psect	text20,local,class=CODE,merge=1,delta=2
   149                           	psect	text21,local,class=CODE,merge=1,delta=2
   150                           	psect	text22,local,class=CODE,merge=1,delta=2
   151                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
   152                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
   153                           	psect	text25,local,class=CODE,merge=1,delta=2
   154                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
   155                           	psect	text27,local,class=CODE,merge=1,delta=2,group=2
   156                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
   157                           	psect	text29,local,class=CODE,merge=1,delta=2,group=2
   158                           	psect	text30,local,class=CODE,merge=1,delta=2,group=2
   159                           	psect	text31,local,class=CODE,merge=1,delta=2,group=2
   160                           	psect	text32,local,class=CODE,merge=1,delta=2,group=2
   161                           	psect	text33,local,class=CODE,merge=1,delta=2,group=2
   162                           	psect	text34,local,class=CODE,merge=1,delta=2,group=2
   163                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
   164                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
   165                           	psect	text37,local,class=CODE,merge=1,delta=2,group=2
   166                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
   167                           	psect	text39,local,class=CODE,merge=1,delta=2,group=2
   168                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
   169                           	psect	text41,local,class=CODE,merge=1,delta=2,group=2
   170                           	psect	text42,local,class=CODE,merge=1,delta=2,group=2
   171                           	psect	text43,local,class=CODE,merge=1,delta=2,group=2
   172                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
   173                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
   174                           	psect	text46,local,class=CODE,merge=1,delta=2,group=2
   175                           	psect	text47,local,class=CODE,merge=1,delta=2,group=2
   176                           	psect	text48,local,class=CODE,merge=1,delta=2
   177                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
   178                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
   179                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
   180                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
   181                           	psect	text53,local,class=CODE,merge=1,delta=2
   182                           	psect	text54,local,class=CODE,merge=1,delta=2,group=2
   183                           	psect	text55,local,class=CODE,merge=1,delta=2,group=2
   184                           	psect	text56,local,class=CODE,merge=1,delta=2
   185                           	psect	text57,local,class=CODE,merge=1,delta=2
   186                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
   187                           	psect	text59,local,class=CODE,merge=1,delta=2
   188                           	psect	text60,local,class=CODE,merge=1,delta=2
   189                           	psect	text61,local,class=CODE,merge=1,delta=2
   190                           	psect	text62,local,class=CODE,merge=1,delta=2
   191                           	psect	swtext3,local,class=CONST,delta=2
   192                           	psect	text63,local,class=CODE,merge=1,delta=2
   193                           	psect	swtext4,local,class=CONST,delta=2
   194                           	psect	text64,local,class=CODE,merge=1,delta=2
   195                           	psect	swtext5,local,class=CONST,delta=2
   196                           	psect	text65,local,class=CODE,merge=1,delta=2
   197                           	psect	text66,local,class=CODE,merge=1,delta=2
   198                           	psect	text67,local,class=CODE,merge=1,delta=2
   199                           	psect	text68,local,class=CODE,merge=1,delta=2
   200                           	psect	text69,local,class=CODE,merge=1,delta=2
   201                           	psect	text70,local,class=CODE,merge=1,delta=2
   202                           	psect	text71,local,class=CODE,merge=1,delta=2
   203                           	psect	text72,local,class=CODE,merge=1,delta=2
   204                           	psect	text73,local,class=CODE,merge=1,delta=2
   205                           	psect	text74,local,class=CODE,merge=1,delta=2
   206                           	psect	text75,local,class=CODE,merge=1,delta=2
   207                           	psect	text76,local,class=CODE,merge=1,delta=2
   208                           	psect	text77,local,class=CODE,merge=1,delta=2
   209                           	psect	text78,local,class=CODE,merge=1,delta=2
   210                           	psect	text79,local,class=CODE,merge=1,delta=2
   211                           	psect	swtext6,local,class=CONST,delta=2
   212                           	psect	text80,local,class=CODE,merge=1,delta=2
   213                           	psect	text81,local,class=CODE,merge=1,delta=2,group=2
   214                           	psect	text82,local,class=CODE,merge=1,delta=2
   215                           	psect	text83,local,class=CODE,merge=1,delta=2
   216                           	psect	text84,local,class=CODE,merge=1,delta=2
   217                           	psect	text85,local,class=CODE,merge=1,delta=2
   218                           	psect	text86,local,class=CODE,merge=1,delta=2
   219                           	psect	text87,local,class=CODE,merge=1,delta=2
   220                           	psect	text88,local,class=CODE,merge=1,delta=2
   221                           	psect	text89,local,class=CODE,merge=1,delta=2
   222                           	psect	swtext7,local,class=CONST,delta=2
   223                           	psect	text90,local,class=CODE,merge=1,delta=2
   224                           	psect	text91,local,class=CODE,merge=1,delta=2,group=2
   225                           	psect	text92,local,class=CODE,merge=1,delta=2,group=2
   226                           	psect	text93,local,class=CODE,merge=1,delta=2,group=2
   227                           	psect	text94,local,class=CODE,merge=1,delta=2,group=2
   228                           	psect	text95,local,class=CODE,merge=1,delta=2
   229                           	psect	text96,local,class=CODE,merge=1,delta=2
   230                           	psect	text97,local,class=CODE,merge=1,delta=2
   231                           	psect	text98,local,class=CODE,merge=1,delta=2
   232                           	psect	text99,local,class=CODE,merge=1,delta=2
   233                           	psect	text100,local,class=CODE,merge=1,delta=2
   234                           	psect	text101,local,class=CODE,merge=1,delta=2
   235                           	psect	text102,local,class=CODE,merge=1,delta=2
   236                           	psect	text103,local,class=CODE,merge=1,delta=2
   237                           	psect	text104,local,class=CODE,merge=1,delta=2
   238                           	psect	text105,local,class=CODE,merge=1,delta=2
   239                           	psect	text106,local,class=CODE,merge=1,delta=2
   240                           	psect	text107,local,class=CODE,merge=1,delta=2
   241                           	psect	text108,local,class=CODE,merge=1,delta=2
   242                           	psect	text109,local,class=CODE,merge=1,delta=2
   243                           	psect	text110,local,class=CODE,merge=1,delta=2
   244                           	psect	text111,local,class=CODE,merge=1,delta=2
   245                           	psect	text112,local,class=CODE,merge=1,delta=2
   246                           	psect	text113,local,class=CODE,merge=1,delta=2
   247                           	psect	text114,local,class=CODE,merge=1,delta=2
   248                           	psect	text115,local,class=CODE,merge=1,delta=2,group=2
   249                           	psect	text116,local,class=CODE,merge=1,delta=2
   250                           	psect	text117,local,class=CODE,merge=1,delta=2
   251                           	psect	text118,local,class=CODE,merge=1,delta=2
   252                           	psect	text119,local,class=CODE,merge=1,delta=2
   253                           	psect	text120,local,class=CODE,merge=1,delta=2
   254                           	psect	text121,local,class=CODE,merge=1,delta=2,group=2
   255                           	psect	text122,local,class=CODE,merge=1,delta=2
   256                           	psect	text123,local,class=CODE,merge=1,delta=2
   257                           	psect	text124,local,class=CODE,merge=1,delta=2
   258                           	psect	text125,local,class=CODE,merge=1,delta=2
   259                           	psect	text126,local,class=CODE,merge=1,delta=2,group=2
   260                           	psect	text127,local,class=CODE,merge=1,delta=2
   261                           	psect	text128,local,class=CODE,merge=1,delta=2
   262                           	psect	text129,local,class=CODE,merge=1,delta=2
   263                           	psect	text130,local,class=CODE,merge=1,delta=2
   264                           	psect	text131,local,class=CODE,merge=1,delta=2
   265                           	psect	text132,local,class=CODE,merge=1,delta=2
   266                           	psect	text133,local,class=CODE,merge=1,delta=2
   267                           	psect	text134,local,class=CODE,merge=1,delta=2
   268                           	psect	text135,local,class=CODE,merge=1,delta=2,group=2
   269                           	psect	text136,local,class=CODE,merge=1,delta=2,group=1
   270                           	psect	text137,local,class=CODE,merge=1,delta=2
   271                           	psect	text138,local,class=CODE,merge=1,delta=2,group=1
   272                           	psect	intentry,global,class=CODE,delta=2
   273                           	psect	text140,local,class=CODE,merge=1,delta=2
   274                           	psect	text141,local,class=CODE,merge=1,delta=2
   275                           	psect	text142,local,class=CODE,merge=1,delta=2
   276                           	psect	text143,local,class=CODE,merge=1,delta=2
   277                           	psect	text144,local,class=CODE,merge=1,delta=2
   278                           	psect	text145,local,class=CODE,merge=1,delta=2
   279                           	psect	text146,local,class=CODE,merge=1,delta=2
   280                           	psect	text147,local,class=CODE,merge=1,delta=2
   281                           	psect	text148,local,class=CODE,merge=1,delta=2
   282                           	psect	text149,local,class=CODE,merge=1,delta=2
   283                           	psect	text150,local,class=CODE,merge=1,delta=2
   284                           	psect	text151,local,class=CODE,merge=1,delta=2
   285                           	psect	text152,local,class=CODE,merge=1,delta=2
   286                           	psect	text153,local,class=CODE,merge=1,delta=2
   287                           	psect	text154,local,class=CODE,merge=1,delta=2
   288                           	psect	text155,local,class=CODE,merge=1,delta=2
   289                           	psect	text9_split_1,local,class=CODE,merge=1,delta=2
   290                           	dabs	1,0x1920,80
   291                           	dabs	1,0x18A0,80
   292                           	dabs	1,0x1848,40
   293                           	dabs	1,0x2F28,0,_freq_atual_arr
   294                           	dabs	1,0x7E,2
   295  0000                     
   296                           ; Version 1.45
   297                           ; Generated 16/11/2017 GMT
   298                           ; 
   299                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   300                           ; All rights reserved.
   301                           ; 
   302                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   303                           ; 
   304                           ; Redistribution and use in source and binary forms, with or without modification, are
   305                           ; permitted provided that the following conditions are met:
   306                           ; 
   307                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   308                           ;        conditions and the following disclaimer.
   309                           ; 
   310                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   311                           ;        of conditions and the following disclaimer in the documentation and/or other
   312                           ;        materials provided with the distribution.
   313                           ; 
   314                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   315                           ;        software without specific prior written permission.
   316                           ; 
   317                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   318                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   319                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   320                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   321                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   322                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   323                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   324                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   325                           ; 
   326                           ; 
   327                           ; Code-generator required, PIC16F18877 Definitions
   328                           ; 
   329                           ; SFR Addresses
   330  0000                     	;# 
   331  0001                     	;# 
   332  0002                     	;# 
   333  0003                     	;# 
   334  0004                     	;# 
   335  0005                     	;# 
   336  0006                     	;# 
   337  0007                     	;# 
   338  0008                     	;# 
   339  0009                     	;# 
   340  000A                     	;# 
   341  000B                     	;# 
   342  000C                     	;# 
   343  000D                     	;# 
   344  000E                     	;# 
   345  000F                     	;# 
   346  0010                     	;# 
   347  0011                     	;# 
   348  0012                     	;# 
   349  0013                     	;# 
   350  0014                     	;# 
   351  0015                     	;# 
   352  0016                     	;# 
   353  0017                     	;# 
   354  0018                     	;# 
   355  0019                     	;# 
   356  001A                     	;# 
   357  001C                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001D                     	;# 
   361  001E                     	;# 
   362  001F                     	;# 
   363  008C                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0090                     	;# 
   371  0091                     	;# 
   372  0093                     	;# 
   373  0094                     	;# 
   374  0095                     	;# 
   375  0096                     	;# 
   376  0097                     	;# 
   377  0098                     	;# 
   378  0099                     	;# 
   379  009A                     	;# 
   380  009B                     	;# 
   381  009C                     	;# 
   382  009D                     	;# 
   383  009E                     	;# 
   384  010C                     	;# 
   385  010D                     	;# 
   386  010E                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0110                     	;# 
   390  0110                     	;# 
   391  0111                     	;# 
   392  0112                     	;# 
   393  0112                     	;# 
   394  0113                     	;# 
   395  0114                     	;# 
   396  0114                     	;# 
   397  0115                     	;# 
   398  0116                     	;# 
   399  0116                     	;# 
   400  0117                     	;# 
   401  0119                     	;# 
   402  0119                     	;# 
   403  0119                     	;# 
   404  011A                     	;# 
   405  011A                     	;# 
   406  011A                     	;# 
   407  011B                     	;# 
   408  011B                     	;# 
   409  011B                     	;# 
   410  011B                     	;# 
   411  011B                     	;# 
   412  011C                     	;# 
   413  011C                     	;# 
   414  011C                     	;# 
   415  011D                     	;# 
   416  011D                     	;# 
   417  011D                     	;# 
   418  011E                     	;# 
   419  011E                     	;# 
   420  011E                     	;# 
   421  011F                     	;# 
   422  011F                     	;# 
   423  011F                     	;# 
   424  011F                     	;# 
   425  011F                     	;# 
   426  018C                     	;# 
   427  018D                     	;# 
   428  018E                     	;# 
   429  018F                     	;# 
   430  0190                     	;# 
   431  0191                     	;# 
   432  0192                     	;# 
   433  0196                     	;# 
   434  0197                     	;# 
   435  0198                     	;# 
   436  0199                     	;# 
   437  019A                     	;# 
   438  019B                     	;# 
   439  019C                     	;# 
   440  020C                     	;# 
   441  020C                     	;# 
   442  020D                     	;# 
   443  020E                     	;# 
   444  020F                     	;# 
   445  020F                     	;# 
   446  0210                     	;# 
   447  0210                     	;# 
   448  0211                     	;# 
   449  0211                     	;# 
   450  0212                     	;# 
   451  0212                     	;# 
   452  0213                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0216                     	;# 
   457  0216                     	;# 
   458  0217                     	;# 
   459  0217                     	;# 
   460  0218                     	;# 
   461  0218                     	;# 
   462  0219                     	;# 
   463  021A                     	;# 
   464  021B                     	;# 
   465  021B                     	;# 
   466  021C                     	;# 
   467  021C                     	;# 
   468  021D                     	;# 
   469  021D                     	;# 
   470  021E                     	;# 
   471  021F                     	;# 
   472  028C                     	;# 
   473  028C                     	;# 
   474  028D                     	;# 
   475  028D                     	;# 
   476  028E                     	;# 
   477  028F                     	;# 
   478  0290                     	;# 
   479  0290                     	;# 
   480  0291                     	;# 
   481  0292                     	;# 
   482  0292                     	;# 
   483  0293                     	;# 
   484  0293                     	;# 
   485  0294                     	;# 
   486  0295                     	;# 
   487  0296                     	;# 
   488  0296                     	;# 
   489  0297                     	;# 
   490  0298                     	;# 
   491  0298                     	;# 
   492  0299                     	;# 
   493  0299                     	;# 
   494  029A                     	;# 
   495  029B                     	;# 
   496  029C                     	;# 
   497  029C                     	;# 
   498  029D                     	;# 
   499  030C                     	;# 
   500  030C                     	;# 
   501  030D                     	;# 
   502  030E                     	;# 
   503  030F                     	;# 
   504  0310                     	;# 
   505  0310                     	;# 
   506  0311                     	;# 
   507  0312                     	;# 
   508  0313                     	;# 
   509  0314                     	;# 
   510  0314                     	;# 
   511  0315                     	;# 
   512  0316                     	;# 
   513  0317                     	;# 
   514  0318                     	;# 
   515  0318                     	;# 
   516  0319                     	;# 
   517  031A                     	;# 
   518  031B                     	;# 
   519  031C                     	;# 
   520  031C                     	;# 
   521  031D                     	;# 
   522  031E                     	;# 
   523  031F                     	;# 
   524  038C                     	;# 
   525  038D                     	;# 
   526  038E                     	;# 
   527  0390                     	;# 
   528  0391                     	;# 
   529  0392                     	;# 
   530  040C                     	;# 
   531  040D                     	;# 
   532  040E                     	;# 
   533  040F                     	;# 
   534  0410                     	;# 
   535  0411                     	;# 
   536  0416                     	;# 
   537  0416                     	;# 
   538  0417                     	;# 
   539  0418                     	;# 
   540  0418                     	;# 
   541  0419                     	;# 
   542  041A                     	;# 
   543  041A                     	;# 
   544  041B                     	;# 
   545  041C                     	;# 
   546  041C                     	;# 
   547  041D                     	;# 
   548  041E                     	;# 
   549  041F                     	;# 
   550  048C                     	;# 
   551  048C                     	;# 
   552  048D                     	;# 
   553  048E                     	;# 
   554  048F                     	;# 
   555  048F                     	;# 
   556  0490                     	;# 
   557  0491                     	;# 
   558  0492                     	;# 
   559  0492                     	;# 
   560  0493                     	;# 
   561  0494                     	;# 
   562  0495                     	;# 
   563  0495                     	;# 
   564  0496                     	;# 
   565  0497                     	;# 
   566  0498                     	;# 
   567  0499                     	;# 
   568  049A                     	;# 
   569  049B                     	;# 
   570  049C                     	;# 
   571  049D                     	;# 
   572  050C                     	;# 
   573  050C                     	;# 
   574  050D                     	;# 
   575  050E                     	;# 
   576  050F                     	;# 
   577  050F                     	;# 
   578  0510                     	;# 
   579  0511                     	;# 
   580  0512                     	;# 
   581  0512                     	;# 
   582  0513                     	;# 
   583  0514                     	;# 
   584  0515                     	;# 
   585  0515                     	;# 
   586  0516                     	;# 
   587  0517                     	;# 
   588  0518                     	;# 
   589  0519                     	;# 
   590  051A                     	;# 
   591  051B                     	;# 
   592  051C                     	;# 
   593  051D                     	;# 
   594  058C                     	;# 
   595  058C                     	;# 
   596  058D                     	;# 
   597  058E                     	;# 
   598  058F                     	;# 
   599  058F                     	;# 
   600  0590                     	;# 
   601  0591                     	;# 
   602  0592                     	;# 
   603  0593                     	;# 
   604  060C                     	;# 
   605  060D                     	;# 
   606  060E                     	;# 
   607  060F                     	;# 
   608  0610                     	;# 
   609  0611                     	;# 
   610  0612                     	;# 
   611  0613                     	;# 
   612  0614                     	;# 
   613  0616                     	;# 
   614  0617                     	;# 
   615  0618                     	;# 
   616  0619                     	;# 
   617  061A                     	;# 
   618  061B                     	;# 
   619  061C                     	;# 
   620  061D                     	;# 
   621  061E                     	;# 
   622  068C                     	;# 
   623  068D                     	;# 
   624  068E                     	;# 
   625  068F                     	;# 
   626  0690                     	;# 
   627  0691                     	;# 
   628  0692                     	;# 
   629  0693                     	;# 
   630  0694                     	;# 
   631  070C                     	;# 
   632  070D                     	;# 
   633  070E                     	;# 
   634  070F                     	;# 
   635  0710                     	;# 
   636  0711                     	;# 
   637  0712                     	;# 
   638  0713                     	;# 
   639  0714                     	;# 
   640  0716                     	;# 
   641  0717                     	;# 
   642  0718                     	;# 
   643  0719                     	;# 
   644  071A                     	;# 
   645  071B                     	;# 
   646  071C                     	;# 
   647  071D                     	;# 
   648  071E                     	;# 
   649  0796                     	;# 
   650  0797                     	;# 
   651  0798                     	;# 
   652  0799                     	;# 
   653  079A                     	;# 
   654  079B                     	;# 
   655  080C                     	;# 
   656  080D                     	;# 
   657  080E                     	;# 
   658  080F                     	;# 
   659  0810                     	;# 
   660  0811                     	;# 
   661  0812                     	;# 
   662  0813                     	;# 
   663  0814                     	;# 
   664  081A                     	;# 
   665  081B                     	;# 
   666  081C                     	;# 
   667  081D                     	;# 
   668  081E                     	;# 
   669  081F                     	;# 
   670  088C                     	;# 
   671  088D                     	;# 
   672  088E                     	;# 
   673  088F                     	;# 
   674  0890                     	;# 
   675  0891                     	;# 
   676  0892                     	;# 
   677  0893                     	;# 
   678  0895                     	;# 
   679  0896                     	;# 
   680  0897                     	;# 
   681  0898                     	;# 
   682  0899                     	;# 
   683  089A                     	;# 
   684  089B                     	;# 
   685  090C                     	;# 
   686  090E                     	;# 
   687  090F                     	;# 
   688  091F                     	;# 
   689  098F                     	;# 
   690  098F                     	;# 
   691  0990                     	;# 
   692  0991                     	;# 
   693  0992                     	;# 
   694  0993                     	;# 
   695  0994                     	;# 
   696  0995                     	;# 
   697  0996                     	;# 
   698  0997                     	;# 
   699  1E0F                     	;# 
   700  1E10                     	;# 
   701  1E11                     	;# 
   702  1E12                     	;# 
   703  1E13                     	;# 
   704  1E14                     	;# 
   705  1E15                     	;# 
   706  1E16                     	;# 
   707  1E17                     	;# 
   708  1E18                     	;# 
   709  1E19                     	;# 
   710  1E1A                     	;# 
   711  1E1B                     	;# 
   712  1E1C                     	;# 
   713  1E1D                     	;# 
   714  1E1E                     	;# 
   715  1E1F                     	;# 
   716  1E20                     	;# 
   717  1E21                     	;# 
   718  1E22                     	;# 
   719  1E23                     	;# 
   720  1E24                     	;# 
   721  1E25                     	;# 
   722  1E26                     	;# 
   723  1E27                     	;# 
   724  1E28                     	;# 
   725  1E29                     	;# 
   726  1E2A                     	;# 
   727  1E2B                     	;# 
   728  1E2C                     	;# 
   729  1E2D                     	;# 
   730  1E2E                     	;# 
   731  1E2F                     	;# 
   732  1E30                     	;# 
   733  1E31                     	;# 
   734  1E32                     	;# 
   735  1E33                     	;# 
   736  1E34                     	;# 
   737  1E35                     	;# 
   738  1E36                     	;# 
   739  1E37                     	;# 
   740  1E8F                     	;# 
   741  1E90                     	;# 
   742  1E91                     	;# 
   743  1E92                     	;# 
   744  1E93                     	;# 
   745  1E94                     	;# 
   746  1E95                     	;# 
   747  1E96                     	;# 
   748  1E97                     	;# 
   749  1E9C                     	;# 
   750  1E9D                     	;# 
   751  1E9E                     	;# 
   752  1EA1                     	;# 
   753  1EA2                     	;# 
   754  1EA3                     	;# 
   755  1EA4                     	;# 
   756  1EA5                     	;# 
   757  1EA9                     	;# 
   758  1EAA                     	;# 
   759  1EAB                     	;# 
   760  1EAC                     	;# 
   761  1EB1                     	;# 
   762  1EB2                     	;# 
   763  1EB3                     	;# 
   764  1EB8                     	;# 
   765  1EB9                     	;# 
   766  1EBA                     	;# 
   767  1EBB                     	;# 
   768  1EBC                     	;# 
   769  1EBD                     	;# 
   770  1EBE                     	;# 
   771  1EC3                     	;# 
   772  1EC5                     	;# 
   773  1EC6                     	;# 
   774  1EC7                     	;# 
   775  1EC8                     	;# 
   776  1EC9                     	;# 
   777  1ECA                     	;# 
   778  1ECB                     	;# 
   779  1ECC                     	;# 
   780  1F10                     	;# 
   781  1F11                     	;# 
   782  1F12                     	;# 
   783  1F13                     	;# 
   784  1F14                     	;# 
   785  1F15                     	;# 
   786  1F16                     	;# 
   787  1F17                     	;# 
   788  1F18                     	;# 
   789  1F19                     	;# 
   790  1F1A                     	;# 
   791  1F1B                     	;# 
   792  1F1C                     	;# 
   793  1F1D                     	;# 
   794  1F1E                     	;# 
   795  1F1F                     	;# 
   796  1F20                     	;# 
   797  1F21                     	;# 
   798  1F22                     	;# 
   799  1F23                     	;# 
   800  1F24                     	;# 
   801  1F25                     	;# 
   802  1F26                     	;# 
   803  1F27                     	;# 
   804  1F28                     	;# 
   805  1F29                     	;# 
   806  1F2A                     	;# 
   807  1F2B                     	;# 
   808  1F2C                     	;# 
   809  1F2D                     	;# 
   810  1F2E                     	;# 
   811  1F2F                     	;# 
   812  1F30                     	;# 
   813  1F31                     	;# 
   814  1F32                     	;# 
   815  1F38                     	;# 
   816  1F39                     	;# 
   817  1F3A                     	;# 
   818  1F3B                     	;# 
   819  1F3C                     	;# 
   820  1F3D                     	;# 
   821  1F3E                     	;# 
   822  1F3F                     	;# 
   823  1F40                     	;# 
   824  1F41                     	;# 
   825  1F43                     	;# 
   826  1F44                     	;# 
   827  1F45                     	;# 
   828  1F46                     	;# 
   829  1F47                     	;# 
   830  1F48                     	;# 
   831  1F49                     	;# 
   832  1F4A                     	;# 
   833  1F4B                     	;# 
   834  1F4C                     	;# 
   835  1F4E                     	;# 
   836  1F4F                     	;# 
   837  1F50                     	;# 
   838  1F51                     	;# 
   839  1F52                     	;# 
   840  1F53                     	;# 
   841  1F54                     	;# 
   842  1F55                     	;# 
   843  1F56                     	;# 
   844  1F57                     	;# 
   845  1F59                     	;# 
   846  1F5A                     	;# 
   847  1F5B                     	;# 
   848  1F5C                     	;# 
   849  1F5D                     	;# 
   850  1F61                     	;# 
   851  1F62                     	;# 
   852  1F64                     	;# 
   853  1F65                     	;# 
   854  1F66                     	;# 
   855  1F67                     	;# 
   856  1F68                     	;# 
   857  1F69                     	;# 
   858  1F6A                     	;# 
   859  1F6B                     	;# 
   860  1F6C                     	;# 
   861  1F6D                     	;# 
   862  1FE4                     	;# 
   863  1FE5                     	;# 
   864  1FE6                     	;# 
   865  1FE7                     	;# 
   866  1FE8                     	;# 
   867  1FE9                     	;# 
   868  1FEA                     	;# 
   869  1FEB                     	;# 
   870  1FED                     	;# 
   871  1FEE                     	;# 
   872  1FEF                     	;# 
   873  0000                     	;# 
   874  0001                     	;# 
   875  0002                     	;# 
   876  0003                     	;# 
   877  0004                     	;# 
   878  0005                     	;# 
   879  0006                     	;# 
   880  0007                     	;# 
   881  0008                     	;# 
   882  0009                     	;# 
   883  000A                     	;# 
   884  000B                     	;# 
   885  000C                     	;# 
   886  000D                     	;# 
   887  000E                     	;# 
   888  000F                     	;# 
   889  0010                     	;# 
   890  0011                     	;# 
   891  0012                     	;# 
   892  0013                     	;# 
   893  0014                     	;# 
   894  0015                     	;# 
   895  0016                     	;# 
   896  0017                     	;# 
   897  0018                     	;# 
   898  0019                     	;# 
   899  001A                     	;# 
   900  001C                     	;# 
   901  001C                     	;# 
   902  001D                     	;# 
   903  001D                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008C                     	;# 
   908  008D                     	;# 
   909  008E                     	;# 
   910  008E                     	;# 
   911  008F                     	;# 
   912  0090                     	;# 
   913  0090                     	;# 
   914  0091                     	;# 
   915  0093                     	;# 
   916  0094                     	;# 
   917  0095                     	;# 
   918  0096                     	;# 
   919  0097                     	;# 
   920  0098                     	;# 
   921  0099                     	;# 
   922  009A                     	;# 
   923  009B                     	;# 
   924  009C                     	;# 
   925  009D                     	;# 
   926  009E                     	;# 
   927  010C                     	;# 
   928  010D                     	;# 
   929  010E                     	;# 
   930  010E                     	;# 
   931  010F                     	;# 
   932  0110                     	;# 
   933  0110                     	;# 
   934  0111                     	;# 
   935  0112                     	;# 
   936  0112                     	;# 
   937  0113                     	;# 
   938  0114                     	;# 
   939  0114                     	;# 
   940  0115                     	;# 
   941  0116                     	;# 
   942  0116                     	;# 
   943  0117                     	;# 
   944  0119                     	;# 
   945  0119                     	;# 
   946  0119                     	;# 
   947  011A                     	;# 
   948  011A                     	;# 
   949  011A                     	;# 
   950  011B                     	;# 
   951  011B                     	;# 
   952  011B                     	;# 
   953  011B                     	;# 
   954  011B                     	;# 
   955  011C                     	;# 
   956  011C                     	;# 
   957  011C                     	;# 
   958  011D                     	;# 
   959  011D                     	;# 
   960  011D                     	;# 
   961  011E                     	;# 
   962  011E                     	;# 
   963  011E                     	;# 
   964  011F                     	;# 
   965  011F                     	;# 
   966  011F                     	;# 
   967  011F                     	;# 
   968  011F                     	;# 
   969  018C                     	;# 
   970  018D                     	;# 
   971  018E                     	;# 
   972  018F                     	;# 
   973  0190                     	;# 
   974  0191                     	;# 
   975  0192                     	;# 
   976  0196                     	;# 
   977  0197                     	;# 
   978  0198                     	;# 
   979  0199                     	;# 
   980  019A                     	;# 
   981  019B                     	;# 
   982  019C                     	;# 
   983  020C                     	;# 
   984  020C                     	;# 
   985  020D                     	;# 
   986  020E                     	;# 
   987  020F                     	;# 
   988  020F                     	;# 
   989  0210                     	;# 
   990  0210                     	;# 
   991  0211                     	;# 
   992  0211                     	;# 
   993  0212                     	;# 
   994  0212                     	;# 
   995  0213                     	;# 
   996  0214                     	;# 
   997  0215                     	;# 
   998  0215                     	;# 
   999  0216                     	;# 
  1000  0216                     	;# 
  1001  0217                     	;# 
  1002  0217                     	;# 
  1003  0218                     	;# 
  1004  0218                     	;# 
  1005  0219                     	;# 
  1006  021A                     	;# 
  1007  021B                     	;# 
  1008  021B                     	;# 
  1009  021C                     	;# 
  1010  021C                     	;# 
  1011  021D                     	;# 
  1012  021D                     	;# 
  1013  021E                     	;# 
  1014  021F                     	;# 
  1015  028C                     	;# 
  1016  028C                     	;# 
  1017  028D                     	;# 
  1018  028D                     	;# 
  1019  028E                     	;# 
  1020  028F                     	;# 
  1021  0290                     	;# 
  1022  0290                     	;# 
  1023  0291                     	;# 
  1024  0292                     	;# 
  1025  0292                     	;# 
  1026  0293                     	;# 
  1027  0293                     	;# 
  1028  0294                     	;# 
  1029  0295                     	;# 
  1030  0296                     	;# 
  1031  0296                     	;# 
  1032  0297                     	;# 
  1033  0298                     	;# 
  1034  0298                     	;# 
  1035  0299                     	;# 
  1036  0299                     	;# 
  1037  029A                     	;# 
  1038  029B                     	;# 
  1039  029C                     	;# 
  1040  029C                     	;# 
  1041  029D                     	;# 
  1042  030C                     	;# 
  1043  030C                     	;# 
  1044  030D                     	;# 
  1045  030E                     	;# 
  1046  030F                     	;# 
  1047  0310                     	;# 
  1048  0310                     	;# 
  1049  0311                     	;# 
  1050  0312                     	;# 
  1051  0313                     	;# 
  1052  0314                     	;# 
  1053  0314                     	;# 
  1054  0315                     	;# 
  1055  0316                     	;# 
  1056  0317                     	;# 
  1057  0318                     	;# 
  1058  0318                     	;# 
  1059  0319                     	;# 
  1060  031A                     	;# 
  1061  031B                     	;# 
  1062  031C                     	;# 
  1063  031C                     	;# 
  1064  031D                     	;# 
  1065  031E                     	;# 
  1066  031F                     	;# 
  1067  038C                     	;# 
  1068  038D                     	;# 
  1069  038E                     	;# 
  1070  0390                     	;# 
  1071  0391                     	;# 
  1072  0392                     	;# 
  1073  040C                     	;# 
  1074  040D                     	;# 
  1075  040E                     	;# 
  1076  040F                     	;# 
  1077  0410                     	;# 
  1078  0411                     	;# 
  1079  0416                     	;# 
  1080  0416                     	;# 
  1081  0417                     	;# 
  1082  0418                     	;# 
  1083  0418                     	;# 
  1084  0419                     	;# 
  1085  041A                     	;# 
  1086  041A                     	;# 
  1087  041B                     	;# 
  1088  041C                     	;# 
  1089  041C                     	;# 
  1090  041D                     	;# 
  1091  041E                     	;# 
  1092  041F                     	;# 
  1093  048C                     	;# 
  1094  048C                     	;# 
  1095  048D                     	;# 
  1096  048E                     	;# 
  1097  048F                     	;# 
  1098  048F                     	;# 
  1099  0490                     	;# 
  1100  0491                     	;# 
  1101  0492                     	;# 
  1102  0492                     	;# 
  1103  0493                     	;# 
  1104  0494                     	;# 
  1105  0495                     	;# 
  1106  0495                     	;# 
  1107  0496                     	;# 
  1108  0497                     	;# 
  1109  0498                     	;# 
  1110  0499                     	;# 
  1111  049A                     	;# 
  1112  049B                     	;# 
  1113  049C                     	;# 
  1114  049D                     	;# 
  1115  050C                     	;# 
  1116  050C                     	;# 
  1117  050D                     	;# 
  1118  050E                     	;# 
  1119  050F                     	;# 
  1120  050F                     	;# 
  1121  0510                     	;# 
  1122  0511                     	;# 
  1123  0512                     	;# 
  1124  0512                     	;# 
  1125  0513                     	;# 
  1126  0514                     	;# 
  1127  0515                     	;# 
  1128  0515                     	;# 
  1129  0516                     	;# 
  1130  0517                     	;# 
  1131  0518                     	;# 
  1132  0519                     	;# 
  1133  051A                     	;# 
  1134  051B                     	;# 
  1135  051C                     	;# 
  1136  051D                     	;# 
  1137  058C                     	;# 
  1138  058C                     	;# 
  1139  058D                     	;# 
  1140  058E                     	;# 
  1141  058F                     	;# 
  1142  058F                     	;# 
  1143  0590                     	;# 
  1144  0591                     	;# 
  1145  0592                     	;# 
  1146  0593                     	;# 
  1147  060C                     	;# 
  1148  060D                     	;# 
  1149  060E                     	;# 
  1150  060F                     	;# 
  1151  0610                     	;# 
  1152  0611                     	;# 
  1153  0612                     	;# 
  1154  0613                     	;# 
  1155  0614                     	;# 
  1156  0616                     	;# 
  1157  0617                     	;# 
  1158  0618                     	;# 
  1159  0619                     	;# 
  1160  061A                     	;# 
  1161  061B                     	;# 
  1162  061C                     	;# 
  1163  061D                     	;# 
  1164  061E                     	;# 
  1165  068C                     	;# 
  1166  068D                     	;# 
  1167  068E                     	;# 
  1168  068F                     	;# 
  1169  0690                     	;# 
  1170  0691                     	;# 
  1171  0692                     	;# 
  1172  0693                     	;# 
  1173  0694                     	;# 
  1174  070C                     	;# 
  1175  070D                     	;# 
  1176  070E                     	;# 
  1177  070F                     	;# 
  1178  0710                     	;# 
  1179  0711                     	;# 
  1180  0712                     	;# 
  1181  0713                     	;# 
  1182  0714                     	;# 
  1183  0716                     	;# 
  1184  0717                     	;# 
  1185  0718                     	;# 
  1186  0719                     	;# 
  1187  071A                     	;# 
  1188  071B                     	;# 
  1189  071C                     	;# 
  1190  071D                     	;# 
  1191  071E                     	;# 
  1192  0796                     	;# 
  1193  0797                     	;# 
  1194  0798                     	;# 
  1195  0799                     	;# 
  1196  079A                     	;# 
  1197  079B                     	;# 
  1198  080C                     	;# 
  1199  080D                     	;# 
  1200  080E                     	;# 
  1201  080F                     	;# 
  1202  0810                     	;# 
  1203  0811                     	;# 
  1204  0812                     	;# 
  1205  0813                     	;# 
  1206  0814                     	;# 
  1207  081A                     	;# 
  1208  081B                     	;# 
  1209  081C                     	;# 
  1210  081D                     	;# 
  1211  081E                     	;# 
  1212  081F                     	;# 
  1213  088C                     	;# 
  1214  088D                     	;# 
  1215  088E                     	;# 
  1216  088F                     	;# 
  1217  0890                     	;# 
  1218  0891                     	;# 
  1219  0892                     	;# 
  1220  0893                     	;# 
  1221  0895                     	;# 
  1222  0896                     	;# 
  1223  0897                     	;# 
  1224  0898                     	;# 
  1225  0899                     	;# 
  1226  089A                     	;# 
  1227  089B                     	;# 
  1228  090C                     	;# 
  1229  090E                     	;# 
  1230  090F                     	;# 
  1231  091F                     	;# 
  1232  098F                     	;# 
  1233  098F                     	;# 
  1234  0990                     	;# 
  1235  0991                     	;# 
  1236  0992                     	;# 
  1237  0993                     	;# 
  1238  0994                     	;# 
  1239  0995                     	;# 
  1240  0996                     	;# 
  1241  0997                     	;# 
  1242  1E0F                     	;# 
  1243  1E10                     	;# 
  1244  1E11                     	;# 
  1245  1E12                     	;# 
  1246  1E13                     	;# 
  1247  1E14                     	;# 
  1248  1E15                     	;# 
  1249  1E16                     	;# 
  1250  1E17                     	;# 
  1251  1E18                     	;# 
  1252  1E19                     	;# 
  1253  1E1A                     	;# 
  1254  1E1B                     	;# 
  1255  1E1C                     	;# 
  1256  1E1D                     	;# 
  1257  1E1E                     	;# 
  1258  1E1F                     	;# 
  1259  1E20                     	;# 
  1260  1E21                     	;# 
  1261  1E22                     	;# 
  1262  1E23                     	;# 
  1263  1E24                     	;# 
  1264  1E25                     	;# 
  1265  1E26                     	;# 
  1266  1E27                     	;# 
  1267  1E28                     	;# 
  1268  1E29                     	;# 
  1269  1E2A                     	;# 
  1270  1E2B                     	;# 
  1271  1E2C                     	;# 
  1272  1E2D                     	;# 
  1273  1E2E                     	;# 
  1274  1E2F                     	;# 
  1275  1E30                     	;# 
  1276  1E31                     	;# 
  1277  1E32                     	;# 
  1278  1E33                     	;# 
  1279  1E34                     	;# 
  1280  1E35                     	;# 
  1281  1E36                     	;# 
  1282  1E37                     	;# 
  1283  1E8F                     	;# 
  1284  1E90                     	;# 
  1285  1E91                     	;# 
  1286  1E92                     	;# 
  1287  1E93                     	;# 
  1288  1E94                     	;# 
  1289  1E95                     	;# 
  1290  1E96                     	;# 
  1291  1E97                     	;# 
  1292  1E9C                     	;# 
  1293  1E9D                     	;# 
  1294  1E9E                     	;# 
  1295  1EA1                     	;# 
  1296  1EA2                     	;# 
  1297  1EA3                     	;# 
  1298  1EA4                     	;# 
  1299  1EA5                     	;# 
  1300  1EA9                     	;# 
  1301  1EAA                     	;# 
  1302  1EAB                     	;# 
  1303  1EAC                     	;# 
  1304  1EB1                     	;# 
  1305  1EB2                     	;# 
  1306  1EB3                     	;# 
  1307  1EB8                     	;# 
  1308  1EB9                     	;# 
  1309  1EBA                     	;# 
  1310  1EBB                     	;# 
  1311  1EBC                     	;# 
  1312  1EBD                     	;# 
  1313  1EBE                     	;# 
  1314  1EC3                     	;# 
  1315  1EC5                     	;# 
  1316  1EC6                     	;# 
  1317  1EC7                     	;# 
  1318  1EC8                     	;# 
  1319  1EC9                     	;# 
  1320  1ECA                     	;# 
  1321  1ECB                     	;# 
  1322  1ECC                     	;# 
  1323  1F10                     	;# 
  1324  1F11                     	;# 
  1325  1F12                     	;# 
  1326  1F13                     	;# 
  1327  1F14                     	;# 
  1328  1F15                     	;# 
  1329  1F16                     	;# 
  1330  1F17                     	;# 
  1331  1F18                     	;# 
  1332  1F19                     	;# 
  1333  1F1A                     	;# 
  1334  1F1B                     	;# 
  1335  1F1C                     	;# 
  1336  1F1D                     	;# 
  1337  1F1E                     	;# 
  1338  1F1F                     	;# 
  1339  1F20                     	;# 
  1340  1F21                     	;# 
  1341  1F22                     	;# 
  1342  1F23                     	;# 
  1343  1F24                     	;# 
  1344  1F25                     	;# 
  1345  1F26                     	;# 
  1346  1F27                     	;# 
  1347  1F28                     	;# 
  1348  1F29                     	;# 
  1349  1F2A                     	;# 
  1350  1F2B                     	;# 
  1351  1F2C                     	;# 
  1352  1F2D                     	;# 
  1353  1F2E                     	;# 
  1354  1F2F                     	;# 
  1355  1F30                     	;# 
  1356  1F31                     	;# 
  1357  1F32                     	;# 
  1358  1F38                     	;# 
  1359  1F39                     	;# 
  1360  1F3A                     	;# 
  1361  1F3B                     	;# 
  1362  1F3C                     	;# 
  1363  1F3D                     	;# 
  1364  1F3E                     	;# 
  1365  1F3F                     	;# 
  1366  1F40                     	;# 
  1367  1F41                     	;# 
  1368  1F43                     	;# 
  1369  1F44                     	;# 
  1370  1F45                     	;# 
  1371  1F46                     	;# 
  1372  1F47                     	;# 
  1373  1F48                     	;# 
  1374  1F49                     	;# 
  1375  1F4A                     	;# 
  1376  1F4B                     	;# 
  1377  1F4C                     	;# 
  1378  1F4E                     	;# 
  1379  1F4F                     	;# 
  1380  1F50                     	;# 
  1381  1F51                     	;# 
  1382  1F52                     	;# 
  1383  1F53                     	;# 
  1384  1F54                     	;# 
  1385  1F55                     	;# 
  1386  1F56                     	;# 
  1387  1F57                     	;# 
  1388  1F59                     	;# 
  1389  1F5A                     	;# 
  1390  1F5B                     	;# 
  1391  1F5C                     	;# 
  1392  1F5D                     	;# 
  1393  1F61                     	;# 
  1394  1F62                     	;# 
  1395  1F64                     	;# 
  1396  1F65                     	;# 
  1397  1F66                     	;# 
  1398  1F67                     	;# 
  1399  1F68                     	;# 
  1400  1F69                     	;# 
  1401  1F6A                     	;# 
  1402  1F6B                     	;# 
  1403  1F6C                     	;# 
  1404  1F6D                     	;# 
  1405  1FE4                     	;# 
  1406  1FE5                     	;# 
  1407  1FE6                     	;# 
  1408  1FE7                     	;# 
  1409  1FE8                     	;# 
  1410  1FE9                     	;# 
  1411  1FEA                     	;# 
  1412  1FEB                     	;# 
  1413  1FED                     	;# 
  1414  1FEE                     	;# 
  1415  1FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000D                     	;# 
  1430  000E                     	;# 
  1431  000F                     	;# 
  1432  0010                     	;# 
  1433  0011                     	;# 
  1434  0012                     	;# 
  1435  0013                     	;# 
  1436  0014                     	;# 
  1437  0015                     	;# 
  1438  0016                     	;# 
  1439  0017                     	;# 
  1440  0018                     	;# 
  1441  0019                     	;# 
  1442  001A                     	;# 
  1443  001C                     	;# 
  1444  001C                     	;# 
  1445  001D                     	;# 
  1446  001D                     	;# 
  1447  001E                     	;# 
  1448  001F                     	;# 
  1449  008C                     	;# 
  1450  008C                     	;# 
  1451  008D                     	;# 
  1452  008E                     	;# 
  1453  008E                     	;# 
  1454  008F                     	;# 
  1455  0090                     	;# 
  1456  0090                     	;# 
  1457  0091                     	;# 
  1458  0093                     	;# 
  1459  0094                     	;# 
  1460  0095                     	;# 
  1461  0096                     	;# 
  1462  0097                     	;# 
  1463  0098                     	;# 
  1464  0099                     	;# 
  1465  009A                     	;# 
  1466  009B                     	;# 
  1467  009C                     	;# 
  1468  009D                     	;# 
  1469  009E                     	;# 
  1470  010C                     	;# 
  1471  010D                     	;# 
  1472  010E                     	;# 
  1473  010E                     	;# 
  1474  010F                     	;# 
  1475  0110                     	;# 
  1476  0110                     	;# 
  1477  0111                     	;# 
  1478  0112                     	;# 
  1479  0112                     	;# 
  1480  0113                     	;# 
  1481  0114                     	;# 
  1482  0114                     	;# 
  1483  0115                     	;# 
  1484  0116                     	;# 
  1485  0116                     	;# 
  1486  0117                     	;# 
  1487  0119                     	;# 
  1488  0119                     	;# 
  1489  0119                     	;# 
  1490  011A                     	;# 
  1491  011A                     	;# 
  1492  011A                     	;# 
  1493  011B                     	;# 
  1494  011B                     	;# 
  1495  011B                     	;# 
  1496  011B                     	;# 
  1497  011B                     	;# 
  1498  011C                     	;# 
  1499  011C                     	;# 
  1500  011C                     	;# 
  1501  011D                     	;# 
  1502  011D                     	;# 
  1503  011D                     	;# 
  1504  011E                     	;# 
  1505  011E                     	;# 
  1506  011E                     	;# 
  1507  011F                     	;# 
  1508  011F                     	;# 
  1509  011F                     	;# 
  1510  011F                     	;# 
  1511  011F                     	;# 
  1512  018C                     	;# 
  1513  018D                     	;# 
  1514  018E                     	;# 
  1515  018F                     	;# 
  1516  0190                     	;# 
  1517  0191                     	;# 
  1518  0192                     	;# 
  1519  0196                     	;# 
  1520  0197                     	;# 
  1521  0198                     	;# 
  1522  0199                     	;# 
  1523  019A                     	;# 
  1524  019B                     	;# 
  1525  019C                     	;# 
  1526  020C                     	;# 
  1527  020C                     	;# 
  1528  020D                     	;# 
  1529  020E                     	;# 
  1530  020F                     	;# 
  1531  020F                     	;# 
  1532  0210                     	;# 
  1533  0210                     	;# 
  1534  0211                     	;# 
  1535  0211                     	;# 
  1536  0212                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0214                     	;# 
  1540  0215                     	;# 
  1541  0215                     	;# 
  1542  0216                     	;# 
  1543  0216                     	;# 
  1544  0217                     	;# 
  1545  0217                     	;# 
  1546  0218                     	;# 
  1547  0218                     	;# 
  1548  0219                     	;# 
  1549  021A                     	;# 
  1550  021B                     	;# 
  1551  021B                     	;# 
  1552  021C                     	;# 
  1553  021C                     	;# 
  1554  021D                     	;# 
  1555  021D                     	;# 
  1556  021E                     	;# 
  1557  021F                     	;# 
  1558  028C                     	;# 
  1559  028C                     	;# 
  1560  028D                     	;# 
  1561  028D                     	;# 
  1562  028E                     	;# 
  1563  028F                     	;# 
  1564  0290                     	;# 
  1565  0290                     	;# 
  1566  0291                     	;# 
  1567  0292                     	;# 
  1568  0292                     	;# 
  1569  0293                     	;# 
  1570  0293                     	;# 
  1571  0294                     	;# 
  1572  0295                     	;# 
  1573  0296                     	;# 
  1574  0296                     	;# 
  1575  0297                     	;# 
  1576  0298                     	;# 
  1577  0298                     	;# 
  1578  0299                     	;# 
  1579  0299                     	;# 
  1580  029A                     	;# 
  1581  029B                     	;# 
  1582  029C                     	;# 
  1583  029C                     	;# 
  1584  029D                     	;# 
  1585  030C                     	;# 
  1586  030C                     	;# 
  1587  030D                     	;# 
  1588  030E                     	;# 
  1589  030F                     	;# 
  1590  0310                     	;# 
  1591  0310                     	;# 
  1592  0311                     	;# 
  1593  0312                     	;# 
  1594  0313                     	;# 
  1595  0314                     	;# 
  1596  0314                     	;# 
  1597  0315                     	;# 
  1598  0316                     	;# 
  1599  0317                     	;# 
  1600  0318                     	;# 
  1601  0318                     	;# 
  1602  0319                     	;# 
  1603  031A                     	;# 
  1604  031B                     	;# 
  1605  031C                     	;# 
  1606  031C                     	;# 
  1607  031D                     	;# 
  1608  031E                     	;# 
  1609  031F                     	;# 
  1610  038C                     	;# 
  1611  038D                     	;# 
  1612  038E                     	;# 
  1613  0390                     	;# 
  1614  0391                     	;# 
  1615  0392                     	;# 
  1616  040C                     	;# 
  1617  040D                     	;# 
  1618  040E                     	;# 
  1619  040F                     	;# 
  1620  0410                     	;# 
  1621  0411                     	;# 
  1622  0416                     	;# 
  1623  0416                     	;# 
  1624  0417                     	;# 
  1625  0418                     	;# 
  1626  0418                     	;# 
  1627  0419                     	;# 
  1628  041A                     	;# 
  1629  041A                     	;# 
  1630  041B                     	;# 
  1631  041C                     	;# 
  1632  041C                     	;# 
  1633  041D                     	;# 
  1634  041E                     	;# 
  1635  041F                     	;# 
  1636  048C                     	;# 
  1637  048C                     	;# 
  1638  048D                     	;# 
  1639  048E                     	;# 
  1640  048F                     	;# 
  1641  048F                     	;# 
  1642  0490                     	;# 
  1643  0491                     	;# 
  1644  0492                     	;# 
  1645  0492                     	;# 
  1646  0493                     	;# 
  1647  0494                     	;# 
  1648  0495                     	;# 
  1649  0495                     	;# 
  1650  0496                     	;# 
  1651  0497                     	;# 
  1652  0498                     	;# 
  1653  0499                     	;# 
  1654  049A                     	;# 
  1655  049B                     	;# 
  1656  049C                     	;# 
  1657  049D                     	;# 
  1658  050C                     	;# 
  1659  050C                     	;# 
  1660  050D                     	;# 
  1661  050E                     	;# 
  1662  050F                     	;# 
  1663  050F                     	;# 
  1664  0510                     	;# 
  1665  0511                     	;# 
  1666  0512                     	;# 
  1667  0512                     	;# 
  1668  0513                     	;# 
  1669  0514                     	;# 
  1670  0515                     	;# 
  1671  0515                     	;# 
  1672  0516                     	;# 
  1673  0517                     	;# 
  1674  0518                     	;# 
  1675  0519                     	;# 
  1676  051A                     	;# 
  1677  051B                     	;# 
  1678  051C                     	;# 
  1679  051D                     	;# 
  1680  058C                     	;# 
  1681  058C                     	;# 
  1682  058D                     	;# 
  1683  058E                     	;# 
  1684  058F                     	;# 
  1685  058F                     	;# 
  1686  0590                     	;# 
  1687  0591                     	;# 
  1688  0592                     	;# 
  1689  0593                     	;# 
  1690  060C                     	;# 
  1691  060D                     	;# 
  1692  060E                     	;# 
  1693  060F                     	;# 
  1694  0610                     	;# 
  1695  0611                     	;# 
  1696  0612                     	;# 
  1697  0613                     	;# 
  1698  0614                     	;# 
  1699  0616                     	;# 
  1700  0617                     	;# 
  1701  0618                     	;# 
  1702  0619                     	;# 
  1703  061A                     	;# 
  1704  061B                     	;# 
  1705  061C                     	;# 
  1706  061D                     	;# 
  1707  061E                     	;# 
  1708  068C                     	;# 
  1709  068D                     	;# 
  1710  068E                     	;# 
  1711  068F                     	;# 
  1712  0690                     	;# 
  1713  0691                     	;# 
  1714  0692                     	;# 
  1715  0693                     	;# 
  1716  0694                     	;# 
  1717  070C                     	;# 
  1718  070D                     	;# 
  1719  070E                     	;# 
  1720  070F                     	;# 
  1721  0710                     	;# 
  1722  0711                     	;# 
  1723  0712                     	;# 
  1724  0713                     	;# 
  1725  0714                     	;# 
  1726  0716                     	;# 
  1727  0717                     	;# 
  1728  0718                     	;# 
  1729  0719                     	;# 
  1730  071A                     	;# 
  1731  071B                     	;# 
  1732  071C                     	;# 
  1733  071D                     	;# 
  1734  071E                     	;# 
  1735  0796                     	;# 
  1736  0797                     	;# 
  1737  0798                     	;# 
  1738  0799                     	;# 
  1739  079A                     	;# 
  1740  079B                     	;# 
  1741  080C                     	;# 
  1742  080D                     	;# 
  1743  080E                     	;# 
  1744  080F                     	;# 
  1745  0810                     	;# 
  1746  0811                     	;# 
  1747  0812                     	;# 
  1748  0813                     	;# 
  1749  0814                     	;# 
  1750  081A                     	;# 
  1751  081B                     	;# 
  1752  081C                     	;# 
  1753  081D                     	;# 
  1754  081E                     	;# 
  1755  081F                     	;# 
  1756  088C                     	;# 
  1757  088D                     	;# 
  1758  088E                     	;# 
  1759  088F                     	;# 
  1760  0890                     	;# 
  1761  0891                     	;# 
  1762  0892                     	;# 
  1763  0893                     	;# 
  1764  0895                     	;# 
  1765  0896                     	;# 
  1766  0897                     	;# 
  1767  0898                     	;# 
  1768  0899                     	;# 
  1769  089A                     	;# 
  1770  089B                     	;# 
  1771  090C                     	;# 
  1772  090E                     	;# 
  1773  090F                     	;# 
  1774  091F                     	;# 
  1775  098F                     	;# 
  1776  098F                     	;# 
  1777  0990                     	;# 
  1778  0991                     	;# 
  1779  0992                     	;# 
  1780  0993                     	;# 
  1781  0994                     	;# 
  1782  0995                     	;# 
  1783  0996                     	;# 
  1784  0997                     	;# 
  1785  1E0F                     	;# 
  1786  1E10                     	;# 
  1787  1E11                     	;# 
  1788  1E12                     	;# 
  1789  1E13                     	;# 
  1790  1E14                     	;# 
  1791  1E15                     	;# 
  1792  1E16                     	;# 
  1793  1E17                     	;# 
  1794  1E18                     	;# 
  1795  1E19                     	;# 
  1796  1E1A                     	;# 
  1797  1E1B                     	;# 
  1798  1E1C                     	;# 
  1799  1E1D                     	;# 
  1800  1E1E                     	;# 
  1801  1E1F                     	;# 
  1802  1E20                     	;# 
  1803  1E21                     	;# 
  1804  1E22                     	;# 
  1805  1E23                     	;# 
  1806  1E24                     	;# 
  1807  1E25                     	;# 
  1808  1E26                     	;# 
  1809  1E27                     	;# 
  1810  1E28                     	;# 
  1811  1E29                     	;# 
  1812  1E2A                     	;# 
  1813  1E2B                     	;# 
  1814  1E2C                     	;# 
  1815  1E2D                     	;# 
  1816  1E2E                     	;# 
  1817  1E2F                     	;# 
  1818  1E30                     	;# 
  1819  1E31                     	;# 
  1820  1E32                     	;# 
  1821  1E33                     	;# 
  1822  1E34                     	;# 
  1823  1E35                     	;# 
  1824  1E36                     	;# 
  1825  1E37                     	;# 
  1826  1E8F                     	;# 
  1827  1E90                     	;# 
  1828  1E91                     	;# 
  1829  1E92                     	;# 
  1830  1E93                     	;# 
  1831  1E94                     	;# 
  1832  1E95                     	;# 
  1833  1E96                     	;# 
  1834  1E97                     	;# 
  1835  1E9C                     	;# 
  1836  1E9D                     	;# 
  1837  1E9E                     	;# 
  1838  1EA1                     	;# 
  1839  1EA2                     	;# 
  1840  1EA3                     	;# 
  1841  1EA4                     	;# 
  1842  1EA5                     	;# 
  1843  1EA9                     	;# 
  1844  1EAA                     	;# 
  1845  1EAB                     	;# 
  1846  1EAC                     	;# 
  1847  1EB1                     	;# 
  1848  1EB2                     	;# 
  1849  1EB3                     	;# 
  1850  1EB8                     	;# 
  1851  1EB9                     	;# 
  1852  1EBA                     	;# 
  1853  1EBB                     	;# 
  1854  1EBC                     	;# 
  1855  1EBD                     	;# 
  1856  1EBE                     	;# 
  1857  1EC3                     	;# 
  1858  1EC5                     	;# 
  1859  1EC6                     	;# 
  1860  1EC7                     	;# 
  1861  1EC8                     	;# 
  1862  1EC9                     	;# 
  1863  1ECA                     	;# 
  1864  1ECB                     	;# 
  1865  1ECC                     	;# 
  1866  1F10                     	;# 
  1867  1F11                     	;# 
  1868  1F12                     	;# 
  1869  1F13                     	;# 
  1870  1F14                     	;# 
  1871  1F15                     	;# 
  1872  1F16                     	;# 
  1873  1F17                     	;# 
  1874  1F18                     	;# 
  1875  1F19                     	;# 
  1876  1F1A                     	;# 
  1877  1F1B                     	;# 
  1878  1F1C                     	;# 
  1879  1F1D                     	;# 
  1880  1F1E                     	;# 
  1881  1F1F                     	;# 
  1882  1F20                     	;# 
  1883  1F21                     	;# 
  1884  1F22                     	;# 
  1885  1F23                     	;# 
  1886  1F24                     	;# 
  1887  1F25                     	;# 
  1888  1F26                     	;# 
  1889  1F27                     	;# 
  1890  1F28                     	;# 
  1891  1F29                     	;# 
  1892  1F2A                     	;# 
  1893  1F2B                     	;# 
  1894  1F2C                     	;# 
  1895  1F2D                     	;# 
  1896  1F2E                     	;# 
  1897  1F2F                     	;# 
  1898  1F30                     	;# 
  1899  1F31                     	;# 
  1900  1F32                     	;# 
  1901  1F38                     	;# 
  1902  1F39                     	;# 
  1903  1F3A                     	;# 
  1904  1F3B                     	;# 
  1905  1F3C                     	;# 
  1906  1F3D                     	;# 
  1907  1F3E                     	;# 
  1908  1F3F                     	;# 
  1909  1F40                     	;# 
  1910  1F41                     	;# 
  1911  1F43                     	;# 
  1912  1F44                     	;# 
  1913  1F45                     	;# 
  1914  1F46                     	;# 
  1915  1F47                     	;# 
  1916  1F48                     	;# 
  1917  1F49                     	;# 
  1918  1F4A                     	;# 
  1919  1F4B                     	;# 
  1920  1F4C                     	;# 
  1921  1F4E                     	;# 
  1922  1F4F                     	;# 
  1923  1F50                     	;# 
  1924  1F51                     	;# 
  1925  1F52                     	;# 
  1926  1F53                     	;# 
  1927  1F54                     	;# 
  1928  1F55                     	;# 
  1929  1F56                     	;# 
  1930  1F57                     	;# 
  1931  1F59                     	;# 
  1932  1F5A                     	;# 
  1933  1F5B                     	;# 
  1934  1F5C                     	;# 
  1935  1F5D                     	;# 
  1936  1F61                     	;# 
  1937  1F62                     	;# 
  1938  1F64                     	;# 
  1939  1F65                     	;# 
  1940  1F66                     	;# 
  1941  1F67                     	;# 
  1942  1F68                     	;# 
  1943  1F69                     	;# 
  1944  1F6A                     	;# 
  1945  1F6B                     	;# 
  1946  1F6C                     	;# 
  1947  1F6D                     	;# 
  1948  1FE4                     	;# 
  1949  1FE5                     	;# 
  1950  1FE6                     	;# 
  1951  1FE7                     	;# 
  1952  1FE8                     	;# 
  1953  1FE9                     	;# 
  1954  1FEA                     	;# 
  1955  1FEB                     	;# 
  1956  1FED                     	;# 
  1957  1FEE                     	;# 
  1958  1FEF                     	;# 
  1959  0000                     	;# 
  1960  0001                     	;# 
  1961  0002                     	;# 
  1962  0003                     	;# 
  1963  0004                     	;# 
  1964  0005                     	;# 
  1965  0006                     	;# 
  1966  0007                     	;# 
  1967  0008                     	;# 
  1968  0009                     	;# 
  1969  000A                     	;# 
  1970  000B                     	;# 
  1971  000C                     	;# 
  1972  000D                     	;# 
  1973  000E                     	;# 
  1974  000F                     	;# 
  1975  0010                     	;# 
  1976  0011                     	;# 
  1977  0012                     	;# 
  1978  0013                     	;# 
  1979  0014                     	;# 
  1980  0015                     	;# 
  1981  0016                     	;# 
  1982  0017                     	;# 
  1983  0018                     	;# 
  1984  0019                     	;# 
  1985  001A                     	;# 
  1986  001C                     	;# 
  1987  001C                     	;# 
  1988  001D                     	;# 
  1989  001D                     	;# 
  1990  001E                     	;# 
  1991  001F                     	;# 
  1992  008C                     	;# 
  1993  008C                     	;# 
  1994  008D                     	;# 
  1995  008E                     	;# 
  1996  008E                     	;# 
  1997  008F                     	;# 
  1998  0090                     	;# 
  1999  0090                     	;# 
  2000  0091                     	;# 
  2001  0093                     	;# 
  2002  0094                     	;# 
  2003  0095                     	;# 
  2004  0096                     	;# 
  2005  0097                     	;# 
  2006  0098                     	;# 
  2007  0099                     	;# 
  2008  009A                     	;# 
  2009  009B                     	;# 
  2010  009C                     	;# 
  2011  009D                     	;# 
  2012  009E                     	;# 
  2013  010C                     	;# 
  2014  010D                     	;# 
  2015  010E                     	;# 
  2016  010E                     	;# 
  2017  010F                     	;# 
  2018  0110                     	;# 
  2019  0110                     	;# 
  2020  0111                     	;# 
  2021  0112                     	;# 
  2022  0112                     	;# 
  2023  0113                     	;# 
  2024  0114                     	;# 
  2025  0114                     	;# 
  2026  0115                     	;# 
  2027  0116                     	;# 
  2028  0116                     	;# 
  2029  0117                     	;# 
  2030  0119                     	;# 
  2031  0119                     	;# 
  2032  0119                     	;# 
  2033  011A                     	;# 
  2034  011A                     	;# 
  2035  011A                     	;# 
  2036  011B                     	;# 
  2037  011B                     	;# 
  2038  011B                     	;# 
  2039  011B                     	;# 
  2040  011B                     	;# 
  2041  011C                     	;# 
  2042  011C                     	;# 
  2043  011C                     	;# 
  2044  011D                     	;# 
  2045  011D                     	;# 
  2046  011D                     	;# 
  2047  011E                     	;# 
  2048  011E                     	;# 
  2049  011E                     	;# 
  2050  011F                     	;# 
  2051  011F                     	;# 
  2052  011F                     	;# 
  2053  011F                     	;# 
  2054  011F                     	;# 
  2055  018C                     	;# 
  2056  018D                     	;# 
  2057  018E                     	;# 
  2058  018F                     	;# 
  2059  0190                     	;# 
  2060  0191                     	;# 
  2061  0192                     	;# 
  2062  0196                     	;# 
  2063  0197                     	;# 
  2064  0198                     	;# 
  2065  0199                     	;# 
  2066  019A                     	;# 
  2067  019B                     	;# 
  2068  019C                     	;# 
  2069  020C                     	;# 
  2070  020C                     	;# 
  2071  020D                     	;# 
  2072  020E                     	;# 
  2073  020F                     	;# 
  2074  020F                     	;# 
  2075  0210                     	;# 
  2076  0210                     	;# 
  2077  0211                     	;# 
  2078  0211                     	;# 
  2079  0212                     	;# 
  2080  0212                     	;# 
  2081  0213                     	;# 
  2082  0214                     	;# 
  2083  0215                     	;# 
  2084  0215                     	;# 
  2085  0216                     	;# 
  2086  0216                     	;# 
  2087  0217                     	;# 
  2088  0217                     	;# 
  2089  0218                     	;# 
  2090  0218                     	;# 
  2091  0219                     	;# 
  2092  021A                     	;# 
  2093  021B                     	;# 
  2094  021B                     	;# 
  2095  021C                     	;# 
  2096  021C                     	;# 
  2097  021D                     	;# 
  2098  021D                     	;# 
  2099  021E                     	;# 
  2100  021F                     	;# 
  2101  028C                     	;# 
  2102  028C                     	;# 
  2103  028D                     	;# 
  2104  028D                     	;# 
  2105  028E                     	;# 
  2106  028F                     	;# 
  2107  0290                     	;# 
  2108  0290                     	;# 
  2109  0291                     	;# 
  2110  0292                     	;# 
  2111  0292                     	;# 
  2112  0293                     	;# 
  2113  0293                     	;# 
  2114  0294                     	;# 
  2115  0295                     	;# 
  2116  0296                     	;# 
  2117  0296                     	;# 
  2118  0297                     	;# 
  2119  0298                     	;# 
  2120  0298                     	;# 
  2121  0299                     	;# 
  2122  0299                     	;# 
  2123  029A                     	;# 
  2124  029B                     	;# 
  2125  029C                     	;# 
  2126  029C                     	;# 
  2127  029D                     	;# 
  2128  030C                     	;# 
  2129  030C                     	;# 
  2130  030D                     	;# 
  2131  030E                     	;# 
  2132  030F                     	;# 
  2133  0310                     	;# 
  2134  0310                     	;# 
  2135  0311                     	;# 
  2136  0312                     	;# 
  2137  0313                     	;# 
  2138  0314                     	;# 
  2139  0314                     	;# 
  2140  0315                     	;# 
  2141  0316                     	;# 
  2142  0317                     	;# 
  2143  0318                     	;# 
  2144  0318                     	;# 
  2145  0319                     	;# 
  2146  031A                     	;# 
  2147  031B                     	;# 
  2148  031C                     	;# 
  2149  031C                     	;# 
  2150  031D                     	;# 
  2151  031E                     	;# 
  2152  031F                     	;# 
  2153  038C                     	;# 
  2154  038D                     	;# 
  2155  038E                     	;# 
  2156  0390                     	;# 
  2157  0391                     	;# 
  2158  0392                     	;# 
  2159  040C                     	;# 
  2160  040D                     	;# 
  2161  040E                     	;# 
  2162  040F                     	;# 
  2163  0410                     	;# 
  2164  0411                     	;# 
  2165  0416                     	;# 
  2166  0416                     	;# 
  2167  0417                     	;# 
  2168  0418                     	;# 
  2169  0418                     	;# 
  2170  0419                     	;# 
  2171  041A                     	;# 
  2172  041A                     	;# 
  2173  041B                     	;# 
  2174  041C                     	;# 
  2175  041C                     	;# 
  2176  041D                     	;# 
  2177  041E                     	;# 
  2178  041F                     	;# 
  2179  048C                     	;# 
  2180  048C                     	;# 
  2181  048D                     	;# 
  2182  048E                     	;# 
  2183  048F                     	;# 
  2184  048F                     	;# 
  2185  0490                     	;# 
  2186  0491                     	;# 
  2187  0492                     	;# 
  2188  0492                     	;# 
  2189  0493                     	;# 
  2190  0494                     	;# 
  2191  0495                     	;# 
  2192  0495                     	;# 
  2193  0496                     	;# 
  2194  0497                     	;# 
  2195  0498                     	;# 
  2196  0499                     	;# 
  2197  049A                     	;# 
  2198  049B                     	;# 
  2199  049C                     	;# 
  2200  049D                     	;# 
  2201  050C                     	;# 
  2202  050C                     	;# 
  2203  050D                     	;# 
  2204  050E                     	;# 
  2205  050F                     	;# 
  2206  050F                     	;# 
  2207  0510                     	;# 
  2208  0511                     	;# 
  2209  0512                     	;# 
  2210  0512                     	;# 
  2211  0513                     	;# 
  2212  0514                     	;# 
  2213  0515                     	;# 
  2214  0515                     	;# 
  2215  0516                     	;# 
  2216  0517                     	;# 
  2217  0518                     	;# 
  2218  0519                     	;# 
  2219  051A                     	;# 
  2220  051B                     	;# 
  2221  051C                     	;# 
  2222  051D                     	;# 
  2223  058C                     	;# 
  2224  058C                     	;# 
  2225  058D                     	;# 
  2226  058E                     	;# 
  2227  058F                     	;# 
  2228  058F                     	;# 
  2229  0590                     	;# 
  2230  0591                     	;# 
  2231  0592                     	;# 
  2232  0593                     	;# 
  2233  060C                     	;# 
  2234  060D                     	;# 
  2235  060E                     	;# 
  2236  060F                     	;# 
  2237  0610                     	;# 
  2238  0611                     	;# 
  2239  0612                     	;# 
  2240  0613                     	;# 
  2241  0614                     	;# 
  2242  0616                     	;# 
  2243  0617                     	;# 
  2244  0618                     	;# 
  2245  0619                     	;# 
  2246  061A                     	;# 
  2247  061B                     	;# 
  2248  061C                     	;# 
  2249  061D                     	;# 
  2250  061E                     	;# 
  2251  068C                     	;# 
  2252  068D                     	;# 
  2253  068E                     	;# 
  2254  068F                     	;# 
  2255  0690                     	;# 
  2256  0691                     	;# 
  2257  0692                     	;# 
  2258  0693                     	;# 
  2259  0694                     	;# 
  2260  070C                     	;# 
  2261  070D                     	;# 
  2262  070E                     	;# 
  2263  070F                     	;# 
  2264  0710                     	;# 
  2265  0711                     	;# 
  2266  0712                     	;# 
  2267  0713                     	;# 
  2268  0714                     	;# 
  2269  0716                     	;# 
  2270  0717                     	;# 
  2271  0718                     	;# 
  2272  0719                     	;# 
  2273  071A                     	;# 
  2274  071B                     	;# 
  2275  071C                     	;# 
  2276  071D                     	;# 
  2277  071E                     	;# 
  2278  0796                     	;# 
  2279  0797                     	;# 
  2280  0798                     	;# 
  2281  0799                     	;# 
  2282  079A                     	;# 
  2283  079B                     	;# 
  2284  080C                     	;# 
  2285  080D                     	;# 
  2286  080E                     	;# 
  2287  080F                     	;# 
  2288  0810                     	;# 
  2289  0811                     	;# 
  2290  0812                     	;# 
  2291  0813                     	;# 
  2292  0814                     	;# 
  2293  081A                     	;# 
  2294  081B                     	;# 
  2295  081C                     	;# 
  2296  081D                     	;# 
  2297  081E                     	;# 
  2298  081F                     	;# 
  2299  088C                     	;# 
  2300  088D                     	;# 
  2301  088E                     	;# 
  2302  088F                     	;# 
  2303  0890                     	;# 
  2304  0891                     	;# 
  2305  0892                     	;# 
  2306  0893                     	;# 
  2307  0895                     	;# 
  2308  0896                     	;# 
  2309  0897                     	;# 
  2310  0898                     	;# 
  2311  0899                     	;# 
  2312  089A                     	;# 
  2313  089B                     	;# 
  2314  090C                     	;# 
  2315  090E                     	;# 
  2316  090F                     	;# 
  2317  091F                     	;# 
  2318  098F                     	;# 
  2319  098F                     	;# 
  2320  0990                     	;# 
  2321  0991                     	;# 
  2322  0992                     	;# 
  2323  0993                     	;# 
  2324  0994                     	;# 
  2325  0995                     	;# 
  2326  0996                     	;# 
  2327  0997                     	;# 
  2328  1E0F                     	;# 
  2329  1E10                     	;# 
  2330  1E11                     	;# 
  2331  1E12                     	;# 
  2332  1E13                     	;# 
  2333  1E14                     	;# 
  2334  1E15                     	;# 
  2335  1E16                     	;# 
  2336  1E17                     	;# 
  2337  1E18                     	;# 
  2338  1E19                     	;# 
  2339  1E1A                     	;# 
  2340  1E1B                     	;# 
  2341  1E1C                     	;# 
  2342  1E1D                     	;# 
  2343  1E1E                     	;# 
  2344  1E1F                     	;# 
  2345  1E20                     	;# 
  2346  1E21                     	;# 
  2347  1E22                     	;# 
  2348  1E23                     	;# 
  2349  1E24                     	;# 
  2350  1E25                     	;# 
  2351  1E26                     	;# 
  2352  1E27                     	;# 
  2353  1E28                     	;# 
  2354  1E29                     	;# 
  2355  1E2A                     	;# 
  2356  1E2B                     	;# 
  2357  1E2C                     	;# 
  2358  1E2D                     	;# 
  2359  1E2E                     	;# 
  2360  1E2F                     	;# 
  2361  1E30                     	;# 
  2362  1E31                     	;# 
  2363  1E32                     	;# 
  2364  1E33                     	;# 
  2365  1E34                     	;# 
  2366  1E35                     	;# 
  2367  1E36                     	;# 
  2368  1E37                     	;# 
  2369  1E8F                     	;# 
  2370  1E90                     	;# 
  2371  1E91                     	;# 
  2372  1E92                     	;# 
  2373  1E93                     	;# 
  2374  1E94                     	;# 
  2375  1E95                     	;# 
  2376  1E96                     	;# 
  2377  1E97                     	;# 
  2378  1E9C                     	;# 
  2379  1E9D                     	;# 
  2380  1E9E                     	;# 
  2381  1EA1                     	;# 
  2382  1EA2                     	;# 
  2383  1EA3                     	;# 
  2384  1EA4                     	;# 
  2385  1EA5                     	;# 
  2386  1EA9                     	;# 
  2387  1EAA                     	;# 
  2388  1EAB                     	;# 
  2389  1EAC                     	;# 
  2390  1EB1                     	;# 
  2391  1EB2                     	;# 
  2392  1EB3                     	;# 
  2393  1EB8                     	;# 
  2394  1EB9                     	;# 
  2395  1EBA                     	;# 
  2396  1EBB                     	;# 
  2397  1EBC                     	;# 
  2398  1EBD                     	;# 
  2399  1EBE                     	;# 
  2400  1EC3                     	;# 
  2401  1EC5                     	;# 
  2402  1EC6                     	;# 
  2403  1EC7                     	;# 
  2404  1EC8                     	;# 
  2405  1EC9                     	;# 
  2406  1ECA                     	;# 
  2407  1ECB                     	;# 
  2408  1ECC                     	;# 
  2409  1F10                     	;# 
  2410  1F11                     	;# 
  2411  1F12                     	;# 
  2412  1F13                     	;# 
  2413  1F14                     	;# 
  2414  1F15                     	;# 
  2415  1F16                     	;# 
  2416  1F17                     	;# 
  2417  1F18                     	;# 
  2418  1F19                     	;# 
  2419  1F1A                     	;# 
  2420  1F1B                     	;# 
  2421  1F1C                     	;# 
  2422  1F1D                     	;# 
  2423  1F1E                     	;# 
  2424  1F1F                     	;# 
  2425  1F20                     	;# 
  2426  1F21                     	;# 
  2427  1F22                     	;# 
  2428  1F23                     	;# 
  2429  1F24                     	;# 
  2430  1F25                     	;# 
  2431  1F26                     	;# 
  2432  1F27                     	;# 
  2433  1F28                     	;# 
  2434  1F29                     	;# 
  2435  1F2A                     	;# 
  2436  1F2B                     	;# 
  2437  1F2C                     	;# 
  2438  1F2D                     	;# 
  2439  1F2E                     	;# 
  2440  1F2F                     	;# 
  2441  1F30                     	;# 
  2442  1F31                     	;# 
  2443  1F32                     	;# 
  2444  1F38                     	;# 
  2445  1F39                     	;# 
  2446  1F3A                     	;# 
  2447  1F3B                     	;# 
  2448  1F3C                     	;# 
  2449  1F3D                     	;# 
  2450  1F3E                     	;# 
  2451  1F3F                     	;# 
  2452  1F40                     	;# 
  2453  1F41                     	;# 
  2454  1F43                     	;# 
  2455  1F44                     	;# 
  2456  1F45                     	;# 
  2457  1F46                     	;# 
  2458  1F47                     	;# 
  2459  1F48                     	;# 
  2460  1F49                     	;# 
  2461  1F4A                     	;# 
  2462  1F4B                     	;# 
  2463  1F4C                     	;# 
  2464  1F4E                     	;# 
  2465  1F4F                     	;# 
  2466  1F50                     	;# 
  2467  1F51                     	;# 
  2468  1F52                     	;# 
  2469  1F53                     	;# 
  2470  1F54                     	;# 
  2471  1F55                     	;# 
  2472  1F56                     	;# 
  2473  1F57                     	;# 
  2474  1F59                     	;# 
  2475  1F5A                     	;# 
  2476  1F5B                     	;# 
  2477  1F5C                     	;# 
  2478  1F5D                     	;# 
  2479  1F61                     	;# 
  2480  1F62                     	;# 
  2481  1F64                     	;# 
  2482  1F65                     	;# 
  2483  1F66                     	;# 
  2484  1F67                     	;# 
  2485  1F68                     	;# 
  2486  1F69                     	;# 
  2487  1F6A                     	;# 
  2488  1F6B                     	;# 
  2489  1F6C                     	;# 
  2490  1F6D                     	;# 
  2491  1FE4                     	;# 
  2492  1FE5                     	;# 
  2493  1FE6                     	;# 
  2494  1FE7                     	;# 
  2495  1FE8                     	;# 
  2496  1FE9                     	;# 
  2497  1FEA                     	;# 
  2498  1FEB                     	;# 
  2499  1FED                     	;# 
  2500  1FEE                     	;# 
  2501  1FEF                     	;# 
  2502  0000                     	;# 
  2503  0001                     	;# 
  2504  0002                     	;# 
  2505  0003                     	;# 
  2506  0004                     	;# 
  2507  0005                     	;# 
  2508  0006                     	;# 
  2509  0007                     	;# 
  2510  0008                     	;# 
  2511  0009                     	;# 
  2512  000A                     	;# 
  2513  000B                     	;# 
  2514  000C                     	;# 
  2515  000D                     	;# 
  2516  000E                     	;# 
  2517  000F                     	;# 
  2518  0010                     	;# 
  2519  0011                     	;# 
  2520  0012                     	;# 
  2521  0013                     	;# 
  2522  0014                     	;# 
  2523  0015                     	;# 
  2524  0016                     	;# 
  2525  0017                     	;# 
  2526  0018                     	;# 
  2527  0019                     	;# 
  2528  001A                     	;# 
  2529  001C                     	;# 
  2530  001C                     	;# 
  2531  001D                     	;# 
  2532  001D                     	;# 
  2533  001E                     	;# 
  2534  001F                     	;# 
  2535  008C                     	;# 
  2536  008C                     	;# 
  2537  008D                     	;# 
  2538  008E                     	;# 
  2539  008E                     	;# 
  2540  008F                     	;# 
  2541  0090                     	;# 
  2542  0090                     	;# 
  2543  0091                     	;# 
  2544  0093                     	;# 
  2545  0094                     	;# 
  2546  0095                     	;# 
  2547  0096                     	;# 
  2548  0097                     	;# 
  2549  0098                     	;# 
  2550  0099                     	;# 
  2551  009A                     	;# 
  2552  009B                     	;# 
  2553  009C                     	;# 
  2554  009D                     	;# 
  2555  009E                     	;# 
  2556  010C                     	;# 
  2557  010D                     	;# 
  2558  010E                     	;# 
  2559  010E                     	;# 
  2560  010F                     	;# 
  2561  0110                     	;# 
  2562  0110                     	;# 
  2563  0111                     	;# 
  2564  0112                     	;# 
  2565  0112                     	;# 
  2566  0113                     	;# 
  2567  0114                     	;# 
  2568  0114                     	;# 
  2569  0115                     	;# 
  2570  0116                     	;# 
  2571  0116                     	;# 
  2572  0117                     	;# 
  2573  0119                     	;# 
  2574  0119                     	;# 
  2575  0119                     	;# 
  2576  011A                     	;# 
  2577  011A                     	;# 
  2578  011A                     	;# 
  2579  011B                     	;# 
  2580  011B                     	;# 
  2581  011B                     	;# 
  2582  011B                     	;# 
  2583  011B                     	;# 
  2584  011C                     	;# 
  2585  011C                     	;# 
  2586  011C                     	;# 
  2587  011D                     	;# 
  2588  011D                     	;# 
  2589  011D                     	;# 
  2590  011E                     	;# 
  2591  011E                     	;# 
  2592  011E                     	;# 
  2593  011F                     	;# 
  2594  011F                     	;# 
  2595  011F                     	;# 
  2596  011F                     	;# 
  2597  011F                     	;# 
  2598  018C                     	;# 
  2599  018D                     	;# 
  2600  018E                     	;# 
  2601  018F                     	;# 
  2602  0190                     	;# 
  2603  0191                     	;# 
  2604  0192                     	;# 
  2605  0196                     	;# 
  2606  0197                     	;# 
  2607  0198                     	;# 
  2608  0199                     	;# 
  2609  019A                     	;# 
  2610  019B                     	;# 
  2611  019C                     	;# 
  2612  020C                     	;# 
  2613  020C                     	;# 
  2614  020D                     	;# 
  2615  020E                     	;# 
  2616  020F                     	;# 
  2617  020F                     	;# 
  2618  0210                     	;# 
  2619  0210                     	;# 
  2620  0211                     	;# 
  2621  0211                     	;# 
  2622  0212                     	;# 
  2623  0212                     	;# 
  2624  0213                     	;# 
  2625  0214                     	;# 
  2626  0215                     	;# 
  2627  0215                     	;# 
  2628  0216                     	;# 
  2629  0216                     	;# 
  2630  0217                     	;# 
  2631  0217                     	;# 
  2632  0218                     	;# 
  2633  0218                     	;# 
  2634  0219                     	;# 
  2635  021A                     	;# 
  2636  021B                     	;# 
  2637  021B                     	;# 
  2638  021C                     	;# 
  2639  021C                     	;# 
  2640  021D                     	;# 
  2641  021D                     	;# 
  2642  021E                     	;# 
  2643  021F                     	;# 
  2644  028C                     	;# 
  2645  028C                     	;# 
  2646  028D                     	;# 
  2647  028D                     	;# 
  2648  028E                     	;# 
  2649  028F                     	;# 
  2650  0290                     	;# 
  2651  0290                     	;# 
  2652  0291                     	;# 
  2653  0292                     	;# 
  2654  0292                     	;# 
  2655  0293                     	;# 
  2656  0293                     	;# 
  2657  0294                     	;# 
  2658  0295                     	;# 
  2659  0296                     	;# 
  2660  0296                     	;# 
  2661  0297                     	;# 
  2662  0298                     	;# 
  2663  0298                     	;# 
  2664  0299                     	;# 
  2665  0299                     	;# 
  2666  029A                     	;# 
  2667  029B                     	;# 
  2668  029C                     	;# 
  2669  029C                     	;# 
  2670  029D                     	;# 
  2671  030C                     	;# 
  2672  030C                     	;# 
  2673  030D                     	;# 
  2674  030E                     	;# 
  2675  030F                     	;# 
  2676  0310                     	;# 
  2677  0310                     	;# 
  2678  0311                     	;# 
  2679  0312                     	;# 
  2680  0313                     	;# 
  2681  0314                     	;# 
  2682  0314                     	;# 
  2683  0315                     	;# 
  2684  0316                     	;# 
  2685  0317                     	;# 
  2686  0318                     	;# 
  2687  0318                     	;# 
  2688  0319                     	;# 
  2689  031A                     	;# 
  2690  031B                     	;# 
  2691  031C                     	;# 
  2692  031C                     	;# 
  2693  031D                     	;# 
  2694  031E                     	;# 
  2695  031F                     	;# 
  2696  038C                     	;# 
  2697  038D                     	;# 
  2698  038E                     	;# 
  2699  0390                     	;# 
  2700  0391                     	;# 
  2701  0392                     	;# 
  2702  040C                     	;# 
  2703  040D                     	;# 
  2704  040E                     	;# 
  2705  040F                     	;# 
  2706  0410                     	;# 
  2707  0411                     	;# 
  2708  0416                     	;# 
  2709  0416                     	;# 
  2710  0417                     	;# 
  2711  0418                     	;# 
  2712  0418                     	;# 
  2713  0419                     	;# 
  2714  041A                     	;# 
  2715  041A                     	;# 
  2716  041B                     	;# 
  2717  041C                     	;# 
  2718  041C                     	;# 
  2719  041D                     	;# 
  2720  041E                     	;# 
  2721  041F                     	;# 
  2722  048C                     	;# 
  2723  048C                     	;# 
  2724  048D                     	;# 
  2725  048E                     	;# 
  2726  048F                     	;# 
  2727  048F                     	;# 
  2728  0490                     	;# 
  2729  0491                     	;# 
  2730  0492                     	;# 
  2731  0492                     	;# 
  2732  0493                     	;# 
  2733  0494                     	;# 
  2734  0495                     	;# 
  2735  0495                     	;# 
  2736  0496                     	;# 
  2737  0497                     	;# 
  2738  0498                     	;# 
  2739  0499                     	;# 
  2740  049A                     	;# 
  2741  049B                     	;# 
  2742  049C                     	;# 
  2743  049D                     	;# 
  2744  050C                     	;# 
  2745  050C                     	;# 
  2746  050D                     	;# 
  2747  050E                     	;# 
  2748  050F                     	;# 
  2749  050F                     	;# 
  2750  0510                     	;# 
  2751  0511                     	;# 
  2752  0512                     	;# 
  2753  0512                     	;# 
  2754  0513                     	;# 
  2755  0514                     	;# 
  2756  0515                     	;# 
  2757  0515                     	;# 
  2758  0516                     	;# 
  2759  0517                     	;# 
  2760  0518                     	;# 
  2761  0519                     	;# 
  2762  051A                     	;# 
  2763  051B                     	;# 
  2764  051C                     	;# 
  2765  051D                     	;# 
  2766  058C                     	;# 
  2767  058C                     	;# 
  2768  058D                     	;# 
  2769  058E                     	;# 
  2770  058F                     	;# 
  2771  058F                     	;# 
  2772  0590                     	;# 
  2773  0591                     	;# 
  2774  0592                     	;# 
  2775  0593                     	;# 
  2776  060C                     	;# 
  2777  060D                     	;# 
  2778  060E                     	;# 
  2779  060F                     	;# 
  2780  0610                     	;# 
  2781  0611                     	;# 
  2782  0612                     	;# 
  2783  0613                     	;# 
  2784  0614                     	;# 
  2785  0616                     	;# 
  2786  0617                     	;# 
  2787  0618                     	;# 
  2788  0619                     	;# 
  2789  061A                     	;# 
  2790  061B                     	;# 
  2791  061C                     	;# 
  2792  061D                     	;# 
  2793  061E                     	;# 
  2794  068C                     	;# 
  2795  068D                     	;# 
  2796  068E                     	;# 
  2797  068F                     	;# 
  2798  0690                     	;# 
  2799  0691                     	;# 
  2800  0692                     	;# 
  2801  0693                     	;# 
  2802  0694                     	;# 
  2803  070C                     	;# 
  2804  070D                     	;# 
  2805  070E                     	;# 
  2806  070F                     	;# 
  2807  0710                     	;# 
  2808  0711                     	;# 
  2809  0712                     	;# 
  2810  0713                     	;# 
  2811  0714                     	;# 
  2812  0716                     	;# 
  2813  0717                     	;# 
  2814  0718                     	;# 
  2815  0719                     	;# 
  2816  071A                     	;# 
  2817  071B                     	;# 
  2818  071C                     	;# 
  2819  071D                     	;# 
  2820  071E                     	;# 
  2821  0796                     	;# 
  2822  0797                     	;# 
  2823  0798                     	;# 
  2824  0799                     	;# 
  2825  079A                     	;# 
  2826  079B                     	;# 
  2827  080C                     	;# 
  2828  080D                     	;# 
  2829  080E                     	;# 
  2830  080F                     	;# 
  2831  0810                     	;# 
  2832  0811                     	;# 
  2833  0812                     	;# 
  2834  0813                     	;# 
  2835  0814                     	;# 
  2836  081A                     	;# 
  2837  081B                     	;# 
  2838  081C                     	;# 
  2839  081D                     	;# 
  2840  081E                     	;# 
  2841  081F                     	;# 
  2842  088C                     	;# 
  2843  088D                     	;# 
  2844  088E                     	;# 
  2845  088F                     	;# 
  2846  0890                     	;# 
  2847  0891                     	;# 
  2848  0892                     	;# 
  2849  0893                     	;# 
  2850  0895                     	;# 
  2851  0896                     	;# 
  2852  0897                     	;# 
  2853  0898                     	;# 
  2854  0899                     	;# 
  2855  089A                     	;# 
  2856  089B                     	;# 
  2857  090C                     	;# 
  2858  090E                     	;# 
  2859  090F                     	;# 
  2860  091F                     	;# 
  2861  098F                     	;# 
  2862  098F                     	;# 
  2863  0990                     	;# 
  2864  0991                     	;# 
  2865  0992                     	;# 
  2866  0993                     	;# 
  2867  0994                     	;# 
  2868  0995                     	;# 
  2869  0996                     	;# 
  2870  0997                     	;# 
  2871  1E0F                     	;# 
  2872  1E10                     	;# 
  2873  1E11                     	;# 
  2874  1E12                     	;# 
  2875  1E13                     	;# 
  2876  1E14                     	;# 
  2877  1E15                     	;# 
  2878  1E16                     	;# 
  2879  1E17                     	;# 
  2880  1E18                     	;# 
  2881  1E19                     	;# 
  2882  1E1A                     	;# 
  2883  1E1B                     	;# 
  2884  1E1C                     	;# 
  2885  1E1D                     	;# 
  2886  1E1E                     	;# 
  2887  1E1F                     	;# 
  2888  1E20                     	;# 
  2889  1E21                     	;# 
  2890  1E22                     	;# 
  2891  1E23                     	;# 
  2892  1E24                     	;# 
  2893  1E25                     	;# 
  2894  1E26                     	;# 
  2895  1E27                     	;# 
  2896  1E28                     	;# 
  2897  1E29                     	;# 
  2898  1E2A                     	;# 
  2899  1E2B                     	;# 
  2900  1E2C                     	;# 
  2901  1E2D                     	;# 
  2902  1E2E                     	;# 
  2903  1E2F                     	;# 
  2904  1E30                     	;# 
  2905  1E31                     	;# 
  2906  1E32                     	;# 
  2907  1E33                     	;# 
  2908  1E34                     	;# 
  2909  1E35                     	;# 
  2910  1E36                     	;# 
  2911  1E37                     	;# 
  2912  1E8F                     	;# 
  2913  1E90                     	;# 
  2914  1E91                     	;# 
  2915  1E92                     	;# 
  2916  1E93                     	;# 
  2917  1E94                     	;# 
  2918  1E95                     	;# 
  2919  1E96                     	;# 
  2920  1E97                     	;# 
  2921  1E9C                     	;# 
  2922  1E9D                     	;# 
  2923  1E9E                     	;# 
  2924  1EA1                     	;# 
  2925  1EA2                     	;# 
  2926  1EA3                     	;# 
  2927  1EA4                     	;# 
  2928  1EA5                     	;# 
  2929  1EA9                     	;# 
  2930  1EAA                     	;# 
  2931  1EAB                     	;# 
  2932  1EAC                     	;# 
  2933  1EB1                     	;# 
  2934  1EB2                     	;# 
  2935  1EB3                     	;# 
  2936  1EB8                     	;# 
  2937  1EB9                     	;# 
  2938  1EBA                     	;# 
  2939  1EBB                     	;# 
  2940  1EBC                     	;# 
  2941  1EBD                     	;# 
  2942  1EBE                     	;# 
  2943  1EC3                     	;# 
  2944  1EC5                     	;# 
  2945  1EC6                     	;# 
  2946  1EC7                     	;# 
  2947  1EC8                     	;# 
  2948  1EC9                     	;# 
  2949  1ECA                     	;# 
  2950  1ECB                     	;# 
  2951  1ECC                     	;# 
  2952  1F10                     	;# 
  2953  1F11                     	;# 
  2954  1F12                     	;# 
  2955  1F13                     	;# 
  2956  1F14                     	;# 
  2957  1F15                     	;# 
  2958  1F16                     	;# 
  2959  1F17                     	;# 
  2960  1F18                     	;# 
  2961  1F19                     	;# 
  2962  1F1A                     	;# 
  2963  1F1B                     	;# 
  2964  1F1C                     	;# 
  2965  1F1D                     	;# 
  2966  1F1E                     	;# 
  2967  1F1F                     	;# 
  2968  1F20                     	;# 
  2969  1F21                     	;# 
  2970  1F22                     	;# 
  2971  1F23                     	;# 
  2972  1F24                     	;# 
  2973  1F25                     	;# 
  2974  1F26                     	;# 
  2975  1F27                     	;# 
  2976  1F28                     	;# 
  2977  1F29                     	;# 
  2978  1F2A                     	;# 
  2979  1F2B                     	;# 
  2980  1F2C                     	;# 
  2981  1F2D                     	;# 
  2982  1F2E                     	;# 
  2983  1F2F                     	;# 
  2984  1F30                     	;# 
  2985  1F31                     	;# 
  2986  1F32                     	;# 
  2987  1F38                     	;# 
  2988  1F39                     	;# 
  2989  1F3A                     	;# 
  2990  1F3B                     	;# 
  2991  1F3C                     	;# 
  2992  1F3D                     	;# 
  2993  1F3E                     	;# 
  2994  1F3F                     	;# 
  2995  1F40                     	;# 
  2996  1F41                     	;# 
  2997  1F43                     	;# 
  2998  1F44                     	;# 
  2999  1F45                     	;# 
  3000  1F46                     	;# 
  3001  1F47                     	;# 
  3002  1F48                     	;# 
  3003  1F49                     	;# 
  3004  1F4A                     	;# 
  3005  1F4B                     	;# 
  3006  1F4C                     	;# 
  3007  1F4E                     	;# 
  3008  1F4F                     	;# 
  3009  1F50                     	;# 
  3010  1F51                     	;# 
  3011  1F52                     	;# 
  3012  1F53                     	;# 
  3013  1F54                     	;# 
  3014  1F55                     	;# 
  3015  1F56                     	;# 
  3016  1F57                     	;# 
  3017  1F59                     	;# 
  3018  1F5A                     	;# 
  3019  1F5B                     	;# 
  3020  1F5C                     	;# 
  3021  1F5D                     	;# 
  3022  1F61                     	;# 
  3023  1F62                     	;# 
  3024  1F64                     	;# 
  3025  1F65                     	;# 
  3026  1F66                     	;# 
  3027  1F67                     	;# 
  3028  1F68                     	;# 
  3029  1F69                     	;# 
  3030  1F6A                     	;# 
  3031  1F6B                     	;# 
  3032  1F6C                     	;# 
  3033  1F6D                     	;# 
  3034  1FE4                     	;# 
  3035  1FE5                     	;# 
  3036  1FE6                     	;# 
  3037  1FE7                     	;# 
  3038  1FE8                     	;# 
  3039  1FE9                     	;# 
  3040  1FEA                     	;# 
  3041  1FEB                     	;# 
  3042  1FED                     	;# 
  3043  1FEE                     	;# 
  3044  1FEF                     	;_freq_atual_arr
  3045                           
  3046                           	psect	idataBANK0
  3047  1800                     __pidataBANK0:	
  3048                           
  3049                           ;initializer for _pagina
  3050  1800  3401               	retlw	1
  3051                           
  3052                           	psect	idataBANK3
  3053  0002                     __pidataBANK3:	
  3054                           
  3055                           ;initializer for _tmp_soma
  3056  0002  3464               	retlw	100
  3057  0003  3400               	retlw	0
  3058                           
  3059                           	psect	idataBANK5
  3060  07FB                     __pidataBANK5:	
  3061                           
  3062                           ;initializer for Autenticar@F15930
  3063  07FB  3430               	retlw	48
  3064  07FC  3430               	retlw	48
  3065  07FD  3430               	retlw	48
  3066  07FE  3430               	retlw	48
  3067  07FF  3400               	retlw	0
  3068                           
  3069                           	psect	stringtext1
  3070  4800                     __pstringtext1:	
  3071  4800                     _opc_entrada_str:	
  3072  4800  3449               	retlw	73
  3073  4801  344E               	retlw	78
  3074  4802  345F               	retlw	95
  3075  4803  344E               	retlw	78
  3076  4804  3443               	retlw	67
  3077  4805  3400               	retlw	0
  3078  4806  3400               	retlw	0
  3079  4807  3400               	retlw	0
  3080  4808  3400               	retlw	0
  3081  4809  3400               	retlw	0
  3082  480A  3400               	retlw	0
  3083  480B  3400               	retlw	0
  3084  480C  3400               	retlw	0
  3085  480D  3400               	retlw	0
  3086  480E  3400               	retlw	0
  3087  480F  3400               	retlw	0
  3088  4810  3445               	retlw	69
  3089  4811  344D               	retlw	77
  3090  4812  3445               	retlw	69
  3091  4813  3452               	retlw	82
  3092  4814  3447               	retlw	71
  3093  4815  3445               	retlw	69
  3094  4816  344E               	retlw	78
  3095  4817  3443               	retlw	67
  3096  4818  3449               	retlw	73
  3097  4819  3441               	retlw	65
  3098  481A  3400               	retlw	0
  3099  481B  3400               	retlw	0
  3100  481C  3400               	retlw	0
  3101  481D  3400               	retlw	0
  3102  481E  3400               	retlw	0
  3103  481F  3400               	retlw	0
  3104  4820  3441               	retlw	65
  3105  4821  3443               	retlw	67
  3106  4822  3449               	retlw	73
  3107  4823  344F               	retlw	79
  3108  4824  344E               	retlw	78
  3109  4825  3441               	retlw	65
  3110  4826  344D               	retlw	77
  3111  4827  3445               	retlw	69
  3112  4828  344E               	retlw	78
  3113  4829  3454               	retlw	84
  3114  482A  344F               	retlw	79
  3115  482B  3431               	retlw	49
  3116  482C  3400               	retlw	0
  3117  482D  3400               	retlw	0
  3118  482E  3400               	retlw	0
  3119  482F  3400               	retlw	0
  3120  4830  3441               	retlw	65
  3121  4831  3443               	retlw	67
  3122  4832  3449               	retlw	73
  3123  4833  344F               	retlw	79
  3124  4834  344E               	retlw	78
  3125  4835  3441               	retlw	65
  3126  4836  344D               	retlw	77
  3127  4837  3445               	retlw	69
  3128  4838  344E               	retlw	78
  3129  4839  3454               	retlw	84
  3130  483A  344F               	retlw	79
  3131  483B  3432               	retlw	50
  3132  483C  3400               	retlw	0
  3133  483D  3400               	retlw	0
  3134  483E  3400               	retlw	0
  3135  483F  3400               	retlw	0
  3136  4840  3452               	retlw	82
  3137  4841  3445               	retlw	69
  3138  4842  3453               	retlw	83
  3139  4843  3445               	retlw	69
  3140  4844  3454               	retlw	84
  3141  4845  3400               	retlw	0
  3142  4846  3400               	retlw	0
  3143  4847  3400               	retlw	0
  3144  4848  3400               	retlw	0
  3145  4849  3400               	retlw	0
  3146  484A  3400               	retlw	0
  3147  484B  3400               	retlw	0
  3148  484C  3400               	retlw	0
  3149  484D  3400               	retlw	0
  3150  484E  3400               	retlw	0
  3151  484F  3400               	retlw	0
  3152  4850  344D               	retlw	77
  3153  4851  3445               	retlw	69
  3154  4852  3454               	retlw	84
  3155  4853  3441               	retlw	65
  3156  4854  344C               	retlw	76
  3157  4855  3400               	retlw	0
  3158  4856  3400               	retlw	0
  3159  4857  3400               	retlw	0
  3160  4858  3400               	retlw	0
  3161  4859  3400               	retlw	0
  3162  485A  3400               	retlw	0
  3163  485B  3400               	retlw	0
  3164  485C  3400               	retlw	0
  3165  485D  3400               	retlw	0
  3166  485E  3400               	retlw	0
  3167  485F  3400               	retlw	0
  3168  4860  3453               	retlw	83
  3169  4861  3445               	retlw	69
  3170  4862  344E               	retlw	78
  3171  4863  3453               	retlw	83
  3172  4864  344F               	retlw	79
  3173  4865  3452               	retlw	82
  3174  4866  345F               	retlw	95
  3175  4867  3450               	retlw	80
  3176  4868  3445               	retlw	69
  3177  4869  3443               	retlw	67
  3178  486A  3441               	retlw	65
  3179  486B  3400               	retlw	0
  3180  486C  3400               	retlw	0
  3181  486D  3400               	retlw	0
  3182  486E  3400               	retlw	0
  3183  486F  3400               	retlw	0
  3184  4870  3453               	retlw	83
  3185  4871  3445               	retlw	69
  3186  4872  344E               	retlw	78
  3187  4873  3453               	retlw	83
  3188  4874  344F               	retlw	79
  3189  4875  3452               	retlw	82
  3190  4876  345F               	retlw	95
  3191  4877  3450               	retlw	80
  3192  4878  344E               	retlw	78
  3193  4879  3445               	retlw	69
  3194  487A  345F               	retlw	95
  3195  487B  3441               	retlw	65
  3196  487C  3456               	retlw	86
  3197  487D  3400               	retlw	0
  3198  487E  3400               	retlw	0
  3199  487F  3400               	retlw	0
  3200  4880  3453               	retlw	83
  3201  4881  3445               	retlw	69
  3202  4882  344E               	retlw	78
  3203  4883  3453               	retlw	83
  3204  4884  344F               	retlw	79
  3205  4885  3452               	retlw	82
  3206  4886  345F               	retlw	95
  3207  4887  3450               	retlw	80
  3208  4888  344E               	retlw	78
  3209  4889  3445               	retlw	69
  3210  488A  345F               	retlw	95
  3211  488B  3452               	retlw	82
  3212  488C  3443               	retlw	67
  3213  488D  3400               	retlw	0
  3214  488E  3400               	retlw	0
  3215  488F  3400               	retlw	0
  3216  4890  3453               	retlw	83
  3217  4891  3445               	retlw	69
  3218  4892  344E               	retlw	78
  3219  4893  3453               	retlw	83
  3220  4894  344F               	retlw	79
  3221  4895  3452               	retlw	82
  3222  4896  345F               	retlw	95
  3223  4897  3448               	retlw	72
  3224  4898  344F               	retlw	79
  3225  4899  344C               	retlw	76
  3226  489A  3444               	retlw	68
  3227  489B  3400               	retlw	0
  3228  489C  3400               	retlw	0
  3229  489D  3400               	retlw	0
  3230  489E  3400               	retlw	0
  3231  489F  3400               	retlw	0
  3232  48A0                     __end_of_opc_entrada_str:	
  3233                           
  3234                           	psect	stringtext2
  3235  5000                     __pstringtext2:	
  3236  5000                     _opc_saida_str:	
  3237  5000  344F               	retlw	79
  3238  5001  3455               	retlw	85
  3239  5002  3454               	retlw	84
  3240  5003  345F               	retlw	95
  3241  5004  344E               	retlw	78
  3242  5005  3443               	retlw	67
  3243  5006  3400               	retlw	0
  3244  5007  3400               	retlw	0
  3245  5008  3400               	retlw	0
  3246  5009  3400               	retlw	0
  3247  500A  3400               	retlw	0
  3248  500B  3400               	retlw	0
  3249  500C  3400               	retlw	0
  3250  500D  3400               	retlw	0
  3251  500E  3400               	retlw	0
  3252  500F  3400               	retlw	0
  3253  5010  3450               	retlw	80
  3254  5011  344E               	retlw	78
  3255  5012  3445               	retlw	69
  3256  5013  345F               	retlw	95
  3257  5014  3444               	retlw	68
  3258  5015  3445               	retlw	69
  3259  5016  3453               	retlw	83
  3260  5017  3443               	retlw	67
  3261  5018  3445               	retlw	69
  3262  5019  3400               	retlw	0
  3263  501A  3400               	retlw	0
  3264  501B  3400               	retlw	0
  3265  501C  3400               	retlw	0
  3266  501D  3400               	retlw	0
  3267  501E  3400               	retlw	0
  3268  501F  3400               	retlw	0
  3269  5020  3450               	retlw	80
  3270  5021  344E               	retlw	78
  3271  5022  3445               	retlw	69
  3272  5023  345F               	retlw	95
  3273  5024  3453               	retlw	83
  3274  5025  344F               	retlw	79
  3275  5026  3442               	retlw	66
  3276  5027  3445               	retlw	69
  3277  5028  3400               	retlw	0
  3278  5029  3400               	retlw	0
  3279  502A  3400               	retlw	0
  3280  502B  3400               	retlw	0
  3281  502C  3400               	retlw	0
  3282  502D  3400               	retlw	0
  3283  502E  3400               	retlw	0
  3284  502F  3400               	retlw	0
  3285  5030  3445               	retlw	69
  3286  5031  3452               	retlw	82
  3287  5032  3452               	retlw	82
  3288  5033  344F               	retlw	79
  3289  5034  3400               	retlw	0
  3290  5035  3400               	retlw	0
  3291  5036  3400               	retlw	0
  3292  5037  3400               	retlw	0
  3293  5038  3400               	retlw	0
  3294  5039  3400               	retlw	0
  3295  503A  3400               	retlw	0
  3296  503B  3400               	retlw	0
  3297  503C  3400               	retlw	0
  3298  503D  3400               	retlw	0
  3299  503E  3400               	retlw	0
  3300  503F  3400               	retlw	0
  3301  5040  3445               	retlw	69
  3302  5041  3452               	retlw	82
  3303  5042  3452               	retlw	82
  3304  5043  344F               	retlw	79
  3305  5044  345F               	retlw	95
  3306  5045  3445               	retlw	69
  3307  5046  344E               	retlw	78
  3308  5047  3445               	retlw	69
  3309  5048  3452               	retlw	82
  3310  5049  3400               	retlw	0
  3311  504A  3400               	retlw	0
  3312  504B  3400               	retlw	0
  3313  504C  3400               	retlw	0
  3314  504D  3400               	retlw	0
  3315  504E  3400               	retlw	0
  3316  504F  3400               	retlw	0
  3317  5050  3453               	retlw	83
  3318  5051  3454               	retlw	84
  3319  5052  3454               	retlw	84
  3320  5053  345F               	retlw	95
  3321  5054  3442               	retlw	66
  3322  5055  3455               	retlw	85
  3323  5056  3453               	retlw	83
  3324  5057  3459               	retlw	89
  3325  5058  3400               	retlw	0
  3326  5059  3400               	retlw	0
  3327  505A  3400               	retlw	0
  3328  505B  3400               	retlw	0
  3329  505C  3400               	retlw	0
  3330  505D  3400               	retlw	0
  3331  505E  3400               	retlw	0
  3332  505F  3400               	retlw	0
  3333  5060  3452               	retlw	82
  3334  5061  3453               	retlw	83
  3335  5062  3454               	retlw	84
  3336  5063  345F               	retlw	95
  3337  5064  3449               	retlw	73
  3338  5065  344E               	retlw	78
  3339  5066  3456               	retlw	86
  3340  5067  3400               	retlw	0
  3341  5068  3400               	retlw	0
  3342  5069  3400               	retlw	0
  3343  506A  3400               	retlw	0
  3344  506B  3400               	retlw	0
  3345  506C  3400               	retlw	0
  3346  506D  3400               	retlw	0
  3347  506E  3400               	retlw	0
  3348  506F  3400               	retlw	0
  3349  5070                     __end_of_opc_saida_str:	
  3350                           
  3351                           	psect	stringtext3
  3352  5800                     __pstringtext3:	
  3353  5800                     _entrada_str:	
  3354  5800  3449               	retlw	73
  3355  5801  344E               	retlw	78
  3356  5802  344E               	retlw	78
  3357  5803  3400               	retlw	0
  3358  5804  3400               	retlw	0
  3359  5805  3400               	retlw	0
  3360  5806  3400               	retlw	0
  3361  5807  3400               	retlw	0
  3362  5808  3449               	retlw	73
  3363  5809  344E               	retlw	78
  3364  580A  3431               	retlw	49
  3365  580B  3400               	retlw	0
  3366  580C  3400               	retlw	0
  3367  580D  3400               	retlw	0
  3368  580E  3400               	retlw	0
  3369  580F  3400               	retlw	0
  3370  5810  3449               	retlw	73
  3371  5811  344E               	retlw	78
  3372  5812  3432               	retlw	50
  3373  5813  3400               	retlw	0
  3374  5814  3400               	retlw	0
  3375  5815  3400               	retlw	0
  3376  5816  3400               	retlw	0
  3377  5817  3400               	retlw	0
  3378  5818  3449               	retlw	73
  3379  5819  344E               	retlw	78
  3380  581A  3433               	retlw	51
  3381  581B  3400               	retlw	0
  3382  581C  3400               	retlw	0
  3383  581D  3400               	retlw	0
  3384  581E  3400               	retlw	0
  3385  581F  3400               	retlw	0
  3386  5820  3449               	retlw	73
  3387  5821  344E               	retlw	78
  3388  5822  3434               	retlw	52
  3389  5823  3400               	retlw	0
  3390  5824  3400               	retlw	0
  3391  5825  3400               	retlw	0
  3392  5826  3400               	retlw	0
  3393  5827  3400               	retlw	0
  3394  5828  3449               	retlw	73
  3395  5829  344E               	retlw	78
  3396  582A  3435               	retlw	53
  3397  582B  3400               	retlw	0
  3398  582C  3400               	retlw	0
  3399  582D  3400               	retlw	0
  3400  582E  3400               	retlw	0
  3401  582F  3400               	retlw	0
  3402  5830                     __end_of_entrada_str:	
  3403                           
  3404                           	psect	stringtext4
  3405  5830                     __pstringtext4:	
  3406  5830                     _saida_str:	
  3407  5830  344F               	retlw	79
  3408  5831  3455               	retlw	85
  3409  5832  3454               	retlw	84
  3410  5833  344E               	retlw	78
  3411  5834  3400               	retlw	0
  3412  5835  3400               	retlw	0
  3413  5836  3400               	retlw	0
  3414  5837  3400               	retlw	0
  3415  5838  344F               	retlw	79
  3416  5839  3455               	retlw	85
  3417  583A  3454               	retlw	84
  3418  583B  3431               	retlw	49
  3419  583C  3400               	retlw	0
  3420  583D  3400               	retlw	0
  3421  583E  3400               	retlw	0
  3422  583F  3400               	retlw	0
  3423  5840  344F               	retlw	79
  3424  5841  3455               	retlw	85
  3425  5842  3454               	retlw	84
  3426  5843  3432               	retlw	50
  3427  5844  3400               	retlw	0
  3428  5845  3400               	retlw	0
  3429  5846  3400               	retlw	0
  3430  5847  3400               	retlw	0
  3431  5848  344F               	retlw	79
  3432  5849  3455               	retlw	85
  3433  584A  3454               	retlw	84
  3434  584B  3433               	retlw	51
  3435  584C  3400               	retlw	0
  3436  584D  3400               	retlw	0
  3437  584E  3400               	retlw	0
  3438  584F  3400               	retlw	0
  3439  5850  344F               	retlw	79
  3440  5851  3455               	retlw	85
  3441  5852  3454               	retlw	84
  3442  5853  3434               	retlw	52
  3443  5854  3400               	retlw	0
  3444  5855  3400               	retlw	0
  3445  5856  3400               	retlw	0
  3446  5857  3400               	retlw	0
  3447  5858                     __end_of_saida_str:	
  3448                           
  3449                           	psect	stringtext5
  3450  5880                     __pstringtext5:	
  3451  5880                     _nao_str:	
  3452  5880  344E               	retlw	78
  3453  5881  3461               	retlw	97
  3454  5882  346F               	retlw	111
  3455  5883  3400               	retlw	0
  3456  5884  3400               	retlw	0
  3457  5885  3400               	retlw	0
  3458  5886  3400               	retlw	0
  3459  5887  3400               	retlw	0
  3460  5888  3400               	retlw	0
  3461  5889  3400               	retlw	0
  3462  588A  3400               	retlw	0
  3463  588B  3400               	retlw	0
  3464  588C  3400               	retlw	0
  3465  588D  3400               	retlw	0
  3466  588E  3400               	retlw	0
  3467  588F  3400               	retlw	0
  3468  5890  3400               	retlw	0
  3469  5891  344E               	retlw	78
  3470  5892  346F               	retlw	111
  3471  5893  3400               	retlw	0
  3472  5894  3400               	retlw	0
  3473  5895  3400               	retlw	0
  3474  5896  3400               	retlw	0
  3475  5897  3400               	retlw	0
  3476  5898  3400               	retlw	0
  3477  5899  3400               	retlw	0
  3478  589A  3400               	retlw	0
  3479  589B  3400               	retlw	0
  3480  589C  3400               	retlw	0
  3481  589D  3400               	retlw	0
  3482  589E  3400               	retlw	0
  3483  589F  3400               	retlw	0
  3484  58A0  3400               	retlw	0
  3485  58A1  3400               	retlw	0
  3486  58A2                     __end_of_nao_str:	
  3487                           
  3488                           	psect	stringtext6
  3489  58A2                     __pstringtext6:	
  3490  58A2                     _sim_str:	
  3491  58A2  3453               	retlw	83
  3492  58A3  3469               	retlw	105
  3493  58A4  346D               	retlw	109
  3494  58A5  3400               	retlw	0
  3495  58A6  3400               	retlw	0
  3496  58A7  3400               	retlw	0
  3497  58A8  3400               	retlw	0
  3498  58A9  3400               	retlw	0
  3499  58AA  3400               	retlw	0
  3500  58AB  3400               	retlw	0
  3501  58AC  3400               	retlw	0
  3502  58AD  3400               	retlw	0
  3503  58AE  3400               	retlw	0
  3504  58AF  3400               	retlw	0
  3505  58B0  3400               	retlw	0
  3506  58B1  3400               	retlw	0
  3507  58B2  3400               	retlw	0
  3508  58B3  3459               	retlw	89
  3509  58B4  3465               	retlw	101
  3510  58B5  3473               	retlw	115
  3511  58B6  3400               	retlw	0
  3512  58B7  3400               	retlw	0
  3513  58B8  3400               	retlw	0
  3514  58B9  3400               	retlw	0
  3515  58BA  3400               	retlw	0
  3516  58BB  3400               	retlw	0
  3517  58BC  3400               	retlw	0
  3518  58BD  3400               	retlw	0
  3519  58BE  3400               	retlw	0
  3520  58BF  3400               	retlw	0
  3521  58C0  3400               	retlw	0
  3522  58C1  3400               	retlw	0
  3523  58C2  3400               	retlw	0
  3524  58C3  3400               	retlw	0
  3525  58C4                     __end_of_sim_str:	
  3526                           
  3527                           	psect	stringtext7
  3528  58C4                     __pstringtext7:	
  3529  58C4                     _Sai_RST_str:	
  3530  58C4  3420               	retlw	32
  3531  58C5  3420               	retlw	32
  3532  58C6  3452               	retlw	82
  3533  58C7  3453               	retlw	83
  3534  58C8  3454               	retlw	84
  3535  58C9  3420               	retlw	32
  3536  58CA  3470               	retlw	112
  3537  58CB  342F               	retlw	47
  3538  58CC  3420               	retlw	32
  3539  58CD  3473               	retlw	115
  3540  58CE  3461               	retlw	97
  3541  58CF  3469               	retlw	105
  3542  58D0  3472               	retlw	114
  3543  58D1  342E               	retlw	46
  3544  58D2  342E               	retlw	46
  3545  58D3  342E               	retlw	46
  3546  58D4  3400               	retlw	0
  3547  58D5  3420               	retlw	32
  3548  58D6  3452               	retlw	82
  3549  58D7  3453               	retlw	83
  3550  58D8  3454               	retlw	84
  3551  58D9  3420               	retlw	32
  3552  58DA  3474               	retlw	116
  3553  58DB  346F               	retlw	111
  3554  58DC  3420               	retlw	32
  3555  58DD  346C               	retlw	108
  3556  58DE  3465               	retlw	101
  3557  58DF  3461               	retlw	97
  3558  58E0  3476               	retlw	118
  3559  58E1  3465               	retlw	101
  3560  58E2  3421               	retlw	33
  3561  58E3  3400               	retlw	0
  3562  58E4  3400               	retlw	0
  3563  58E5  3400               	retlw	0
  3564  58E6                     __end_of_Sai_RST_str:	
  3565                           
  3566                           	psect	stringtext8
  3567  58E6                     __pstringtext8:	
  3568  58E6                     _falha_str:	
  3569  58E6  3446               	retlw	70
  3570  58E7  3461               	retlw	97
  3571  58E8  346C               	retlw	108
  3572  58E9  3468               	retlw	104
  3573  58EA  3461               	retlw	97
  3574  58EB  3420               	retlw	32
  3575  58EC  3450               	retlw	80
  3576  58ED  346E               	retlw	110
  3577  58EE  3465               	retlw	101
  3578  58EF  3475               	retlw	117
  3579  58F0  346D               	retlw	109
  3580  58F1  3461               	retlw	97
  3581  58F2  3474               	retlw	116
  3582  58F3  3469               	retlw	105
  3583  58F4  3463               	retlw	99
  3584  58F5  346F               	retlw	111
  3585  58F6  3400               	retlw	0
  3586  58F7  3450               	retlw	80
  3587  58F8  346E               	retlw	110
  3588  58F9  3465               	retlw	101
  3589  58FA  3475               	retlw	117
  3590  58FB  346D               	retlw	109
  3591  58FC  3461               	retlw	97
  3592  58FD  3474               	retlw	116
  3593  58FE  3469               	retlw	105
  3594  58FF  3463               	retlw	99
  3595  5900  3420               	retlw	32
  3596  5901  3446               	retlw	70
  3597  5902  3461               	retlw	97
  3598  5903  3469               	retlw	105
  3599  5904  346C               	retlw	108
  3600  5905  3400               	retlw	0
  3601  5906  3400               	retlw	0
  3602  5907  3400               	retlw	0
  3603  5908                     __end_of_falha_str:	
  3604                           
  3605                           	psect	stringtext9
  3606  5908                     __pstringtext9:	
  3607  5908                     _atencao_str:	
  3608  5908  3420               	retlw	32
  3609  5909  3420               	retlw	32
  3610  590A  3420               	retlw	32
  3611  590B  3441               	retlw	65
  3612  590C  3474               	retlw	116
  3613  590D  3465               	retlw	101
  3614  590E  346E               	retlw	110
  3615  590F  3463               	retlw	99
  3616  5910  3461               	retlw	97
  3617  5911  346F               	retlw	111
  3618  5912  3421               	retlw	33
  3619  5913  3421               	retlw	33
  3620  5914  3421               	retlw	33
  3621  5915  3420               	retlw	32
  3622  5916  3420               	retlw	32
  3623  5917  3420               	retlw	32
  3624  5918  3400               	retlw	0
  3625  5919  3420               	retlw	32
  3626  591A  3420               	retlw	32
  3627  591B  3441               	retlw	65
  3628  591C  3474               	retlw	116
  3629  591D  3474               	retlw	116
  3630  591E  3465               	retlw	101
  3631  591F  346E               	retlw	110
  3632  5920  3474               	retlw	116
  3633  5921  3469               	retlw	105
  3634  5922  346F               	retlw	111
  3635  5923  346E               	retlw	110
  3636  5924  3421               	retlw	33
  3637  5925  3421               	retlw	33
  3638  5926  3421               	retlw	33
  3639  5927  3420               	retlw	32
  3640  5928  3420               	retlw	32
  3641  5929  3400               	retlw	0
  3642  592A                     __end_of_atencao_str:	
  3643                           
  3644                           	psect	stringtext10
  3645  592A                     __pstringtext10:	
  3646  592A                     _inicia_str:	
  3647  592A  3449               	retlw	73
  3648  592B  344E               	retlw	78
  3649  592C  3449               	retlw	73
  3650  592D  3443               	retlw	67
  3651  592E  3449               	retlw	73
  3652  592F  3441               	retlw	65
  3653  5930  344C               	retlw	76
  3654  5931  3449               	retlw	73
  3655  5932  345A               	retlw	90
  3656  5933  3441               	retlw	65
  3657  5934  344E               	retlw	78
  3658  5935  3444               	retlw	68
  3659  5936  344F               	retlw	79
  3660  5937  342E               	retlw	46
  3661  5938  342E               	retlw	46
  3662  5939  342E               	retlw	46
  3663  593A  3400               	retlw	0
  3664  593B  3449               	retlw	73
  3665  593C  344E               	retlw	78
  3666  593D  3449               	retlw	73
  3667  593E  3454               	retlw	84
  3668  593F  3449               	retlw	73
  3669  5940  3441               	retlw	65
  3670  5941  344C               	retlw	76
  3671  5942  3449               	retlw	73
  3672  5943  345A               	retlw	90
  3673  5944  3449               	retlw	73
  3674  5945  344E               	retlw	78
  3675  5946  3447               	retlw	71
  3676  5947  342E               	retlw	46
  3677  5948  342E               	retlw	46
  3678  5949  342E               	retlw	46
  3679  594A  3420               	retlw	32
  3680  594B  3400               	retlw	0
  3681  594C                     __end_of_inicia_str:	
  3682                           
  3683                           	psect	stringtext11
  3684  594C                     __pstringtext11:	
  3685  594C                     _posicao_str:	
  3686  594C  3450               	retlw	80
  3687  594D  346F               	retlw	111
  3688  594E  3473               	retlw	115
  3689  594F  3469               	retlw	105
  3690  5950  3463               	retlw	99
  3691  5951  3461               	retlw	97
  3692  5952  346F               	retlw	111
  3693  5953  343A               	retlw	58
  3694  5954  3420               	retlw	32
  3695  5955  3400               	retlw	0
  3696  5956  3400               	retlw	0
  3697  5957  3400               	retlw	0
  3698  5958  3400               	retlw	0
  3699  5959  3400               	retlw	0
  3700  595A  3400               	retlw	0
  3701  595B  3400               	retlw	0
  3702  595C  3400               	retlw	0
  3703  595D  344D               	retlw	77
  3704  595E  3465               	retlw	101
  3705  595F  346D               	retlw	109
  3706  5960  346F               	retlw	111
  3707  5961  3472               	retlw	114
  3708  5962  3479               	retlw	121
  3709  5963  343A               	retlw	58
  3710  5964  3420               	retlw	32
  3711  5965  3400               	retlw	0
  3712  5966  3400               	retlw	0
  3713  5967  3400               	retlw	0
  3714  5968  3400               	retlw	0
  3715  5969  3400               	retlw	0
  3716  596A  3400               	retlw	0
  3717  596B  3400               	retlw	0
  3718  596C  3400               	retlw	0
  3719  596D  3400               	retlw	0
  3720  596E                     __end_of_posicao_str:	
  3721                           
  3722                           	psect	stringtext12
  3723  596E                     __pstringtext12:	
  3724  596E                     _serial_str:	
  3725  596E  3443               	retlw	67
  3726  596F  346F               	retlw	111
  3727  5970  346E               	retlw	110
  3728  5971  3466               	retlw	102
  3729  5972  3469               	retlw	105
  3730  5973  3467               	retlw	103
  3731  5974  342E               	retlw	46
  3732  5975  3420               	retlw	32
  3733  5976  3453               	retlw	83
  3734  5977  3465               	retlw	101
  3735  5978  346E               	retlw	110
  3736  5979  3468               	retlw	104
  3737  597A  3461               	retlw	97
  3738  597B  343A               	retlw	58
  3739  597C  3420               	retlw	32
  3740  597D  3420               	retlw	32
  3741  597E  3400               	retlw	0
  3742  597F  3450               	retlw	80
  3743  5980  3461               	retlw	97
  3744  5981  3473               	retlw	115
  3745  5982  3473               	retlw	115
  3746  5983  3477               	retlw	119
  3747  5984  346F               	retlw	111
  3748  5985  3472               	retlw	114
  3749  5986  3464               	retlw	100
  3750  5987  343A               	retlw	58
  3751  5988  3400               	retlw	0
  3752  5989  3400               	retlw	0
  3753  598A  3400               	retlw	0
  3754  598B  3400               	retlw	0
  3755  598C  3400               	retlw	0
  3756  598D  3400               	retlw	0
  3757  598E  3400               	retlw	0
  3758  598F  3400               	retlw	0
  3759  5990                     __end_of_serial_str:	
  3760                           
  3761                           	psect	stringtext13
  3762  5990                     __pstringtext13:	
  3763  5990                     _t_solda_total_str:	
  3764  5990  3454               	retlw	84
  3765  5991  346F               	retlw	111
  3766  5992  3474               	retlw	116
  3767  5993  3461               	retlw	97
  3768  5994  346C               	retlw	108
  3769  5995  3420               	retlw	32
  3770  5996  3454               	retlw	84
  3771  5997  3465               	retlw	101
  3772  5998  346D               	retlw	109
  3773  5999  3470               	retlw	112
  3774  599A  346F               	retlw	111
  3775  599B  343A               	retlw	58
  3776  599C  3400               	retlw	0
  3777  599D  3400               	retlw	0
  3778  599E  3400               	retlw	0
  3779  599F  3400               	retlw	0
  3780  59A0  3400               	retlw	0
  3781  59A1  3454               	retlw	84
  3782  59A2  346F               	retlw	111
  3783  59A3  3474               	retlw	116
  3784  59A4  3461               	retlw	97
  3785  59A5  346C               	retlw	108
  3786  59A6  3420               	retlw	32
  3787  59A7  3454               	retlw	84
  3788  59A8  3469               	retlw	105
  3789  59A9  346D               	retlw	109
  3790  59AA  3465               	retlw	101
  3791  59AB  343A               	retlw	58
  3792  59AC  3420               	retlw	32
  3793  59AD  3400               	retlw	0
  3794  59AE  3400               	retlw	0
  3795  59AF  3400               	retlw	0
  3796  59B0  3400               	retlw	0
  3797  59B1  3400               	retlw	0
  3798  59B2                     __end_of_t_solda_total_str:	
  3799                           
  3800                           	psect	stringtext14
  3801  59B2                     __pstringtext14:	
  3802  59B2                     _n_pecas_total_str:	
  3803  59B2  3454               	retlw	84
  3804  59B3  346F               	retlw	111
  3805  59B4  3474               	retlw	116
  3806  59B5  3461               	retlw	97
  3807  59B6  346C               	retlw	108
  3808  59B7  3420               	retlw	32
  3809  59B8  344F               	retlw	79
  3810  59B9  3470               	retlw	112
  3811  59BA  3465               	retlw	101
  3812  59BB  3472               	retlw	114
  3813  59BC  3461               	retlw	97
  3814  59BD  3463               	retlw	99
  3815  59BE  346F               	retlw	111
  3816  59BF  3465               	retlw	101
  3817  59C0  3473               	retlw	115
  3818  59C1  343A               	retlw	58
  3819  59C2  3400               	retlw	0
  3820  59C3  3454               	retlw	84
  3821  59C4  346F               	retlw	111
  3822  59C5  3474               	retlw	116
  3823  59C6  3461               	retlw	97
  3824  59C7  346C               	retlw	108
  3825  59C8  3420               	retlw	32
  3826  59C9  3443               	retlw	67
  3827  59CA  3479               	retlw	121
  3828  59CB  3463               	retlw	99
  3829  59CC  346C               	retlw	108
  3830  59CD  3465               	retlw	101
  3831  59CE  3473               	retlw	115
  3832  59CF  343A               	retlw	58
  3833  59D0  3420               	retlw	32
  3834  59D1  3400               	retlw	0
  3835  59D2  3400               	retlw	0
  3836  59D3  3400               	retlw	0
  3837  59D4                     __end_of_n_pecas_total_str:	
  3838                           
  3839                           	psect	stringtext15
  3840  6812                     __pstringtext15:	
  3841  6812                     _branco_str:	
  3842  6812  3420               	retlw	32
  3843  6813  3420               	retlw	32
  3844  6814  3420               	retlw	32
  3845  6815  3420               	retlw	32
  3846  6816  3420               	retlw	32
  3847  6817  3420               	retlw	32
  3848  6818  3420               	retlw	32
  3849  6819  3420               	retlw	32
  3850  681A  3420               	retlw	32
  3851  681B  3420               	retlw	32
  3852  681C  3420               	retlw	32
  3853  681D  3420               	retlw	32
  3854  681E  3420               	retlw	32
  3855  681F  3420               	retlw	32
  3856  6820  3420               	retlw	32
  3857  6821  3420               	retlw	32
  3858  6822  3400               	retlw	0
  3859  6823                     __end_of_branco_str:	
  3860                           
  3861                           	psect	stringtext16
  3862  68AB                     __pstringtext16:	
  3863  68AB                     _dpowers:	
  3864  68AB  3401               	retlw	1
  3865  68AC  3400               	retlw	0
  3866  68AD  340A               	retlw	10
  3867  68AE  3400               	retlw	0
  3868  68AF  3464               	retlw	100
  3869  68B0  3400               	retlw	0
  3870  68B1  34E8               	retlw	232
  3871  68B2  3403               	retlw	3
  3872  68B3  3410               	retlw	16
  3873  68B4  3427               	retlw	39
  3874  68B5                     __end_of_dpowers:	
  3875                           
  3876                           	psect	stringtext17
  3877  690F                     __pstringtext17:	
  3878  690F                     main@t_amb:	
  3879  690F  3400               	retlw	0
  3880  6910  34B8               	retlw	184
  3881  6911  3441               	retlw	65
  3882  6912                     __end_ofmain@t_amb:	
  3883                           
  3884                           	psect	stringtext18
  3885  5858                     __pstringtext18:	
  3886  5858                     _modelo_str:	
  3887  5858  3453               	retlw	83
  3888  5859  344F               	retlw	79
  3889  585A  3457               	retlw	87
  3890  585B  3432               	retlw	50
  3891  585C  3438               	retlw	56
  3892  585D  3430               	retlw	48
  3893  585E  3400               	retlw	0
  3894  585F  3400               	retlw	0
  3895  5860  3453               	retlw	83
  3896  5861  344F               	retlw	79
  3897  5862  3457               	retlw	87
  3898  5863  3431               	retlw	49
  3899  5864  3436               	retlw	54
  3900  5865  3430               	retlw	48
  3901  5866  3400               	retlw	0
  3902  5867  3400               	retlw	0
  3903  5868  3453               	retlw	83
  3904  5869  344F               	retlw	79
  3905  586A  3457               	retlw	87
  3906  586B  3431               	retlw	49
  3907  586C  3432               	retlw	50
  3908  586D  3430               	retlw	48
  3909  586E  3400               	retlw	0
  3910  586F  3400               	retlw	0
  3911  5870  3453               	retlw	83
  3912  5871  344F               	retlw	79
  3913  5872  3457               	retlw	87
  3914  5873  3431               	retlw	49
  3915  5874  3430               	retlw	48
  3916  5875  3430               	retlw	48
  3917  5876  3400               	retlw	0
  3918  5877  3400               	retlw	0
  3919  5878  3453               	retlw	83
  3920  5879  344F               	retlw	79
  3921  587A  3457               	retlw	87
  3922  587B  3445               	retlw	69
  3923  587C  3453               	retlw	83
  3924  587D  3450               	retlw	80
  3925  587E  3400               	retlw	0
  3926  587F  3400               	retlw	0
  3927  5880                     __end_of_modelo_str:	
  3928                           
  3929                           	psect	stringtext19
  3930  59D4                     __pstringtext19:	
  3931  59D4                     _erro_senha_str:	
  3932  59D4  3453               	retlw	83
  3933  59D5  3465               	retlw	101
  3934  59D6  346E               	retlw	110
  3935  59D7  3468               	retlw	104
  3936  59D8  3461               	retlw	97
  3937  59D9  3420               	retlw	32
  3938  59DA  3449               	retlw	73
  3939  59DB  346E               	retlw	110
  3940  59DC  3463               	retlw	99
  3941  59DD  346F               	retlw	111
  3942  59DE  3472               	retlw	114
  3943  59DF  3472               	retlw	114
  3944  59E0  3465               	retlw	101
  3945  59E1  3474               	retlw	116
  3946  59E2  3461               	retlw	97
  3947  59E3  3421               	retlw	33
  3948  59E4  3400               	retlw	0
  3949  59E5  3450               	retlw	80
  3950  59E6  3461               	retlw	97
  3951  59E7  3473               	retlw	115
  3952  59E8  3473               	retlw	115
  3953  59E9  3477               	retlw	119
  3954  59EA  346F               	retlw	111
  3955  59EB  3472               	retlw	114
  3956  59EC  3464               	retlw	100
  3957  59ED  3420               	retlw	32
  3958  59EE  3445               	retlw	69
  3959  59EF  3472               	retlw	114
  3960  59F0  3472               	retlw	114
  3961  59F1  346F               	retlw	111
  3962  59F2  3472               	retlw	114
  3963  59F3  3421               	retlw	33
  3964  59F4  3420               	retlw	32
  3965  59F5  3400               	retlw	0
  3966  59F6                     __end_of_erro_senha_str:	
  3967                           
  3968                           	psect	stringtext20
  3969  59F6                     __pstringtext20:	
  3970  59F6                     _edit_senha_str:	
  3971  59F6  3445               	retlw	69
  3972  59F7  3464               	retlw	100
  3973  59F8  3469               	retlw	105
  3974  59F9  3474               	retlw	116
  3975  59FA  3461               	retlw	97
  3976  59FB  3472               	retlw	114
  3977  59FC  3420               	retlw	32
  3978  59FD  3453               	retlw	83
  3979  59FE  3465               	retlw	101
  3980  59FF  346E               	retlw	110
  3981  5A00  3468               	retlw	104
  3982  5A01  3461               	retlw	97
  3983  5A02  3420               	retlw	32
  3984  5A03  3400               	retlw	0
  3985  5A04  3400               	retlw	0
  3986  5A05  3400               	retlw	0
  3987  5A06  3400               	retlw	0
  3988  5A07  3450               	retlw	80
  3989  5A08  3461               	retlw	97
  3990  5A09  3473               	retlw	115
  3991  5A0A  3473               	retlw	115
  3992  5A0B  3477               	retlw	119
  3993  5A0C  346F               	retlw	111
  3994  5A0D  3472               	retlw	114
  3995  5A0E  3464               	retlw	100
  3996  5A0F  3420               	retlw	32
  3997  5A10  3445               	retlw	69
  3998  5A11  3464               	retlw	100
  3999  5A12  3469               	retlw	105
  4000  5A13  3474               	retlw	116
  4001  5A14  3420               	retlw	32
  4002  5A15  3400               	retlw	0
  4003  5A16  3400               	retlw	0
  4004  5A17  3400               	retlw	0
  4005  5A18                     __end_of_edit_senha_str:	
  4006                           
  4007                           	psect	stringtext21
  4008  5A18                     __pstringtext21:	
  4009  5A18                     _menu_senha_str:	
  4010  5A18  3453               	retlw	83
  4011  5A19  3465               	retlw	101
  4012  5A1A  346E               	retlw	110
  4013  5A1B  3468               	retlw	104
  4014  5A1C  3461               	retlw	97
  4015  5A1D  3420               	retlw	32
  4016  5A1E  3400               	retlw	0
  4017  5A1F  3400               	retlw	0
  4018  5A20  3400               	retlw	0
  4019  5A21  3400               	retlw	0
  4020  5A22  3400               	retlw	0
  4021  5A23  3400               	retlw	0
  4022  5A24  3400               	retlw	0
  4023  5A25  3400               	retlw	0
  4024  5A26  3400               	retlw	0
  4025  5A27  3400               	retlw	0
  4026  5A28  3400               	retlw	0
  4027  5A29  3450               	retlw	80
  4028  5A2A  3461               	retlw	97
  4029  5A2B  3473               	retlw	115
  4030  5A2C  3473               	retlw	115
  4031  5A2D  3477               	retlw	119
  4032  5A2E  346F               	retlw	111
  4033  5A2F  3472               	retlw	114
  4034  5A30  3464               	retlw	100
  4035  5A31  3420               	retlw	32
  4036  5A32  3400               	retlw	0
  4037  5A33  3400               	retlw	0
  4038  5A34  3400               	retlw	0
  4039  5A35  3400               	retlw	0
  4040  5A36  3400               	retlw	0
  4041  5A37  3400               	retlw	0
  4042  5A38  3400               	retlw	0
  4043  5A39  3400               	retlw	0
  4044  5A3A                     __end_of_menu_senha_str:	
  4045                           
  4046                           	psect	stringtext22
  4047  5A3A                     __pstringtext22:	
  4048  5A3A                     _tempo_ovf_str:	
  4049  5A3A  3445               	retlw	69
  4050  5A3B  3473               	retlw	115
  4051  5A3C  3474               	retlw	116
  4052  5A3D  342E               	retlw	46
  4053  5A3E  3420               	retlw	32
  4054  5A3F  3454               	retlw	84
  4055  5A40  3465               	retlw	101
  4056  5A41  346D               	retlw	109
  4057  5A42  3470               	retlw	112
  4058  5A43  346F               	retlw	111
  4059  5A44  3421               	retlw	33
  4060  5A45  3400               	retlw	0
  4061  5A46  3400               	retlw	0
  4062  5A47  3400               	retlw	0
  4063  5A48  3400               	retlw	0
  4064  5A49  3400               	retlw	0
  4065  5A4A  3400               	retlw	0
  4066  5A4B  3454               	retlw	84
  4067  5A4C  3469               	retlw	105
  4068  5A4D  346D               	retlw	109
  4069  5A4E  3465               	retlw	101
  4070  5A4F  3420               	retlw	32
  4071  5A50  344F               	retlw	79
  4072  5A51  3476               	retlw	118
  4073  5A52  3465               	retlw	101
  4074  5A53  3472               	retlw	114
  4075  5A54  3421               	retlw	33
  4076  5A55  3400               	retlw	0
  4077  5A56  3400               	retlw	0
  4078  5A57  3400               	retlw	0
  4079  5A58  3400               	retlw	0
  4080  5A59  3400               	retlw	0
  4081  5A5A  3400               	retlw	0
  4082  5A5B  3400               	retlw	0
  4083  5A5C                     __end_of_tempo_ovf_str:	
  4084                           
  4085                           	psect	stringtext23
  4086  5A5C                     __pstringtext23:	
  4087  5A5C                     _energia_low_str:	
  4088  5A5C  3445               	retlw	69
  4089  5A5D  346E               	retlw	110
  4090  5A5E  3465               	retlw	101
  4091  5A5F  3472               	retlw	114
  4092  5A60  3467               	retlw	103
  4093  5A61  3469               	retlw	105
  4094  5A62  3461               	retlw	97
  4095  5A63  3420               	retlw	32
  4096  5A64  3442               	retlw	66
  4097  5A65  3461               	retlw	97
  4098  5A66  3469               	retlw	105
  4099  5A67  3478               	retlw	120
  4100  5A68  3461               	retlw	97
  4101  5A69  3421               	retlw	33
  4102  5A6A  3400               	retlw	0
  4103  5A6B  3400               	retlw	0
  4104  5A6C  3400               	retlw	0
  4105  5A6D  344C               	retlw	76
  4106  5A6E  346F               	retlw	111
  4107  5A6F  3477               	retlw	119
  4108  5A70  3420               	retlw	32
  4109  5A71  3445               	retlw	69
  4110  5A72  346E               	retlw	110
  4111  5A73  3465               	retlw	101
  4112  5A74  3472               	retlw	114
  4113  5A75  3467               	retlw	103
  4114  5A76  3479               	retlw	121
  4115  5A77  3421               	retlw	33
  4116  5A78  3400               	retlw	0
  4117  5A79  3400               	retlw	0
  4118  5A7A  3400               	retlw	0
  4119  5A7B  3400               	retlw	0
  4120  5A7C  3400               	retlw	0
  4121  5A7D  3400               	retlw	0
  4122  5A7E                     __end_of_energia_low_str:	
  4123                           
  4124                           	psect	stringtext24
  4125  5A7E                     __pstringtext24:	
  4126  5A7E                     _erro_energia_str:	
  4127  5A7E  3420               	retlw	32
  4128  5A7F  342B               	retlw	43
  4129  5A80  3420               	retlw	32
  4130  5A81  3445               	retlw	69
  4131  5A82  3472               	retlw	114
  4132  5A83  3472               	retlw	114
  4133  5A84  346F               	retlw	111
  4134  5A85  3400               	retlw	0
  4135  5A86  3400               	retlw	0
  4136  5A87  3400               	retlw	0
  4137  5A88  3400               	retlw	0
  4138  5A89  3400               	retlw	0
  4139  5A8A  3400               	retlw	0
  4140  5A8B  3400               	retlw	0
  4141  5A8C  3400               	retlw	0
  4142  5A8D  3400               	retlw	0
  4143  5A8E  3400               	retlw	0
  4144  5A8F  3420               	retlw	32
  4145  5A90  342B               	retlw	43
  4146  5A91  3420               	retlw	32
  4147  5A92  3445               	retlw	69
  4148  5A93  3472               	retlw	114
  4149  5A94  3472               	retlw	114
  4150  5A95  346F               	retlw	111
  4151  5A96  3472               	retlw	114
  4152  5A97  3400               	retlw	0
  4153  5A98  3400               	retlw	0
  4154  5A99  3400               	retlw	0
  4155  5A9A  3400               	retlw	0
  4156  5A9B  3400               	retlw	0
  4157  5A9C  3400               	retlw	0
  4158  5A9D  3400               	retlw	0
  4159  5A9E  3400               	retlw	0
  4160  5A9F  3400               	retlw	0
  4161  5AA0                     __end_of_erro_energia_str:	
  4162                           
  4163                           	psect	stringtext25
  4164  5AA0                     __pstringtext25:	
  4165  5AA0                     _tempo_str:	
  4166  5AA0  3454               	retlw	84
  4167  5AA1  3465               	retlw	101
  4168  5AA2  346D               	retlw	109
  4169  5AA3  3470               	retlw	112
  4170  5AA4  346F               	retlw	111
  4171  5AA5  343A               	retlw	58
  4172  5AA6  3420               	retlw	32
  4173  5AA7  3400               	retlw	0
  4174  5AA8  3400               	retlw	0
  4175  5AA9  3400               	retlw	0
  4176  5AAA  3400               	retlw	0
  4177  5AAB  3400               	retlw	0
  4178  5AAC  3400               	retlw	0
  4179  5AAD  3400               	retlw	0
  4180  5AAE  3400               	retlw	0
  4181  5AAF  3400               	retlw	0
  4182  5AB0  3400               	retlw	0
  4183  5AB1  3454               	retlw	84
  4184  5AB2  3469               	retlw	105
  4185  5AB3  346D               	retlw	109
  4186  5AB4  3465               	retlw	101
  4187  5AB5  343A               	retlw	58
  4188  5AB6  3420               	retlw	32
  4189  5AB7  3400               	retlw	0
  4190  5AB8  3400               	retlw	0
  4191  5AB9  3400               	retlw	0
  4192  5ABA  3400               	retlw	0
  4193  5ABB  3400               	retlw	0
  4194  5ABC  3400               	retlw	0
  4195  5ABD  3400               	retlw	0
  4196  5ABE  3400               	retlw	0
  4197  5ABF  3400               	retlw	0
  4198  5AC0  3400               	retlw	0
  4199  5AC1  3400               	retlw	0
  4200  5AC2                     __end_of_tempo_str:	
  4201                           
  4202                           	psect	stringtext26
  4203  5AC2                     __pstringtext26:	
  4204  5AC2                     _energia_str:	
  4205  5AC2  3445               	retlw	69
  4206  5AC3  346E               	retlw	110
  4207  5AC4  3465               	retlw	101
  4208  5AC5  3472               	retlw	114
  4209  5AC6  3467               	retlw	103
  4210  5AC7  3469               	retlw	105
  4211  5AC8  3461               	retlw	97
  4212  5AC9  343A               	retlw	58
  4213  5ACA  3420               	retlw	32
  4214  5ACB  3400               	retlw	0
  4215  5ACC  3400               	retlw	0
  4216  5ACD  3400               	retlw	0
  4217  5ACE  3400               	retlw	0
  4218  5ACF  3400               	retlw	0
  4219  5AD0  3400               	retlw	0
  4220  5AD1  3400               	retlw	0
  4221  5AD2  3400               	retlw	0
  4222  5AD3  3445               	retlw	69
  4223  5AD4  346E               	retlw	110
  4224  5AD5  3465               	retlw	101
  4225  5AD6  3472               	retlw	114
  4226  5AD7  3467               	retlw	103
  4227  5AD8  3479               	retlw	121
  4228  5AD9  343A               	retlw	58
  4229  5ADA  3420               	retlw	32
  4230  5ADB  3400               	retlw	0
  4231  5ADC  3400               	retlw	0
  4232  5ADD  3400               	retlw	0
  4233  5ADE  3400               	retlw	0
  4234  5ADF  3400               	retlw	0
  4235  5AE0  3400               	retlw	0
  4236  5AE1  3400               	retlw	0
  4237  5AE2  3400               	retlw	0
  4238  5AE3  3400               	retlw	0
  4239  5AE4                     __end_of_energia_str:	
  4240                           
  4241                           	psect	stringtext27
  4242  5AE4                     __pstringtext27:	
  4243  5AE4                     _tipo_maquina3_str:	
  4244  5AE4  344D               	retlw	77
  4245  5AE5  3461               	retlw	97
  4246  5AE6  3471               	retlw	113
  4247  5AE7  3475               	retlw	117
  4248  5AE8  3469               	retlw	105
  4249  5AE9  346E               	retlw	110
  4250  5AEA  3461               	retlw	97
  4251  5AEB  3420               	retlw	32
  4252  5AEC  3463               	retlw	99
  4253  5AED  342F               	retlw	47
  4254  5AEE  3420               	retlw	32
  4255  5AEF  344D               	retlw	77
  4256  5AF0  344D               	retlw	77
  4257  5AF1  3400               	retlw	0
  4258  5AF2  3400               	retlw	0
  4259  5AF3  3400               	retlw	0
  4260  5AF4  3400               	retlw	0
  4261  5AF5  344D               	retlw	77
  4262  5AF6  344D               	retlw	77
  4263  5AF7  3420               	retlw	32
  4264  5AF8  3450               	retlw	80
  4265  5AF9  346E               	retlw	110
  4266  5AFA  3465               	retlw	101
  4267  5AFB  342E               	retlw	46
  4268  5AFC  3420               	retlw	32
  4269  5AFD  344D               	retlw	77
  4270  5AFE  3461               	retlw	97
  4271  5AFF  3463               	retlw	99
  4272  5B00  3468               	retlw	104
  4273  5B01  3469               	retlw	105
  4274  5B02  346E               	retlw	110
  4275  5B03  3465               	retlw	101
  4276  5B04  3400               	retlw	0
  4277  5B05  3400               	retlw	0
  4278  5B06                     __end_of_tipo_maquina3_str:	
  4279                           
  4280                           	psect	stringtext28
  4281  5B06                     __pstringtext28:	
  4282  5B06                     _tipo_maquina2_str:	
  4283  5B06  344D               	retlw	77
  4284  5B07  3461               	retlw	97
  4285  5B08  3471               	retlw	113
  4286  5B09  3475               	retlw	117
  4287  5B0A  3469               	retlw	105
  4288  5B0B  346E               	retlw	110
  4289  5B0C  3461               	retlw	97
  4290  5B0D  342F               	retlw	47
  4291  5B0E  3450               	retlw	80
  4292  5B0F  3475               	retlw	117
  4293  5B10  346C               	retlw	108
  4294  5B11  3473               	retlw	115
  4295  5B12  3461               	retlw	97
  4296  5B13  3464               	retlw	100
  4297  5B14  346F               	retlw	111
  4298  5B15  3400               	retlw	0
  4299  5B16  3400               	retlw	0
  4300  5B17  3450               	retlw	80
  4301  5B18  346E               	retlw	110
  4302  5B19  3465               	retlw	101
  4303  5B1A  3475               	retlw	117
  4304  5B1B  346D               	retlw	109
  4305  5B1C  3461               	retlw	97
  4306  5B1D  3474               	retlw	116
  4307  5B1E  342E               	retlw	46
  4308  5B1F  3420               	retlw	32
  4309  5B20  344D               	retlw	77
  4310  5B21  3461               	retlw	97
  4311  5B22  3463               	retlw	99
  4312  5B23  3468               	retlw	104
  4313  5B24  3469               	retlw	105
  4314  5B25  346E               	retlw	110
  4315  5B26  3465               	retlw	101
  4316  5B27  3400               	retlw	0
  4317  5B28                     __end_of_tipo_maquina2_str:	
  4318                           
  4319                           	psect	stringtext29
  4320  5B28                     __pstringtext29:	
  4321  5B28                     _tipo_maquina1_str:	
  4322  5B28  3450               	retlw	80
  4323  5B29  3469               	retlw	105
  4324  5B2A  3473               	retlw	115
  4325  5B2B  3474               	retlw	116
  4326  5B2C  346F               	retlw	111
  4327  5B2D  346C               	retlw	108
  4328  5B2E  3461               	retlw	97
  4329  5B2F  342F               	retlw	47
  4330  5B30  3450               	retlw	80
  4331  5B31  3475               	retlw	117
  4332  5B32  346C               	retlw	108
  4333  5B33  3473               	retlw	115
  4334  5B34  3461               	retlw	97
  4335  5B35  3464               	retlw	100
  4336  5B36  346F               	retlw	111
  4337  5B37  3400               	retlw	0
  4338  5B38  3400               	retlw	0
  4339  5B39  3448               	retlw	72
  4340  5B3A  3461               	retlw	97
  4341  5B3B  346E               	retlw	110
  4342  5B3C  3464               	retlw	100
  4343  5B3D  3420               	retlw	32
  4344  5B3E  3447               	retlw	71
  4345  5B3F  3475               	retlw	117
  4346  5B40  346E               	retlw	110
  4347  5B41  3400               	retlw	0
  4348  5B42  3400               	retlw	0
  4349  5B43  3400               	retlw	0
  4350  5B44  3400               	retlw	0
  4351  5B45  3400               	retlw	0
  4352  5B46  3400               	retlw	0
  4353  5B47  3400               	retlw	0
  4354  5B48  3400               	retlw	0
  4355  5B49  3400               	retlw	0
  4356  5B4A                     __end_of_tipo_maquina1_str:	
  4357                           
  4358                           	psect	stringtext30
  4359  5B4A                     __pstringtext30:	
  4360  5B4A                     _tipo_progress_str:	
  4361  5B4A  3450               	retlw	80
  4362  5B4B  3472               	retlw	114
  4363  5B4C  346F               	retlw	111
  4364  5B4D  3467               	retlw	103
  4365  5B4E  3472               	retlw	114
  4366  5B4F  3465               	retlw	101
  4367  5B50  3473               	retlw	115
  4368  5B51  3473               	retlw	115
  4369  5B52  3469               	retlw	105
  4370  5B53  3476               	retlw	118
  4371  5B54  346F               	retlw	111
  4372  5B55  3400               	retlw	0
  4373  5B56  3400               	retlw	0
  4374  5B57  3400               	retlw	0
  4375  5B58  3400               	retlw	0
  4376  5B59  3400               	retlw	0
  4377  5B5A  3400               	retlw	0
  4378  5B5B  3449               	retlw	73
  4379  5B5C  346E               	retlw	110
  4380  5B5D  3463               	retlw	99
  4381  5B5E  3472               	retlw	114
  4382  5B5F  3465               	retlw	101
  4383  5B60  346D               	retlw	109
  4384  5B61  3465               	retlw	101
  4385  5B62  346E               	retlw	110
  4386  5B63  3474               	retlw	116
  4387  5B64  3461               	retlw	97
  4388  5B65  346C               	retlw	108
  4389  5B66  3400               	retlw	0
  4390  5B67  3400               	retlw	0
  4391  5B68  3400               	retlw	0
  4392  5B69  3400               	retlw	0
  4393  5B6A  3400               	retlw	0
  4394  5B6B  3400               	retlw	0
  4395  5B6C                     __end_of_tipo_progress_str:	
  4396                           
  4397                           	psect	stringtext31
  4398  5B6C                     __pstringtext31:	
  4399  5B6C                     _tipo_regress_str:	
  4400  5B6C  3452               	retlw	82
  4401  5B6D  3465               	retlw	101
  4402  5B6E  3467               	retlw	103
  4403  5B6F  3472               	retlw	114
  4404  5B70  3465               	retlw	101
  4405  5B71  3473               	retlw	115
  4406  5B72  3473               	retlw	115
  4407  5B73  3469               	retlw	105
  4408  5B74  3476               	retlw	118
  4409  5B75  346F               	retlw	111
  4410  5B76  3400               	retlw	0
  4411  5B77  3400               	retlw	0
  4412  5B78  3400               	retlw	0
  4413  5B79  3400               	retlw	0
  4414  5B7A  3400               	retlw	0
  4415  5B7B  3400               	retlw	0
  4416  5B7C  3400               	retlw	0
  4417  5B7D  3444               	retlw	68
  4418  5B7E  3465               	retlw	101
  4419  5B7F  3463               	retlw	99
  4420  5B80  3472               	retlw	114
  4421  5B81  3465               	retlw	101
  4422  5B82  346D               	retlw	109
  4423  5B83  3465               	retlw	101
  4424  5B84  346E               	retlw	110
  4425  5B85  3474               	retlw	116
  4426  5B86  3461               	retlw	97
  4427  5B87  346C               	retlw	108
  4428  5B88  3400               	retlw	0
  4429  5B89  3400               	retlw	0
  4430  5B8A  3400               	retlw	0
  4431  5B8B  3400               	retlw	0
  4432  5B8C  3400               	retlw	0
  4433  5B8D  3400               	retlw	0
  4434  5B8E                     __end_of_tipo_regress_str:	
  4435                           
  4436                           	psect	stringtext32
  4437  5B8E                     __pstringtext32:	
  4438  5B8E                     _tipo_tempo_str:	
  4439  5B8E  3454               	retlw	84
  4440  5B8F  3465               	retlw	101
  4441  5B90  346D               	retlw	109
  4442  5B91  3470               	retlw	112
  4443  5B92  346F               	retlw	111
  4444  5B93  3400               	retlw	0
  4445  5B94  3400               	retlw	0
  4446  5B95  3400               	retlw	0
  4447  5B96  3400               	retlw	0
  4448  5B97  3400               	retlw	0
  4449  5B98  3400               	retlw	0
  4450  5B99  3400               	retlw	0
  4451  5B9A  3400               	retlw	0
  4452  5B9B  3400               	retlw	0
  4453  5B9C  3400               	retlw	0
  4454  5B9D  3400               	retlw	0
  4455  5B9E  3400               	retlw	0
  4456  5B9F  3454               	retlw	84
  4457  5BA0  3469               	retlw	105
  4458  5BA1  346D               	retlw	109
  4459  5BA2  3465               	retlw	101
  4460  5BA3  3400               	retlw	0
  4461  5BA4  3400               	retlw	0
  4462  5BA5  3400               	retlw	0
  4463  5BA6  3400               	retlw	0
  4464  5BA7  3400               	retlw	0
  4465  5BA8  3400               	retlw	0
  4466  5BA9  3400               	retlw	0
  4467  5BAA  3400               	retlw	0
  4468  5BAB  3400               	retlw	0
  4469  5BAC  3400               	retlw	0
  4470  5BAD  3400               	retlw	0
  4471  5BAE  3400               	retlw	0
  4472  5BAF  3400               	retlw	0
  4473  5BB0                     __end_of_tipo_tempo_str:	
  4474                           
  4475                           	psect	stringtext33
  4476  5BB0                     __pstringtext33:	
  4477  5BB0                     _tipo_energia_str:	
  4478  5BB0  3445               	retlw	69
  4479  5BB1  346E               	retlw	110
  4480  5BB2  3465               	retlw	101
  4481  5BB3  3472               	retlw	114
  4482  5BB4  3467               	retlw	103
  4483  5BB5  3469               	retlw	105
  4484  5BB6  3461               	retlw	97
  4485  5BB7  3400               	retlw	0
  4486  5BB8  3400               	retlw	0
  4487  5BB9  3400               	retlw	0
  4488  5BBA  3400               	retlw	0
  4489  5BBB  3400               	retlw	0
  4490  5BBC  3400               	retlw	0
  4491  5BBD  3400               	retlw	0
  4492  5BBE  3400               	retlw	0
  4493  5BBF  3400               	retlw	0
  4494  5BC0  3400               	retlw	0
  4495  5BC1  3445               	retlw	69
  4496  5BC2  346E               	retlw	110
  4497  5BC3  3465               	retlw	101
  4498  5BC4  3472               	retlw	114
  4499  5BC5  3467               	retlw	103
  4500  5BC6  3479               	retlw	121
  4501  5BC7  3400               	retlw	0
  4502  5BC8  3400               	retlw	0
  4503  5BC9  3400               	retlw	0
  4504  5BCA  3400               	retlw	0
  4505  5BCB  3400               	retlw	0
  4506  5BCC  3400               	retlw	0
  4507  5BCD  3400               	retlw	0
  4508  5BCE  3400               	retlw	0
  4509  5BCF  3400               	retlw	0
  4510  5BD0  3400               	retlw	0
  4511  5BD1  3400               	retlw	0
  4512  5BD2                     __end_of_tipo_energia_str:	
  4513                           
  4514                           	psect	stringtext34
  4515  5BD2                     __pstringtext34:	
  4516  5BD2                     _tipo_idioma_str:	
  4517  5BD2  3450               	retlw	80
  4518  5BD3  344F               	retlw	79
  4519  5BD4  3452               	retlw	82
  4520  5BD5  3454               	retlw	84
  4521  5BD6  3455               	retlw	85
  4522  5BD7  3447               	retlw	71
  4523  5BD8  3455               	retlw	85
  4524  5BD9  3445               	retlw	69
  4525  5BDA  3453               	retlw	83
  4526  5BDB  3400               	retlw	0
  4527  5BDC  3400               	retlw	0
  4528  5BDD  3400               	retlw	0
  4529  5BDE  3400               	retlw	0
  4530  5BDF  3400               	retlw	0
  4531  5BE0  3400               	retlw	0
  4532  5BE1  3400               	retlw	0
  4533  5BE2  3400               	retlw	0
  4534  5BE3  3445               	retlw	69
  4535  5BE4  344E               	retlw	78
  4536  5BE5  3447               	retlw	71
  4537  5BE6  344C               	retlw	76
  4538  5BE7  3449               	retlw	73
  4539  5BE8  3453               	retlw	83
  4540  5BE9  3448               	retlw	72
  4541  5BEA  3400               	retlw	0
  4542  5BEB  3400               	retlw	0
  4543  5BEC  3400               	retlw	0
  4544  5BED  3400               	retlw	0
  4545  5BEE  3400               	retlw	0
  4546  5BEF  3400               	retlw	0
  4547  5BF0  3400               	retlw	0
  4548  5BF1  3400               	retlw	0
  4549  5BF2  3400               	retlw	0
  4550  5BF3  3400               	retlw	0
  4551  5BF4                     __end_of_tipo_idioma_str:	
  4552                           
  4553                           	psect	stringtext35
  4554  5BF4                     __pstringtext35:	
  4555  5BF4                     _idioma_str:	
  4556  5BF4  3449               	retlw	73
  4557  5BF5  3464               	retlw	100
  4558  5BF6  3469               	retlw	105
  4559  5BF7  346F               	retlw	111
  4560  5BF8  346D               	retlw	109
  4561  5BF9  3461               	retlw	97
  4562  5BFA  343A               	retlw	58
  4563  5BFB  3400               	retlw	0
  4564  5BFC  3400               	retlw	0
  4565  5BFD  3400               	retlw	0
  4566  5BFE  3400               	retlw	0
  4567  5BFF  3400               	retlw	0
  4568  5C00  3400               	retlw	0
  4569  5C01  3400               	retlw	0
  4570  5C02  3400               	retlw	0
  4571  5C03  3400               	retlw	0
  4572  5C04  3400               	retlw	0
  4573  5C05  344C               	retlw	76
  4574  5C06  3461               	retlw	97
  4575  5C07  346E               	retlw	110
  4576  5C08  3467               	retlw	103
  4577  5C09  3475               	retlw	117
  4578  5C0A  3461               	retlw	97
  4579  5C0B  3467               	retlw	103
  4580  5C0C  3465               	retlw	101
  4581  5C0D  343A               	retlw	58
  4582  5C0E  3400               	retlw	0
  4583  5C0F  3400               	retlw	0
  4584  5C10  3400               	retlw	0
  4585  5C11  3400               	retlw	0
  4586  5C12  3400               	retlw	0
  4587  5C13  3400               	retlw	0
  4588  5C14  3400               	retlw	0
  4589  5C15  3400               	retlw	0
  4590  5C16                     __end_of_idioma_str:	
  4591                           
  4592                           	psect	stringtext36
  4593  5C16                     __pstringtext36:	
  4594  5C16                     _zero_cont_str:	
  4595  5C16  3446               	retlw	70
  4596  5C17  3449               	retlw	73
  4597  5C18  344D               	retlw	77
  4598  5C19  3420               	retlw	32
  4599  5C1A  3443               	retlw	67
  4600  5C1B  344F               	retlw	79
  4601  5C1C  344E               	retlw	78
  4602  5C1D  3454               	retlw	84
  4603  5C1E  3441               	retlw	65
  4604  5C1F  3447               	retlw	71
  4605  5C20  3445               	retlw	69
  4606  5C21  344D               	retlw	77
  4607  5C22  3421               	retlw	33
  4608  5C23  3421               	retlw	33
  4609  5C24  3421               	retlw	33
  4610  5C25  3420               	retlw	32
  4611  5C26  3400               	retlw	0
  4612  5C27  3443               	retlw	67
  4613  5C28  344F               	retlw	79
  4614  5C29  3455               	retlw	85
  4615  5C2A  3454               	retlw	84
  4616  5C2B  3449               	retlw	73
  4617  5C2C  344E               	retlw	78
  4618  5C2D  3447               	retlw	71
  4619  5C2E  3420               	retlw	32
  4620  5C2F  3445               	retlw	69
  4621  5C30  344E               	retlw	78
  4622  5C31  3444               	retlw	68
  4623  5C32  3445               	retlw	69
  4624  5C33  3444               	retlw	68
  4625  5C34  3421               	retlw	33
  4626  5C35  3420               	retlw	32
  4627  5C36  3400               	retlw	0
  4628  5C37  3400               	retlw	0
  4629  5C38                     __end_of_zero_cont_str:	
  4630                           
  4631                           	psect	stringtext37
  4632  5C38                     __pstringtext37:	
  4633  5C38                     _erro_inv_str:	
  4634  5C38  3445               	retlw	69
  4635  5C39  3452               	retlw	82
  4636  5C3A  3452               	retlw	82
  4637  5C3B  344F               	retlw	79
  4638  5C3C  3420               	retlw	32
  4639  5C3D  3449               	retlw	73
  4640  5C3E  344E               	retlw	78
  4641  5C3F  3456               	retlw	86
  4642  5C40  3445               	retlw	69
  4643  5C41  3452               	retlw	82
  4644  5C42  3453               	retlw	83
  4645  5C43  344F               	retlw	79
  4646  5C44  3452               	retlw	82
  4647  5C45  3421               	retlw	33
  4648  5C46  3421               	retlw	33
  4649  5C47  3421               	retlw	33
  4650  5C48  3400               	retlw	0
  4651  5C49  3449               	retlw	73
  4652  5C4A  344E               	retlw	78
  4653  5C4B  3456               	retlw	86
  4654  5C4C  3445               	retlw	69
  4655  5C4D  3452               	retlw	82
  4656  5C4E  3454               	retlw	84
  4657  5C4F  3445               	retlw	69
  4658  5C50  3452               	retlw	82
  4659  5C51  3420               	retlw	32
  4660  5C52  3445               	retlw	69
  4661  5C53  3452               	retlw	82
  4662  5C54  3452               	retlw	82
  4663  5C55  344F               	retlw	79
  4664  5C56  3452               	retlw	82
  4665  5C57  3421               	retlw	33
  4666  5C58  3400               	retlw	0
  4667  5C59  3400               	retlw	0
  4668  5C5A                     __end_of_erro_inv_str:	
  4669                           
  4670                           	psect	stringtext38
  4671  5C5A                     __pstringtext38:	
  4672  5C5A                     _erro_ovl_str:	
  4673  5C5A  3453               	retlw	83
  4674  5C5B  344F               	retlw	79
  4675  5C5C  3442               	retlw	66
  4676  5C5D  3452               	retlw	82
  4677  5C5E  3445               	retlw	69
  4678  5C5F  3443               	retlw	67
  4679  5C60  3441               	retlw	65
  4680  5C61  3452               	retlw	82
  4681  5C62  3447               	retlw	71
  4682  5C63  3441               	retlw	65
  4683  5C64  3421               	retlw	33
  4684  5C65  3421               	retlw	33
  4685  5C66  3421               	retlw	33
  4686  5C67  3420               	retlw	32
  4687  5C68  3420               	retlw	32
  4688  5C69  3420               	retlw	32
  4689  5C6A  3400               	retlw	0
  4690  5C6B  344F               	retlw	79
  4691  5C6C  3456               	retlw	86
  4692  5C6D  3445               	retlw	69
  4693  5C6E  3452               	retlw	82
  4694  5C6F  344C               	retlw	76
  4695  5C70  344F               	retlw	79
  4696  5C71  3441               	retlw	65
  4697  5C72  3444               	retlw	68
  4698  5C73  3421               	retlw	33
  4699  5C74  3421               	retlw	33
  4700  5C75  3421               	retlw	33
  4701  5C76  3400               	retlw	0
  4702  5C77  3400               	retlw	0
  4703  5C78  3400               	retlw	0
  4704  5C79  3400               	retlw	0
  4705  5C7A  3400               	retlw	0
  4706  5C7B  3400               	retlw	0
  4707  5C7C                     __end_of_erro_ovl_str:	
  4708                           
  4709                           	psect	stringtext39
  4710  5C7C                     __pstringtext39:	
  4711  5C7C                     _erro_str:	
  4712  5C7C  3445               	retlw	69
  4713  5C7D  3452               	retlw	82
  4714  5C7E  3452               	retlw	82
  4715  5C7F  344F               	retlw	79
  4716  5C80  3420               	retlw	32
  4717  5C81  3400               	retlw	0
  4718  5C82  3400               	retlw	0
  4719  5C83  3400               	retlw	0
  4720  5C84  3400               	retlw	0
  4721  5C85  3400               	retlw	0
  4722  5C86  3400               	retlw	0
  4723  5C87  3400               	retlw	0
  4724  5C88  3400               	retlw	0
  4725  5C89  3400               	retlw	0
  4726  5C8A  3400               	retlw	0
  4727  5C8B  3400               	retlw	0
  4728  5C8C  3400               	retlw	0
  4729  5C8D  3445               	retlw	69
  4730  5C8E  3452               	retlw	82
  4731  5C8F  3452               	retlw	82
  4732  5C90  344F               	retlw	79
  4733  5C91  3452               	retlw	82
  4734  5C92  3420               	retlw	32
  4735  5C93  3400               	retlw	0
  4736  5C94  3400               	retlw	0
  4737  5C95  3400               	retlw	0
  4738  5C96  3400               	retlw	0
  4739  5C97  3400               	retlw	0
  4740  5C98  3400               	retlw	0
  4741  5C99  3400               	retlw	0
  4742  5C9A  3400               	retlw	0
  4743  5C9B  3400               	retlw	0
  4744  5C9C  3400               	retlw	0
  4745  5C9D  3400               	retlw	0
  4746  5C9E                     __end_of_erro_str:	
  4747                           
  4748                           	psect	stringtext40
  4749  5C9E                     __pstringtext40:	
  4750  5C9E                     _Sai_enter_str:	
  4751  5C9E  3445               	retlw	69
  4752  5C9F  344E               	retlw	78
  4753  5CA0  3454               	retlw	84
  4754  5CA1  3445               	retlw	69
  4755  5CA2  3452               	retlw	82
  4756  5CA3  3420               	retlw	32
  4757  5CA4  3470               	retlw	112
  4758  5CA5  342F               	retlw	47
  4759  5CA6  3420               	retlw	32
  4760  5CA7  3473               	retlw	115
  4761  5CA8  3461               	retlw	97
  4762  5CA9  3469               	retlw	105
  4763  5CAA  3472               	retlw	114
  4764  5CAB  342E               	retlw	46
  4765  5CAC  342E               	retlw	46
  4766  5CAD  342E               	retlw	46
  4767  5CAE  3400               	retlw	0
  4768  5CAF  3445               	retlw	69
  4769  5CB0  344E               	retlw	78
  4770  5CB1  3454               	retlw	84
  4771  5CB2  3445               	retlw	69
  4772  5CB3  3452               	retlw	82
  4773  5CB4  3420               	retlw	32
  4774  5CB5  3474               	retlw	116
  4775  5CB6  346F               	retlw	111
  4776  5CB7  3420               	retlw	32
  4777  5CB8  346C               	retlw	108
  4778  5CB9  3465               	retlw	101
  4779  5CBA  3461               	retlw	97
  4780  5CBB  3476               	retlw	118
  4781  5CBC  3465               	retlw	101
  4782  5CBD  3421               	retlw	33
  4783  5CBE  3400               	retlw	0
  4784  5CBF  3400               	retlw	0
  4785  5CC0                     __end_of_Sai_enter_str:	
  4786                           
  4787                           	psect	stringtext41
  4788  5CC0                     __pstringtext41:	
  4789  5CC0                     _teste_PN1_str:	
  4790  5CC0  3454               	retlw	84
  4791  5CC1  3465               	retlw	101
  4792  5CC2  3473               	retlw	115
  4793  5CC3  3474               	retlw	116
  4794  5CC4  3465               	retlw	101
  4795  5CC5  3420               	retlw	32
  4796  5CC6  3450               	retlw	80
  4797  5CC7  346E               	retlw	110
  4798  5CC8  3465               	retlw	101
  4799  5CC9  3475               	retlw	117
  4800  5CCA  346D               	retlw	109
  4801  5CCB  3461               	retlw	97
  4802  5CCC  3474               	retlw	116
  4803  5CCD  3469               	retlw	105
  4804  5CCE  3463               	retlw	99
  4805  5CCF  346F               	retlw	111
  4806  5CD0  3400               	retlw	0
  4807  5CD1  3450               	retlw	80
  4808  5CD2  346E               	retlw	110
  4809  5CD3  3465               	retlw	101
  4810  5CD4  3475               	retlw	117
  4811  5CD5  346D               	retlw	109
  4812  5CD6  3461               	retlw	97
  4813  5CD7  3474               	retlw	116
  4814  5CD8  3469               	retlw	105
  4815  5CD9  3463               	retlw	99
  4816  5CDA  3420               	retlw	32
  4817  5CDB  3454               	retlw	84
  4818  5CDC  3465               	retlw	101
  4819  5CDD  3473               	retlw	115
  4820  5CDE  3474               	retlw	116
  4821  5CDF  3400               	retlw	0
  4822  5CE0  3400               	retlw	0
  4823  5CE1  3400               	retlw	0
  4824  5CE2                     __end_of_teste_PN1_str:	
  4825                           
  4826                           	psect	stringtext42
  4827  5CE2                     __pstringtext42:	
  4828  5CE2                     _teste_US1_str:	
  4829  5CE2  3454               	retlw	84
  4830  5CE3  3465               	retlw	101
  4831  5CE4  3473               	retlw	115
  4832  5CE5  3474               	retlw	116
  4833  5CE6  3465               	retlw	101
  4834  5CE7  3420               	retlw	32
  4835  5CE8  3455               	retlw	85
  4836  5CE9  346C               	retlw	108
  4837  5CEA  3474               	retlw	116
  4838  5CEB  3472               	retlw	114
  4839  5CEC  3461               	retlw	97
  4840  5CED  3473               	retlw	115
  4841  5CEE  3473               	retlw	115
  4842  5CEF  346F               	retlw	111
  4843  5CF0  346D               	retlw	109
  4844  5CF1  3420               	retlw	32
  4845  5CF2  3400               	retlw	0
  4846  5CF3  3455               	retlw	85
  4847  5CF4  346C               	retlw	108
  4848  5CF5  3474               	retlw	116
  4849  5CF6  3472               	retlw	114
  4850  5CF7  3461               	retlw	97
  4851  5CF8  3473               	retlw	115
  4852  5CF9  346F               	retlw	111
  4853  5CFA  346E               	retlw	110
  4854  5CFB  3469               	retlw	105
  4855  5CFC  3463               	retlw	99
  4856  5CFD  3473               	retlw	115
  4857  5CFE  3420               	retlw	32
  4858  5CFF  3454               	retlw	84
  4859  5D00  3465               	retlw	101
  4860  5D01  3473               	retlw	115
  4861  5D02  3474               	retlw	116
  4862  5D03  3400               	retlw	0
  4863  5D04                     __end_of_teste_US1_str:	
  4864                           
  4865                           	psect	stringtext43
  4866  5D04                     __pstringtext43:	
  4867  5D04                     _emerg2_str:	
  4868  5D04  3423               	retlw	35
  4869  5D05  3423               	retlw	35
  4870  5D06  3450               	retlw	80
  4871  5D07  3472               	retlw	114
  4872  5D08  3465               	retlw	101
  4873  5D09  3473               	retlw	115
  4874  5D0A  3473               	retlw	115
  4875  5D0B  3469               	retlw	105
  4876  5D0C  346F               	retlw	111
  4877  5D0D  346E               	retlw	110
  4878  5D0E  3461               	retlw	97
  4879  5D0F  3464               	retlw	100
  4880  5D10  346F               	retlw	111
  4881  5D11  3421               	retlw	33
  4882  5D12  3423               	retlw	35
  4883  5D13  3423               	retlw	35
  4884  5D14  3400               	retlw	0
  4885  5D15  3420               	retlw	32
  4886  5D16  3423               	retlw	35
  4887  5D17  3423               	retlw	35
  4888  5D18  3450               	retlw	80
  4889  5D19  3452               	retlw	82
  4890  5D1A  3445               	retlw	69
  4891  5D1B  3453               	retlw	83
  4892  5D1C  3453               	retlw	83
  4893  5D1D  3445               	retlw	69
  4894  5D1E  3444               	retlw	68
  4895  5D1F  3421               	retlw	33
  4896  5D20  3421               	retlw	33
  4897  5D21  3421               	retlw	33
  4898  5D22  3423               	retlw	35
  4899  5D23  3423               	retlw	35
  4900  5D24  3420               	retlw	32
  4901  5D25  3400               	retlw	0
  4902  5D26                     __end_of_emerg2_str:	
  4903                           
  4904                           	psect	stringtext44
  4905  5D26                     __pstringtext44:	
  4906  5D26                     _emergencia_str:	
  4907  5D26  3420               	retlw	32
  4908  5D27  3423               	retlw	35
  4909  5D28  3423               	retlw	35
  4910  5D29  3445               	retlw	69
  4911  5D2A  346D               	retlw	109
  4912  5D2B  3465               	retlw	101
  4913  5D2C  3472               	retlw	114
  4914  5D2D  3467               	retlw	103
  4915  5D2E  3465               	retlw	101
  4916  5D2F  346E               	retlw	110
  4917  5D30  3463               	retlw	99
  4918  5D31  3469               	retlw	105
  4919  5D32  3461               	retlw	97
  4920  5D33  3423               	retlw	35
  4921  5D34  3423               	retlw	35
  4922  5D35  3420               	retlw	32
  4923  5D36  3400               	retlw	0
  4924  5D37  3420               	retlw	32
  4925  5D38  3423               	retlw	35
  4926  5D39  3423               	retlw	35
  4927  5D3A  3445               	retlw	69
  4928  5D3B  344D               	retlw	77
  4929  5D3C  3445               	retlw	69
  4930  5D3D  3452               	retlw	82
  4931  5D3E  3447               	retlw	71
  4932  5D3F  3445               	retlw	69
  4933  5D40  344E               	retlw	78
  4934  5D41  3443               	retlw	67
  4935  5D42  3459               	retlw	89
  4936  5D43  3420               	retlw	32
  4937  5D44  3423               	retlw	35
  4938  5D45  3423               	retlw	35
  4939  5D46  3420               	retlw	32
  4940  5D47  3400               	retlw	0
  4941  5D48                     __end_of_emergencia_str:	
  4942                           
  4943                           	psect	stringtext45
  4944  5D48                     __pstringtext45:	
  4945  5D48                     _solda_cont_str:	
  4946  5D48  3420               	retlw	32
  4947  5D49  3453               	retlw	83
  4948  5D4A  346F               	retlw	111
  4949  5D4B  346C               	retlw	108
  4950  5D4C  3464               	retlw	100
  4951  5D4D  3461               	retlw	97
  4952  5D4E  3420               	retlw	32
  4953  5D4F  3443               	retlw	67
  4954  5D50  346F               	retlw	111
  4955  5D51  346E               	retlw	110
  4956  5D52  3474               	retlw	116
  4957  5D53  3469               	retlw	105
  4958  5D54  346E               	retlw	110
  4959  5D55  3475               	retlw	117
  4960  5D56  3461               	retlw	97
  4961  5D57  3420               	retlw	32
  4962  5D58  3400               	retlw	0
  4963  5D59  3420               	retlw	32
  4964  5D5A  3420               	retlw	32
  4965  5D5B  3420               	retlw	32
  4966  5D5C  3443               	retlw	67
  4967  5D5D  346F               	retlw	111
  4968  5D5E  346E               	retlw	110
  4969  5D5F  3474               	retlw	116
  4970  5D60  3469               	retlw	105
  4971  5D61  346E               	retlw	110
  4972  5D62  3475               	retlw	117
  4973  5D63  346F               	retlw	111
  4974  5D64  3475               	retlw	117
  4975  5D65  3473               	retlw	115
  4976  5D66  3420               	retlw	32
  4977  5D67  3420               	retlw	32
  4978  5D68  3420               	retlw	32
  4979  5D69  3400               	retlw	0
  4980  5D6A                     __end_of_solda_cont_str:	
  4981                           
  4982                           	psect	stringtext46
  4983  5D6A                     __pstringtext46:	
  4984  5D6A                     _aguarde_str:	
  4985  5D6A  3420               	retlw	32
  4986  5D6B  3420               	retlw	32
  4987  5D6C  3420               	retlw	32
  4988  5D6D  3441               	retlw	65
  4989  5D6E  3467               	retlw	103
  4990  5D6F  3475               	retlw	117
  4991  5D70  3461               	retlw	97
  4992  5D71  3472               	retlw	114
  4993  5D72  3464               	retlw	100
  4994  5D73  3465               	retlw	101
  4995  5D74  342E               	retlw	46
  4996  5D75  342E               	retlw	46
  4997  5D76  342E               	retlw	46
  4998  5D77  3420               	retlw	32
  4999  5D78  3420               	retlw	32
  5000  5D79  3420               	retlw	32
  5001  5D7A  3400               	retlw	0
  5002  5D7B  3420               	retlw	32
  5003  5D7C  3420               	retlw	32
  5004  5D7D  3420               	retlw	32
  5005  5D7E  3420               	retlw	32
  5006  5D7F  3420               	retlw	32
  5007  5D80  3457               	retlw	87
  5008  5D81  3461               	retlw	97
  5009  5D82  3469               	retlw	105
  5010  5D83  3474               	retlw	116
  5011  5D84  342E               	retlw	46
  5012  5D85  342E               	retlw	46
  5013  5D86  342E               	retlw	46
  5014  5D87  3420               	retlw	32
  5015  5D88  3420               	retlw	32
  5016  5D89  3420               	retlw	32
  5017  5D8A  3420               	retlw	32
  5018  5D8B  3400               	retlw	0
  5019  5D8C                     __end_of_aguarde_str:	
  5020                           
  5021                           	psect	stringtext47
  5022  5D8C                     __pstringtext47:	
  5023  5D8C                     _fixando_str:	
  5024  5D8C  3420               	retlw	32
  5025  5D8D  3420               	retlw	32
  5026  5D8E  3420               	retlw	32
  5027  5D8F  3446               	retlw	70
  5028  5D90  3469               	retlw	105
  5029  5D91  3478               	retlw	120
  5030  5D92  3461               	retlw	97
  5031  5D93  346E               	retlw	110
  5032  5D94  3464               	retlw	100
  5033  5D95  346F               	retlw	111
  5034  5D96  3420               	retlw	32
  5035  5D97  3420               	retlw	32
  5036  5D98  3420               	retlw	32
  5037  5D99  3420               	retlw	32
  5038  5D9A  3420               	retlw	32
  5039  5D9B  3420               	retlw	32
  5040  5D9C  3400               	retlw	0
  5041  5D9D  3420               	retlw	32
  5042  5D9E  3420               	retlw	32
  5043  5D9F  3420               	retlw	32
  5044  5DA0  3420               	retlw	32
  5045  5DA1  3420               	retlw	32
  5046  5DA2  3448               	retlw	72
  5047  5DA3  346F               	retlw	111
  5048  5DA4  346C               	retlw	108
  5049  5DA5  3464               	retlw	100
  5050  5DA6  3469               	retlw	105
  5051  5DA7  346E               	retlw	110
  5052  5DA8  3467               	retlw	103
  5053  5DA9  3420               	retlw	32
  5054  5DAA  3420               	retlw	32
  5055  5DAB  3420               	retlw	32
  5056  5DAC  3420               	retlw	32
  5057  5DAD  3400               	retlw	0
  5058  5DAE                     __end_of_fixando_str:	
  5059                           
  5060                           	psect	stringtext48
  5061  5DAE                     __pstringtext48:	
  5062  5DAE                     _process_str:	
  5063  5DAE  3420               	retlw	32
  5064  5DAF  3420               	retlw	32
  5065  5DB0  3420               	retlw	32
  5066  5DB1  3450               	retlw	80
  5067  5DB2  3472               	retlw	114
  5068  5DB3  346F               	retlw	111
  5069  5DB4  3463               	retlw	99
  5070  5DB5  3465               	retlw	101
  5071  5DB6  3473               	retlw	115
  5072  5DB7  3473               	retlw	115
  5073  5DB8  3461               	retlw	97
  5074  5DB9  346E               	retlw	110
  5075  5DBA  3464               	retlw	100
  5076  5DBB  346F               	retlw	111
  5077  5DBC  3420               	retlw	32
  5078  5DBD  3420               	retlw	32
  5079  5DBE  3400               	retlw	0
  5080  5DBF  3420               	retlw	32
  5081  5DC0  3420               	retlw	32
  5082  5DC1  3420               	retlw	32
  5083  5DC2  3420               	retlw	32
  5084  5DC3  3420               	retlw	32
  5085  5DC4  3457               	retlw	87
  5086  5DC5  3465               	retlw	101
  5087  5DC6  346C               	retlw	108
  5088  5DC7  3464               	retlw	100
  5089  5DC8  3469               	retlw	105
  5090  5DC9  346E               	retlw	110
  5091  5DCA  3467               	retlw	103
  5092  5DCB  3420               	retlw	32
  5093  5DCC  3420               	retlw	32
  5094  5DCD  3420               	retlw	32
  5095  5DCE  3420               	retlw	32
  5096  5DCF  3400               	retlw	0
  5097  5DD0                     __end_of_process_str:	
  5098                           
  5099                           	psect	stringtext49
  5100  5DD0                     __pstringtext49:	
  5101  5DD0                     _descendo_str:	
  5102  5DD0  3420               	retlw	32
  5103  5DD1  3420               	retlw	32
  5104  5DD2  3420               	retlw	32
  5105  5DD3  3444               	retlw	68
  5106  5DD4  3465               	retlw	101
  5107  5DD5  3473               	retlw	115
  5108  5DD6  3463               	retlw	99
  5109  5DD7  3465               	retlw	101
  5110  5DD8  346E               	retlw	110
  5111  5DD9  3464               	retlw	100
  5112  5DDA  346F               	retlw	111
  5113  5DDB  3420               	retlw	32
  5114  5DDC  3420               	retlw	32
  5115  5DDD  3420               	retlw	32
  5116  5DDE  3420               	retlw	32
  5117  5DDF  3420               	retlw	32
  5118  5DE0  3400               	retlw	0
  5119  5DE1  3420               	retlw	32
  5120  5DE2  3455               	retlw	85
  5121  5DE3  3453               	retlw	83
  5122  5DE4  3420               	retlw	32
  5123  5DE5  3448               	retlw	72
  5124  5DE6  3465               	retlw	101
  5125  5DE7  3461               	retlw	97
  5126  5DE8  3464               	retlw	100
  5127  5DE9  3420               	retlw	32
  5128  5DEA  344D               	retlw	77
  5129  5DEB  346F               	retlw	111
  5130  5DEC  3476               	retlw	118
  5131  5DED  3469               	retlw	105
  5132  5DEE  346E               	retlw	110
  5133  5DEF  3467               	retlw	103
  5134  5DF0  3420               	retlw	32
  5135  5DF1  3400               	retlw	0
  5136  5DF2                     __end_of_descendo_str:	
  5137                           
  5138                           	psect	stringtext50
  5139  5DF2                     __pstringtext50:	
  5140  5DF2                     _valor_a_str:	
  5141  5DF2  3456               	retlw	86
  5142  5DF3  3461               	retlw	97
  5143  5DF4  346C               	retlw	108
  5144  5DF5  346F               	retlw	111
  5145  5DF6  3472               	retlw	114
  5146  5DF7  343A               	retlw	58
  5147  5DF8  3420               	retlw	32
  5148  5DF9  3400               	retlw	0
  5149  5DFA  3400               	retlw	0
  5150  5DFB  3400               	retlw	0
  5151  5DFC  3400               	retlw	0
  5152  5DFD  3400               	retlw	0
  5153  5DFE  3400               	retlw	0
  5154  5DFF  3400               	retlw	0
  5155  5E00  3400               	retlw	0
  5156  5E01  3400               	retlw	0
  5157  5E02  3400               	retlw	0
  5158  5E03  3456               	retlw	86
  5159  5E04  3461               	retlw	97
  5160  5E05  346C               	retlw	108
  5161  5E06  3475               	retlw	117
  5162  5E07  3465               	retlw	101
  5163  5E08  343A               	retlw	58
  5164  5E09  3420               	retlw	32
  5165  5E0A  3400               	retlw	0
  5166  5E0B  3400               	retlw	0
  5167  5E0C  3400               	retlw	0
  5168  5E0D  3400               	retlw	0
  5169  5E0E  3400               	retlw	0
  5170  5E0F  3400               	retlw	0
  5171  5E10  3400               	retlw	0
  5172  5E11  3400               	retlw	0
  5173  5E12  3400               	retlw	0
  5174  5E13  3400               	retlw	0
  5175  5E14                     __end_of_valor_a_str:	
  5176                           
  5177                           	psect	stringtext51
  5178  5E14                     __pstringtext51:	
  5179  5E14                     _carrega_str:	
  5180  5E14  3443               	retlw	67
  5181  5E15  3461               	retlw	97
  5182  5E16  3472               	retlw	114
  5183  5E17  3472               	retlw	114
  5184  5E18  3465               	retlw	101
  5185  5E19  3467               	retlw	103
  5186  5E1A  3461               	retlw	97
  5187  5E1B  3472               	retlw	114
  5188  5E1C  3420               	retlw	32
  5189  5E1D  3452               	retlw	82
  5190  5E1E  3465               	retlw	101
  5191  5E1F  3463               	retlw	99
  5192  5E20  3465               	retlw	101
  5193  5E21  3469               	retlw	105
  5194  5E22  3474               	retlw	116
  5195  5E23  3461               	retlw	97
  5196  5E24  3400               	retlw	0
  5197  5E25  344C               	retlw	76
  5198  5E26  346F               	retlw	111
  5199  5E27  3461               	retlw	97
  5200  5E28  3464               	retlw	100
  5201  5E29  3420               	retlw	32
  5202  5E2A  3450               	retlw	80
  5203  5E2B  3461               	retlw	97
  5204  5E2C  3472               	retlw	114
  5205  5E2D  3461               	retlw	97
  5206  5E2E  346D               	retlw	109
  5207  5E2F  3465               	retlw	101
  5208  5E30  3474               	retlw	116
  5209  5E31  3420               	retlw	32
  5210  5E32  3453               	retlw	83
  5211  5E33  3465               	retlw	101
  5212  5E34  3474               	retlw	116
  5213  5E35  3400               	retlw	0
  5214  5E36                     __end_of_carrega_str:	
  5215                           
  5216                           	psect	stringtext52
  5217  5E36                     __pstringtext52:	
  5218  5E36                     _receita_carreg_str:	
  5219  5E36  3420               	retlw	32
  5220  5E37  3452               	retlw	82
  5221  5E38  3465               	retlw	101
  5222  5E39  3463               	retlw	99
  5223  5E3A  3465               	retlw	101
  5224  5E3B  3469               	retlw	105
  5225  5E3C  3474               	retlw	116
  5226  5E3D  3461               	retlw	97
  5227  5E3E  3420               	retlw	32
  5228  5E3F  3443               	retlw	67
  5229  5E40  3461               	retlw	97
  5230  5E41  3472               	retlw	114
  5231  5E42  3472               	retlw	114
  5232  5E43  342E               	retlw	46
  5233  5E44  3420               	retlw	32
  5234  5E45  3400               	retlw	0
  5235  5E46  3400               	retlw	0
  5236  5E47  344C               	retlw	76
  5237  5E48  346F               	retlw	111
  5238  5E49  3461               	retlw	97
  5239  5E4A  3464               	retlw	100
  5240  5E4B  3465               	retlw	101
  5241  5E4C  3464               	retlw	100
  5242  5E4D  3420               	retlw	32
  5243  5E4E  3450               	retlw	80
  5244  5E4F  3461               	retlw	97
  5245  5E50  3472               	retlw	114
  5246  5E51  3461               	retlw	97
  5247  5E52  346D               	retlw	109
  5248  5E53  3420               	retlw	32
  5249  5E54  3453               	retlw	83
  5250  5E55  3465               	retlw	101
  5251  5E56  3474               	retlw	116
  5252  5E57  3400               	retlw	0
  5253  5E58                     __end_of_receita_carreg_str:	
  5254                           
  5255                           	psect	stringtext53
  5256  5E58                     __pstringtext53:	
  5257  5E58                     _receita_salva_str:	
  5258  5E58  3420               	retlw	32
  5259  5E59  3452               	retlw	82
  5260  5E5A  3465               	retlw	101
  5261  5E5B  3463               	retlw	99
  5262  5E5C  3465               	retlw	101
  5263  5E5D  3469               	retlw	105
  5264  5E5E  3474               	retlw	116
  5265  5E5F  3461               	retlw	97
  5266  5E60  3420               	retlw	32
  5267  5E61  3453               	retlw	83
  5268  5E62  3461               	retlw	97
  5269  5E63  346C               	retlw	108
  5270  5E64  3476               	retlw	118
  5271  5E65  3461               	retlw	97
  5272  5E66  3420               	retlw	32
  5273  5E67  3400               	retlw	0
  5274  5E68  3400               	retlw	0
  5275  5E69  3450               	retlw	80
  5276  5E6A  3461               	retlw	97
  5277  5E6B  3472               	retlw	114
  5278  5E6C  3461               	retlw	97
  5279  5E6D  346D               	retlw	109
  5280  5E6E  342E               	retlw	46
  5281  5E6F  3420               	retlw	32
  5282  5E70  3453               	retlw	83
  5283  5E71  3465               	retlw	101
  5284  5E72  3474               	retlw	116
  5285  5E73  3420               	retlw	32
  5286  5E74  3453               	retlw	83
  5287  5E75  3465               	retlw	101
  5288  5E76  3476               	retlw	118
  5289  5E77  3465               	retlw	101
  5290  5E78  3464               	retlw	100
  5291  5E79  3400               	retlw	0
  5292  5E7A                     __end_of_receita_salva_str:	
  5293                           
  5294                           	psect	stringtext54
  5295  5E7A                     __pstringtext54:	
  5296  5E7A                     _salva_str:	
  5297  5E7A  3453               	retlw	83
  5298  5E7B  3461               	retlw	97
  5299  5E7C  346C               	retlw	108
  5300  5E7D  3476               	retlw	118
  5301  5E7E  3461               	retlw	97
  5302  5E7F  3472               	retlw	114
  5303  5E80  3420               	retlw	32
  5304  5E81  3452               	retlw	82
  5305  5E82  3465               	retlw	101
  5306  5E83  3463               	retlw	99
  5307  5E84  3465               	retlw	101
  5308  5E85  3469               	retlw	105
  5309  5E86  3474               	retlw	116
  5310  5E87  3461               	retlw	97
  5311  5E88  3420               	retlw	32
  5312  5E89  3400               	retlw	0
  5313  5E8A  3400               	retlw	0
  5314  5E8B  3453               	retlw	83
  5315  5E8C  3461               	retlw	97
  5316  5E8D  3476               	retlw	118
  5317  5E8E  3465               	retlw	101
  5318  5E8F  3420               	retlw	32
  5319  5E90  3450               	retlw	80
  5320  5E91  3461               	retlw	97
  5321  5E92  3472               	retlw	114
  5322  5E93  3461               	retlw	97
  5323  5E94  346D               	retlw	109
  5324  5E95  3465               	retlw	101
  5325  5E96  3474               	retlw	116
  5326  5E97  3420               	retlw	32
  5327  5E98  3453               	retlw	83
  5328  5E99  3465               	retlw	101
  5329  5E9A  3474               	retlw	116
  5330  5E9B  3400               	retlw	0
  5331  5E9C                     __end_of_salva_str:	
  5332                           
  5333                           	psect	stringtext55
  5334  5E9C                     __pstringtext55:	
  5335  5E9C                     _cont_pecas_str:	
  5336  5E9C  3451               	retlw	81
  5337  5E9D  3474               	retlw	116
  5338  5E9E  342E               	retlw	46
  5339  5E9F  3450               	retlw	80
  5340  5EA0  3465               	retlw	101
  5341  5EA1  3463               	retlw	99
  5342  5EA2  3461               	retlw	97
  5343  5EA3  3473               	retlw	115
  5344  5EA4  3420               	retlw	32
  5345  5EA5  3420               	retlw	32
  5346  5EA6  3428               	retlw	40
  5347  5EA7  3478               	retlw	120
  5348  5EA8  3400               	retlw	0
  5349  5EA9  3400               	retlw	0
  5350  5EAA  3400               	retlw	0
  5351  5EAB  3400               	retlw	0
  5352  5EAC  3400               	retlw	0
  5353  5EAD  3450               	retlw	80
  5354  5EAE  3461               	retlw	97
  5355  5EAF  3472               	retlw	114
  5356  5EB0  3474               	retlw	116
  5357  5EB1  3473               	retlw	115
  5358  5EB2  3420               	retlw	32
  5359  5EB3  3451               	retlw	81
  5360  5EB4  3474               	retlw	116
  5361  5EB5  3479               	retlw	121
  5362  5EB6  3420               	retlw	32
  5363  5EB7  3428               	retlw	40
  5364  5EB8  3478               	retlw	120
  5365  5EB9  3400               	retlw	0
  5366  5EBA  3400               	retlw	0
  5367  5EBB  3400               	retlw	0
  5368  5EBC  3400               	retlw	0
  5369  5EBD  3400               	retlw	0
  5370  5EBE                     __end_of_cont_pecas_str:	
  5371                           
  5372                           	psect	stringtext56
  5373  5EBE                     __pstringtext56:	
  5374  5EBE                     _modo_contByPulse_str:	
  5375  5EBE  3443               	retlw	67
  5376  5EBF  346F               	retlw	111
  5377  5EC0  346E               	retlw	110
  5378  5EC1  3474               	retlw	116
  5379  5EC2  342E               	retlw	46
  5380  5EC3  3420               	retlw	32
  5381  5EC4  3470               	retlw	112
  5382  5EC5  346F               	retlw	111
  5383  5EC6  3472               	retlw	114
  5384  5EC7  3420               	retlw	32
  5385  5EC8  3470               	retlw	112
  5386  5EC9  3475               	retlw	117
  5387  5ECA  346C               	retlw	108
  5388  5ECB  3473               	retlw	115
  5389  5ECC  346F               	retlw	111
  5390  5ECD  3420               	retlw	32
  5391  5ECE  3400               	retlw	0
  5392  5ECF  3443               	retlw	67
  5393  5ED0  346F               	retlw	111
  5394  5ED1  346E               	retlw	110
  5395  5ED2  3474               	retlw	116
  5396  5ED3  342E               	retlw	46
  5397  5ED4  3420               	retlw	32
  5398  5ED5  3462               	retlw	98
  5399  5ED6  3479               	retlw	121
  5400  5ED7  3420               	retlw	32
  5401  5ED8  3470               	retlw	112
  5402  5ED9  3475               	retlw	117
  5403  5EDA  346C               	retlw	108
  5404  5EDB  3473               	retlw	115
  5405  5EDC  3465               	retlw	101
  5406  5EDD  3400               	retlw	0
  5407  5EDE  3400               	retlw	0
  5408  5EDF  3400               	retlw	0
  5409  5EE0                     __end_of_modo_contByPulse_str:	
  5410                           
  5411                           	psect	stringtext57
  5412  5EE0                     __pstringtext57:	
  5413  5EE0                     _modo_contnuo_str:	
  5414  5EE0  3443               	retlw	67
  5415  5EE1  346F               	retlw	111
  5416  5EE2  346E               	retlw	110
  5417  5EE3  3474               	retlw	116
  5418  5EE4  3469               	retlw	105
  5419  5EE5  346E               	retlw	110
  5420  5EE6  3475               	retlw	117
  5421  5EE7  346F               	retlw	111
  5422  5EE8  3420               	retlw	32
  5423  5EE9  3420               	retlw	32
  5424  5EEA  3420               	retlw	32
  5425  5EEB  3420               	retlw	32
  5426  5EEC  3420               	retlw	32
  5427  5EED  3420               	retlw	32
  5428  5EEE  3420               	retlw	32
  5429  5EEF  3400               	retlw	0
  5430  5EF0  3400               	retlw	0
  5431  5EF1  3443               	retlw	67
  5432  5EF2  346F               	retlw	111
  5433  5EF3  346E               	retlw	110
  5434  5EF4  3474               	retlw	116
  5435  5EF5  3469               	retlw	105
  5436  5EF6  346E               	retlw	110
  5437  5EF7  3475               	retlw	117
  5438  5EF8  346F               	retlw	111
  5439  5EF9  3475               	retlw	117
  5440  5EFA  3473               	retlw	115
  5441  5EFB  3400               	retlw	0
  5442  5EFC  3400               	retlw	0
  5443  5EFD  3400               	retlw	0
  5444  5EFE  3400               	retlw	0
  5445  5EFF  3400               	retlw	0
  5446  5F00  3400               	retlw	0
  5447  5F01  3400               	retlw	0
  5448  5F02                     __end_of_modo_contnuo_str:	
  5449                           
  5450                           	psect	stringtext58
  5451  5F02                     __pstringtext58:	
  5452  5F02                     _modo_rapido_str:	
  5453  5F02  3452               	retlw	82
  5454  5F03  3461               	retlw	97
  5455  5F04  3470               	retlw	112
  5456  5F05  3469               	retlw	105
  5457  5F06  3464               	retlw	100
  5458  5F07  346F               	retlw	111
  5459  5F08  3420               	retlw	32
  5460  5F09  3420               	retlw	32
  5461  5F0A  3420               	retlw	32
  5462  5F0B  3420               	retlw	32
  5463  5F0C  3420               	retlw	32
  5464  5F0D  3420               	retlw	32
  5465  5F0E  3420               	retlw	32
  5466  5F0F  3420               	retlw	32
  5467  5F10  3420               	retlw	32
  5468  5F11  3400               	retlw	0
  5469  5F12  3400               	retlw	0
  5470  5F13  3446               	retlw	70
  5471  5F14  3461               	retlw	97
  5472  5F15  3473               	retlw	115
  5473  5F16  3474               	retlw	116
  5474  5F17  3400               	retlw	0
  5475  5F18  3400               	retlw	0
  5476  5F19  3400               	retlw	0
  5477  5F1A  3400               	retlw	0
  5478  5F1B  3400               	retlw	0
  5479  5F1C  3400               	retlw	0
  5480  5F1D  3400               	retlw	0
  5481  5F1E  3400               	retlw	0
  5482  5F1F  3400               	retlw	0
  5483  5F20  3400               	retlw	0
  5484  5F21  3400               	retlw	0
  5485  5F22  3400               	retlw	0
  5486  5F23  3400               	retlw	0
  5487  5F24                     __end_of_modo_rapido_str:	
  5488                           
  5489                           	psect	stringtext59
  5490  5F24                     __pstringtext59:	
  5491  5F24                     _modo_normal_str:	
  5492  5F24  344E               	retlw	78
  5493  5F25  346F               	retlw	111
  5494  5F26  3472               	retlw	114
  5495  5F27  346D               	retlw	109
  5496  5F28  3461               	retlw	97
  5497  5F29  346C               	retlw	108
  5498  5F2A  3420               	retlw	32
  5499  5F2B  3420               	retlw	32
  5500  5F2C  3420               	retlw	32
  5501  5F2D  3420               	retlw	32
  5502  5F2E  3420               	retlw	32
  5503  5F2F  3420               	retlw	32
  5504  5F30  3420               	retlw	32
  5505  5F31  3420               	retlw	32
  5506  5F32  3420               	retlw	32
  5507  5F33  3400               	retlw	0
  5508  5F34  3400               	retlw	0
  5509  5F35  3444               	retlw	68
  5510  5F36  3465               	retlw	101
  5511  5F37  3466               	retlw	102
  5512  5F38  3461               	retlw	97
  5513  5F39  3475               	retlw	117
  5514  5F3A  346C               	retlw	108
  5515  5F3B  3474               	retlw	116
  5516  5F3C  3400               	retlw	0
  5517  5F3D  3400               	retlw	0
  5518  5F3E  3400               	retlw	0
  5519  5F3F  3400               	retlw	0
  5520  5F40  3400               	retlw	0
  5521  5F41  3400               	retlw	0
  5522  5F42  3400               	retlw	0
  5523  5F43  3400               	retlw	0
  5524  5F44  3400               	retlw	0
  5525  5F45  3400               	retlw	0
  5526  5F46                     __end_of_modo_normal_str:	
  5527                           
  5528                           	psect	stringtext60
  5529  5F46                     __pstringtext60:	
  5530  5F46                     _modo_op_str:	
  5531  5F46  3453               	retlw	83
  5532  5F47  3465               	retlw	101
  5533  5F48  346C               	retlw	108
  5534  5F49  3465               	retlw	101
  5535  5F4A  3463               	retlw	99
  5536  5F4B  3469               	retlw	105
  5537  5F4C  346F               	retlw	111
  5538  5F4D  346E               	retlw	110
  5539  5F4E  3465               	retlw	101
  5540  5F4F  3420               	retlw	32
  5541  5F50  344D               	retlw	77
  5542  5F51  346F               	retlw	111
  5543  5F52  3464               	retlw	100
  5544  5F53  346F               	retlw	111
  5545  5F54  343A               	retlw	58
  5546  5F55  3400               	retlw	0
  5547  5F56  3400               	retlw	0
  5548  5F57  3453               	retlw	83
  5549  5F58  3465               	retlw	101
  5550  5F59  346C               	retlw	108
  5551  5F5A  3465               	retlw	101
  5552  5F5B  3463               	retlw	99
  5553  5F5C  3474               	retlw	116
  5554  5F5D  3420               	retlw	32
  5555  5F5E  344D               	retlw	77
  5556  5F5F  346F               	retlw	111
  5557  5F60  3464               	retlw	100
  5558  5F61  3465               	retlw	101
  5559  5F62  343A               	retlw	58
  5560  5F63  3400               	retlw	0
  5561  5F64  3400               	retlw	0
  5562  5F65  3400               	retlw	0
  5563  5F66  3400               	retlw	0
  5564  5F67  3400               	retlw	0
  5565  5F68                     __end_of_modo_op_str:	
  5566                           
  5567                           	psect	stringtext61
  5568  5F68                     __pstringtext61:	
  5569  5F68                     _tipo_maquina_str:	
  5570  5F68  3454               	retlw	84
  5571  5F69  3469               	retlw	105
  5572  5F6A  3470               	retlw	112
  5573  5F6B  346F               	retlw	111
  5574  5F6C  3420               	retlw	32
  5575  5F6D  344D               	retlw	77
  5576  5F6E  3461               	retlw	97
  5577  5F6F  3471               	retlw	113
  5578  5F70  3475               	retlw	117
  5579  5F71  3469               	retlw	105
  5580  5F72  346E               	retlw	110
  5581  5F73  3461               	retlw	97
  5582  5F74  343A               	retlw	58
  5583  5F75  3400               	retlw	0
  5584  5F76  3400               	retlw	0
  5585  5F77  3400               	retlw	0
  5586  5F78  3400               	retlw	0
  5587  5F79  344F               	retlw	79
  5588  5F7A  3470               	retlw	112
  5589  5F7B  3465               	retlw	101
  5590  5F7C  3472               	retlw	114
  5591  5F7D  3461               	retlw	97
  5592  5F7E  3474               	retlw	116
  5593  5F7F  3469               	retlw	105
  5594  5F80  346F               	retlw	111
  5595  5F81  346E               	retlw	110
  5596  5F82  3420               	retlw	32
  5597  5F83  344D               	retlw	77
  5598  5F84  346F               	retlw	111
  5599  5F85  3464               	retlw	100
  5600  5F86  3465               	retlw	101
  5601  5F87  343A               	retlw	58
  5602  5F88  3400               	retlw	0
  5603  5F89  3400               	retlw	0
  5604  5F8A                     __end_of_tipo_maquina_str:	
  5605                           
  5606                           	psect	stringtext62
  5607  5F8A                     __pstringtext62:	
  5608  5F8A                     _metal_str:	
  5609  5F8A  3454               	retlw	84
  5610  5F8B  342E               	retlw	46
  5611  5F8C  344D               	retlw	77
  5612  5F8D  342D               	retlw	45
  5613  5F8E  344D               	retlw	77
  5614  5F8F  3465               	retlw	101
  5615  5F90  3474               	retlw	116
  5616  5F91  3461               	retlw	97
  5617  5F92  346C               	retlw	108
  5618  5F93  3420               	retlw	32
  5619  5F94  3428               	retlw	40
  5620  5F95  3478               	retlw	120
  5621  5F96  3400               	retlw	0
  5622  5F97  3400               	retlw	0
  5623  5F98  3400               	retlw	0
  5624  5F99  3400               	retlw	0
  5625  5F9A  3400               	retlw	0
  5626  5F9B  344D               	retlw	77
  5627  5F9C  342D               	retlw	45
  5628  5F9D  344D               	retlw	77
  5629  5F9E  3420               	retlw	32
  5630  5F9F  3454               	retlw	84
  5631  5FA0  3469               	retlw	105
  5632  5FA1  346D               	retlw	109
  5633  5FA2  3465               	retlw	101
  5634  5FA3  3420               	retlw	32
  5635  5FA4  3420               	retlw	32
  5636  5FA5  3428               	retlw	40
  5637  5FA6  3478               	retlw	120
  5638  5FA7  3400               	retlw	0
  5639  5FA8  3400               	retlw	0
  5640  5FA9  3400               	retlw	0
  5641  5FAA  3400               	retlw	0
  5642  5FAB  3400               	retlw	0
  5643  5FAC                     __end_of_metal_str:	
  5644                           
  5645                           	psect	stringtext63
  5646  5FAC                     __pstringtext63:	
  5647  5FAC                     _fixacao_str:	
  5648  5FAC  3454               	retlw	84
  5649  5FAD  342E               	retlw	46
  5650  5FAE  3445               	retlw	69
  5651  5FAF  3473               	retlw	115
  5652  5FB0  3470               	retlw	112
  5653  5FB1  3465               	retlw	101
  5654  5FB2  3472               	retlw	114
  5655  5FB3  3461               	retlw	97
  5656  5FB4  3420               	retlw	32
  5657  5FB5  3420               	retlw	32
  5658  5FB6  3428               	retlw	40
  5659  5FB7  3478               	retlw	120
  5660  5FB8  3400               	retlw	0
  5661  5FB9  3400               	retlw	0
  5662  5FBA  3400               	retlw	0
  5663  5FBB  3400               	retlw	0
  5664  5FBC  3400               	retlw	0
  5665  5FBD  3448               	retlw	72
  5666  5FBE  346F               	retlw	111
  5667  5FBF  346C               	retlw	108
  5668  5FC0  3464               	retlw	100
  5669  5FC1  3420               	retlw	32
  5670  5FC2  3454               	retlw	84
  5671  5FC3  3469               	retlw	105
  5672  5FC4  346D               	retlw	109
  5673  5FC5  3465               	retlw	101
  5674  5FC6  3420               	retlw	32
  5675  5FC7  3428               	retlw	40
  5676  5FC8  3478               	retlw	120
  5677  5FC9  3400               	retlw	0
  5678  5FCA  3400               	retlw	0
  5679  5FCB  3400               	retlw	0
  5680  5FCC  3400               	retlw	0
  5681  5FCD  3400               	retlw	0
  5682  5FCE                     __end_of_fixacao_str:	
  5683                           
  5684                           	psect	stringtext64
  5685  5FCE                     __pstringtext64:	
  5686  5FCE                     _ctrl_pecas_str:	
  5687  5FCE  3443               	retlw	67
  5688  5FCF  3474               	retlw	116
  5689  5FD0  3472               	retlw	114
  5690  5FD1  346C               	retlw	108
  5691  5FD2  342E               	retlw	46
  5692  5FD3  3420               	retlw	32
  5693  5FD4  3450               	retlw	80
  5694  5FD5  3465               	retlw	101
  5695  5FD6  3463               	retlw	99
  5696  5FD7  3461               	retlw	97
  5697  5FD8  3473               	retlw	115
  5698  5FD9  3420               	retlw	32
  5699  5FDA  3400               	retlw	0
  5700  5FDB  3400               	retlw	0
  5701  5FDC  3400               	retlw	0
  5702  5FDD  3400               	retlw	0
  5703  5FDE  3400               	retlw	0
  5704  5FDF  3450               	retlw	80
  5705  5FE0  3461               	retlw	97
  5706  5FE1  3472               	retlw	114
  5707  5FE2  3474               	retlw	116
  5708  5FE3  3473               	retlw	115
  5709  5FE4  3420               	retlw	32
  5710  5FE5  3451               	retlw	81
  5711  5FE6  3474               	retlw	116
  5712  5FE7  3479               	retlw	121
  5713  5FE8  3420               	retlw	32
  5714  5FE9  3443               	retlw	67
  5715  5FEA  3474               	retlw	116
  5716  5FEB  3472               	retlw	114
  5717  5FEC  346C               	retlw	108
  5718  5FED  3400               	retlw	0
  5719  5FEE  3400               	retlw	0
  5720  5FEF  3400               	retlw	0
  5721  5FF0                     __end_of_ctrl_pecas_str:	
  5722                           
  5723                           	psect	stringtext65
  5724  5FF0                     __pstringtext65:	
  5725  5FF0                     _ctrl_solda_str:	
  5726  5FF0  3443               	retlw	67
  5727  5FF1  3474               	retlw	116
  5728  5FF2  3472               	retlw	114
  5729  5FF3  346C               	retlw	108
  5730  5FF4  342E               	retlw	46
  5731  5FF5  3420               	retlw	32
  5732  5FF6  3453               	retlw	83
  5733  5FF7  346F               	retlw	111
  5734  5FF8  346C               	retlw	108
  5735  5FF9  3464               	retlw	100
  5736  5FFA  3461               	retlw	97
  5737  5FFB  3420               	retlw	32
  5738  5FFC  3400               	retlw	0
  5739  5FFD  3400               	retlw	0
  5740  5FFE  3400               	retlw	0
  5741  5FFF  3400               	retlw	0
  5742  6000  3400               	retlw	0
  5743  6001  3457               	retlw	87
  5744  6002  3465               	retlw	101
  5745  6003  346C               	retlw	108
  5746  6004  3464               	retlw	100
  5747  6005  3420               	retlw	32
  5748  6006  3443               	retlw	67
  5749  6007  346F               	retlw	111
  5750  6008  346E               	retlw	110
  5751  6009  3474               	retlw	116
  5752  600A  3472               	retlw	114
  5753  600B  346F               	retlw	111
  5754  600C  346C               	retlw	108
  5755  600D  3420               	retlw	32
  5756  600E  3400               	retlw	0
  5757  600F  3400               	retlw	0
  5758  6010  3400               	retlw	0
  5759  6011  3400               	retlw	0
  5760  6012                     __end_of_ctrl_solda_str:	
  5761                           
  5762                           	psect	stringtext66
  5763  6012                     __pstringtext66:	
  5764  6012                     _joule_str:	
  5765  6012  3445               	retlw	69
  5766  6013  346E               	retlw	110
  5767  6014  3465               	retlw	101
  5768  6015  3472               	retlw	114
  5769  6016  3467               	retlw	103
  5770  6017  3469               	retlw	105
  5771  6018  3461               	retlw	97
  5772  6019  3420               	retlw	32
  5773  601A  344F               	retlw	79
  5774  601B  3470               	retlw	112
  5775  601C  3428               	retlw	40
  5776  601D  3478               	retlw	120
  5777  601E  3400               	retlw	0
  5778  601F  3400               	retlw	0
  5779  6020  3400               	retlw	0
  5780  6021  3400               	retlw	0
  5781  6022  3400               	retlw	0
  5782  6023  3445               	retlw	69
  5783  6024  346E               	retlw	110
  5784  6025  3465               	retlw	101
  5785  6026  3472               	retlw	114
  5786  6027  3467               	retlw	103
  5787  6028  3479               	retlw	121
  5788  6029  3420               	retlw	32
  5789  602A  344F               	retlw	79
  5790  602B  3470               	retlw	112
  5791  602C  342E               	retlw	46
  5792  602D  3428               	retlw	40
  5793  602E  3478               	retlw	120
  5794  602F  3400               	retlw	0
  5795  6030  3400               	retlw	0
  5796  6031  3400               	retlw	0
  5797  6032  3400               	retlw	0
  5798  6033  3400               	retlw	0
  5799  6034                     __end_of_joule_str:	
  5800                           
  5801                           	psect	stringtext67
  5802  6034                     __pstringtext67:	
  5803  6034                     _solda_str:	
  5804  6034  3454               	retlw	84
  5805  6035  342E               	retlw	46
  5806  6036  344F               	retlw	79
  5807  6037  3470               	retlw	112
  5808  6038  3465               	retlw	101
  5809  6039  3472               	retlw	114
  5810  603A  3461               	retlw	97
  5811  603B  3463               	retlw	99
  5812  603C  3461               	retlw	97
  5813  603D  346F               	retlw	111
  5814  603E  3428               	retlw	40
  5815  603F  3478               	retlw	120
  5816  6040  3400               	retlw	0
  5817  6041  3400               	retlw	0
  5818  6042  3400               	retlw	0
  5819  6043  3400               	retlw	0
  5820  6044  3400               	retlw	0
  5821  6045  3457               	retlw	87
  5822  6046  3465               	retlw	101
  5823  6047  346C               	retlw	108
  5824  6048  3464               	retlw	100
  5825  6049  3420               	retlw	32
  5826  604A  3454               	retlw	84
  5827  604B  3469               	retlw	105
  5828  604C  346D               	retlw	109
  5829  604D  3465               	retlw	101
  5830  604E  3420               	retlw	32
  5831  604F  3428               	retlw	40
  5832  6050  3478               	retlw	120
  5833  6051  3400               	retlw	0
  5834  6052  3400               	retlw	0
  5835  6053  3400               	retlw	0
  5836  6054  3400               	retlw	0
  5837  6055  3400               	retlw	0
  5838  6056                     __end_of_solda_str:	
  5839                           
  5840                           	psect	stringtext68
  5841  6056                     __pstringtext68:	
  5842  6056                     _descida_str:	
  5843  6056  3454               	retlw	84
  5844  6057  342E               	retlw	46
  5845  6058  3444               	retlw	68
  5846  6059  3465               	retlw	101
  5847  605A  3473               	retlw	115
  5848  605B  3463               	retlw	99
  5849  605C  3469               	retlw	105
  5850  605D  3464               	retlw	100
  5851  605E  3461               	retlw	97
  5852  605F  3420               	retlw	32
  5853  6060  3428               	retlw	40
  5854  6061  3478               	retlw	120
  5855  6062  3400               	retlw	0
  5856  6063  3400               	retlw	0
  5857  6064  3400               	retlw	0
  5858  6065  3400               	retlw	0
  5859  6066  3400               	retlw	0
  5860  6067  3444               	retlw	68
  5861  6068  346F               	retlw	111
  5862  6069  3477               	retlw	119
  5863  606A  346E               	retlw	110
  5864  606B  3420               	retlw	32
  5865  606C  3454               	retlw	84
  5866  606D  3469               	retlw	105
  5867  606E  346D               	retlw	109
  5868  606F  3465               	retlw	101
  5869  6070  3420               	retlw	32
  5870  6071  3428               	retlw	40
  5871  6072  3478               	retlw	120
  5872  6073  3400               	retlw	0
  5873  6074  3400               	retlw	0
  5874  6075  3400               	retlw	0
  5875  6076  3400               	retlw	0
  5876  6077  3400               	retlw	0
  5877  6078                     __end_of_descida_str:	
  5878                           
  5879                           	psect	stringtext69
  5880  6078                     __pstringtext69:	
  5881  6078                     _n_pecas_str:	
  5882  6078  344F               	retlw	79
  5883  6079  3470               	retlw	112
  5884  607A  3465               	retlw	101
  5885  607B  3472               	retlw	114
  5886  607C  3461               	retlw	97
  5887  607D  3463               	retlw	99
  5888  607E  346F               	retlw	111
  5889  607F  3465               	retlw	101
  5890  6080  3473               	retlw	115
  5891  6081  343A               	retlw	58
  5892  6082  3420               	retlw	32
  5893  6083  3400               	retlw	0
  5894  6084  3400               	retlw	0
  5895  6085  3400               	retlw	0
  5896  6086  3400               	retlw	0
  5897  6087  3400               	retlw	0
  5898  6088  3400               	retlw	0
  5899  6089  3443               	retlw	67
  5900  608A  3479               	retlw	121
  5901  608B  3463               	retlw	99
  5902  608C  346C               	retlw	108
  5903  608D  3465               	retlw	101
  5904  608E  3473               	retlw	115
  5905  608F  343A               	retlw	58
  5906  6090  3420               	retlw	32
  5907  6091  3400               	retlw	0
  5908  6092  3400               	retlw	0
  5909  6093  3400               	retlw	0
  5910  6094  3400               	retlw	0
  5911  6095  3400               	retlw	0
  5912  6096  3400               	retlw	0
  5913  6097  3400               	retlw	0
  5914  6098  3400               	retlw	0
  5915  6099  3400               	retlw	0
  5916  609A                     __end_of_n_pecas_str:	
  5917                           
  5918                           	psect	stringtext70
  5919  609A                     __pstringtext70:	
  5920  609A                     exp@coeff:	
  5921  609A  3400               	retlw	0
  5922  609B  3480               	retlw	128
  5923  609C  343F               	retlw	63
  5924  609D  3472               	retlw	114
  5925  609E  3431               	retlw	49
  5926  609F  343F               	retlw	63
  5927  60A0  34FE               	retlw	254
  5928  60A1  3475               	retlw	117
  5929  60A2  343E               	retlw	62
  5930  60A3  3458               	retlw	88
  5931  60A4  3463               	retlw	99
  5932  60A5  343D               	retlw	61
  5933  60A6  3495               	retlw	149
  5934  60A7  341D               	retlw	29
  5935  60A8  343C               	retlw	60
  5936  60A9  34C5               	retlw	197
  5937  60AA  34AE               	retlw	174
  5938  60AB  343A               	retlw	58
  5939  60AC  3479               	retlw	121
  5940  60AD  3421               	retlw	33
  5941  60AE  3439               	retlw	57
  5942  60AF  3494               	retlw	148
  5943  60B0  3480               	retlw	128
  5944  60B1  3437               	retlw	55
  5945  60B2  3493               	retlw	147
  5946  60B3  34A7               	retlw	167
  5947  60B4  3435               	retlw	53
  5948  60B5  3456               	retlw	86
  5949  60B6  3415               	retlw	21
  5950  60B7  3434               	retlw	52
  5951  60B8                     __end_ofexp@coeff:	
  5952                           
  5953                           	psect	stringtext71
  5954  60B8                     __pstringtext71:	
  5955  60B8                     log@coeff:	
  5956  60B8  3400               	retlw	0
  5957  60B9  3400               	retlw	0
  5958  60BA  3400               	retlw	0
  5959  60BB  3400               	retlw	0
  5960  60BC  3480               	retlw	128
  5961  60BD  343F               	retlw	63
  5962  60BE  34F0               	retlw	240
  5963  60BF  34FF               	retlw	255
  5964  60C0  34BE               	retlw	190
  5965  60C1  34E2               	retlw	226
  5966  60C2  34A9               	retlw	169
  5967  60C3  343E               	retlw	62
  5968  60C4  3483               	retlw	131
  5969  60C5  3476               	retlw	118
  5970  60C6  34BE               	retlw	190
  5971  60C7  34AE               	retlw	174
  5972  60C8  342B               	retlw	43
  5973  60C9  343E               	retlw	62
  5974  60CA  343C               	retlw	60
  5975  60CB  34C3               	retlw	195
  5976  60CC  34BD               	retlw	189
  5977  60CD  34D2               	retlw	210
  5978  60CE  3413               	retlw	19
  5979  60CF  343D               	retlw	61
  5980  60D0  3478               	retlw	120
  5981  60D1  34D3               	retlw	211
  5982  60D2  34BB               	retlw	187
  5983  60D3                     __end_oflog@coeff:	
  5984                           
  5985                           	psect	stringtext72
  5986  6800                     __pstringtext72:	
  5987  6800                     atan@coeff_a:	
  5988  6800  343C               	retlw	60
  5989  6801  3404               	retlw	4
  5990  6802  3442               	retlw	66
  5991  6803  349F               	retlw	159
  5992  6804  346A               	retlw	106
  5993  6805  3442               	retlw	66
  5994  6806  3490               	retlw	144
  5995  6807  3401               	retlw	1
  5996  6808  3442               	retlw	66
  5997  6809  344D               	retlw	77
  5998  680A  34BB               	retlw	187
  5999  680B  3440               	retlw	64
  6000  680C  34EC               	retlw	236
  6001  680D  3447               	retlw	71
  6002  680E  343E               	retlw	62
  6003  680F  348E               	retlw	142
  6004  6810  341F               	retlw	31
  6005  6811  34BB               	retlw	187
  6006  6812                     __end_ofatan@coeff_a:	
  6007                           
  6008                           	psect	stringtext73
  6009  6823                     __pstringtext73:	
  6010  6823                     sin@coeff_a:	
  6011  6823  34F4               	retlw	244
  6012  6824  344A               	retlw	74
  6013  6825  3448               	retlw	72
  6014  6826  3495               	retlw	149
  6015  6827  3495               	retlw	149
  6016  6828  34C7               	retlw	199
  6017  6829  34C1               	retlw	193
  6018  682A  34DC               	retlw	220
  6019  682B  3445               	retlw	69
  6020  682C  34DC               	retlw	220
  6021  682D  346D               	retlw	109
  6022  682E  34C3               	retlw	195
  6023  682F  34B3               	retlw	179
  6024  6830  3433               	retlw	51
  6025  6831  3440               	retlw	64
  6026  6832                     __end_ofsin@coeff_a:	
  6027                           
  6028                           	psect	stringtext74
  6029  6832                     __pstringtext74:	
  6030  6832                     atan@coeff_b:	
  6031  6832  343C               	retlw	60
  6032  6833  3404               	retlw	4
  6033  6834  3442               	retlw	66
  6034  6835  345A               	retlw	90
  6035  6836  348B               	retlw	139
  6036  6837  3442               	retlw	66
  6037  6838  3404               	retlw	4
  6038  6839  3444               	retlw	68
  6039  683A  3442               	retlw	66
  6040  683B  349C               	retlw	156
  6041  683C  344F               	retlw	79
  6042  683D  3441               	retlw	65
  6043  683E  3400               	retlw	0
  6044  683F  3480               	retlw	128
  6045  6840  343F               	retlw	63
  6046  6841                     __end_ofatan@coeff_b:	
  6047                           
  6048                           	psect	stringtext75
  6049  6850                     __pstringtext75:	
  6050  6850                     _Sonitron_str:	
  6051  6850  3420               	retlw	32
  6052  6851  3420               	retlw	32
  6053  6852  3453               	retlw	83
  6054  6853  344F               	retlw	79
  6055  6854  344E               	retlw	78
  6056  6855  3449               	retlw	73
  6057  6856  3454               	retlw	84
  6058  6857  3452               	retlw	82
  6059  6858  344F               	retlw	79
  6060  6859  344E               	retlw	78
  6061  685A  3420               	retlw	32
  6062  685B  344D               	retlw	77
  6063  685C  343A               	retlw	58
  6064  685D  3400               	retlw	0
  6065  685E                     __end_of_Sonitron_str:	
  6066                           
  6067                           	psect	stringtext76
  6068  686C                     __pstringtext76:	
  6069  686C                     _freq_ini_str:	
  6070  686C  3446               	retlw	70
  6071  686D  3472               	retlw	114
  6072  686E  3465               	retlw	101
  6073  686F  3471               	retlw	113
  6074  6870  3420               	retlw	32
  6075  6871  3449               	retlw	73
  6076  6872  346E               	retlw	110
  6077  6873  3469               	retlw	105
  6078  6874  343A               	retlw	58
  6079  6875  3420               	retlw	32
  6080  6876  3428               	retlw	40
  6081  6877  3478               	retlw	120
  6082  6878  3400               	retlw	0
  6083  6879                     __end_of_freq_ini_str:	
  6084                           
  6085                           	psect	stringtext77
  6086  6893                     __pstringtext77:	
  6087  6893                     sin@coeff_b:	
  6088  6893  3434               	retlw	52
  6089  6894  3401               	retlw	1
  6090  6895  3448               	retlw	72
  6091  6896  349D               	retlw	157
  6092  6897  34B0               	retlw	176
  6093  6898  3445               	retlw	69
  6094  6899  3400               	retlw	0
  6095  689A  34DA               	retlw	218
  6096  689B  3442               	retlw	66
  6097  689C  3400               	retlw	0
  6098  689D  3480               	retlw	128
  6099  689E  343F               	retlw	63
  6100  689F                     __end_ofsin@coeff_b:	
  6101                           
  6102                           	psect	stringtext78
  6103  68C7                     __pstringtext78:	
  6104  68C7                     _freq_str:	
  6105  68C7  3446               	retlw	70
  6106  68C8  3452               	retlw	82
  6107  68C9  3445               	retlw	69
  6108  68CA  3451               	retlw	81
  6109  68CB  3420               	retlw	32
  6110  68CC  343D               	retlw	61
  6111  68CD  3420               	retlw	32
  6112  68CE  3400               	retlw	0
  6113  68CF                     __end_of_freq_str:	
  6114                           
  6115                           	psect	stringtext79
  6116  60D3                     __pstringtext79:	
  6117  60D3                     _senha_padrao:	
  6118  60D3  3430               	retlw	48
  6119  60D4  3432               	retlw	50
  6120  60D5  3433               	retlw	51
  6121  60D6  3435               	retlw	53
  6122  60D7  3400               	retlw	0
  6123  60D8                     __end_of_senha_padrao:	
  6124  0003                     _STATUSbits	set	3
  6125  0012                     _TRISBbits	set	18
  6126  000F                     _PORTD	set	15
  6127  000B                     _INTCONbits	set	11
  6128  001A                     _LATEbits	set	26
  6129  000C                     _PORTA	set	12
  6130  0019                     _LATDbits	set	25
  6131  0014                     _TRISD	set	20
  6132  0013                     _TRISC	set	19
  6133  0012                     _TRISB	set	18
  6134  0011                     _TRISA	set	17
  6135  0015                     _TRISE	set	21
  6136  0018                     _LATC	set	24
  6137  0017                     _LATB	set	23
  6138  0016                     _LATA	set	22
  6139  0019                     _LATD	set	25
  6140  001A                     _LATE	set	26
  6141  0017                     _LATBbits	set	23
  6142  000F                     _PORTDbits	set	15
  6143  008C                     _ADRESL	set	140
  6144  008D                     _ADRESH	set	141
  6145  0093                     _ADCON0bits	set	147
  6146  0093                     _ADCON0	set	147
  6147  0098                     _ADCLK	set	152
  6148  0099                     _ADACT	set	153
  6149  009A                     _ADREF	set	154
  6150  0097                     _ADSTAT	set	151
  6151  0096                     _ADCON3	set	150
  6152  0095                     _ADCON2	set	149
  6153  0094                     _ADCON1	set	148
  6154  009B                     _ADCAP	set	155
  6155  009E                     _ADPCH	set	158
  6156  0119                     _RC1REG	set	281
  6157  011D                     _RC1STAbits	set	285
  6158  011A                     _TX1REG	set	282
  6159  011E                     _TX1STAbits	set	286
  6160  011C                     _SP1BRGH	set	284
  6161  011B                     _SP1BRGL	set	283
  6162  011E                     _TX1STA	set	286
  6163  011D                     _RC1STA	set	285
  6164  011F                     _BAUD1CON	set	287
  6165  010D                     _ADRPT	set	269
  6166  0113                     _ADSTPTH	set	275
  6167  0112                     _ADSTPTL	set	274
  6168  0111                     _ADUTHH	set	273
  6169  0110                     _ADUTHL	set	272
  6170  010F                     _ADLTHH	set	271
  6171  010E                     _ADLTHL	set	270
  6172  021A                     _T5CON	set	538
  6173  0218                     _TMR5L	set	536
  6174  0219                     _TMR5H	set	537
  6175  021D                     _T5CLK	set	541
  6176  021C                     _T5GATE	set	540
  6177  021B                     _T5GCON	set	539
  6178  020E                     _T1CONbits	set	526
  6179  020E                     _T1CON	set	526
  6180  020C                     _TMR1L	set	524
  6181  020D                     _TMR1H	set	525
  6182  0211                     _T1CLK	set	529
  6183  0210                     _T1GATE	set	528
  6184  020F                     _T1GCON	set	527
  6185  021E                     _CCPTMRS0bits	set	542
  6186  021A                     _T5CONbits	set	538
  6187  029A                     _T6CONbits	set	666
  6188  029A                     _T6CON	set	666
  6189  0298                     _T6TMR	set	664
  6190  0299                     _T6PR	set	665
  6191  029D                     _T6RST	set	669
  6192  029B                     _T6HLT	set	667
  6193  029C                     _T6CLKCON	set	668
  6194  0312                     _CCP2CONbits	set	786
  6195  0312                     _CCP2CON	set	786
  6196  0311                     _CCPR2H	set	785
  6197  0310                     _CCPR2L	set	784
  6198  048F                     _SMT1CPR	set	1167
  6199  0492                     _SMT1CPW	set	1170
  6200  0495                     _SMT1PR	set	1173
  6201  0499                     _SMT1CON1bits	set	1177
  6202  0495                     _SMT1PRL	set	1173
  6203  0496                     _SMT1PRH	set	1174
  6204  0497                     _SMT1PRU	set	1175
  6205  049C                     _SMT1SIG	set	1180
  6206  049D                     _SMT1WIN	set	1181
  6207  049B                     _SMT1CLK	set	1179
  6208  049A                     _SMT1STAT	set	1178
  6209  0499                     _SMT1CON1	set	1177
  6210  0498                     _SMT1CON0	set	1176
  6211  050F                     _SMT2CPR	set	1295
  6212  0512                     _SMT2CPW	set	1298
  6213  0515                     _SMT2PR	set	1301
  6214  0519                     _SMT2CON1bits	set	1305
  6215  0515                     _SMT2PRL	set	1301
  6216  0516                     _SMT2PRH	set	1302
  6217  0517                     _SMT2PRU	set	1303
  6218  051C                     _SMT2SIG	set	1308
  6219  051D                     _SMT2WIN	set	1309
  6220  051B                     _SMT2CLK	set	1307
  6221  051A                     _SMT2STAT	set	1306
  6222  0519                     _SMT2CON1	set	1305
  6223  0518                     _SMT2CON0	set	1304
  6224  0714                     _PIR8bits	set	1812
  6225  0716                     _PIE0bits	set	1814
  6226  070F                     _PIR3bits	set	1807
  6227  0719                     _PIE3bits	set	1817
  6228  0710                     _PIR4bits	set	1808
  6229  071A                     _PIE4bits	set	1818
  6230  079B                     _PMD5	set	1947
  6231  079A                     _PMD4	set	1946
  6232  0799                     _PMD3	set	1945
  6233  0798                     _PMD2	set	1944
  6234  0797                     _PMD1	set	1943
  6235  0796                     _PMD0	set	1942
  6236  081F                     _NVMCON2	set	2079
  6237  081D                     _NVMDATH	set	2077
  6238  081C                     _NVMDATL	set	2076
  6239  081B                     _NVMADRH	set	2075
  6240  081A                     _NVMADRL	set	2074
  6241  081E                     _NVMCON1bits	set	2078
  6242  40F1                     _WR	set	16625
  6243  0892                     _OSCTUNE	set	2194
  6244  0893                     _OSCFRQ	set	2195
  6245  0891                     _OSCEN	set	2193
  6246  088F                     _OSCCON3	set	2191
  6247  088D                     _OSCCON1	set	2189
  6248  090C                     _FVRCONbits	set	2316
  6249  1E10                     _CLC1CON	set	7696
  6250  1E19                     _CLC1GLS3	set	7705
  6251  1E18                     _CLC1GLS2	set	7704
  6252  1E17                     _CLC1GLS1	set	7703
  6253  1E16                     _CLC1GLS0	set	7702
  6254  1E15                     _CLC1SEL3	set	7701
  6255  1E14                     _CLC1SEL2	set	7700
  6256  1E13                     _CLC1SEL1	set	7699
  6257  1E12                     _CLC1SEL0	set	7698
  6258  1E11                     _CLC1POL	set	7697
  6259  1EBB                     _CLCIN0PPSbits	set	7867
  6260  1EAB                     _SMT2WINPPSbits	set	7851
  6261  1EAC                     _SMT2SIGPPSbits	set	7852
  6262  1EA9                     _SMT1WINPPSbits	set	7849
  6263  1EAA                     _SMT1SIGPPSbits	set	7850
  6264  1EA1                     _CCP1PPSbits	set	7841
  6265  1ECB                     _RXPPSbits	set	7883
  6266  1F26                     _RC6PPS	set	7974
  6267  1F21                     _RC1PPS	set	7969
  6268  1F3D                     _IOCAPbits	set	7997
  6269  1F3E                     _IOCANbits	set	7998
  6270  1F3F                     _IOCAFbits	set	7999
  6271  1F5B                     _ODCOND	set	8027
  6272  1F50                     _ODCONC	set	8016
  6273  1F45                     _ODCONB	set	8005
  6274  1F3A                     _ODCONA	set	7994
  6275  1F66                     _ODCONE	set	8038
  6276  1F4F                     _WPUC	set	8015
  6277  1F39                     _WPUA	set	7993
  6278  1F44                     _WPUB	set	8004
  6279  1F65                     _WPUE	set	8037
  6280  1F5A                     _WPUD	set	8026
  6281  1F38                     _ANSELA	set	7992
  6282  1F64                     _ANSELE	set	8036
  6283  1F43                     _ANSELB	set	8003
  6284  1F4E                     _ANSELC	set	8014
  6285  1F59                     _ANSELD	set	8025
  6286  60D8                     STR_33:	
  6287  60D8  3446               	retlw	70	;'F'
  6288  60D9  3469               	retlw	105	;'i'
  6289  60DA  346D               	retlw	109	;'m'
  6290  60DB  3420               	retlw	32	;' '
  6291  60DC  3464               	retlw	100	;'d'
  6292  60DD  3461               	retlw	97	;'a'
  6293  60DE  3420               	retlw	32	;' '
  6294  60DF  3463               	retlw	99	;'c'
  6295  60E0  346F               	retlw	111	;'o'
  6296  60E1  346E               	retlw	110	;'n'
  6297  60E2  3474               	retlw	116	;'t'
  6298  60E3  3461               	retlw	97	;'a'
  6299  60E4  3467               	retlw	103	;'g'
  6300  60E5  3465               	retlw	101	;'e'
  6301  60E6  346D               	retlw	109	;'m'
  6302  60E7  3400               	retlw	0
  6303                           
  6304                           	psect	stringtext80
  6305  6841                     __pstringtext80:	
  6306  6841                     STR_32:	
  6307  6841  3445               	retlw	69	;'E'
  6308  6842  3472               	retlw	114	;'r'
  6309  6843  3472               	retlw	114	;'r'
  6310  6844  346F               	retlw	111	;'o'
  6311  6845  3420               	retlw	32	;' '
  6312  6846  3461               	retlw	97	;'a'
  6313  6847  346F               	retlw	111	;'o'
  6314  6848  3420               	retlw	32	;' '
  6315  6849  3443               	retlw	67	;'C'
  6316  684A  3469               	retlw	105	;'i'
  6317  684B  3463               	retlw	99	;'c'
  6318  684C  346C               	retlw	108	;'l'
  6319  684D  3461               	retlw	97	;'a'
  6320  684E  3472               	retlw	114	;'r'
  6321  684F  3400               	retlw	0
  6322                           
  6323                           	psect	stringtext81
  6324  685E                     __pstringtext81:	
  6325  685E                     STR_30:	
  6326  685E  344D               	retlw	77	;'M'
  6327  685F  344F               	retlw	79	;'O'
  6328  6860  3444               	retlw	68	;'D'
  6329  6861  344F               	retlw	79	;'O'
  6330  6862  3420               	retlw	32	;' '
  6331  6863  3443               	retlw	67	;'C'
  6332  6864  3449               	retlw	73	;'I'
  6333  6865  3443               	retlw	67	;'C'
  6334  6866  344C               	retlw	76	;'L'
  6335  6867  3441               	retlw	65	;'A'
  6336  6868  3444               	retlw	68	;'D'
  6337  6869  344F               	retlw	79	;'O'
  6338  686A  3452               	retlw	82	;'R'
  6339  686B  3400               	retlw	0
  6340                           
  6341                           	psect	stringtext82
  6342  6879                     __pstringtext82:	
  6343  6879                     STR_42:	
  6344  6879  3454               	retlw	84	;'T'
  6345  687A  3465               	retlw	101	;'e'
  6346  687B  3473               	retlw	115	;'s'
  6347  687C  3474               	retlw	116	;'t'
  6348  687D  3465               	retlw	101	;'e'
  6349  687E  3420               	retlw	32	;' '
  6350  687F  3450               	retlw	80	;'P'
  6351  6880  346E               	retlw	110	;'n'
  6352  6881  3465               	retlw	101	;'e'
  6353  6882  3475               	retlw	117	;'u'
  6354  6883  346D               	retlw	109	;'m'
  6355  6884  3421               	retlw	33	;'!'
  6356  6885  3400               	retlw	0
  6357                           
  6358                           	psect	stringtext83
  6359  6886                     __pstringtext83:	
  6360  6886                     STR_36:	
  6361  6886  3449               	retlw	73	;'I'
  6362  6887  346E               	retlw	110	;'n'
  6363  6888  3474               	retlw	116	;'t'
  6364  6889  3465               	retlw	101	;'e'
  6365  688A  3472               	retlw	114	;'r'
  6366  688B  3472               	retlw	114	;'r'
  6367  688C  346F               	retlw	111	;'o'
  6368  688D  346D               	retlw	109	;'m'
  6369  688E  3470               	retlw	112	;'p'
  6370  688F  3469               	retlw	105	;'i'
  6371  6890  3464               	retlw	100	;'d'
  6372  6891  346F               	retlw	111	;'o'
  6373  6892  3400               	retlw	0
  6374                           
  6375                           	psect	stringtext84
  6376  689F                     __pstringtext84:	
  6377  689F                     STR_29:	
  6378  689F  3456               	retlw	86	;'V'
  6379  68A0  3465               	retlw	101	;'e'
  6380  68A1  3472               	retlw	114	;'r'
  6381  68A2  342E               	retlw	46	;'.'
  6382  68A3  3420               	retlw	32	;' '
  6383  68A4  3434               	retlw	52	;'4'
  6384  68A5  342E               	retlw	46	;'.'
  6385  68A6  3432               	retlw	50	;'2'
  6386  68A7  342E               	retlw	46	;'.'
  6387  68A8  3439               	retlw	57	;'9'
  6388  68A9  3435               	retlw	53	;'5'
  6389  68AA  3400               	retlw	0
  6390                           
  6391                           	psect	stringtext85
  6392  68B5                     __pstringtext85:	
  6393  68B5                     STR_2:	
  6394  68B5  3445               	retlw	69	;'E'
  6395  68B6  3432               	retlw	50	;'2'
  6396  68B7  3435               	retlw	53	;'5'
  6397  68B8  3420               	retlw	32	;' '
  6398  68B9  3433               	retlw	51	;'3'
  6399  68BA  3438               	retlw	56	;'8'
  6400  68BB  3430               	retlw	48	;'0'
  6401  68BC  3434               	retlw	52	;'4'
  6402  68BD  3400               	retlw	0
  6403                           
  6404                           	psect	stringtext86
  6405  68BE                     __pstringtext86:	
  6406  68BE                     STR_1:	
  6407  68BE  3453               	retlw	83	;'S'
  6408  68BF  344F               	retlw	79	;'O'
  6409  68C0  344E               	retlw	78	;'N'
  6410  68C1  3449               	retlw	73	;'I'
  6411  68C2  3454               	retlw	84	;'T'
  6412  68C3  3452               	retlw	82	;'R'
  6413  68C4  344F               	retlw	79	;'O'
  6414  68C5  344E               	retlw	78	;'N'
  6415  68C6  3400               	retlw	0
  6416                           
  6417                           	psect	stringtext87
  6418  68CF                     __pstringtext87:	
  6419  68CF                     STR_34:	
  6420  68CF  3443               	retlw	67	;'C'
  6421  68D0  3449               	retlw	73	;'I'
  6422  68D1  3443               	retlw	67	;'C'
  6423  68D2  344C               	retlw	76	;'L'
  6424  68D3  344F               	retlw	79	;'O'
  6425  68D4  3453               	retlw	83	;'S'
  6426  68D5  343A               	retlw	58	;':'
  6427  68D6  3400               	retlw	0
  6428                           
  6429                           	psect	stringtext88
  6430  68D7                     __pstringtext88:	
  6431  68D7                     STR_43:	
  6432  68D7  3443               	retlw	67	;'C'
  6433  68D8  3469               	retlw	105	;'i'
  6434  68D9  3463               	retlw	99	;'c'
  6435  68DA  346C               	retlw	108	;'l'
  6436  68DB  346F               	retlw	111	;'o'
  6437  68DC  3473               	retlw	115	;'s'
  6438  68DD  343A               	retlw	58	;':'
  6439  68DE  3400               	retlw	0
  6440                           
  6441                           	psect	stringtext89
  6442  68DF                     __pstringtext89:	
  6443  68DF                     STR_49:	
  6444  68DF  3420               	retlw	32	;' '
  6445  68E0  3448               	retlw	72	;'H'
  6446  68E1  347A               	retlw	122	;'z'
  6447  68E2  3420               	retlw	32	;' '
  6448  68E3  3420               	retlw	32	;' '
  6449  68E4  3420               	retlw	32	;' '
  6450  68E5  3400               	retlw	0
  6451                           
  6452                           	psect	stringtext90
  6453  68E6                     __pstringtext90:	
  6454  68E6                     STR_45:	
  6455  68E6  3474               	retlw	116	;'t'
  6456  68E7  3469               	retlw	105	;'i'
  6457  68E8  346D               	retlw	109	;'m'
  6458  68E9  3465               	retlw	101	;'e'
  6459  68EA  343A               	retlw	58	;':'
  6460  68EB  3400               	retlw	0
  6461                           
  6462                           	psect	stringtext91
  6463  68EC                     __pstringtext91:	
  6464  68EC                     STR_50:	
  6465  68EC  342D               	retlw	45	;'-'
  6466  68ED  3425               	retlw	37	;'%'
  6467  68EE  3469               	retlw	105	;'i'
  6468  68EF  343A               	retlw	58	;':'
  6469  68F0  3400               	retlw	0
  6470                           
  6471                           	psect	stringtext92
  6472  68F1                     __pstringtext92:	
  6473  68F1                     STR_35:	
  6474  68F1  3420               	retlw	32	;' '
  6475  68F2  3420               	retlw	32	;' '
  6476  68F3  3420               	retlw	32	;' '
  6477  68F4  3420               	retlw	32	;' '
  6478  68F5  3400               	retlw	0
  6479                           
  6480                           	psect	stringtext93
  6481  68F6                     __pstringtext93:	
  6482  68F6                     STR_18:	
  6483  68F6  3478               	retlw	120	;'x'
  6484  68F7  3431               	retlw	49	;'1'
  6485  68F8  3430               	retlw	48	;'0'
  6486  68F9  3429               	retlw	41	;')'
  6487  68FA  3400               	retlw	0
  6488                           
  6489                           	psect	stringtext94
  6490  68FB                     __pstringtext94:	
  6491  68FB                     STR_7:	
  6492  68FB  3473               	retlw	115	;'s'
  6493  68FC  3420               	retlw	32	;' '
  6494  68FD  3420               	retlw	32	;' '
  6495  68FE  3400               	retlw	0
  6496                           
  6497                           	psect	stringtext95
  6498  68FF                     __pstringtext95:	
  6499  68FF                     STR_10:	
  6500  68FF  344F               	retlw	79	;'O'
  6501  6900  3450               	retlw	80	;'P'
  6502  6901  343A               	retlw	58	;':'
  6503  6902  3400               	retlw	0
  6504                           
  6505                           	psect	stringtext96
  6506  6903                     __pstringtext96:	
  6507  6903                     STR_5:	
  6508  6903  3420               	retlw	32	;' '
  6509  6904  346B               	retlw	107	;'k'
  6510  6905  344A               	retlw	74	;'J'
  6511  6906  3400               	retlw	0
  6512                           
  6513                           	psect	stringtext97
  6514  6907                     __pstringtext97:	
  6515  6907                     STR_9:	
  6516  6907  3420               	retlw	32	;' '
  6517  6908  346D               	retlw	109	;'m'
  6518  6909  3473               	retlw	115	;'s'
  6519  690A  3400               	retlw	0
  6520                           
  6521                           	psect	stringtext98
  6522  690B                     __pstringtext98:	
  6523  690B                     STR_21:	
  6524  690B  3420               	retlw	32	;' '
  6525  690C  3448               	retlw	72	;'H'
  6526  690D  347A               	retlw	122	;'z'
  6527  690E  3400               	retlw	0
  6528                           
  6529                           	psect	stringtext99
  6530  6912                     __pstringtext99:	
  6531  6912                     STR_11:	
  6532  6912  3454               	retlw	84	;'T'
  6533  6913  343A               	retlw	58	;':'
  6534  6914  3400               	retlw	0
  6535                           
  6536                           	psect	stringtext100
  6537  6915                     __pstringtext100:	
  6538  6915                     STR_8:	
  6539  6915  3420               	retlw	32	;' '
  6540  6916  344A               	retlw	74	;'J'
  6541  6917  3400               	retlw	0
  6542                           
  6543                           	psect	stringtext101
  6544  6918                     __pstringtext101:	
  6545  6918                     STR_3:	
  6546  6918  3400               	retlw	0
  6547  6919  3400               	retlw	0
  6548                           
  6549                           	psect	stringtext102
  6550  691A                     __pstringtext102:	
  6551  691A                     STR_6:	
  6552  691A  342E               	retlw	46	;'.'
  6553  691B  3400               	retlw	0
  6554                           
  6555                           	psect	stringtext103
  6556  0000                     __pstringtext103:	
  6557  6918                     
  6558                           ; #config settings
  6559  0000                     
  6560                           	psect	cinit
  6561  00E5                     start_initialization:	
  6562  00E5                     __initialization:		;BIGRAM
  6563                           
  6564                           ; Initialize objects allocated to BANK0
  6565  00E5  3198  2000  3180   	fcall	__pidataBANK0	;fetch initializer
  6566  00E8  00E4               	movwf	__pdataBANK0& (0+127)
  6567                           
  6568                           ; Initialize objects allocated to BANK3
  6569  00E9  0143               	movlb	3	; select bank3
  6570  00EA  3180  2002  3180   	fcall	__pidataBANK3	;fetch initializer
  6571  00ED  00E6               	movwf	__pdataBANK3& (0+127)
  6572  00EE  3180  2003  3180   	fcall	__pidataBANK3+1	;fetch initializer
  6573  00F1  00E7               	movwf	(__pdataBANK3+1)& (0+127)
  6574                           
  6575                           ; Initialize objects allocated to BANK5
  6576  00F2  30FB               	movlw	low __pidataBANK5
  6577  00F3  0084               	movwf	4
  6578  00F4  3087               	movlw	(high __pidataBANK5)| (0+128)
  6579  00F5  0085               	movwf	5
  6580  00F6  0145               	movlb	5	; select bank5
  6581  00F7  0012               	moviw fsr0++
  6582  00F8  00E1               	movwf	__pdataBANK5& (0+127)
  6583  00F9  0012               	moviw fsr0++
  6584  00FA  00E2               	movwf	(__pdataBANK5+1)& (0+127)
  6585  00FB  0012               	moviw fsr0++
  6586  00FC  00E3               	movwf	(__pdataBANK5+2)& (0+127)
  6587  00FD  0012               	moviw fsr0++
  6588  00FE  00E4               	movwf	(__pdataBANK5+3)& (0+127)
  6589  00FF  0012               	moviw fsr0++
  6590  0100  00E5               	movwf	(__pdataBANK5+4)& (0+127)
  6591                           
  6592                           ; Clear objects allocated to BIGRAM
  6593  0101  3028               	movlw	low (0+12072)
  6594  0102  0084               	movwf	4
  6595  0103  302F               	movlw	high (0+12072)
  6596  0104  0085               	movwf	5
  6597  0105  30C8               	movlw	200
  6598  0106  00FE               	movwf	btemp
  6599  0107  3000               	movlw	0
  6600  0108  00FF               	movwf	btemp+1
  6601  0109  31E1  21AF  3180   	fcall	clear_ram0
  6602                           
  6603                           ; Clear objects allocated to BANK0
  6604  010C  305A               	movlw	low __pbssBANK0
  6605  010D  0084               	movwf	4
  6606  010E  3000               	movlw	high __pbssBANK0
  6607  010F  0085               	movwf	5
  6608  0110  300A               	movlw	10
  6609  0111  00FE               	movwf	btemp
  6610  0112  3000               	movlw	0
  6611  0113  00FF               	movwf	btemp+1
  6612  0114  31E1  21AF  3180   	fcall	clear_ram0
  6613                           
  6614                           ; Clear objects allocated to BANK3
  6615  0117  30A0               	movlw	low __pbssBANK3
  6616  0118  0084               	movwf	4
  6617  0119  3001               	movlw	high __pbssBANK3
  6618  011A  0085               	movwf	5
  6619  011B  3046               	movlw	70
  6620  011C  00FE               	movwf	btemp
  6621  011D  3000               	movlw	0
  6622  011E  00FF               	movwf	btemp+1
  6623  011F  31E1  21AF  3180   	fcall	clear_ram0
  6624                           
  6625                           ; Clear objects allocated to BANK4
  6626  0122  3020               	movlw	low __pbssBANK4
  6627  0123  0084               	movwf	4
  6628  0124  3002               	movlw	high __pbssBANK4
  6629  0125  0085               	movwf	5
  6630  0126  3050               	movlw	80
  6631  0127  00FE               	movwf	btemp
  6632  0128  3000               	movlw	0
  6633  0129  00FF               	movwf	btemp+1
  6634  012A  31E1  21AF  3180   	fcall	clear_ram0
  6635                           
  6636                           ; Clear objects allocated to BANK5
  6637  012D  30A0               	movlw	low __pbssBANK5
  6638  012E  0084               	movwf	4
  6639  012F  3002               	movlw	high __pbssBANK5
  6640  0130  0085               	movwf	5
  6641  0131  3041               	movlw	65
  6642  0132  00FE               	movwf	btemp
  6643  0133  3000               	movlw	0
  6644  0134  00FF               	movwf	btemp+1
  6645  0135  31E1  21AF  3180   	fcall	clear_ram0
  6646                           
  6647                           ; Clear objects allocated to BANK6
  6648  0138  3020               	movlw	low __pbssBANK6
  6649  0139  0084               	movwf	4
  6650  013A  3003               	movlw	high __pbssBANK6
  6651  013B  0085               	movwf	5
  6652  013C  3048               	movlw	72
  6653  013D  00FE               	movwf	btemp
  6654  013E  3000               	movlw	0
  6655  013F  00FF               	movwf	btemp+1
  6656  0140  31E1  21AF  3180   	fcall	clear_ram0
  6657                           
  6658                           ; Clear objects allocated to BANK7
  6659  0143  30A0               	movlw	low __pbssBANK7
  6660  0144  0084               	movwf	4
  6661  0145  3003               	movlw	high __pbssBANK7
  6662  0146  0085               	movwf	5
  6663  0147  3020               	movlw	32
  6664  0148  00FE               	movwf	btemp
  6665  0149  3000               	movlw	0
  6666  014A  00FF               	movwf	btemp+1
  6667  014B  31E1  21AF         	fcall	clear_ram0
  6668  014D                     end_of_initialization:	
  6669                           ;End of C runtime variable initialization code
  6670                           
  6671  014D                     __end_of__initialization:	
  6672  014D  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6673  014E  0140               	movlb	0
  6674  014F  3190  28D2         	ljmp	_main	;jump to C main() function
  6675                           
  6676                           	psect	bssBANK0
  6677  005A                     __pbssBANK0:	
  6678  005A                     telas@temp:	
  6679  005A                     	ds	4
  6680  005E                     _t10ms:	
  6681  005E                     	ds	2
  6682  0060                     _bar:	
  6683  0060                     	ds	2
  6684  0062                     telas@ee_addr:	
  6685  0062                     	ds	1
  6686  0063                     _erro:	
  6687  0063                     	ds	1
  6688                           
  6689                           	psect	dataBANK0
  6690  0064                     __pdataBANK0:	
  6691  0064                     _pagina:	
  6692  0064                     	ds	1
  6693                           
  6694                           	psect	bssBANK3
  6695  01A0                     __pbssBANK3:	
  6696  01A0                     _n_pecas:	
  6697  01A0                     	ds	4
  6698  01A4                     _cont_pecas:	
  6699  01A4                     	ds	4
  6700  01A8                     _ee:	
  6701  01A8                     	ds	4
  6702  01AC                     _flag:	
  6703  01AC                     	ds	4
  6704  01B0                     _cfg:	
  6705  01B0                     	ds	4
  6706  01B4                     _freq_atual:	
  6707  01B4                     	ds	2
  6708  01B6                     _freq_inicial:	
  6709  01B6                     	ds	2
  6710  01B8                     _energia_total:	
  6711  01B8                     	ds	2
  6712  01BA                     _tmp_metal:	
  6713  01BA                     	ds	2
  6714  01BC                     _tmp_fixar:	
  6715  01BC                     	ds	2
  6716  01BE                     _ener_solda:	
  6717  01BE                     	ds	2
  6718  01C0                     _tmp_solda:	
  6719  01C0                     	ds	2
  6720  01C2                     _tmp_desce:	
  6721  01C2                     	ds	2
  6722  01C4                     _t10ms_global:	
  6723  01C4                     	ds	2
  6724  01C6                     _t1ms_solda:	
  6725  01C6                     	ds	2
  6726  01C8                     _t1ms_ISR:	
  6727  01C8                     	ds	2
  6728  01CA                     _PWM:	
  6729  01CA                     	ds	2
  6730  01CC                     _flag_in:	
  6731  01CC                     	ds	2
  6732  01CE                     _eusartRxCount:	
  6733  01CE                     	ds	1
  6734  01CF                     _eusartRxTail:	
  6735  01CF                     	ds	1
  6736  01D0                     _eusartRxHead:	
  6737  01D0                     	ds	1
  6738  01D1                     _eusartTxBufferRemaining:	
  6739  01D1                     	ds	1
  6740  01D2                     _eusartTxTail:	
  6741  01D2                     	ds	1
  6742  01D3                     _eusartTxHead:	
  6743  01D3                     	ds	1
  6744  01D4                     rotina_tela@bt:	
  6745  01D4                     	ds	1
  6746  01D5                     teclado@b:	
  6747  01D5                     	ds	1
  6748  01D6                     ver_entrada@temp:	
  6749  01D6                     	ds	1
  6750  01D7                     get_freq@i_arr:	
  6751  01D7                     	ds	1
  6752  01D8                     get_freq@i:	
  6753  01D8                     	ds	1
  6754  01D9                     INTERRUPT_InterruptManager@duty_mod_pot:	
  6755  01D9                     	ds	1
  6756  01DA                     _idioma:	
  6757  01DA                     	ds	1
  6758  01DB                     _statusSolda:	
  6759  01DB                     	ds	1
  6760  01DC                     _modo:	
  6761  01DC                     	ds	1
  6762  01DD                     _erro_sobrecarga:	
  6763  01DD                     	ds	1
  6764  01DE                     _duty_ini:	
  6765  01DE                     	ds	1
  6766  01DF                     _duty:	
  6767  01DF                     	ds	1
  6768  01E0                     _tipo_maquina:	
  6769  01E0                     	ds	1
  6770  01E1                     _ciclador:	
  6771  01E1                     	ds	1
  6772  01E2                     _troca_tela:	
  6773  01E2                     	ds	1
  6774  01E3                     _t_tela:	
  6775  01E3                     	ds	1
  6776  01E4                     _btt:	
  6777  01E4                     	ds	1
  6778  01E5                     _led:	
  6779  01E5                     	ds	1
  6780                           
  6781                           	psect	dataBANK3
  6782  01E6                     __pdataBANK3:	
  6783  01E6                     _tmp_soma:	
  6784  01E6                     	ds	2
  6785                           
  6786                           	psect	bssBANK4
  6787  0220                     __pbssBANK4:	
  6788  0220                     _num:	
  6789  0220                     	ds	4
  6790  0224                     _t1ms_solda_acum:	
  6791  0224                     	ds	4
  6792  0228                     _t100ms_solda_cont:	
  6793  0228                     	ds	4
  6794  022C                     _t100ms_solda:	
  6795  022C                     	ds	4
  6796  0230                     _n_pecas_l:	
  6797  0230                     	ds	4
  6798  0234                     _EUSART_RxDefaultInterruptHandler:	
  6799  0234                     	ds	2
  6800  0236                     _EUSART_TxDefaultInterruptHandler:	
  6801  0236                     	ds	2
  6802  0238                     _timer5ReloadVal:	
  6803  0238                     	ds	2
  6804  023A                     _timer1ReloadVal:	
  6805  023A                     	ds	2
  6806  023C                     _limite_17:	
  6807  023C                     	ds	2
  6808  023E                     _limite_22:	
  6809  023E                     	ds	2
  6810  0240                     _limite_16:	
  6811  0240                     	ds	2
  6812  0242                     _limite_24:	
  6813  0242                     	ds	2
  6814  0244                     _freq_gerador:	
  6815  0244                     	ds	2
  6816  0246                     _mod_pot:	
  6817  0246                     	ds	2
  6818  0248                     _ret_pot:	
  6819  0248                     	ds	2
  6820  024A                     _potencia:	
  6821  024A                     	ds	2
  6822  024C                     _energia_total_kJ:	
  6823  024C                     	ds	2
  6824  024E                     _pot_inst:	
  6825  024E                     	ds	2
  6826  0250                     _t5min:	
  6827  0250                     	ds	2
  6828  0252                     _tInatividade:	
  6829  0252                     	ds	2
  6830  0254                     _t1ms_OP:	
  6831  0254                     	ds	2
  6832  0256                     _t1msMM_ISR:	
  6833  0256                     	ds	2
  6834  0258                     _periodo1:	
  6835  0258                     	ds	2
  6836  025A                     _nextSolda:	
  6837  025A                     	ds	1
  6838  025B                     _erro_ovl:	
  6839  025B                     	ds	1
  6840  025C                     _str:	
  6841  025C                     	ds	20
  6842                           
  6843                           	psect	bssBANK5
  6844  02A0                     __pbssBANK5:	
  6845  02A0                     _byte_out:	
  6846  02A0                     	ds	8
  6847  02A8                     _byte_in:	
  6848  02A8                     	ds	8
  6849  02B0                     _out:	
  6850  02B0                     	ds	8
  6851  02B8                     _in:	
  6852  02B8                     	ds	8
  6853  02C0                     get_freq@pp:	
  6854  02C0                     	ds	4
  6855  02C4                     get_freq@p:	
  6856  02C4                     	ds	4
  6857  02C8                     _t1s:	
  6858  02C8                     	ds	4
  6859  02CC                     _k_temp:	
  6860  02CC                     	ds	3
  6861  02CF                     _errno:	
  6862  02CF                     	ds	2
  6863  02D1                     _periodo:	
  6864  02D1                     	ds	2
  6865  02D3                     _amostras:	
  6866  02D3                     	ds	2
  6867  02D5                     _periodo2:	
  6868  02D5                     	ds	2
  6869  02D7                     _senha_user:	
  6870  02D7                     	ds	5
  6871  02DC                     _senha_gerador:	
  6872  02DC                     	ds	5
  6873                           
  6874                           	psect	dataBANK5
  6875  02E1                     __pdataBANK5:	
  6876  02E1                     Autenticar@F15930:	
  6877  02E1                     	ds	5
  6878                           
  6879                           	psect	bssBANK6
  6880  0320                     __pbssBANK6:	
  6881  0320                     _eusartTxBuffer:	
  6882  0320                     	ds	32
  6883  0340                     _str2:	
  6884  0340                     	ds	20
  6885  0354                     _str1:	
  6886  0354                     	ds	20
  6887                           
  6888                           	psect	bssBANK7
  6889  03A0                     __pbssBANK7:	
  6890  03A0                     _eusartRxBuffer:	
  6891  03A0                     	ds	32
  6892                           
  6893                           	psect	clrtext
  6894  61AF                     clear_ram0:	
  6895                           ;	Called with FSR0 containing the base address, and
  6896                           ;	btemp/btemp+1 has the size to clear
  6897                           
  6898  61AF  0064               	clrwdt	;clear the watchdog before getting into this loop
  6899  61B0                     clrloop0:	
  6900  61B0  0180               	clrf	0	;clear RAM location pointed to by FSR
  6901  61B1  3101               	addfsr 0,1
  6902  61B2  3001               	movlw	1
  6903  61B3  02FE               	subwf	126,f
  6904  61B4  3000               	movlw	0
  6905  61B5  3BFF               	subwfb	127,f
  6906  61B6  087F               	movf	127,w
  6907  61B7  047E               	iorwf	126,w
  6908  61B8  1903               	btfsc	3,2
  6909  61B9  3400               	retlw	0	;all done for this memory range, return
  6910  61BA  29B0               	goto	clrloop0	;have we reached the end yet?
  6911                           
  6912                           	psect	cstackBANK8
  6913  0420                     __pcstackBANK8:	
  6914  0420                     ini_GERADOR@Pot_real:	
  6915                           
  6916                           ; 3 bytes @ 0x0
  6917  0420                     	ds	3
  6918  0423                     ini_GERADOR@ang:	
  6919                           
  6920                           ; 3 bytes @ 0x3
  6921  0423                     	ds	3
  6922  0426                     ini_GERADOR@IT_3Vref:	
  6923                           
  6924                           ; 3 bytes @ 0x6
  6925  0426                     	ds	3
  6926  0429                     _ini_GERADOR$4253:	
  6927                           
  6928                           ; 3 bytes @ 0x9
  6929  0429                     	ds	3
  6930  042C                     _ini_GERADOR$4254:	
  6931                           
  6932                           ; 3 bytes @ 0xC
  6933  042C                     	ds	3
  6934  042F                     _ini_GERADOR$4255:	
  6935                           
  6936                           ; 3 bytes @ 0xF
  6937  042F                     	ds	3
  6938  0432                     _ini_GERADOR$4256:	
  6939                           
  6940                           ; 3 bytes @ 0x12
  6941  0432                     	ds	3
  6942  0435                     _ini_GERADOR$4257:	
  6943                           
  6944                           ; 3 bytes @ 0x15
  6945  0435                     	ds	3
  6946  0438                     _ini_GERADOR$4258:	
  6947                           
  6948                           ; 3 bytes @ 0x18
  6949  0438                     	ds	3
  6950  043B                     _ini_GERADOR$4259:	
  6951                           
  6952                           ; 3 bytes @ 0x1B
  6953  043B                     	ds	3
  6954  043E                     _ini_GERADOR$4260:	
  6955                           
  6956                           ; 3 bytes @ 0x1E
  6957  043E                     	ds	3
  6958  0441                     ini_GERADOR@Xc1Xc2:	
  6959                           
  6960                           ; 3 bytes @ 0x21
  6961  0441                     	ds	3
  6962  0444                     ini_GERADOR@i:	
  6963                           
  6964                           ; 1 bytes @ 0x24
  6965  0444                     	ds	1
  6966  0445                     ini_GERADOR@i_2420:	
  6967                           
  6968                           ; 1 bytes @ 0x25
  6969  0445                     	ds	1
  6970  0446                     ini_GERADOR@Xc1:	
  6971                           
  6972                           ; 3 bytes @ 0x26
  6973  0446                     	ds	3
  6974  0449                     ini_GERADOR@Xc2:	
  6975                           
  6976                           ; 3 bytes @ 0x29
  6977  0449                     	ds	3
  6978  044C                     ini_GERADOR@Pot_3Vref:	
  6979                           
  6980                           ; 3 bytes @ 0x2C
  6981  044C                     	ds	3
  6982  044F                     _ini_GERADOR$4252:	
  6983                           
  6984                           ; 3 bytes @ 0x2F
  6985  044F                     	ds	3
  6986  0452                     ini_GERADOR@i_2421:	
  6987                           
  6988                           ; 1 bytes @ 0x32
  6989  0452                     	ds	1
  6990                           
  6991                           	psect	cstackBANK2
  6992  0120                     __pcstackBANK2:	
  6993  0120                     _ini_ee_tempos$4268:	
  6994  0120                     _pow$4272:	
  6995                           ; 3 bytes @ 0x0
  6996                           
  6997                           
  6998                           ; 3 bytes @ 0x0
  6999  0120                     	ds	3
  7000  0123                     _ini_ee_tempos$4269:	
  7001  0123                     _pow$4273:	
  7002                           ; 3 bytes @ 0x3
  7003                           
  7004                           
  7005                           ; 3 bytes @ 0x3
  7006  0123                     	ds	3
  7007  0126                     pow@sign:	
  7008  0126                     _ini_ee_tempos$4270:	
  7009                           ; 1 bytes @ 0x6
  7010                           
  7011                           
  7012                           ; 3 bytes @ 0x6
  7013  0126                     	ds	1
  7014  0127                     pow@yi:	
  7015                           
  7016                           ; 4 bytes @ 0x7
  7017  0127                     	ds	2
  7018  0129                     ini_ee_tempos@k_int:	
  7019                           
  7020                           ; 2 bytes @ 0x9
  7021  0129                     	ds	2
  7022  012B                     ini_ee_tempos@b2:	
  7023  012B                     sqrt@og:	
  7024                           ; 1 bytes @ 0xB
  7025                           
  7026                           
  7027                           ; 3 bytes @ 0xB
  7028  012B                     	ds	1
  7029  012C                     ini_ee_tempos@b1:	
  7030                           
  7031                           ; 1 bytes @ 0xC
  7032  012C                     	ds	1
  7033  012D                     ini_ee_tempos@K:	
  7034                           
  7035                           ; 3 bytes @ 0xD
  7036  012D                     	ds	1
  7037  012E                     sqrt@z:	
  7038                           
  7039                           ; 3 bytes @ 0xE
  7040  012E                     	ds	2
  7041  0130                     ini_ee_tempos@i:	
  7042                           
  7043                           ; 1 bytes @ 0x10
  7044  0130                     	ds	1
  7045  0131                     sqrt@i:	
  7046  0131                     ini_ee_tempos@_num:	
  7047                           ; 1 bytes @ 0x11
  7048                           
  7049                           
  7050                           ; 8 bytes @ 0x11
  7051  0131                     	ds	1
  7052  0132                     sqrt@q:	
  7053                           
  7054                           ; 3 bytes @ 0x12
  7055  0132                     	ds	3
  7056  0135                     sqrt@x:	
  7057                           
  7058                           ; 3 bytes @ 0x15
  7059  0135                     	ds	3
  7060  0138                     ?_ini_GERADOR:	
  7061  0138                     ini_GERADOR@f:	
  7062                           ; 1 bytes @ 0x18
  7063                           
  7064                           
  7065                           ; 2 bytes @ 0x18
  7066  0138                     	ds	2
  7067  013A                     ini_GERADOR@p:	
  7068                           
  7069                           ; 2 bytes @ 0x1A
  7070  013A                     	ds	2
  7071  013C                     ini_GERADOR@c:	
  7072                           
  7073                           ; 2 bytes @ 0x1C
  7074  013C                     	ds	2
  7075  013E                     ini_GERADOR@v:	
  7076                           
  7077                           ; 2 bytes @ 0x1E
  7078  013E                     	ds	2
  7079  0140                     ??_ini_GERADOR:	
  7080                           
  7081                           ; 1 bytes @ 0x20
  7082  0140                     	ds	4
  7083  0144                     ??_main:	
  7084                           
  7085                           ; 1 bytes @ 0x24
  7086  0144                     	ds	4
  7087  0148                     main@tipo:	
  7088                           
  7089                           ; 1 bytes @ 0x28
  7090  0148                     	ds	1
  7091  0149                     _main$4251:	
  7092                           
  7093                           ; 2 bytes @ 0x29
  7094  0149                     	ds	2
  7095  014B                     main@senha_OK:	
  7096                           
  7097                           ; 1 bytes @ 0x2B
  7098  014B                     	ds	1
  7099  014C                     main@i:	
  7100                           
  7101                           ; 1 bytes @ 0x2C
  7102  014C                     	ds	1
  7103  014D                     main@ii:	
  7104                           
  7105                           ; 1 bytes @ 0x2D
  7106  014D                     	ds	1
  7107  014E                     main@gerador:	
  7108                           
  7109                           ; 1 bytes @ 0x2E
  7110  014E                     	ds	1
  7111  014F                     main@bt:	
  7112                           
  7113                           ; 1 bytes @ 0x2F
  7114  014F                     	ds	1
  7115                           
  7116                           	psect	cstackBANK1
  7117  00A0                     __pcstackBANK1:	
  7118  00A0                     ??_trava_erro:	
  7119  00A0                     ??_escreve_tempos:	
  7120                           ; 1 bytes @ 0x0
  7121                           
  7122  00A0                     ?_eval_poly:	
  7123                           ; 1 bytes @ 0x0
  7124                           
  7125  00A0                     op_solda@subida_acionamento:	
  7126                           ; 3 bytes @ 0x0
  7127                           
  7128  00A0                     eval_poly@x:	
  7129                           ; 1 bytes @ 0x0
  7130                           
  7131  00A0                     _tela_ultima_solda$4263:	
  7132                           ; 3 bytes @ 0x0
  7133                           
  7134  00A0                     _totalCiclos$4265:	
  7135                           ; 4 bytes @ 0x0
  7136                           
  7137  00A0                     Autenticar@senha:	
  7138                           ; 4 bytes @ 0x0
  7139                           
  7140                           
  7141                           ; 5 bytes @ 0x0
  7142  00A0                     	ds	1
  7143  00A1                     op_solda@conta_erro:	
  7144                           
  7145                           ; 1 bytes @ 0x1
  7146  00A1                     	ds	2
  7147  00A3                     eval_poly@d:	
  7148                           
  7149                           ; 2 bytes @ 0x3
  7150  00A3                     	ds	1
  7151  00A4                     trava_erro@t:	
  7152  00A4                     _tela_ultima_solda$4264:	
  7153                           ; 2 bytes @ 0x4
  7154                           
  7155  00A4                     _totalCiclos$4266:	
  7156                           ; 4 bytes @ 0x4
  7157                           
  7158                           
  7159                           ; 4 bytes @ 0x4
  7160  00A4                     	ds	1
  7161  00A5                     Autenticar@bt_a:	
  7162  00A5                     eval_poly@n:	
  7163                           ; 1 bytes @ 0x5
  7164                           
  7165                           
  7166                           ; 2 bytes @ 0x5
  7167  00A5                     	ds	1
  7168  00A6                     trava_erro@bt:	
  7169  00A6                     Autenticar@coluna:	
  7170                           ; 1 bytes @ 0x6
  7171                           
  7172                           
  7173                           ; 1 bytes @ 0x6
  7174  00A6                     	ds	1
  7175  00A7                     ??_ciclarPneumatico:	
  7176  00A7                     eval_poly@res:	
  7177                           ; 1 bytes @ 0x7
  7178                           
  7179                           
  7180                           ; 3 bytes @ 0x7
  7181  00A7                     	ds	1
  7182  00A8                     ??_trata_dados:	
  7183  00A8                     ??_telas:	
  7184                           ; 1 bytes @ 0x8
  7185                           
  7186                           
  7187                           ; 1 bytes @ 0x8
  7188  00A8                     	ds	2
  7189  00AA                     ?_log:	
  7190  00AA                     ?_ldexp:	
  7191                           ; 3 bytes @ 0xA
  7192                           
  7193  00AA                     ?___ftdiv:	
  7194                           ; 3 bytes @ 0xA
  7195                           
  7196  00AA                     ___ftdiv@f2:	
  7197                           ; 3 bytes @ 0xA
  7198                           
  7199  00AA                     ldexp@value:	
  7200                           ; 3 bytes @ 0xA
  7201                           
  7202  00AA                     log@x:	
  7203                           ; 3 bytes @ 0xA
  7204                           
  7205                           
  7206                           ; 3 bytes @ 0xA
  7207  00AA                     	ds	1
  7208  00AB                     ciclarPneumatico@contarDescidas:	
  7209                           
  7210                           ; 2 bytes @ 0xB
  7211  00AB                     	ds	2
  7212  00AD                     ciclarPneumatico@contarTempo:	
  7213  00AD                     ldexp@newexp:	
  7214                           ; 2 bytes @ 0xD
  7215                           
  7216  00AD                     log@exponent:	
  7217                           ; 2 bytes @ 0xD
  7218                           
  7219  00AD                     ___ftdiv@f1:	
  7220                           ; 2 bytes @ 0xD
  7221                           
  7222                           
  7223                           ; 3 bytes @ 0xD
  7224  00AD                     	ds	1
  7225  00AE                     trata_dados@f:	
  7226                           
  7227                           ; 4 bytes @ 0xE
  7228  00AE                     	ds	2
  7229  00B0                     ??___ftdiv:	
  7230  00B0                     telas@b:	
  7231                           ; 1 bytes @ 0x10
  7232                           
  7233                           
  7234                           ; 1 bytes @ 0x10
  7235  00B0                     	ds	1
  7236  00B1                     _telas$4267:	
  7237                           
  7238                           ; 2 bytes @ 0x11
  7239  00B1                     	ds	1
  7240  00B2                     trata_dados@bt:	
  7241                           
  7242                           ; 1 bytes @ 0x12
  7243  00B2                     	ds	1
  7244  00B3                     ??_emergencia:	
  7245  00B3                     trata_dados@bt_2483:	
  7246                           ; 1 bytes @ 0x13
  7247                           
  7248                           
  7249                           ; 1 bytes @ 0x13
  7250  00B3                     	ds	1
  7251  00B4                     ___ftdiv@cntr:	
  7252  00B4                     _trata_dados$4262:	
  7253                           ; 1 bytes @ 0x14
  7254                           
  7255                           
  7256                           ; 2 bytes @ 0x14
  7257  00B4                     	ds	1
  7258  00B5                     ___ftdiv@f3:	
  7259                           
  7260                           ; 3 bytes @ 0x15
  7261  00B5                     	ds	1
  7262  00B6                     trata_dados@i:	
  7263                           
  7264                           ; 1 bytes @ 0x16
  7265  00B6                     	ds	1
  7266  00B7                     emergencia@bt:	
  7267  00B7                     ciclar@temp_n_pecas:	
  7268                           ; 1 bytes @ 0x17
  7269                           
  7270                           
  7271                           ; 4 bytes @ 0x17
  7272  00B7                     	ds	1
  7273  00B8                     ??_teste_pneumatico:	
  7274  00B8                     ??_teste_US:	
  7275                           ; 1 bytes @ 0x18
  7276                           
  7277  00B8                     ___ftdiv@exp:	
  7278                           ; 1 bytes @ 0x18
  7279                           
  7280                           
  7281                           ; 1 bytes @ 0x18
  7282  00B8                     	ds	1
  7283  00B9                     ___ftdiv@sign:	
  7284                           
  7285                           ; 1 bytes @ 0x19
  7286  00B9                     	ds	1
  7287  00BA                     ?_XC:	
  7288  00BA                     ?_get_temp:	
  7289                           ; 3 bytes @ 0x1A
  7290                           
  7291  00BA                     ?___fttol:	
  7292                           ; 3 bytes @ 0x1A
  7293                           
  7294  00BA                     XC@f:	
  7295                           ; 4 bytes @ 0x1A
  7296                           
  7297  00BA                     get_temp@K:	
  7298                           ; 2 bytes @ 0x1A
  7299                           
  7300  00BA                     ___fttol@f1:	
  7301                           ; 3 bytes @ 0x1A
  7302                           
  7303                           
  7304                           ; 3 bytes @ 0x1A
  7305  00BA                     	ds	1
  7306  00BB                     ciclar@bt:	
  7307                           
  7308                           ; 1 bytes @ 0x1B
  7309  00BB                     	ds	1
  7310  00BC                     teste_pneumatico@b:	
  7311  00BC                     teste_US@b:	
  7312                           ; 1 bytes @ 0x1C
  7313                           
  7314  00BC                     ciclar@temp:	
  7315                           ; 1 bytes @ 0x1C
  7316                           
  7317  00BC                     XC@nF:	
  7318                           ; 1 bytes @ 0x1C
  7319                           
  7320                           
  7321                           ; 2 bytes @ 0x1C
  7322  00BC                     	ds	1
  7323  00BD                     ??_get_temp:	
  7324  00BD                     teste_pneumatico@bt:	
  7325                           ; 1 bytes @ 0x1D
  7326                           
  7327  00BD                     teste_US@bt:	
  7328                           ; 1 bytes @ 0x1D
  7329                           
  7330  00BD                     ciclar@ciclos:	
  7331                           ; 1 bytes @ 0x1D
  7332                           
  7333                           
  7334                           ; 2 bytes @ 0x1D
  7335  00BD                     	ds	1
  7336  00BE                     ??___fttol:	
  7337  00BE                     teste_US@conta_erro:	
  7338                           ; 1 bytes @ 0x1E
  7339                           
  7340  00BE                     XC@freq_l:	
  7341                           ; 1 bytes @ 0x1E
  7342                           
  7343                           
  7344                           ; 3 bytes @ 0x1E
  7345  00BE                     	ds	1
  7346  00BF                     ciclar@etapa:	
  7347                           
  7348                           ; 1 bytes @ 0x1F
  7349  00BF                     	ds	2
  7350  00C1                     _XC$4261:	
  7351                           
  7352                           ; 3 bytes @ 0x21
  7353  00C1                     	ds	1
  7354  00C2                     ___fttol@sign1:	
  7355  00C2                     get_temp@adc_c:	
  7356                           ; 1 bytes @ 0x22
  7357                           
  7358                           
  7359                           ; 3 bytes @ 0x22
  7360  00C2                     	ds	1
  7361  00C3                     ___fttol@lval:	
  7362                           
  7363                           ; 4 bytes @ 0x23
  7364  00C3                     	ds	2
  7365  00C5                     get_temp@i:	
  7366                           
  7367                           ; 1 bytes @ 0x25
  7368  00C5                     	ds	1
  7369  00C6                     get_temp@adc:	
  7370                           
  7371                           ; 3 bytes @ 0x26
  7372  00C6                     	ds	1
  7373  00C7                     ___fttol@exp1:	
  7374                           
  7375                           ; 1 bytes @ 0x27
  7376  00C7                     	ds	1
  7377  00C8                     ?_trunc:	
  7378  00C8                     ?_floor:	
  7379                           ; 3 bytes @ 0x28
  7380                           
  7381  00C8                     trunc@x:	
  7382                           ; 3 bytes @ 0x28
  7383                           
  7384  00C8                     floor@x:	
  7385                           ; 3 bytes @ 0x28
  7386                           
  7387                           
  7388                           ; 3 bytes @ 0x28
  7389  00C8                     	ds	3
  7390  00CB                     trunc@i:	
  7391  00CB                     floor@i:	
  7392                           ; 3 bytes @ 0x2B
  7393                           
  7394                           
  7395                           ; 3 bytes @ 0x2B
  7396  00CB                     	ds	3
  7397  00CE                     trunc@expon:	
  7398  00CE                     floor@expon:	
  7399                           ; 2 bytes @ 0x2E
  7400                           
  7401                           
  7402                           ; 2 bytes @ 0x2E
  7403  00CE                     	ds	2
  7404  00D0                     ?___ftneg:	
  7405  00D0                     ?___ftsub:	
  7406                           ; 3 bytes @ 0x30
  7407                           
  7408  00D0                     ___ftneg@f1:	
  7409                           ; 3 bytes @ 0x30
  7410                           
  7411  00D0                     ___ftsub@f2:	
  7412                           ; 3 bytes @ 0x30
  7413                           
  7414                           
  7415                           ; 3 bytes @ 0x30
  7416  00D0                     	ds	3
  7417  00D3                     ?_ini_ee_tempos:	
  7418  00D3                     ?_round:	
  7419                           ; 1 bytes @ 0x33
  7420                           
  7421  00D3                     ?_fabs:	
  7422                           ; 3 bytes @ 0x33
  7423                           
  7424  00D3                     ini_ee_tempos@t:	
  7425                           ; 3 bytes @ 0x33
  7426                           
  7427  00D3                     fabs@d:	
  7428                           ; 3 bytes @ 0x33
  7429                           
  7430  00D3                     ___ftsub@f1:	
  7431                           ; 3 bytes @ 0x33
  7432                           
  7433  00D3                     round@x:	
  7434                           ; 3 bytes @ 0x33
  7435                           
  7436                           
  7437                           ; 3 bytes @ 0x33
  7438  00D3                     	ds	3
  7439  00D6                     ?_atan:	
  7440  00D6                     ?_sin:	
  7441                           ; 3 bytes @ 0x36
  7442                           
  7443  00D6                     ?_exp:	
  7444                           ; 3 bytes @ 0x36
  7445                           
  7446  00D6                     ini_ee_tempos@tipo:	
  7447                           ; 3 bytes @ 0x36
  7448                           
  7449  00D6                     atan@f:	
  7450                           ; 1 bytes @ 0x36
  7451                           
  7452  00D6                     round@f:	
  7453                           ; 3 bytes @ 0x36
  7454                           
  7455  00D6                     sin@f:	
  7456                           ; 3 bytes @ 0x36
  7457                           
  7458  00D6                     exp@x:	
  7459                           ; 3 bytes @ 0x36
  7460                           
  7461                           
  7462                           ; 3 bytes @ 0x36
  7463  00D6                     	ds	1
  7464  00D7                     ??_ini_ee_tempos:	
  7465                           
  7466                           ; 1 bytes @ 0x37
  7467  00D7                     	ds	2
  7468  00D9                     ??_exp:	
  7469  00D9                     atan@y:	
  7470                           ; 1 bytes @ 0x39
  7471                           
  7472  00D9                     sin@y:	
  7473                           ; 3 bytes @ 0x39
  7474                           
  7475                           
  7476                           ; 3 bytes @ 0x39
  7477  00D9                     	ds	1
  7478  00DA                     _exp$4275:	
  7479                           
  7480                           ; 3 bytes @ 0x3A
  7481  00DA                     	ds	2
  7482  00DC                     atan@x:	
  7483  00DC                     _sin$4274:	
  7484                           ; 3 bytes @ 0x3C
  7485                           
  7486                           
  7487                           ; 3 bytes @ 0x3C
  7488  00DC                     	ds	1
  7489  00DD                     exp@exponent:	
  7490                           
  7491                           ; 2 bytes @ 0x3D
  7492  00DD                     	ds	2
  7493  00DF                     atan@recip:	
  7494  00DF                     exp@sign:	
  7495                           ; 1 bytes @ 0x3F
  7496                           
  7497  00DF                     sin@x2:	
  7498                           ; 1 bytes @ 0x3F
  7499                           
  7500                           
  7501                           ; 3 bytes @ 0x3F
  7502  00DF                     	ds	1
  7503  00E0                     ?_pow:	
  7504  00E0                     atan@val_squared:	
  7505                           ; 3 bytes @ 0x40
  7506                           
  7507  00E0                     pow@x:	
  7508                           ; 3 bytes @ 0x40
  7509                           
  7510                           
  7511                           ; 3 bytes @ 0x40
  7512  00E0                     	ds	2
  7513  00E2                     sin@sgn:	
  7514                           
  7515                           ; 1 bytes @ 0x42
  7516  00E2                     	ds	1
  7517  00E3                     ?_cos:	
  7518  00E3                     atan@val:	
  7519                           ; 3 bytes @ 0x43
  7520                           
  7521  00E3                     cos@f:	
  7522                           ; 3 bytes @ 0x43
  7523                           
  7524  00E3                     pow@y:	
  7525                           ; 3 bytes @ 0x43
  7526                           
  7527                           
  7528                           ; 3 bytes @ 0x43
  7529  00E3                     	ds	3
  7530  00E6                     ??_pow:	
  7531  00E6                     _cos$4271:	
  7532                           ; 1 bytes @ 0x46
  7533                           
  7534                           
  7535                           ; 3 bytes @ 0x46
  7536  00E6                     	ds	1
  7537  00E7                     ?_sqrt:	
  7538  00E7                     sqrt@a:	
  7539                           ; 3 bytes @ 0x47
  7540                           
  7541                           
  7542                           ; 3 bytes @ 0x47
  7543  00E7                     	ds	3
  7544  00EA                     ??_sqrt:	
  7545                           
  7546                           ; 1 bytes @ 0x4A
  7547  00EA                     	ds	3
  7548                           
  7549                           	psect	cstackCOMMON
  7550  0070                     __pcstackCOMMON:	
  7551  0070                     ?_SYSTEM_Initialize:	
  7552  0070                     ?_config_IO_start:	
  7553                           ; 1 bytes @ 0x0
  7554                           
  7555  0070                     ?_config_maq_especial:	
  7556                           ; 1 bytes @ 0x0
  7557                           
  7558  0070                     ?_config_maq:	
  7559                           ; 1 bytes @ 0x0
  7560                           
  7561  0070                     ?_totalCiclos:	
  7562                           ; 1 bytes @ 0x0
  7563                           
  7564  0070                     ?_teste_leds:	
  7565                           ; 1 bytes @ 0x0
  7566                           
  7567  0070                     ?_Lcd_Clear:	
  7568                           ; 1 bytes @ 0x0
  7569                           
  7570  0070                     ?_get_duty:	
  7571                           ; 1 bytes @ 0x0
  7572                           
  7573  0070                     ?_rst_inversor:	
  7574                           ; 1 bytes @ 0x0
  7575                           
  7576  0070                     ?_ver_entrada:	
  7577                           ; 1 bytes @ 0x0
  7578                           
  7579  0070                     ?_ciclar:	
  7580                           ; 1 bytes @ 0x0
  7581                           
  7582  0070                     ?_ciclarPneumatico:	
  7583                           ; 1 bytes @ 0x0
  7584                           
  7585  0070                     ?_tela_inicial:	
  7586                           ; 1 bytes @ 0x0
  7587                           
  7588  0070                     ?_liberar:	
  7589                           ; 1 bytes @ 0x0
  7590                           
  7591  0070                     ?_emergencia:	
  7592                           ; 1 bytes @ 0x0
  7593                           
  7594  0070                     ?_trata_dados:	
  7595                           ; 1 bytes @ 0x0
  7596                           
  7597  0070                     ?_teclado:	
  7598                           ; 1 bytes @ 0x0
  7599                           
  7600  0070                     ?_Autenticar:	
  7601                           ; 1 bytes @ 0x0
  7602                           
  7603  0070                     ?_rotina_tela:	
  7604                           ; 1 bytes @ 0x0
  7605                           
  7606  0070                     ?_func_enter:	
  7607                           ; 1 bytes @ 0x0
  7608                           
  7609  0070                     ?_func_rst:	
  7610                           ; 1 bytes @ 0x0
  7611                           
  7612  0070                     ?_Inicia_LCD:	
  7613                           ; 1 bytes @ 0x0
  7614                           
  7615  0070                     ?_teste_pneumatico:	
  7616                           ; 1 bytes @ 0x0
  7617                           
  7618  0070                     ?_teste_US:	
  7619                           ; 1 bytes @ 0x0
  7620                           
  7621  0070                     ?_tela_ultima_solda:	
  7622                           ; 1 bytes @ 0x0
  7623                           
  7624  0070                     ?_stop_timer:	
  7625                           ; 1 bytes @ 0x0
  7626                           
  7627  0070                     ?_TMR5_Reload:	
  7628                           ; 1 bytes @ 0x0
  7629                           
  7630  0070                     ?_load_bar:	
  7631                           ; 1 bytes @ 0x0
  7632                           
  7633  0070                     ?_TMR1_Reload:	
  7634                           ; 1 bytes @ 0x0
  7635                           
  7636  0070                     ?_eeprom_read:	
  7637                           ; 1 bytes @ 0x0
  7638                           
  7639  0070                     ?_Lcd_Write_Char:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  0070                     ?_escreve_freq:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  0070                     ?_salva_n_pecas:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  0070                     ?_clear_saida:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  0070                     ?_bip_tecla:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  0070                     ?_PMD_Initialize:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657  0070                     ?_OSCILLATOR_Initialize:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660  0070                     ?_CLC1_Initialize:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663  0070                     ?_ADCC_Initialize:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666  0070                     ?_EUSART_Initialize:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  0070                     ?_EUSART_Receive_ISR:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  0070                     ??_EUSART_Receive_ISR:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0070                     ?_EUSART_Transmit_ISR:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0070                     ??_EUSART_Transmit_ISR:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  0070                     ?_main:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  0070                     ?_INTERRUPT_InterruptManager:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  0070                     ?_PIN_MANAGER_Initialize:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  0070                     ?_ISR_entrada:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  0070                     ?_clr:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696  0070                     ?_telas:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699  0070                     ?_PWM2_Initialize:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702  0070                     ?_SMT1_Initialize:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705  0070                     ?_SMT2_Initialize:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708  0070                     ?_TMR1_Initialize:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711  0070                     ?_TMR1_WriteTimer:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714  0070                     ?_TMR5_Initialize:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717  0070                     ?_TMR5_WriteTimer:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720  0070                     ?_TMR6_Initialize:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723  0070                     ?_selectModo:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ?_Lcd_Port:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?_Lcd_Cmd:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ?_Lcd_Init:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?_LoadSenhaUser:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ?_LoadSenhaGerador:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ?_EditSenhaUser:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ?_verifSenhas:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ?i1_clr:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ??i1_clr:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ?i1_data:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ?i1_get_duty:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ?i1_stop_timer:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ??i1_stop_timer:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?i1___wmul:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ?i1___tmul:	
  7769                           ; 2 bytes @ 0x0
  7770                           
  7771  0070                     TMR1_WriteTimer@timerVal:	
  7772                           ; 3 bytes @ 0x0
  7773                           
  7774  0070                     TMR5_WriteTimer@timerVal:	
  7775                           ; 2 bytes @ 0x0
  7776                           
  7777  0070                     i1data@b:	
  7778                           ; 2 bytes @ 0x0
  7779                           
  7780  0070                     i1___wmul@multiplier:	
  7781                           ; 2 bytes @ 0x0
  7782                           
  7783  0070                     i1___tmul@multiplier:	
  7784                           ; 2 bytes @ 0x0
  7785                           
  7786                           
  7787                           ; 3 bytes @ 0x0
  7788  0070                     	ds	2
  7789  0072                     ??_TMR5_Reload:	
  7790  0072                     ??_load_bar:	
  7791                           ; 1 bytes @ 0x2
  7792                           
  7793  0072                     ??_TMR1_Reload:	
  7794                           ; 1 bytes @ 0x2
  7795                           
  7796  0072                     ??_TMR1_WriteTimer:	
  7797                           ; 1 bytes @ 0x2
  7798                           
  7799  0072                     ??_TMR5_WriteTimer:	
  7800                           ; 1 bytes @ 0x2
  7801                           
  7802  0072                     ??i1_data:	
  7803                           ; 1 bytes @ 0x2
  7804                           
  7805  0072                     i1___wmul@multiplicand:	
  7806                           ; 1 bytes @ 0x2
  7807                           
  7808                           
  7809                           ; 2 bytes @ 0x2
  7810  0072                     	ds	1
  7811  0073                     i1___tmul@multiplicand:	
  7812                           
  7813                           ; 3 bytes @ 0x3
  7814  0073                     	ds	1
  7815  0074                     ??i1___wmul:	
  7816  0074                     i1___wmul@product:	
  7817                           ; 1 bytes @ 0x4
  7818                           
  7819                           
  7820                           ; 2 bytes @ 0x4
  7821  0074                     	ds	2
  7822  0076                     ??i1___tmul:	
  7823  0076                     ?i1___lwdiv:	
  7824                           ; 1 bytes @ 0x6
  7825                           
  7826  0076                     i1___lwdiv@divisor:	
  7827                           ; 2 bytes @ 0x6
  7828                           
  7829  0076                     i1___tmul@product:	
  7830                           ; 2 bytes @ 0x6
  7831                           
  7832                           
  7833                           ; 3 bytes @ 0x6
  7834  0076                     	ds	2
  7835  0078                     i1___lwdiv@dividend:	
  7836                           
  7837                           ; 2 bytes @ 0x8
  7838  0078                     	ds	1
  7839  0079                     ??i1___ltdiv:	
  7840                           
  7841                           ; 1 bytes @ 0x9
  7842  0079                     	ds	1
  7843  007A                     ??i1___lwdiv:	
  7844  007A                     i1___ltdiv@quotient:	
  7845                           ; 1 bytes @ 0xA
  7846                           
  7847                           
  7848                           ; 3 bytes @ 0xA
  7849  007A                     	ds	1
  7850  007B                     i1___lwdiv@quotient:	
  7851                           
  7852                           ; 2 bytes @ 0xB
  7853  007B                     	ds	2
  7854  007D                     i1___ltdiv@counter:	
  7855  007D                     i1___lwdiv@counter:	
  7856                           ; 1 bytes @ 0xD
  7857                           
  7858                           
  7859                           ; 1 bytes @ 0xD
  7860  007D                     	ds	1
  7861  007E                     ??i1_get_duty:	
  7862                           
  7863                           	psect	cstackBANK0
  7864  0020                     __pcstackBANK0:	
  7865                           ; 1 bytes @ 0xE
  7866                           
  7867  0020                     ?_pontencia_instantanea:	
  7868  0020                     ?i1___ltdiv:	
  7869                           ; 2 bytes @ 0x0
  7870                           
  7871  0020                     i1___ltdiv@divisor:	
  7872                           ; 3 bytes @ 0x0
  7873                           
  7874                           
  7875                           ; 3 bytes @ 0x0
  7876  0020                     	ds	2
  7877  0022                     ??_pontencia_instantanea:	
  7878                           
  7879                           ; 1 bytes @ 0x2
  7880  0022                     	ds	1
  7881  0023                     i1___ltdiv@dividend:	
  7882                           
  7883                           ; 3 bytes @ 0x3
  7884  0023                     	ds	1
  7885  0024                     pontencia_instantanea@d:	
  7886                           
  7887                           ; 1 bytes @ 0x4
  7888  0024                     	ds	2
  7889  0026                     ??_INTERRUPT_InterruptManager:	
  7890                           
  7891                           ; 1 bytes @ 0x6
  7892  0026                     	ds	4
  7893  002A                     INTERRUPT_InterruptManager@i:	
  7894                           
  7895                           ; 1 bytes @ 0xA
  7896  002A                     	ds	1
  7897  002B                     ?___ftge:	
  7898  002B                     ??_config_IO_start:	
  7899                           ; 1 bit 
  7900                           
  7901  002B                     ??_stop_timer:	
  7902                           ; 1 bytes @ 0xB
  7903                           
  7904  002B                     ?_PWM2_LoadDutyValue:	
  7905                           ; 1 bytes @ 0xB
  7906                           
  7907  002B                     ?_eeprom_write:	
  7908                           ; 1 bytes @ 0xB
  7909                           
  7910  002B                     ??_eeprom_read:	
  7911                           ; 1 bytes @ 0xB
  7912                           
  7913  002B                     ?_saida:	
  7914                           ; 1 bytes @ 0xB
  7915                           
  7916  002B                     ?_start_timer:	
  7917                           ; 1 bytes @ 0xB
  7918                           
  7919  002B                     ?_config_flag_entrada:	
  7920                           ; 1 bytes @ 0xB
  7921                           
  7922  002B                     ?_config_flag_saida:	
  7923                           ; 1 bytes @ 0xB
  7924                           
  7925  002B                     ??_bip_tecla:	
  7926                           ; 1 bytes @ 0xB
  7927                           
  7928  002B                     ?_verifPagina:	
  7929                           ; 1 bytes @ 0xB
  7930                           
  7931  002B                     ?_addr_receitas:	
  7932                           ; 1 bytes @ 0xB
  7933                           
  7934  002B                     ??_PMD_Initialize:	
  7935                           ; 1 bytes @ 0xB
  7936                           
  7937  002B                     ??_OSCILLATOR_Initialize:	
  7938                           ; 1 bytes @ 0xB
  7939                           
  7940  002B                     ??_CLC1_Initialize:	
  7941                           ; 1 bytes @ 0xB
  7942                           
  7943  002B                     ??_ADCC_Initialize:	
  7944                           ; 1 bytes @ 0xB
  7945                           
  7946  002B                     ?_EUSART_SetRxInterruptHandler:	
  7947                           ; 1 bytes @ 0xB
  7948                           
  7949  002B                     ?_EUSART_SetTxInterruptHandler:	
  7950                           ; 1 bytes @ 0xB
  7951                           
  7952  002B                     ??_PIN_MANAGER_Initialize:	
  7953                           ; 1 bytes @ 0xB
  7954                           
  7955  002B                     ??_ISR_entrada:	
  7956                           ; 1 bytes @ 0xB
  7957                           
  7958  002B                     ??_clr:	
  7959                           ; 1 bytes @ 0xB
  7960                           
  7961  002B                     ?_data:	
  7962                           ; 1 bytes @ 0xB
  7963                           
  7964  002B                     ??_SMT1_Initialize:	
  7965                           ; 1 bytes @ 0xB
  7966                           
  7967  002B                     ??_SMT2_Initialize:	
  7968                           ; 1 bytes @ 0xB
  7969                           
  7970  002B                     ??_TMR1_Initialize:	
  7971                           ; 1 bytes @ 0xB
  7972                           
  7973  002B                     ??_TMR5_Initialize:	
  7974                           ; 1 bytes @ 0xB
  7975                           
  7976  002B                     ??_TMR6_Initialize:	
  7977                           ; 1 bytes @ 0xB
  7978                           
  7979  002B                     ??_Lcd_Port:	
  7980                           ; 1 bytes @ 0xB
  7981                           
  7982  002B                     ?_entrada:	
  7983                           ; 1 bytes @ 0xB
  7984                           
  7985  002B                     ?_strlen:	
  7986                           ; 2 bytes @ 0xB
  7987                           
  7988  002B                     ?_strcmp:	
  7989                           ; 2 bytes @ 0xB
  7990                           
  7991  002B                     ?___wmul:	
  7992                           ; 2 bytes @ 0xB
  7993                           
  7994  002B                     ?___awdiv:	
  7995                           ; 2 bytes @ 0xB
  7996                           
  7997  002B                     ?___lwdiv:	
  7998                           ; 2 bytes @ 0xB
  7999                           
  8000  002B                     ?___ftpack:	
  8001                           ; 2 bytes @ 0xB
  8002                           
  8003  002B                     ?_frexp:	
  8004                           ; 3 bytes @ 0xB
  8005                           
  8006  002B                     ?___tmul:	
  8007                           ; 3 bytes @ 0xB
  8008                           
  8009  002B                     ?_SMT1_GetCapturedPeriod:	
  8010                           ; 3 bytes @ 0xB
  8011                           
  8012  002B                     ?___llmod:	
  8013                           ; 4 bytes @ 0xB
  8014                           
  8015  002B                     config_flag_entrada@ch:	
  8016                           ; 4 bytes @ 0xB
  8017                           
  8018  002B                     config_flag_saida@ch:	
  8019                           ; 1 bytes @ 0xB
  8020                           
  8021  002B                     addr_receitas@tempo:	
  8022                           ; 1 bytes @ 0xB
  8023                           
  8024  002B                     verifPagina@bt_local:	
  8025                           ; 1 bytes @ 0xB
  8026                           
  8027  002B                     Lcd_Port@a:	
  8028                           ; 1 bytes @ 0xB
  8029                           
  8030  002B                     eeprom_read@addr:	
  8031                           ; 1 bytes @ 0xB
  8032                           
  8033  002B                     eeprom_write@value:	
  8034                           ; 1 bytes @ 0xB
  8035                           
  8036  002B                     saida@b:	
  8037                           ; 1 bytes @ 0xB
  8038                           
  8039  002B                     data@b:	
  8040                           ; 2 bytes @ 0xB
  8041                           
  8042  002B                     PWM2_LoadDutyValue@dutyValue:	
  8043                           ; 2 bytes @ 0xB
  8044                           
  8045  002B                     start_timer@t:	
  8046                           ; 2 bytes @ 0xB
  8047                           
  8048  002B                     EUSART_SetTxInterruptHandler@interruptHandler:	
  8049                           ; 2 bytes @ 0xB
  8050                           
  8051  002B                     EUSART_SetRxInterruptHandler@interruptHandler:	
  8052                           ; 2 bytes @ 0xB
  8053                           
  8054  002B                     ___wmul@multiplier:	
  8055                           ; 2 bytes @ 0xB
  8056                           
  8057  002B                     ___awdiv@divisor:	
  8058                           ; 2 bytes @ 0xB
  8059                           
  8060  002B                     ___lwdiv@divisor:	
  8061                           ; 2 bytes @ 0xB
  8062                           
  8063  002B                     strcmp@s2:	
  8064                           ; 2 bytes @ 0xB
  8065                           
  8066  002B                     strlen@s:	
  8067                           ; 2 bytes @ 0xB
  8068                           
  8069  002B                     ___tmul@multiplier:	
  8070                           ; 2 bytes @ 0xB
  8071                           
  8072  002B                     ___ftpack@arg:	
  8073                           ; 3 bytes @ 0xB
  8074                           
  8075  002B                     ___ftge@ff1:	
  8076                           ; 3 bytes @ 0xB
  8077                           
  8078  002B                     frexp@value:	
  8079                           ; 3 bytes @ 0xB
  8080                           
  8081  002B                     ___llmod@divisor:	
  8082                           ; 3 bytes @ 0xB
  8083                           
  8084                           
  8085                           ; 4 bytes @ 0xB
  8086  002B                     	ds	1
  8087  002C                     ??_eeprom_write:	
  8088  002C                     ??_Lcd_Write_Char:	
  8089                           ; 1 bytes @ 0xC
  8090                           
  8091  002C                     ??_config_flag_entrada:	
  8092                           ; 1 bytes @ 0xC
  8093                           
  8094  002C                     ??_config_flag_saida:	
  8095                           ; 1 bytes @ 0xC
  8096                           
  8097  002C                     ??_verifPagina:	
  8098                           ; 1 bytes @ 0xC
  8099                           
  8100  002C                     ??_addr_receitas:	
  8101                           ; 1 bytes @ 0xC
  8102                           
  8103  002C                     ??_Lcd_Cmd:	
  8104                           ; 1 bytes @ 0xC
  8105                           
  8106  002C                     ??_LoadSenhaUser:	
  8107                           ; 1 bytes @ 0xC
  8108                           
  8109  002C                     ??_LoadSenhaGerador:	
  8110                           ; 1 bytes @ 0xC
  8111                           
  8112  002C                     ?_carrega_EEPROM:	
  8113                           ; 1 bytes @ 0xC
  8114                           
  8115  002C                     ?_carrega_EEPROM32:	
  8116                           ; 2 bytes @ 0xC
  8117                           
  8118  002C                     config_flag_entrada@x:	
  8119                           ; 4 bytes @ 0xC
  8120                           
  8121  002C                     config_flag_saida@x:	
  8122                           ; 1 bytes @ 0xC
  8123                           
  8124  002C                     eeprom_write@addr:	
  8125                           ; 1 bytes @ 0xC
  8126                           
  8127                           
  8128                           ; 1 bytes @ 0xC
  8129  002C                     	ds	1
  8130  002D                     ??_teste_leds:	
  8131  002D                     ??_teclado:	
  8132                           ; 1 bytes @ 0xD
  8133                           
  8134  002D                     ??_PWM2_LoadDutyValue:	
  8135                           ; 1 bytes @ 0xD
  8136                           
  8137  002D                     ??_saida:	
  8138                           ; 1 bytes @ 0xD
  8139                           
  8140  002D                     ??_start_timer:	
  8141                           ; 1 bytes @ 0xD
  8142                           
  8143  002D                     ??_entrada:	
  8144                           ; 1 bytes @ 0xD
  8145                           
  8146  002D                     ??_clear_saida:	
  8147                           ; 1 bytes @ 0xD
  8148                           
  8149  002D                     ??_EUSART_Initialize:	
  8150                           ; 1 bytes @ 0xD
  8151                           
  8152  002D                     ??_EUSART_SetRxInterruptHandler:	
  8153                           ; 1 bytes @ 0xD
  8154                           
  8155  002D                     ??_EUSART_SetTxInterruptHandler:	
  8156                           ; 1 bytes @ 0xD
  8157                           
  8158  002D                     ??_strlen:	
  8159                           ; 1 bytes @ 0xD
  8160                           
  8161  002D                     ??_strcmp:	
  8162                           ; 1 bytes @ 0xD
  8163                           
  8164  002D                     ?_config_entrada:	
  8165                           ; 1 bytes @ 0xD
  8166                           
  8167  002D                     ??_data:	
  8168                           ; 1 bytes @ 0xD
  8169                           
  8170  002D                     ??_PWM2_Initialize:	
  8171                           ; 1 bytes @ 0xD
  8172                           
  8173  002D                     ISR_entrada@ch:	
  8174                           ; 1 bytes @ 0xD
  8175                           
  8176  002D                     config_entrada@ch:	
  8177                           ; 1 bytes @ 0xD
  8178                           
  8179  002D                     clear_saida@ch:	
  8180                           ; 1 bytes @ 0xD
  8181                           
  8182  002D                     addr_receitas@addr:	
  8183                           ; 1 bytes @ 0xD
  8184                           
  8185  002D                     verifPagina@ok:	
  8186                           ; 1 bytes @ 0xD
  8187                           
  8188  002D                     Lcd_Cmd@a:	
  8189                           ; 1 bytes @ 0xD
  8190                           
  8191  002D                     Lcd_Write_Char@temp:	
  8192                           ; 1 bytes @ 0xD
  8193                           
  8194  002D                     ___wmul@multiplicand:	
  8195                           ; 1 bytes @ 0xD
  8196                           
  8197  002D                     ___awdiv@dividend:	
  8198                           ; 2 bytes @ 0xD
  8199                           
  8200  002D                     ___lwdiv@dividend:	
  8201                           ; 2 bytes @ 0xD
  8202                           
  8203                           
  8204                           ; 2 bytes @ 0xD
  8205  002D                     	ds	1
  8206  002E                     ??_Lcd_Clear:	
  8207  002E                     ?_Lcd_Set_Cursor:	
  8208                           ; 1 bytes @ 0xE
  8209                           
  8210  002E                     ?_salva_EEPROM:	
  8211                           ; 1 bytes @ 0xE
  8212                           
  8213  002E                     ??_carrega_EEPROM:	
  8214                           ; 1 bytes @ 0xE
  8215                           
  8216  002E                     ?_salva_EEPROM32:	
  8217                           ; 1 bytes @ 0xE
  8218                           
  8219  002E                     ??_config_entrada:	
  8220                           ; 1 bytes @ 0xE
  8221                           
  8222  002E                     ?_config_saidas:	
  8223                           ; 1 bytes @ 0xE
  8224                           
  8225  002E                     ??_Lcd_Init:	
  8226                           ; 1 bytes @ 0xE
  8227                           
  8228  002E                     ISR_entrada@p:	
  8229                           ; 1 bytes @ 0xE
  8230                           
  8231  002E                     config_saidas@ch:	
  8232                           ; 1 bytes @ 0xE
  8233                           
  8234  002E                     saida@port:	
  8235                           ; 1 bytes @ 0xE
  8236                           
  8237  002E                     verifPagina@pag:	
  8238                           ; 1 bytes @ 0xE
  8239                           
  8240  002E                     Lcd_Set_Cursor@b:	
  8241                           ; 1 bytes @ 0xE
  8242                           
  8243  002E                     Lcd_Write_Char@y:	
  8244                           ; 1 bytes @ 0xE
  8245                           
  8246  002E                     ___ftpack@exp:	
  8247                           ; 1 bytes @ 0xE
  8248                           
  8249  002E                     strcmp@r:	
  8250                           ; 1 bytes @ 0xE
  8251                           
  8252  002E                     frexp@eptr:	
  8253                           ; 1 bytes @ 0xE
  8254                           
  8255  002E                     salva_EEPROM@valor:	
  8256                           ; 1 bytes @ 0xE
  8257                           
  8258  002E                     ___tmul@multiplicand:	
  8259                           ; 2 bytes @ 0xE
  8260                           
  8261  002E                     ___ftge@ff2:	
  8262                           ; 3 bytes @ 0xE
  8263                           
  8264  002E                     salva_EEPROM32@valor:	
  8265                           ; 3 bytes @ 0xE
  8266                           
  8267                           
  8268                           ; 4 bytes @ 0xE
  8269  002E                     	ds	1
  8270  002F                     ??_Lcd_Set_Cursor:	
  8271  002F                     ??_Inicia_LCD:	
  8272                           ; 1 bytes @ 0xF
  8273                           
  8274  002F                     ??_SMT1_GetCapturedPeriod:	
  8275                           ; 1 bytes @ 0xF
  8276                           
  8277  002F                     ??_frexp:	
  8278                           ; 1 bytes @ 0xF
  8279                           
  8280  002F                     ??_config_saidas:	
  8281                           ; 1 bytes @ 0xF
  8282                           
  8283  002F                     ??___wmul:	
  8284                           ; 1 bytes @ 0xF
  8285                           
  8286  002F                     ??___awdiv:	
  8287                           ; 1 bytes @ 0xF
  8288                           
  8289  002F                     ??___lwdiv:	
  8290                           ; 1 bytes @ 0xF
  8291                           
  8292  002F                     ?___lldiv:	
  8293                           ; 1 bytes @ 0xF
  8294                           
  8295  002F                     ISR_entrada@x:	
  8296                           ; 4 bytes @ 0xF
  8297                           
  8298  002F                     entrada@x:	
  8299                           ; 1 bytes @ 0xF
  8300                           
  8301  002F                     saida@x:	
  8302                           ; 1 bytes @ 0xF
  8303                           
  8304  002F                     teste_leds@temp:	
  8305                           ; 1 bytes @ 0xF
  8306                           
  8307  002F                     Lcd_Write_Char@a:	
  8308                           ; 1 bytes @ 0xF
  8309                           
  8310  002F                     ___ftpack@sign:	
  8311                           ; 1 bytes @ 0xF
  8312                           
  8313  002F                     strcmp@s1:	
  8314                           ; 1 bytes @ 0xF
  8315                           
  8316  002F                     ___wmul@product:	
  8317                           ; 1 bytes @ 0xF
  8318                           
  8319  002F                     strlen@cp:	
  8320                           ; 2 bytes @ 0xF
  8321                           
  8322  002F                     ___lldiv@divisor:	
  8323                           ; 2 bytes @ 0xF
  8324                           
  8325  002F                     ___llmod@dividend:	
  8326                           ; 4 bytes @ 0xF
  8327                           
  8328                           
  8329                           ; 4 bytes @ 0xF
  8330  002F                     	ds	1
  8331  0030                     ??_SYSTEM_Initialize:	
  8332  0030                     ?_status_gerador:	
  8333                           ; 1 bytes @ 0x10
  8334                           
  8335  0030                     ??_rst_inversor:	
  8336                           ; 1 bytes @ 0x10
  8337                           
  8338  0030                     ?_Lcd_Write_String:	
  8339                           ; 1 bytes @ 0x10
  8340                           
  8341  0030                     ??___ftpack:	
  8342                           ; 1 bytes @ 0x10
  8343                           
  8344  0030                     ??_carrega_EEPROM32:	
  8345                           ; 1 bytes @ 0x10
  8346                           
  8347  0030                     ??_verifSenhas:	
  8348                           ; 1 bytes @ 0x10
  8349                           
  8350  0030                     salva_EEPROM@address:	
  8351                           ; 1 bytes @ 0x10
  8352                           
  8353  0030                     carrega_EEPROM@address:	
  8354                           ; 1 bytes @ 0x10
  8355                           
  8356  0030                     entrada@p:	
  8357                           ; 1 bytes @ 0x10
  8358                           
  8359  0030                     config_entrada@x:	
  8360                           ; 1 bytes @ 0x10
  8361                           
  8362  0030                     config_saidas@x:	
  8363                           ; 1 bytes @ 0x10
  8364                           
  8365  0030                     teste_leds@i:	
  8366                           ; 1 bytes @ 0x10
  8367                           
  8368  0030                     verifSenhas@sh:	
  8369                           ; 1 bytes @ 0x10
  8370                           
  8371  0030                     ___awdiv@counter:	
  8372                           ; 1 bytes @ 0x10
  8373                           
  8374  0030                     ___lwdiv@counter:	
  8375                           ; 1 bytes @ 0x10
  8376                           
  8377  0030                     ISR_entrada@b:	
  8378                           ; 1 bytes @ 0x10
  8379                           
  8380  0030                     status_gerador@b:	
  8381                           ; 2 bytes @ 0x10
  8382                           
  8383  0030                     Lcd_Write_String@a:	
  8384                           ; 2 bytes @ 0x10
  8385                           
  8386                           
  8387                           ; 2 bytes @ 0x10
  8388  0030                     	ds	1
  8389  0031                     ??_config_maq_especial:	
  8390  0031                     ??_config_maq:	
  8391                           ; 1 bytes @ 0x11
  8392                           
  8393  0031                     ?_strcpy:	
  8394                           ; 1 bytes @ 0x11
  8395                           
  8396  0031                     ?_strcat:	
  8397                           ; 1 bytes @ 0x11
  8398                           
  8399  0031                     ??_salva_EEPROM:	
  8400                           ; 1 bytes @ 0x11
  8401                           
  8402  0031                     ??___tmul:	
  8403                           ; 1 bytes @ 0x11
  8404                           
  8405  0031                     ??___ftge:	
  8406                           ; 1 bytes @ 0x11
  8407                           
  8408  0031                     ?___awmod:	
  8409                           ; 1 bytes @ 0x11
  8410                           
  8411  0031                     Lcd_Set_Cursor@a:	
  8412                           ; 2 bytes @ 0x11
  8413                           
  8414  0031                     ___awdiv@sign:	
  8415                           ; 1 bytes @ 0x11
  8416                           
  8417  0031                     ___awmod@divisor:	
  8418                           ; 1 bytes @ 0x11
  8419                           
  8420  0031                     ___lwdiv@quotient:	
  8421                           ; 2 bytes @ 0x11
  8422                           
  8423  0031                     strcat@from:	
  8424                           ; 2 bytes @ 0x11
  8425                           
  8426  0031                     strcpy@from:	
  8427                           ; 2 bytes @ 0x11
  8428                           
  8429  0031                     ___tmul@product:	
  8430                           ; 2 bytes @ 0x11
  8431                           
  8432                           
  8433                           ; 3 bytes @ 0x11
  8434  0031                     	ds	1
  8435  0032                     ??_status_gerador:	
  8436  0032                     ??_ver_entrada:	
  8437                           ; 1 bytes @ 0x12
  8438                           
  8439  0032                     ??_Lcd_Write_String:	
  8440                           ; 1 bytes @ 0x12
  8441                           
  8442  0032                     salva_EEPROM32@address:	
  8443                           ; 1 bytes @ 0x12
  8444                           
  8445  0032                     carrega_EEPROM32@address:	
  8446                           ; 1 bytes @ 0x12
  8447                           
  8448  0032                     config_maq_especial@i:	
  8449                           ; 1 bytes @ 0x12
  8450                           
  8451  0032                     config_maq@x:	
  8452                           ; 1 bytes @ 0x12
  8453                           
  8454  0032                     status_gerador@x:	
  8455                           ; 1 bytes @ 0x12
  8456                           
  8457  0032                     Lcd_Set_Cursor@z:	
  8458                           ; 1 bytes @ 0x12
  8459                           
  8460  0032                     ___awdiv@quotient:	
  8461                           ; 1 bytes @ 0x12
  8462                           
  8463                           
  8464                           ; 2 bytes @ 0x12
  8465  0032                     	ds	1
  8466  0033                     ?_delay:	
  8467  0033                     ??_liberar:	
  8468                           ; 1 bytes @ 0x13
  8469                           
  8470  0033                     ??_strcpy:	
  8471                           ; 1 bytes @ 0x13
  8472                           
  8473  0033                     ??_strcat:	
  8474                           ; 1 bytes @ 0x13
  8475                           
  8476  0033                     ??_salva_EEPROM32:	
  8477                           ; 1 bytes @ 0x13
  8478                           
  8479  0033                     ??___llmod:	
  8480                           ; 1 bytes @ 0x13
  8481                           
  8482  0033                     ?_liberar_tecla:	
  8483                           ; 1 bytes @ 0x13
  8484                           
  8485  0033                     ?___lwmod:	
  8486                           ; 2 bytes @ 0x13
  8487                           
  8488  0033                     ?___altoft:	
  8489                           ; 2 bytes @ 0x13
  8490                           
  8491  0033                     ?___awtoft:	
  8492                           ; 3 bytes @ 0x13
  8493                           
  8494  0033                     ?___lltoft:	
  8495                           ; 3 bytes @ 0x13
  8496                           
  8497  0033                     ?___lwtoft:	
  8498                           ; 3 bytes @ 0x13
  8499                           
  8500  0033                     config_maq_especial@i_2517:	
  8501                           ; 3 bytes @ 0x13
  8502                           
  8503  0033                     config_maq@i:	
  8504                           ; 1 bytes @ 0x13
  8505                           
  8506  0033                     Lcd_Set_Cursor@y:	
  8507                           ; 1 bytes @ 0x13
  8508                           
  8509  0033                     delay@ms:	
  8510                           ; 1 bytes @ 0x13
  8511                           
  8512  0033                     liberar_tecla@t:	
  8513                           ; 2 bytes @ 0x13
  8514                           
  8515  0033                     Lcd_Write_String@i:	
  8516                           ; 2 bytes @ 0x13
  8517                           
  8518  0033                     ___awmod@dividend:	
  8519                           ; 2 bytes @ 0x13
  8520                           
  8521  0033                     ___awtoft@c:	
  8522                           ; 2 bytes @ 0x13
  8523                           
  8524  0033                     ___lwmod@divisor:	
  8525                           ; 2 bytes @ 0x13
  8526                           
  8527  0033                     ___lwtoft@c:	
  8528                           ; 2 bytes @ 0x13
  8529                           
  8530  0033                     ___altoft@c:	
  8531                           ; 2 bytes @ 0x13
  8532                           
  8533  0033                     ___lldiv@dividend:	
  8534                           ; 4 bytes @ 0x13
  8535                           
  8536  0033                     ___lltoft@c:	
  8537                           ; 4 bytes @ 0x13
  8538                           
  8539                           
  8540                           ; 4 bytes @ 0x13
  8541  0033                     	ds	1
  8542  0034                     ?___ltdiv:	
  8543  0034                     config_maq@i_2523:	
  8544                           ; 3 bytes @ 0x14
  8545                           
  8546  0034                     Lcd_Set_Cursor@temp:	
  8547                           ; 1 bytes @ 0x14
  8548                           
  8549  0034                     ___llmod@counter:	
  8550                           ; 1 bytes @ 0x14
  8551                           
  8552  0034                     strcat@cp:	
  8553                           ; 1 bytes @ 0x14
  8554                           
  8555  0034                     strcpy@cp:	
  8556                           ; 1 bytes @ 0x14
  8557                           
  8558  0034                     ___ltdiv@divisor:	
  8559                           ; 1 bytes @ 0x14
  8560                           
  8561                           
  8562                           ; 3 bytes @ 0x14
  8563  0034                     	ds	1
  8564  0035                     ??_delay:	
  8565  0035                     ?_Lcd_White_Center_String:	
  8566                           ; 1 bytes @ 0x15
  8567                           
  8568  0035                     ??_liberar_tecla:	
  8569                           ; 1 bytes @ 0x15
  8570                           
  8571  0035                     ?_escreve_LCD:	
  8572                           ; 1 bytes @ 0x15
  8573                           
  8574  0035                     ??_salva_n_pecas:	
  8575                           ; 1 bytes @ 0x15
  8576                           
  8577  0035                     ??___awmod:	
  8578                           ; 1 bytes @ 0x15
  8579                           
  8580  0035                     escreve_LCD@coluna:	
  8581                           ; 1 bytes @ 0x15
  8582                           
  8583  0035                     strcat@to:	
  8584                           ; 1 bytes @ 0x15
  8585                           
  8586  0035                     strcpy@to:	
  8587                           ; 1 bytes @ 0x15
  8588                           
  8589  0035                     Lcd_White_Center_String@a:	
  8590                           ; 1 bytes @ 0x15
  8591                           
  8592  0035                     ___lwmod@dividend:	
  8593                           ; 2 bytes @ 0x15
  8594                           
  8595                           
  8596                           ; 2 bytes @ 0x15
  8597  0035                     	ds	1
  8598  0036                     ??___awtoft:	
  8599  0036                     ??___lwtoft:	
  8600                           ; 1 bytes @ 0x16
  8601                           
  8602  0036                     ___awmod@counter:	
  8603                           ; 1 bytes @ 0x16
  8604                           
  8605  0036                     escreve_LCD@str:	
  8606                           ; 1 bytes @ 0x16
  8607                           
  8608                           
  8609                           ; 2 bytes @ 0x16
  8610  0036                     	ds	1
  8611  0037                     ??_Lcd_White_Center_String:	
  8612  0037                     ??___altoft:	
  8613                           ; 1 bytes @ 0x17
  8614                           
  8615  0037                     ??___lldiv:	
  8616                           ; 1 bytes @ 0x17
  8617                           
  8618  0037                     ??___lltoft:	
  8619                           ; 1 bytes @ 0x17
  8620                           
  8621  0037                     ??___lwmod:	
  8622                           ; 1 bytes @ 0x17
  8623                           
  8624  0037                     ___awmod@sign:	
  8625                           ; 1 bytes @ 0x17
  8626                           
  8627  0037                     ___ltdiv@dividend:	
  8628                           ; 1 bytes @ 0x17
  8629                           
  8630                           
  8631                           ; 3 bytes @ 0x17
  8632  0037                     	ds	1
  8633  0038                     ??_escreve_LCD:	
  8634  0038                     ___awtoft@sign:	
  8635                           ; 1 bytes @ 0x18
  8636                           
  8637  0038                     ___lltoft@exp:	
  8638                           ; 1 bytes @ 0x18
  8639                           
  8640  0038                     ___lwmod@counter:	
  8641                           ; 1 bytes @ 0x18
  8642                           
  8643  0038                     ___lldiv@quotient:	
  8644                           ; 1 bytes @ 0x18
  8645                           
  8646                           
  8647                           ; 4 bytes @ 0x18
  8648  0038                     	ds	1
  8649  0039                     ?_utoa:	
  8650  0039                     ?_sprintf:	
  8651                           ; 1 bytes @ 0x19
  8652                           
  8653  0039                     liberar_tecla@b:	
  8654                           ; 2 bytes @ 0x19
  8655                           
  8656  0039                     escreve_LCD@linha:	
  8657                           ; 1 bytes @ 0x19
  8658                           
  8659  0039                     ___altoft@exp:	
  8660                           ; 1 bytes @ 0x19
  8661                           
  8662  0039                     delay@t:	
  8663                           ; 1 bytes @ 0x19
  8664                           
  8665  0039                     sprintf@sp:	
  8666                           ; 2 bytes @ 0x19
  8667                           
  8668  0039                     utoa@val:	
  8669                           ; 2 bytes @ 0x19
  8670                           
  8671                           
  8672                           ; 2 bytes @ 0x19
  8673  0039                     	ds	1
  8674  003A                     ?_op_fixar:	
  8675  003A                     ??___ltdiv:	
  8676                           ; 1 bytes @ 0x1A
  8677                           
  8678  003A                     Lcd_White_Center_String@linha:	
  8679                           ; 1 bytes @ 0x1A
  8680                           
  8681  003A                     ___altoft@sign:	
  8682                           ; 1 bytes @ 0x1A
  8683                           
  8684  003A                     op_fixar@t:	
  8685                           ; 1 bytes @ 0x1A
  8686                           
  8687  003A                     liberar_tecla@temp:	
  8688                           ; 2 bytes @ 0x1A
  8689                           
  8690                           
  8691                           ; 2 bytes @ 0x1A
  8692  003A                     	ds	1
  8693  003B                     ?___ftadd:	
  8694  003B                     Lcd_White_Center_String@coluna:	
  8695                           ; 3 bytes @ 0x1B
  8696                           
  8697  003B                     sprintf@f:	
  8698                           ; 1 bytes @ 0x1B
  8699                           
  8700  003B                     utoa@base:	
  8701                           ; 2 bytes @ 0x1B
  8702                           
  8703  003B                     ___ftadd@f1:	
  8704                           ; 2 bytes @ 0x1B
  8705                           
  8706  003B                     ___ltdiv@quotient:	
  8707                           ; 3 bytes @ 0x1B
  8708                           
  8709                           
  8710                           ; 3 bytes @ 0x1B
  8711  003B                     	ds	1
  8712  003C                     ??_op_fixar:	
  8713  003C                     ___lldiv@counter:	
  8714                           ; 1 bytes @ 0x1C
  8715                           
  8716  003C                     liberar_tecla@tempo:	
  8717                           ; 1 bytes @ 0x1C
  8718                           
  8719  003C                     Lcd_White_Center_String@i:	
  8720                           ; 2 bytes @ 0x1C
  8721                           
  8722                           
  8723                           ; 2 bytes @ 0x1C
  8724  003C                     	ds	1
  8725  003D                     ??_utoa:	
  8726  003D                     ?_ultoa:	
  8727                           ; 1 bytes @ 0x1D
  8728                           
  8729  003D                     ?_get_freq:	
  8730                           ; 1 bytes @ 0x1D
  8731                           
  8732  003D                     ultoa@val:	
  8733                           ; 2 bytes @ 0x1D
  8734                           
  8735                           
  8736                           ; 4 bytes @ 0x1D
  8737  003D                     	ds	1
  8738  003E                     liberar_tecla@tc:	
  8739  003E                     Lcd_White_Center_String@size:	
  8740                           ; 1 bytes @ 0x1E
  8741                           
  8742  003E                     ___ltdiv@counter:	
  8743                           ; 1 bytes @ 0x1E
  8744                           
  8745  003E                     utoa@v:	
  8746                           ; 1 bytes @ 0x1E
  8747                           
  8748  003E                     ___ftadd@f2:	
  8749                           ; 2 bytes @ 0x1E
  8750                           
  8751                           
  8752                           ; 3 bytes @ 0x1E
  8753  003E                     	ds	1
  8754  003F                     ??_get_duty:	
  8755  003F                     ??_get_freq:	
  8756                           ; 1 bytes @ 0x1F
  8757                           
  8758  003F                     ??_sprintf:	
  8759                           ; 1 bytes @ 0x1F
  8760                           
  8761  003F                     ??_selectModo:	
  8762                           ; 1 bytes @ 0x1F
  8763                           
  8764                           
  8765                           ; 1 bytes @ 0x1F
  8766  003F                     	ds	1
  8767  0040                     op_fixar@e:	
  8768  0040                     utoa@c:	
  8769                           ; 1 bytes @ 0x20
  8770                           
  8771                           
  8772                           ; 1 bytes @ 0x20
  8773  0040                     	ds	1
  8774  0041                     ??___ftadd:	
  8775  0041                     op_fixar@conta_erro:	
  8776                           ; 1 bytes @ 0x21
  8777                           
  8778  0041                     utoa@buf:	
  8779                           ; 1 bytes @ 0x21
  8780                           
  8781  0041                     ultoa@base:	
  8782                           ; 1 bytes @ 0x21
  8783                           
  8784                           
  8785                           ; 2 bytes @ 0x21
  8786  0041                     	ds	2
  8787  0043                     ??_ultoa:	
  8788  0043                     sprintf@ap:	
  8789                           ; 1 bytes @ 0x23
  8790                           
  8791                           
  8792                           ; 1 bytes @ 0x23
  8793  0043                     	ds	1
  8794  0044                     sprintf@flag:	
  8795  0044                     ultoa@v:	
  8796                           ; 1 bytes @ 0x24
  8797                           
  8798                           
  8799                           ; 4 bytes @ 0x24
  8800  0044                     	ds	1
  8801  0045                     get_freq@acumulo:	
  8802  0045                     selectModo@loop:	
  8803                           ; 1 bytes @ 0x25
  8804                           
  8805  0045                     sprintf@prec:	
  8806                           ; 1 bytes @ 0x25
  8807                           
  8808  0045                     ___ftadd@sign:	
  8809                           ; 1 bytes @ 0x25
  8810                           
  8811                           
  8812                           ; 1 bytes @ 0x25
  8813  0045                     	ds	1
  8814  0046                     ?_set_freq:	
  8815  0046                     ?_ver_freq:	
  8816                           ; 1 bytes @ 0x26
  8817                           
  8818  0046                     ___ftadd@exp2:	
  8819                           ; 1 bytes @ 0x26
  8820                           
  8821  0046                     set_freq@f:	
  8822                           ; 1 bytes @ 0x26
  8823                           
  8824  0046                     ver_freq@f:	
  8825                           ; 2 bytes @ 0x26
  8826                           
  8827  0046                     sprintf@val:	
  8828                           ; 2 bytes @ 0x26
  8829                           
  8830  0046                     selectModo@s:	
  8831                           ; 2 bytes @ 0x26
  8832                           
  8833                           
  8834                           ; 8 bytes @ 0x26
  8835  0046                     	ds	1
  8836  0047                     ___ftadd@exp1:	
  8837                           
  8838                           ; 1 bytes @ 0x27
  8839  0047                     	ds	1
  8840  0048                     ??_set_freq:	
  8841  0048                     ??_ver_freq:	
  8842                           ; 1 bytes @ 0x28
  8843                           
  8844  0048                     ?___ftmul:	
  8845                           ; 1 bytes @ 0x28
  8846                           
  8847  0048                     sprintf@c:	
  8848                           ; 3 bytes @ 0x28
  8849                           
  8850  0048                     ultoa@c:	
  8851                           ; 1 bytes @ 0x28
  8852                           
  8853  0048                     ___ftmul@f1:	
  8854                           ; 1 bytes @ 0x28
  8855                           
  8856                           
  8857                           ; 3 bytes @ 0x28
  8858  0048                     	ds	1
  8859  0049                     ?_printTelaSenha:	
  8860  0049                     ?_printTelaEditarSenha:	
  8861                           ; 1 bytes @ 0x29
  8862                           
  8863  0049                     printTelaSenha@col:	
  8864                           ; 1 bytes @ 0x29
  8865                           
  8866  0049                     printTelaEditarSenha@col:	
  8867                           ; 1 bytes @ 0x29
  8868                           
  8869  0049                     ultoa@buf:	
  8870                           ; 1 bytes @ 0x29
  8871                           
  8872                           
  8873                           ; 1 bytes @ 0x29
  8874  0049                     	ds	1
  8875  004A                     ?_ltoa:	
  8876  004A                     ??_printTelaSenha:	
  8877                           ; 1 bytes @ 0x2A
  8878                           
  8879  004A                     ??_printTelaEditarSenha:	
  8880                           ; 1 bytes @ 0x2A
  8881                           
  8882  004A                     set_freq@i:	
  8883                           ; 1 bytes @ 0x2A
  8884                           
  8885  004A                     ltoa@val:	
  8886                           ; 1 bytes @ 0x2A
  8887                           
  8888                           
  8889                           ; 4 bytes @ 0x2A
  8890  004A                     	ds	1
  8891  004B                     set_freq@ok:	
  8892  004B                     ___ftmul@f2:	
  8893                           ; 1 bytes @ 0x2B
  8894                           
  8895                           
  8896                           ; 3 bytes @ 0x2B
  8897  004B                     	ds	1
  8898  004C                     set_freq@f_get:	
  8899                           
  8900                           ; 2 bytes @ 0x2C
  8901  004C                     	ds	2
  8902  004E                     ??_func_enter:	
  8903  004E                     ??_func_rst:	
  8904                           ; 1 bytes @ 0x2E
  8905                           
  8906  004E                     ??___ftmul:	
  8907                           ; 1 bytes @ 0x2E
  8908                           
  8909  004E                     selectModo@b:	
  8910                           ; 1 bytes @ 0x2E
  8911                           
  8912  004E                     printTelaSenha@s:	
  8913                           ; 1 bytes @ 0x2E
  8914                           
  8915  004E                     printTelaEditarSenha@s:	
  8916                           ; 1 bytes @ 0x2E
  8917                           
  8918  004E                     ltoa@base:	
  8919                           ; 1 bytes @ 0x2E
  8920                           
  8921                           
  8922                           ; 2 bytes @ 0x2E
  8923  004E                     	ds	1
  8924  004F                     ??_EditSenhaUser:	
  8925  004F                     func_enter@bt:	
  8926                           ; 1 bytes @ 0x2F
  8927                           
  8928                           
  8929                           ; 1 bytes @ 0x2F
  8930  004F                     	ds	1
  8931  0050                     ??_ltoa:	
  8932  0050                     EditSenhaUser@senha:	
  8933                           ; 1 bytes @ 0x30
  8934                           
  8935                           
  8936                           ; 5 bytes @ 0x30
  8937  0050                     	ds	1
  8938  0051                     ltoa@cp:	
  8939                           
  8940                           ; 1 bytes @ 0x31
  8941  0051                     	ds	1
  8942  0052                     ___ftmul@exp:	
  8943  0052                     ltoa@buf:	
  8944                           ; 1 bytes @ 0x32
  8945                           
  8946                           
  8947                           ; 1 bytes @ 0x32
  8948  0052                     	ds	1
  8949  0053                     ??_totalCiclos:	
  8950  0053                     ??_tela_inicial:	
  8951                           ; 1 bytes @ 0x33
  8952                           
  8953  0053                     ?_op_desce:	
  8954                           ; 1 bytes @ 0x33
  8955                           
  8956  0053                     ?_op_solda:	
  8957                           ; 1 bytes @ 0x33
  8958                           
  8959  0053                     ??_tela_ultima_solda:	
  8960                           ; 1 bytes @ 0x33
  8961                           
  8962  0053                     ??_escreve_freq:	
  8963                           ; 1 bytes @ 0x33
  8964                           
  8965  0053                     ?_escreve_tempos:	
  8966                           ; 1 bytes @ 0x33
  8967                           
  8968  0053                     op_desce@t:	
  8969                           ; 1 bytes @ 0x33
  8970                           
  8971  0053                     op_solda@t:	
  8972                           ; 2 bytes @ 0x33
  8973                           
  8974  0053                     escreve_tempos@s1:	
  8975                           ; 2 bytes @ 0x33
  8976                           
  8977  0053                     ___ftmul@f3_as_product:	
  8978                           ; 2 bytes @ 0x33
  8979                           
  8980                           
  8981                           ; 3 bytes @ 0x33
  8982  0053                     	ds	2
  8983  0055                     ??_op_desce:	
  8984  0055                     ??_op_solda:	
  8985                           ; 1 bytes @ 0x35
  8986                           
  8987  0055                     EditSenhaUser@bt_a:	
  8988                           ; 1 bytes @ 0x35
  8989                           
  8990  0055                     escreve_tempos@t:	
  8991                           ; 1 bytes @ 0x35
  8992                           
  8993                           
  8994                           ; 2 bytes @ 0x35
  8995  0055                     	ds	1
  8996  0056                     EditSenhaUser@coluna:	
  8997  0056                     ___ftmul@cntr:	
  8998                           ; 1 bytes @ 0x36
  8999                           
  9000                           
  9001                           ; 1 bytes @ 0x36
  9002  0056                     	ds	1
  9003  0057                     ?_trava_erro:	
  9004  0057                     ??_Autenticar:	
  9005                           ; 1 bytes @ 0x37
  9006                           
  9007  0057                     escreve_tempos@pag:	
  9008                           ; 1 bytes @ 0x37
  9009                           
  9010  0057                     ___ftmul@sign:	
  9011                           ; 1 bytes @ 0x37
  9012                           
  9013  0057                     trava_erro@s:	
  9014                           ; 1 bytes @ 0x37
  9015                           
  9016                           
  9017                           ; 2 bytes @ 0x37
  9018  0057                     	ds	1
  9019  0058                     ??_rotina_tela:	
  9020  0058                     ??_XC:	
  9021                           ; 1 bytes @ 0x38
  9022                           
  9023  0058                     ??_eval_poly:	
  9024                           ; 1 bytes @ 0x38
  9025                           
  9026  0058                     ??_log:	
  9027                           ; 1 bytes @ 0x38
  9028                           
  9029  0058                     ??_trunc:	
  9030                           ; 1 bytes @ 0x38
  9031                           
  9032  0058                     ??_floor:	
  9033                           ; 1 bytes @ 0x38
  9034                           
  9035  0058                     ??_ldexp:	
  9036                           ; 1 bytes @ 0x38
  9037                           
  9038                           
  9039                           ; 1 bytes @ 0x38
  9040  0058                     	ds	1
  9041  0059                     ??_ciclar:	
  9042  0059                     ??_round:	
  9043                           ; 1 bytes @ 0x39
  9044                           
  9045  0059                     ??_atan:	
  9046                           ; 1 bytes @ 0x39
  9047                           
  9048  0059                     ??_fabs:	
  9049                           ; 1 bytes @ 0x39
  9050                           
  9051  0059                     ??_sin:	
  9052                           ; 1 bytes @ 0x39
  9053                           
  9054  0059                     ??___ftneg:	
  9055                           ; 1 bytes @ 0x39
  9056                           
  9057  0059                     ??___ftsub:	
  9058                           ; 1 bytes @ 0x39
  9059                           
  9060                           
  9061                           ; 1 bytes @ 0x39
  9062  0059                     	ds	1
  9063  005A                     ??_cos:	
  9064                           
  9065                           	psect	maintext
  9066  10D2                     __pmaintext:	
  9067                           ; 1 bytes @ 0x3A
  9068 ;;
  9069 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  9070 ;;
  9071 ;; *************** function _main *****************
  9072 ;; Defined at:
  9073 ;;		line 32 in file "main.c"
  9074 ;; Parameters:    Size  Location     Type
  9075 ;;		None
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  ii              1   45[BANK2 ] unsigned char 
  9078 ;;  i               1   44[BANK2 ] unsigned char 
  9079 ;;  bt              1   47[BANK2 ] unsigned char 
  9080 ;;  senha_OK        1   43[BANK2 ] unsigned char 
  9081 ;;  gerador         1   46[BANK2 ] enum E15131
  9082 ;;  tipo            1   40[BANK2 ] enum E15124
  9083 ;; Return value:  Size  Location     Type
  9084 ;;                  1    wreg      void 
  9085 ;; Registers used:
  9086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9087 ;; Tracked objects:
  9088 ;;		On entry : B3F/0
  9089 ;;		On exit  : 0/0
  9090 ;;		Unchanged: 0/0
  9091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
  9092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9093 ;;      Locals:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9094 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9095 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
  9096 ;;Total ram usage:       12 bytes
  9097 ;; Hardware stack levels required when called:   12
  9098 ;; This function calls:
  9099 ;;		_Autenticar
  9100 ;;		_Inicia_LCD
  9101 ;;		_Lcd_Clear
  9102 ;;		_Lcd_Set_Cursor
  9103 ;;		_Lcd_White_Center_String
  9104 ;;		_SYSTEM_Initialize
  9105 ;;		___wmul
  9106 ;;		_ciclar
  9107 ;;		_ciclarPneumatico
  9108 ;;		_config_IO_start
  9109 ;;		_config_maq
  9110 ;;		_config_maq_especial
  9111 ;;		_delay
  9112 ;;		_emergencia
  9113 ;;		_func_enter
  9114 ;;		_func_rst
  9115 ;;		_get_duty
  9116 ;;		_get_freq
  9117 ;;		_ini_GERADOR
  9118 ;;		_ini_ee_tempos
  9119 ;;		_liberar
  9120 ;;		_liberar_tecla
  9121 ;;		_op_desce
  9122 ;;		_op_fixar
  9123 ;;		_op_solda
  9124 ;;		_rotina_tela
  9125 ;;		_rst_inversor
  9126 ;;		_set_freq
  9127 ;;		_status_gerador
  9128 ;;		_teclado
  9129 ;;		_tela_inicial
  9130 ;;		_tela_ultima_solda
  9131 ;;		_teste_US
  9132 ;;		_teste_leds
  9133 ;;		_teste_pneumatico
  9134 ;;		_totalCiclos
  9135 ;;		_trata_dados
  9136 ;;		_trava_erro
  9137 ;;		_ver_entrada
  9138 ;;		_ver_freq
  9139 ;; This function is called by:
  9140 ;;		Startup code after reset
  9141 ;; This function uses a non-reentrant model
  9142 ;;
  9143                           
  9144                           
  9145                           ;psect for function _main
  9146  10D2                     _main:	
  9147                           
  9148                           ;main.c: 34: const float t_amb = 23;
  9149                           ;main.c: 35: opc_maquinas tipo = PISTOLA_PULSADO;
  9150                           
  9151                           ;incstack = 0
  9152                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9153  10D2  0142               	movlb	2	; select bank2
  9154  10D3  01C8               	clrf	main@tipo^(0+256)
  9155  10D4  0AC8               	incf	main@tipo^(0+256),f
  9156                           
  9157                           ;main.c: 36: opc_gerador gerador = SOW280;
  9158  10D5  01CE               	clrf	main@gerador^(0+256)
  9159                           
  9160                           ;main.c: 37: idioma = PORTUGUES;
  9161  10D6  0143               	movlb	3	; select bank3
  9162  10D7  01DA               	clrf	_idioma^(0+384)
  9163                           
  9164                           ;main.c: 39: SYSTEM_Initialize();
  9165  10D8  31D3  23A9  3190   	fcall	_SYSTEM_Initialize
  9166                           
  9167                           ;main.c: 40: config_IO_start();
  9168  10DB  31D1  21EE  3190   	fcall	_config_IO_start
  9169                           
  9170                           ;main.c: 41: ini_ee_tempos(t_amb,tipo);
  9171  10DE  300F               	movlw	low (main@t_amb| (0+32768))
  9172  10DF  0084               	movwf	4
  9173  10E0  30E9               	movlw	high (main@t_amb| (0+32768))
  9174  10E1  0085               	movwf	5
  9175  10E2  3F00               	moviw [0]fsr0
  9176  10E3  0141               	movlb	1	; select bank1
  9177  10E4  00D3               	movwf	ini_ee_tempos@t^(0+128)
  9178  10E5  3F01               	moviw [1]fsr0
  9179  10E6  00D4               	movwf	(ini_ee_tempos@t+1)^(0+128)
  9180  10E7  3F02               	moviw [2]fsr0
  9181  10E8  00D5               	movwf	(ini_ee_tempos@t+2)^(0+128)
  9182  10E9  0142               	movlb	2	; select bank2
  9183  10EA  0848               	movf	main@tipo^(0+256),w
  9184  10EB  00C4               	movwf	??_main^(0+256)
  9185  10EC  0844               	movf	??_main^(0+256),w
  9186  10ED  0141               	movlb	1	; select bank1
  9187  10EE  00D6               	movwf	ini_ee_tempos@tipo^(0+128)
  9188  10EF  318A  224C  3190   	fcall	_ini_ee_tempos
  9189                           
  9190                           ;main.c: 42: if(tipo == ESPECIAL){config_maq_especial();}
  9191  10F2  0142               	movlb	2	; select bank2
  9192  10F3  0848               	movf	main@tipo^(0+256),w
  9193  10F4  1D03               	btfss	3,2
  9194  10F5  28FA               	goto	l18092
  9195  10F6  31C7  275F  3190   	fcall	_config_maq_especial
  9196  10F9  28FF               	goto	l18094
  9197  10FA                     l18092:	
  9198                           
  9199                           ;main.c: 43: else{config_maq(tipo_maquina);}
  9200  10FA  0143               	movlb	3	; select bank3
  9201  10FB  0860               	movf	_tipo_maquina^(0+384),w
  9202  10FC  31AB  234C  3190   	fcall	_config_maq
  9203  10FF                     l18094:	
  9204                           
  9205                           ;main.c: 46: if(gerador == SOW280)
  9206  10FF  0142               	movlb	2	; select bank2
  9207  1100  084E               	movf	main@gerador^(0+256),w
  9208  1101  1D03               	btfss	3,2
  9209  1102  2917               	goto	l18098
  9210                           
  9211                           ;main.c: 47: ini_GERADOR(20000,2800,1000,1000);
  9212  1103  3020               	movlw	32
  9213  1104  00B8               	movwf	ini_GERADOR@f^(0+256)
  9214  1105  304E               	movlw	78
  9215  1106  00B9               	movwf	(ini_GERADOR@f^(0+256)+1)
  9216  1107  30F0               	movlw	240
  9217  1108  00BA               	movwf	ini_GERADOR@p^(0+256)
  9218  1109  300A               	movlw	10
  9219  110A  00BB               	movwf	(ini_GERADOR@p^(0+256)+1)
  9220  110B  30E8               	movlw	232
  9221  110C  00BC               	movwf	ini_GERADOR@c^(0+256)
  9222  110D  3003               	movlw	3
  9223  110E  00BD               	movwf	(ini_GERADOR@c^(0+256)+1)
  9224  110F  30E8               	movlw	232
  9225  1110  00BE               	movwf	ini_GERADOR@v^(0+256)
  9226  1111  3003               	movlw	3
  9227  1112  00BF               	movwf	(ini_GERADOR@v^(0+256)+1)
  9228  1113  3194  2462  3190   	fcall	_ini_GERADOR
  9229  1116  297B               	goto	l380
  9230  1117                     l18098:	
  9231                           
  9232                           ;main.c: 48: else if (gerador == SOW160)
  9233  1117  0142               	movlb	2	; select bank2
  9234  1118  034E               	decf	main@gerador^(0+256),w
  9235  1119  1D03               	btfss	3,2
  9236  111A  292F               	goto	l18102
  9237                           
  9238                           ;main.c: 49: ini_GERADOR(20000,1600,1000,1000);
  9239  111B  3020               	movlw	32
  9240  111C  00B8               	movwf	ini_GERADOR@f^(0+256)
  9241  111D  304E               	movlw	78
  9242  111E  00B9               	movwf	(ini_GERADOR@f^(0+256)+1)
  9243  111F  3040               	movlw	64
  9244  1120  00BA               	movwf	ini_GERADOR@p^(0+256)
  9245  1121  3006               	movlw	6
  9246  1122  00BB               	movwf	(ini_GERADOR@p^(0+256)+1)
  9247  1123  30E8               	movlw	232
  9248  1124  00BC               	movwf	ini_GERADOR@c^(0+256)
  9249  1125  3003               	movlw	3
  9250  1126  00BD               	movwf	(ini_GERADOR@c^(0+256)+1)
  9251  1127  30E8               	movlw	232
  9252  1128  00BE               	movwf	ini_GERADOR@v^(0+256)
  9253  1129  3003               	movlw	3
  9254  112A  00BF               	movwf	(ini_GERADOR@v^(0+256)+1)
  9255  112B  3194  2462  3190   	fcall	_ini_GERADOR
  9256  112E  297B               	goto	l380
  9257  112F                     l18102:	
  9258                           
  9259                           ;main.c: 50: else if(gerador == SOW100)
  9260  112F  3003               	movlw	3
  9261  1130  0142               	movlb	2	; select bank2
  9262  1131  064E               	xorwf	main@gerador^(0+256),w
  9263  1132  1D03               	btfss	3,2
  9264  1133  2948               	goto	l18106
  9265                           
  9266                           ;main.c: 51: ini_GERADOR(35000,1000,220,500);
  9267  1134  30B8               	movlw	184
  9268  1135  00B8               	movwf	ini_GERADOR@f^(0+256)
  9269  1136  3088               	movlw	136
  9270  1137  00B9               	movwf	(ini_GERADOR@f^(0+256)+1)
  9271  1138  30E8               	movlw	232
  9272  1139  00BA               	movwf	ini_GERADOR@p^(0+256)
  9273  113A  3003               	movlw	3
  9274  113B  00BB               	movwf	(ini_GERADOR@p^(0+256)+1)
  9275  113C  30DC               	movlw	220
  9276  113D  00BC               	movwf	ini_GERADOR@c^(0+256)
  9277  113E  3000               	movlw	0
  9278  113F  00BD               	movwf	(ini_GERADOR@c^(0+256)+1)
  9279  1140  30F4               	movlw	244
  9280  1141  00BE               	movwf	ini_GERADOR@v^(0+256)
  9281  1142  3001               	movlw	1
  9282  1143  00BF               	movwf	(ini_GERADOR@v^(0+256)+1)
  9283  1144  3194  2462  3190   	fcall	_ini_GERADOR
  9284  1147  297B               	goto	l380
  9285  1148                     l18106:	
  9286                           
  9287                           ;main.c: 52: else if (gerador == SOW120)
  9288  1148  3002               	movlw	2
  9289  1149  0142               	movlb	2	; select bank2
  9290  114A  064E               	xorwf	main@gerador^(0+256),w
  9291  114B  1D03               	btfss	3,2
  9292  114C  2961               	goto	l18110
  9293                           
  9294                           ;main.c: 53: ini_GERADOR(35000,1200,220,1000);
  9295  114D  30B8               	movlw	184
  9296  114E  00B8               	movwf	ini_GERADOR@f^(0+256)
  9297  114F  3088               	movlw	136
  9298  1150  00B9               	movwf	(ini_GERADOR@f^(0+256)+1)
  9299  1151  30B0               	movlw	176
  9300  1152  00BA               	movwf	ini_GERADOR@p^(0+256)
  9301  1153  3004               	movlw	4
  9302  1154  00BB               	movwf	(ini_GERADOR@p^(0+256)+1)
  9303  1155  30DC               	movlw	220
  9304  1156  00BC               	movwf	ini_GERADOR@c^(0+256)
  9305  1157  3000               	movlw	0
  9306  1158  00BD               	movwf	(ini_GERADOR@c^(0+256)+1)
  9307  1159  30E8               	movlw	232
  9308  115A  00BE               	movwf	ini_GERADOR@v^(0+256)
  9309  115B  3003               	movlw	3
  9310  115C  00BF               	movwf	(ini_GERADOR@v^(0+256)+1)
  9311  115D  3194  2462  3190   	fcall	_ini_GERADOR
  9312  1160  297B               	goto	l380
  9313  1161                     l18110:	
  9314                           
  9315                           ;main.c: 54: else if (gerador == SOWESP)
  9316  1161  3004               	movlw	4
  9317  1162  0142               	movlb	2	; select bank2
  9318  1163  064E               	xorwf	main@gerador^(0+256),w
  9319  1164  1D03               	btfss	3,2
  9320  1165  297A               	goto	l390
  9321                           
  9322                           ;main.c: 55: ini_GERADOR(30000,1000,220,500);
  9323  1166  3030               	movlw	48
  9324  1167  00B8               	movwf	ini_GERADOR@f^(0+256)
  9325  1168  3075               	movlw	117
  9326  1169  00B9               	movwf	(ini_GERADOR@f^(0+256)+1)
  9327  116A  30E8               	movlw	232
  9328  116B  00BA               	movwf	ini_GERADOR@p^(0+256)
  9329  116C  3003               	movlw	3
  9330  116D  00BB               	movwf	(ini_GERADOR@p^(0+256)+1)
  9331  116E  30DC               	movlw	220
  9332  116F  00BC               	movwf	ini_GERADOR@c^(0+256)
  9333  1170  3000               	movlw	0
  9334  1171  00BD               	movwf	(ini_GERADOR@c^(0+256)+1)
  9335  1172  30F4               	movlw	244
  9336  1173  00BE               	movwf	ini_GERADOR@v^(0+256)
  9337  1174  3001               	movlw	1
  9338  1175  00BF               	movwf	(ini_GERADOR@v^(0+256)+1)
  9339  1176  3194  2462  3190   	fcall	_ini_GERADOR
  9340  1179  297B               	goto	l380
  9341  117A                     l390:	
  9342                           ;main.c: 56: else{
  9343                           ;main.c: 57: while(1);
  9344                           
  9345  117A  297A               	goto	l390
  9346  117B                     l380:	
  9347                           
  9348                           ;main.c: 58: }
  9349                           ;main.c: 60: cfg.solda_cont = 0;
  9350  117B  0143               	movlb	3	; select bank3
  9351  117C  10B1               	bcf	(_cfg^(0+384)+1),1
  9352                           
  9353                           ;main.c: 62: status_gerador(STATUS_GERADOR,1);
  9354  117D  3001               	movlw	1
  9355  117E  0140               	movlb	0	; select bank0
  9356  117F  00B0               	movwf	status_gerador@b
  9357  1180  3000               	movlw	0
  9358  1181  00B1               	movwf	status_gerador@b+1
  9359  1182  3005               	movlw	5
  9360  1183  31CC  24C4  3190   	fcall	_status_gerador
  9361                           
  9362                           ;main.c: 63: delay(100);
  9363  1186  3064               	movlw	100
  9364  1187  0140               	movlb	0	; select bank0
  9365  1188  00B3               	movwf	delay@ms
  9366  1189  3000               	movlw	0
  9367  118A  00B4               	movwf	delay@ms+1
  9368  118B  31D1  2136  3190   	fcall	_delay
  9369                           
  9370                           ;main.c: 64: totalCiclos();
  9371  118E  31BE  263B  3190   	fcall	_totalCiclos
  9372                           
  9373                           ;main.c: 65: teste_leds();
  9374  1191  31D6  2645  3190   	fcall	_teste_leds
  9375                           
  9376                           ;main.c: 78: Lcd_Clear();
  9377  1194  31E1  21DF  3190   	fcall	_Lcd_Clear
  9378                           
  9379                           ;main.c: 79: Lcd_White_Center_String(1,"SONITRON");
  9380  1197  30BE               	movlw	low (STR_1| (0+32768))
  9381  1198  0140               	movlb	0	; select bank0
  9382  1199  00B5               	movwf	Lcd_White_Center_String@a
  9383  119A  30E8               	movlw	high (STR_1| (0+32768))
  9384  119B  00B6               	movwf	Lcd_White_Center_String@a+1
  9385  119C  3001               	movlw	1
  9386  119D  31C0  2000  3190   	fcall	_Lcd_White_Center_String
  9387                           
  9388                           ;main.c: 80: Lcd_White_Center_String(2,"E25 3804");
  9389  11A0  30B5               	movlw	low (STR_2| (0+32768))
  9390  11A1  0140               	movlb	0	; select bank0
  9391  11A2  00B5               	movwf	Lcd_White_Center_String@a
  9392  11A3  30E8               	movlw	high (STR_2| (0+32768))
  9393  11A4  00B6               	movwf	Lcd_White_Center_String@a+1
  9394  11A5  3002               	movlw	2
  9395  11A6  31C0  2000  3190   	fcall	_Lcd_White_Center_String
  9396                           
  9397                           ;main.c: 81: delay(100);
  9398  11A9  3064               	movlw	100
  9399  11AA  0140               	movlb	0	; select bank0
  9400  11AB  00B3               	movwf	delay@ms
  9401  11AC  3000               	movlw	0
  9402  11AD  00B4               	movwf	delay@ms+1
  9403  11AE  31D1  2136  3190   	fcall	_delay
  9404                           
  9405                           ;main.c: 83: duty_ini = get_duty();
  9406  11B1  3188  2000  3190   	fcall	_get_duty
  9407  11B4  0142               	movlb	2	; select bank2
  9408  11B5  00C4               	movwf	??_main^(0+256)
  9409  11B6  0844               	movf	??_main^(0+256),w
  9410  11B7  0143               	movlb	3	; select bank3
  9411  11B8  00DE               	movwf	_duty_ini^(0+384)
  9412  11B9                     l18124:	
  9413                           ;main.c: 85: do{
  9414                           
  9415                           
  9416                           ;main.c: 86: rst_inversor();
  9417  11B9  31D2  220E  3190   	fcall	_rst_inversor
  9418                           
  9419                           ;main.c: 87: delay(20);
  9420  11BC  3014               	movlw	20
  9421  11BD  0140               	movlb	0	; select bank0
  9422  11BE  00B3               	movwf	delay@ms
  9423  11BF  3000               	movlw	0
  9424  11C0  00B4               	movwf	delay@ms+1
  9425  11C1  31D1  2136  3190   	fcall	_delay
  9426                           
  9427                           ;main.c: 88: }while(PORTDbits.RD7);
  9428  11C4  0140               	movlb	0	; select bank0
  9429  11C5  1B8F               	btfsc	15,7	;volatile
  9430  11C6  29B9               	goto	l18124
  9431                           
  9432                           ;main.c: 90: if(ciclador){
  9433  11C7  0143               	movlb	3	; select bank3
  9434  11C8  0861               	movf	_ciclador^(0+384),w
  9435  11C9  1903               	btfsc	3,2
  9436  11CA  29E4               	goto	l18146
  9437                           
  9438                           ;main.c: 91: ver_entrada();
  9439  11CB  31CE  26BA  3190   	fcall	_ver_entrada
  9440                           
  9441                           ;main.c: 92: if(flag_in.aciona1 || flag_in.aciona2){
  9442  11CE  0143               	movlb	3	; select bank3
  9443  11CF  1CCC               	btfss	_flag_in^(0+384),1	;volatile
  9444  11D0  194C               	btfsc	_flag_in^(0+384),2	;volatile
  9445  11D1  29DB               	goto	l18144
  9446  11D2  29E4               	goto	l18146
  9447  11D3                     l18138:	
  9448                           ;main.c: 94: case 1:
  9449                           
  9450                           ;main.c: 93: switch(ciclador){
  9451                           
  9452                           
  9453                           ;main.c: 95: ciclar();
  9454  11D3  3188  202D  3190   	fcall	_ciclar
  9455                           
  9456                           ;main.c: 96: break;
  9457  11D6  29E4               	goto	l18146
  9458  11D7                     l18140:	
  9459                           ;main.c: 97: case 2:
  9460                           
  9461                           
  9462                           ;main.c: 98: ciclarPneumatico();
  9463  11D7  31A9  21EC  3190   	fcall	_ciclarPneumatico
  9464                           
  9465                           ;main.c: 100: }
  9466                           
  9467                           ;main.c: 99: break;
  9468  11DA  29E4               	goto	l18146
  9469  11DB                     l18144:	
  9470  11DB  0143               	movlb	3	; select bank3
  9471  11DC  0861               	movf	_ciclador^(0+384),w
  9472                           
  9473                           ; Switch size 1, requested type "space"
  9474                           ; Number of cases is 2, Range of values is 1 to 2
  9475                           ; switch strategies available:
  9476                           ; Name         Instructions Cycles
  9477                           ; simple_byte            7     4 (average)
  9478                           ; direct_byte           13     9 (fixed)
  9479                           ; jumptable            263     9 (fixed)
  9480                           ;	Chosen strategy is simple_byte
  9481  11DD  3A01               	xorlw	1	; case 1
  9482  11DE  1903               	skipnz
  9483  11DF  29D3               	goto	l18138
  9484  11E0  3A03               	xorlw	3	; case 2
  9485  11E1  1903               	skipnz
  9486  11E2  29D7               	goto	l18140
  9487  11E3  29E4               	goto	l18146
  9488  11E4                     l18146:	
  9489                           
  9490                           ;main.c: 101: }
  9491                           ;main.c: 102: }
  9492                           ;main.c: 103: ciclador = 0;
  9493  11E4  0143               	movlb	3	; select bank3
  9494  11E5  01E1               	clrf	_ciclador^(0+384)
  9495                           
  9496                           ;main.c: 104: set_freq(freq_inicial);
  9497  11E6  0837               	movf	(_freq_inicial+1)^(0+384),w
  9498  11E7  0140               	movlb	0	; select bank0
  9499  11E8  00C7               	movwf	set_freq@f+1
  9500  11E9  0143               	movlb	3	; select bank3
  9501  11EA  0836               	movf	_freq_inicial^(0+384),w
  9502  11EB  0140               	movlb	0	; select bank0
  9503  11EC  00C6               	movwf	set_freq@f
  9504  11ED  31C5  2585  3190   	fcall	_set_freq
  9505                           
  9506                           ;main.c: 105: tela_inicial();
  9507  11F0  31CF  2789  3190   	fcall	_tela_inicial
  9508                           
  9509                           ;main.c: 106: status_gerador(STATUS_GERADOR,0);
  9510  11F3  3000               	movlw	0
  9511  11F4  0140               	movlb	0	; select bank0
  9512  11F5  00B0               	movwf	status_gerador@b
  9513  11F6  00B1               	movwf	status_gerador@b+1
  9514  11F7  3005               	movlw	5
  9515  11F8  31CC  24C4  3190   	fcall	_status_gerador
  9516                           
  9517                           ;main.c: 108: liberar();
  9518  11FB  31E1  21BB  3190   	fcall	_liberar
  9519  11FE  2AB6               	goto	l18156
  9520  11FF                     l18160:	
  9521                           ;main.c: 112: do{
  9522                           
  9523                           
  9524                           ;main.c: 113: rst_inversor();
  9525  11FF  31D2  220E  3190   	fcall	_rst_inversor
  9526                           
  9527                           ;main.c: 114: delay(20);
  9528  1202  3014               	movlw	20
  9529  1203  0140               	movlb	0	; select bank0
  9530  1204  00B3               	movwf	delay@ms
  9531  1205  3000               	movlw	0
  9532  1206  00B4               	movwf	delay@ms+1
  9533  1207  31D1  2136  3190   	fcall	_delay
  9534                           
  9535                           ;main.c: 115: }while(PORTDbits.RD7);
  9536  120A  0140               	movlb	0	; select bank0
  9537  120B  1B8F               	btfsc	15,7	;volatile
  9538  120C  29FF               	goto	l18160
  9539                           
  9540                           ;main.c: 116: trava_erro(erro_inv_str[idioma]);
  9541  120D  0143               	movlb	3	; select bank3
  9542  120E  085A               	movf	_idioma^(0+384),w
  9543  120F  0142               	movlb	2	; select bank2
  9544  1210  00C4               	movwf	??_main^(0+256)
  9545  1211  01C5               	clrf	(??_main^(0+256)+1)
  9546  1212  0844               	movf	??_main^(0+256),w
  9547  1213  0140               	movlb	0	; select bank0
  9548  1214  00AB               	movwf	___wmul@multiplier
  9549  1215  0142               	movlb	2	; select bank2
  9550  1216  0845               	movf	(??_main+1)^(0+256),w
  9551  1217  0140               	movlb	0	; select bank0
  9552  1218  00AC               	movwf	___wmul@multiplier+1
  9553  1219  3011               	movlw	17
  9554  121A  00AD               	movwf	___wmul@multiplicand
  9555  121B  3000               	movlw	0
  9556  121C  00AE               	movwf	___wmul@multiplicand+1
  9557  121D  31D0  20FE  3190   	fcall	___wmul
  9558  1220  3038               	movlw	low (_erro_inv_str| (0+32768))
  9559  1221  0142               	movlb	2	; select bank2
  9560  1222  00C6               	movwf	(??_main+2)^(0+256)
  9561  1223  30DC               	movlw	high (_erro_inv_str| (0+32768))
  9562  1224  00C7               	movwf	((??_main+2)^(0+256)+1)
  9563  1225  0140               	movlb	0	; select bank0
  9564  1226  082B               	movf	?___wmul,w
  9565  1227  0142               	movlb	2	; select bank2
  9566  1228  0746               	addwf	(??_main+2)^(0+256),w
  9567  1229  00C9               	movwf	_main$4251^(0+256)
  9568  122A  0140               	movlb	0	; select bank0
  9569  122B  082C               	movf	?___wmul+1,w
  9570  122C  0142               	movlb	2	; select bank2
  9571  122D  3D47               	addwfc	(??_main+3)^(0+256),w
  9572  122E  00CA               	movwf	(_main$4251+1)^(0+256)
  9573                           
  9574                           ;main.c: 116: trava_erro(erro_inv_str[idioma]);
  9575  122F  084A               	movf	(_main$4251+1)^(0+256),w
  9576  1230  0140               	movlb	0	; select bank0
  9577  1231  00D8               	movwf	trava_erro@s+1
  9578  1232  0142               	movlb	2	; select bank2
  9579  1233  0849               	movf	_main$4251^(0+256),w
  9580  1234  0140               	movlb	0	; select bank0
  9581  1235  00D7               	movwf	trava_erro@s
  9582  1236  31C6  26BE  3190   	fcall	_trava_erro
  9583                           
  9584                           ;main.c: 117: }
  9585  1239  2AB6               	goto	l18156
  9586  123A                     l18170:	
  9587                           
  9588                           ;main.c: 119: status_gerador(STATUS_GERADOR,1);
  9589  123A  3001               	movlw	1
  9590  123B  0140               	movlb	0	; select bank0
  9591  123C  00B0               	movwf	status_gerador@b
  9592  123D  3000               	movlw	0
  9593  123E  00B1               	movwf	status_gerador@b+1
  9594  123F  3005               	movlw	5
  9595  1240  31CC  24C4  3190   	fcall	_status_gerador
  9596                           
  9597                           ;main.c: 120: status_gerador(ERRO,1);
  9598  1243  3001               	movlw	1
  9599  1244  0140               	movlb	0	; select bank0
  9600  1245  00B0               	movwf	status_gerador@b
  9601  1246  3000               	movlw	0
  9602  1247  00B1               	movwf	status_gerador@b+1
  9603  1248  3003               	movlw	3
  9604  1249  31CC  24C4  3190   	fcall	_status_gerador
  9605                           
  9606                           ;main.c: 121: emergencia();
  9607  124C  31C4  2464  3190   	fcall	_emergencia
  9608                           
  9609                           ;main.c: 122: t_tela = 0;
  9610  124F  0143               	movlb	3	; select bank3
  9611  1250  01E3               	clrf	_t_tela^(0+384)
  9612                           
  9613                           ;main.c: 123: flag.inatividade = 0;
  9614  1251  13AD               	bcf	(_flag^(0+384)+1),7	;volatile
  9615                           
  9616                           ;main.c: 124: liberar();
  9617  1252  31E1  21BB  3190   	fcall	_liberar
  9618                           
  9619                           ;main.c: 125: status_gerador(STATUS_GERADOR,0);
  9620  1255  3000               	movlw	0
  9621  1256  0140               	movlb	0	; select bank0
  9622  1257  00B0               	movwf	status_gerador@b
  9623  1258  00B1               	movwf	status_gerador@b+1
  9624  1259  3005               	movlw	5
  9625  125A  31CC  24C4  3190   	fcall	_status_gerador
  9626                           
  9627                           ;main.c: 126: status_gerador(ERRO,0);
  9628  125D  3000               	movlw	0
  9629  125E  0140               	movlb	0	; select bank0
  9630  125F  00B0               	movwf	status_gerador@b
  9631  1260  00B1               	movwf	status_gerador@b+1
  9632  1261  3003               	movlw	3
  9633  1262  2AB3               	goto	L3
  9634  1263                     l18182:	
  9635                           ;main.c: 127: }
  9636                           
  9637  1263  1F2C               	btfss	_flag^(0+384),6	;volatile
  9638  1264  1CCD               	btfss	(_flag_in^(0+384)+1),1	;volatile
  9639  1265  2AC1               	goto	l409
  9640                           
  9641                           ;main.c: 129: status_gerador(STATUS_GERADOR,1);
  9642  1266  3001               	movlw	1
  9643  1267  0140               	movlb	0	; select bank0
  9644  1268  00B0               	movwf	status_gerador@b
  9645  1269  3000               	movlw	0
  9646  126A  00B1               	movwf	status_gerador@b+1
  9647  126B  3005               	movlw	5
  9648  126C  31CC  24C4  3190   	fcall	_status_gerador
  9649                           
  9650                           ;main.c: 130: t10ms = 0;
  9651  126F  0140               	movlb	0	; select bank0
  9652  1270  01DE               	clrf	_t10ms
  9653  1271  01DF               	clrf	_t10ms+1
  9654                           
  9655                           ;main.c: 134: Lcd_Clear();
  9656  1272  31E1  21DF  3190   	fcall	_Lcd_Clear
  9657                           
  9658                           ;main.c: 135: Lcd_Set_Cursor(1,1);
  9659  1275  0140               	movlb	0	; select bank0
  9660  1276  01AE               	clrf	Lcd_Set_Cursor@b
  9661  1277  0AAE               	incf	Lcd_Set_Cursor@b,f
  9662  1278  3001               	movlw	1
  9663  1279  31D5  25D8  3190   	fcall	_Lcd_Set_Cursor
  9664                           
  9665                           ;main.c: 136: flag.sussess = 1;
  9666  127C  0143               	movlb	3	; select bank3
  9667  127D  15AC               	bsf	_flag^(0+384),3	;volatile
  9668  127E                     l18196:	
  9669                           ;main.c: 137: do{
  9670                           
  9671                           
  9672                           ;main.c: 138: op_desce(tmp_desce);
  9673  127E  0843               	movf	(_tmp_desce+1)^(0+384),w
  9674  127F  0140               	movlb	0	; select bank0
  9675  1280  00D4               	movwf	op_desce@t+1
  9676  1281  0143               	movlb	3	; select bank3
  9677  1282  0842               	movf	_tmp_desce^(0+384),w
  9678  1283  0140               	movlb	0	; select bank0
  9679  1284  00D3               	movwf	op_desce@t
  9680  1285  31B3  234C  3190   	fcall	_op_desce
  9681                           
  9682                           ;main.c: 139: op_solda(tmp_solda);
  9683  1288  0143               	movlb	3	; select bank3
  9684  1289  0841               	movf	(_tmp_solda+1)^(0+384),w
  9685  128A  0140               	movlb	0	; select bank0
  9686  128B  00D4               	movwf	op_solda@t+1
  9687  128C  0143               	movlb	3	; select bank3
  9688  128D  0840               	movf	_tmp_solda^(0+384),w
  9689  128E  0140               	movlb	0	; select bank0
  9690  128F  00D3               	movwf	op_solda@t
  9691  1290  31A5  254B  3190   	fcall	_op_solda
  9692                           
  9693                           ;main.c: 140: op_fixar(tmp_fixar);
  9694  1293  0143               	movlb	3	; select bank3
  9695  1294  083D               	movf	(_tmp_fixar+1)^(0+384),w
  9696  1295  0140               	movlb	0	; select bank0
  9697  1296  00BB               	movwf	op_fixar@t+1
  9698  1297  0143               	movlb	3	; select bank3
  9699  1298  083C               	movf	_tmp_fixar^(0+384),w
  9700  1299  0140               	movlb	0	; select bank0
  9701  129A  00BA               	movwf	op_fixar@t
  9702  129B  31BC  248F  3190   	fcall	_op_fixar
  9703                           
  9704                           ;main.c: 141: }while(modo != NORMAL && statusSolda != PARADO);
  9705  129E  0143               	movlb	3	; select bank3
  9706  129F  085C               	movf	_modo^(0+384),w
  9707  12A0  1D03               	btfss	3,2
  9708  12A1  085B               	movf	_statusSolda^(0+384),w
  9709  12A2  1D03               	btfss	3,2
  9710  12A3  2A7E               	goto	l18196
  9711                           
  9712                           ;main.c: 142: flag_in.liberado = 0;
  9713  12A4  10CD               	bcf	(_flag_in^(0+384)+1),1	;volatile
  9714                           
  9715                           ;main.c: 143: trata_dados();
  9716  12A5  3199  219E  3190   	fcall	_trata_dados
  9717                           
  9718                           ;main.c: 144: t_tela = 0;
  9719  12A8  0143               	movlb	3	; select bank3
  9720  12A9  01E3               	clrf	_t_tela^(0+384)
  9721                           
  9722                           ;main.c: 145: flag.inatividade = 0;
  9723  12AA  13AD               	bcf	(_flag^(0+384)+1),7	;volatile
  9724                           
  9725                           ;main.c: 146: liberar();
  9726  12AB  31E1  21BB  3190   	fcall	_liberar
  9727  12AE                     L1:	
  9728                           
  9729                           ;main.c: 147: status_gerador(STATUS_GERADOR,0);
  9730  12AE  3000               	movlw	0
  9731  12AF  0140               	movlb	0	; select bank0
  9732  12B0  00B0               	movwf	status_gerador@b
  9733  12B1  00B1               	movwf	status_gerador@b+1
  9734  12B2  3005               	movlw	5
  9735  12B3                     L3:	
  9736  12B3  31CC  24C4  3190   	fcall	_status_gerador
  9737  12B6                     l18156:	
  9738                           ;main.c: 109: while (1){
  9739                           
  9740                           ;main.c: 149: }
  9741                           
  9742                           
  9743                           ;main.c: 110: ver_entrada();
  9744  12B6  31CE  26BA  3190   	fcall	_ver_entrada
  9745                           
  9746                           ;main.c: 111: if(PORTDbits.RD7){
  9747  12B9  0140               	movlb	0	; select bank0
  9748  12BA  1B8F               	btfsc	15,7	;volatile
  9749  12BB  29FF               	goto	l18160
  9750                           
  9751                           ;main.c: 118: else if(flag_in.emerg){
  9752  12BC  0143               	movlb	3	; select bank3
  9753  12BD  184C               	btfsc	_flag_in^(0+384),0	;volatile
  9754  12BE  2A3A               	goto	l18170
  9755                           
  9756                           ;main.c: 128: else if(flag.inicia && !flag.abortar && flag_in.liberado){
  9757  12BF  1A2C               	btfsc	_flag^(0+384),4	;volatile
  9758  12C0  2A63               	goto	l18182
  9759  12C1                     l409:	
  9760                           
  9761                           ;main.c: 150: else if(flag_in.liberado){
  9762  12C1  1CCD               	btfss	(_flag_in^(0+384)+1),1	;volatile
  9763  12C2  2AB6               	goto	l18156
  9764                           
  9765                           ;main.c: 151: char bt = teclado();
  9766  12C3  31C2  22CC  3190   	fcall	_teclado
  9767  12C6  0142               	movlb	2	; select bank2
  9768  12C7  00C4               	movwf	??_main^(0+256)
  9769  12C8  0844               	movf	??_main^(0+256),w
  9770  12C9  00CF               	movwf	main@bt^(0+256)
  9771                           
  9772                           ;main.c: 152: char senha_OK = 0;
  9773  12CA  01CB               	clrf	main@senha_OK^(0+256)
  9774                           
  9775                           ;main.c: 153: if(bt == 9){
  9776  12CB  3009               	movlw	9
  9777  12CC  064F               	xorwf	main@bt^(0+256),w
  9778  12CD  1D03               	btfss	3,2
  9779  12CE  2B26               	goto	l18244
  9780                           
  9781                           ;main.c: 154: status_gerador(STATUS_GERADOR,1);
  9782  12CF  3001               	movlw	1
  9783  12D0  0140               	movlb	0	; select bank0
  9784  12D1  00B0               	movwf	status_gerador@b
  9785  12D2  3000               	movlw	0
  9786  12D3  00B1               	movwf	status_gerador@b+1
  9787  12D4  3005               	movlw	5
  9788  12D5  31CC  24C4  3190   	fcall	_status_gerador
  9789                           
  9790                           ;main.c: 155: liberar_tecla(bt,0);
  9791  12D8  3000               	movlw	0
  9792  12D9  0140               	movlb	0	; select bank0
  9793  12DA  00B3               	movwf	liberar_tecla@t
  9794  12DB  00B4               	movwf	liberar_tecla@t+1
  9795  12DC  0142               	movlb	2	; select bank2
  9796  12DD  084F               	movf	main@bt^(0+256),w
  9797  12DE  31D7  2735  3190   	fcall	_liberar_tecla
  9798                           
  9799                           ;main.c: 156: senha_OK = Autenticar();
  9800  12E1  31BF  271B  3190   	fcall	_Autenticar
  9801  12E4  0142               	movlb	2	; select bank2
  9802  12E5  00C4               	movwf	??_main^(0+256)
  9803  12E6  0844               	movf	??_main^(0+256),w
  9804  12E7  00CB               	movwf	main@senha_OK^(0+256)
  9805                           
  9806                           ;main.c: 157: if(senha_OK == 1)
  9807  12E8  034B               	decf	main@senha_OK^(0+256),w
  9808  12E9  1D03               	btfss	3,2
  9809  12EA  2AEF               	goto	l18232
  9810                           
  9811                           ;main.c: 158: rotina_tela();
  9812  12EB  31B4  246B  3190   	fcall	_rotina_tela
  9813  12EE  2B1F               	goto	l18238
  9814  12EF                     l18232:	
  9815                           
  9816                           ;main.c: 159: else if(senha_OK == 0){
  9817  12EF  0142               	movlb	2	; select bank2
  9818  12F0  084B               	movf	main@senha_OK^(0+256),w
  9819  12F1  1D03               	btfss	3,2
  9820  12F2  2B1F               	goto	l18238
  9821                           
  9822                           ;main.c: 161: trava_erro(erro_senha_str[idioma]);
  9823  12F3  0143               	movlb	3	; select bank3
  9824  12F4  085A               	movf	_idioma^(0+384),w
  9825  12F5  0142               	movlb	2	; select bank2
  9826  12F6  00C4               	movwf	??_main^(0+256)
  9827  12F7  01C5               	clrf	(??_main^(0+256)+1)
  9828  12F8  0844               	movf	??_main^(0+256),w
  9829  12F9  0140               	movlb	0	; select bank0
  9830  12FA  00AB               	movwf	___wmul@multiplier
  9831  12FB  0142               	movlb	2	; select bank2
  9832  12FC  0845               	movf	(??_main+1)^(0+256),w
  9833  12FD  0140               	movlb	0	; select bank0
  9834  12FE  00AC               	movwf	___wmul@multiplier+1
  9835  12FF  3011               	movlw	17
  9836  1300  00AD               	movwf	___wmul@multiplicand
  9837  1301  3000               	movlw	0
  9838  1302  00AE               	movwf	___wmul@multiplicand+1
  9839  1303  31D0  20FE  3190   	fcall	___wmul
  9840  1306  30D4               	movlw	low (_erro_senha_str| (0+32768))
  9841  1307  0142               	movlb	2	; select bank2
  9842  1308  00C6               	movwf	(??_main+2)^(0+256)
  9843  1309  30D9               	movlw	high (_erro_senha_str| (0+32768))
  9844  130A  00C7               	movwf	((??_main+2)^(0+256)+1)
  9845  130B  0140               	movlb	0	; select bank0
  9846  130C  082B               	movf	?___wmul,w
  9847  130D  0142               	movlb	2	; select bank2
  9848  130E  0746               	addwf	(??_main+2)^(0+256),w
  9849  130F  00C9               	movwf	_main$4251^(0+256)
  9850  1310  0140               	movlb	0	; select bank0
  9851  1311  082C               	movf	?___wmul+1,w
  9852  1312  0142               	movlb	2	; select bank2
  9853  1313  3D47               	addwfc	(??_main+3)^(0+256),w
  9854  1314  00CA               	movwf	(_main$4251+1)^(0+256)
  9855                           
  9856                           ;main.c: 161: trava_erro(erro_senha_str[idioma]);
  9857  1315  084A               	movf	(_main$4251+1)^(0+256),w
  9858  1316  0140               	movlb	0	; select bank0
  9859  1317  00D8               	movwf	trava_erro@s+1
  9860  1318  0142               	movlb	2	; select bank2
  9861  1319  0849               	movf	_main$4251^(0+256),w
  9862  131A  0140               	movlb	0	; select bank0
  9863  131B  00D7               	movwf	trava_erro@s
  9864  131C  31C6  26BE  3190   	fcall	_trava_erro
  9865  131F                     l18238:	
  9866                           
  9867                           ;main.c: 162: }
  9868                           ;main.c: 163: liberar();
  9869  131F  31E1  21BB  3190   	fcall	_liberar
  9870                           
  9871                           ;main.c: 164: tela_inicial();
  9872  1322  31CF  2789  3190   	fcall	_tela_inicial
  9873  1325  2AAE               	goto	L1
  9874  1326                     l18244:	
  9875                           ;main.c: 166: }
  9876                           
  9877                           ;main.c: 165: status_gerador(STATUS_GERADOR,0);
  9878                           
  9879                           
  9880                           ;main.c: 167: else if(bt == 18){
  9881  1326  3012               	movlw	18
  9882  1327  0142               	movlb	2	; select bank2
  9883  1328  064F               	xorwf	main@bt^(0+256),w
  9884  1329  1D03               	btfss	3,2
  9885  132A  2B49               	goto	l18252
  9886                           
  9887                           ;main.c: 168: status_gerador(STATUS_GERADOR,1);
  9888  132B  3001               	movlw	1
  9889  132C  0140               	movlb	0	; select bank0
  9890  132D  00B0               	movwf	status_gerador@b
  9891  132E  3000               	movlw	0
  9892  132F  00B1               	movwf	status_gerador@b+1
  9893  1330  3005               	movlw	5
  9894  1331  31CC  24C4  3190   	fcall	_status_gerador
  9895                           
  9896                           ;main.c: 169: func_enter();
  9897  1334  31BD  2563  3190   	fcall	_func_enter
  9898                           
  9899                           ;main.c: 170: liberar();
  9900  1337  31E1  21BB  3190   	fcall	_liberar
  9901                           
  9902                           ;main.c: 171: tela_inicial();
  9903  133A  31CF  2789  3190   	fcall	_tela_inicial
  9904                           
  9905                           ;main.c: 172: status_gerador(STATUS_GERADOR,0);
  9906  133D  3000               	movlw	0
  9907  133E  0140               	movlb	0	; select bank0
  9908  133F  00B0               	movwf	status_gerador@b
  9909  1340  00B1               	movwf	status_gerador@b+1
  9910  1341  3005               	movlw	5
  9911  1342  31CC  24C4  3190   	fcall	_status_gerador
  9912                           
  9913                           ;main.c: 173: flag.inatividade = 0;
  9914  1345  0143               	movlb	3	; select bank3
  9915  1346  13AD               	bcf	(_flag^(0+384)+1),7	;volatile
  9916                           
  9917                           ;main.c: 174: t_tela = 0;
  9918  1347  01E3               	clrf	_t_tela^(0+384)
  9919                           
  9920                           ;main.c: 175: }
  9921  1348  2AB6               	goto	l18156
  9922  1349                     l18252:	
  9923                           
  9924                           ;main.c: 176: else if(bt == 12){
  9925  1349  300C               	movlw	12
  9926  134A  0142               	movlb	2	; select bank2
  9927  134B  064F               	xorwf	main@bt^(0+256),w
  9928  134C  1D03               	btfss	3,2
  9929  134D  2B5E               	goto	l18270
  9930                           
  9931                           ;main.c: 177: status_gerador(STATUS_GERADOR,1);
  9932  134E  3001               	movlw	1
  9933  134F  0140               	movlb	0	; select bank0
  9934  1350  00B0               	movwf	status_gerador@b
  9935  1351  3000               	movlw	0
  9936  1352  00B1               	movwf	status_gerador@b+1
  9937  1353  3005               	movlw	5
  9938  1354  31CC  24C4  3190   	fcall	_status_gerador
  9939                           
  9940                           ;main.c: 178: func_rst();
  9941  1357  31C9  2144  3190   	fcall	_func_rst
  9942                           
  9943                           ;main.c: 179: Inicia_LCD();
  9944  135A  31E7  2760  3190   	fcall	_Inicia_LCD
  9945  135D  2B71               	goto	L5
  9946  135E                     l18270:	
  9947                           ;main.c: 185: }
  9948                           
  9949                           ;main.c: 184: status_gerador(STATUS_GERADOR,0);
  9950                           
  9951                           ;main.c: 183: t_tela = 0;
  9952                           
  9953                           ;main.c: 182: flag.inatividade = 0;
  9954                           
  9955                           ;main.c: 181: tela_inicial();
  9956                           
  9957                           ;main.c: 180: liberar();
  9958                           
  9959                           
  9960                           ;main.c: 186: else if(bt == 33){
  9961  135E  3021               	movlw	33
  9962  135F  0142               	movlb	2	; select bank2
  9963  1360  064F               	xorwf	main@bt^(0+256),w
  9964  1361  1D03               	btfss	3,2
  9965  1362  2B7B               	goto	l18280
  9966                           
  9967                           ;main.c: 187: status_gerador(STATUS_GERADOR,1);
  9968  1363  3001               	movlw	1
  9969  1364  0140               	movlb	0	; select bank0
  9970  1365  00B0               	movwf	status_gerador@b
  9971  1366  3000               	movlw	0
  9972  1367  00B1               	movwf	status_gerador@b+1
  9973  1368  3005               	movlw	5
  9974  1369  31CC  24C4  3190   	fcall	_status_gerador
  9975                           
  9976                           ;main.c: 188: teste_pneumatico(bt);
  9977  136C  0142               	movlb	2	; select bank2
  9978  136D  084F               	movf	main@bt^(0+256),w
  9979  136E  31B1  211D  3190   	fcall	_teste_pneumatico
  9980  1371                     L5:	
  9981                           
  9982                           ;main.c: 189: liberar();
  9983  1371  31E1  21BB  3190   	fcall	_liberar
  9984                           
  9985                           ;main.c: 190: tela_inicial();
  9986  1374  31CF  2789  3190   	fcall	_tela_inicial
  9987                           
  9988                           ;main.c: 191: flag.inatividade = 0;
  9989  1377  0143               	movlb	3	; select bank3
  9990  1378  13AD               	bcf	(_flag^(0+384)+1),7	;volatile
  9991                           
  9992                           ;main.c: 192: t_tela = 0;
  9993  1379  01E3               	clrf	_t_tela^(0+384)
  9994  137A  2AAE               	goto	L1
  9995  137B                     l18280:	
  9996                           ;main.c: 194: }
  9997                           
  9998                           ;main.c: 193: status_gerador(STATUS_GERADOR,0);
  9999                           
 10000                           
 10001                           ;main.c: 195: else if(bt == 36){
 10002  137B  3024               	movlw	36
 10003  137C  0142               	movlb	2	; select bank2
 10004  137D  064F               	xorwf	main@bt^(0+256),w
 10005  137E  1D03               	btfss	3,2
 10006  137F  2B97               	goto	l427
 10007                           
 10008                           ;main.c: 196: status_gerador(STATUS_GERADOR,1);
 10009  1380  3001               	movlw	1
 10010  1381  0140               	movlb	0	; select bank0
 10011  1382  00B0               	movwf	status_gerador@b
 10012  1383  3000               	movlw	0
 10013  1384  00B1               	movwf	status_gerador@b+1
 10014  1385  3005               	movlw	5
 10015  1386  31CC  24C4  3190   	fcall	_status_gerador
 10016                           
 10017                           ;main.c: 197: teste_US(bt);
 10018  1389  0142               	movlb	2	; select bank2
 10019  138A  084F               	movf	main@bt^(0+256),w
 10020  138B  319C  2499  3190   	fcall	_teste_US
 10021                           
 10022                           ;main.c: 198: liberar();
 10023  138E  31E1  21BB  3190   	fcall	_liberar
 10024                           
 10025                           ;main.c: 199: tela_inicial();
 10026  1391  31CF  2789  3190   	fcall	_tela_inicial
 10027                           
 10028                           ;main.c: 200: flag.inatividade = 0;
 10029  1394  0143               	movlb	3	; select bank3
 10030  1395  13AD               	bcf	(_flag^(0+384)+1),7	;volatile
 10031  1396  2AAE               	goto	L1
 10032  1397                     l427:	
 10033                           ;main.c: 202: }
 10034                           
 10035                           ;main.c: 201: status_gerador(STATUS_GERADOR,0);
 10036                           
 10037                           
 10038                           ;main.c: 203: else if(!flag.inatividade){
 10039  1397  0143               	movlb	3	; select bank3
 10040  1398  1BAD               	btfsc	(_flag^(0+384)+1),7	;volatile
 10041  1399  2BB5               	goto	l429
 10042                           
 10043                           ;main.c: 204: flag.inatividade = 1;
 10044  139A  17AD               	bsf	(_flag^(0+384)+1),7	;volatile
 10045                           
 10046                           ;main.c: 205: tInatividade = t10ms_global;
 10047  139B  0845               	movf	(_t10ms_global+1)^(0+384),w
 10048  139C  0144               	movlb	4	; select bank4
 10049  139D  00D3               	movwf	(_tInatividade+1)^(0+512)
 10050  139E  0143               	movlb	3	; select bank3
 10051  139F  0844               	movf	_t10ms_global^(0+384),w
 10052  13A0  0144               	movlb	4	; select bank4
 10053  13A1  00D2               	movwf	_tInatividade^(0+512)
 10054                           
 10055                           ;main.c: 206: t5min = 0;
 10056  13A2  01D0               	clrf	_t5min^(0+512)
 10057  13A3  01D1               	clrf	(_t5min+1)^(0+512)
 10058                           
 10059                           ;main.c: 207: for(char i = 0; i<4;i++){
 10060  13A4  0142               	movlb	2	; select bank2
 10061  13A5  01CC               	clrf	main@i^(0+256)
 10062  13A6                     L2:	
 10063  13A6  3004               	movlw	4
 10064  13A7  024C               	subwf	main@i^(0+256),w
 10065  13A8  1803               	btfsc	3,0
 10066  13A9  2AB6               	goto	l18156
 10067                           
 10068                           ;main.c: 208: t1s[i] = 0;
 10069  13AA  084C               	movf	main@i^(0+256),w
 10070  13AB  3EC8               	addlw	(low (_t1s| (0+512)))& (0+255)
 10071  13AC  0086               	movwf	6
 10072  13AD  3002               	movlw	2	; select bank5/6
 10073  13AE  0087               	movwf	7
 10074  13AF  0181               	clrf	1
 10075  13B0  3001               	movlw	1
 10076  13B1  00C4               	movwf	??_main^(0+256)
 10077  13B2  0844               	movf	??_main^(0+256),w
 10078  13B3  07CC               	addwf	main@i^(0+256),f
 10079  13B4  2BA6               	goto	L2
 10080  13B5                     l429:	
 10081                           ;main.c: 209: }
 10082                           ;main.c: 210: }
 10083                           
 10084                           
 10085                           ;main.c: 211: else if (flag.inatividade){
 10086  13B5  1FAD               	btfss	(_flag^(0+384)+1),7	;volatile
 10087  13B6  2AB6               	goto	l18156
 10088                           
 10089                           ;main.c: 212: if(t10ms_global - tInatividade > 100){
 10090  13B7  0144               	movlb	4	; select bank4
 10091  13B8  0952               	comf	_tInatividade^(0+512),w
 10092  13B9  0142               	movlb	2	; select bank2
 10093  13BA  00C4               	movwf	??_main^(0+256)
 10094  13BB  0144               	movlb	4	; select bank4
 10095  13BC  0953               	comf	(_tInatividade+1)^(0+512),w
 10096  13BD  0142               	movlb	2	; select bank2
 10097  13BE  00C5               	movwf	(??_main^(0+256)+1)
 10098  13BF  0AC4               	incf	??_main^(0+256),f
 10099  13C0  1903               	skipnz
 10100  13C1  0AC5               	incf	(??_main^(0+256)+1),f
 10101  13C2  0143               	movlb	3	; select bank3
 10102  13C3  0844               	movf	_t10ms_global^(0+384),w
 10103  13C4  0142               	movlb	2	; select bank2
 10104  13C5  0744               	addwf	??_main^(0+256),w
 10105  13C6  00C6               	movwf	(??_main+2)^(0+256)
 10106  13C7  0143               	movlb	3	; select bank3
 10107  13C8  0845               	movf	(_t10ms_global+1)^(0+384),w
 10108  13C9  0142               	movlb	2	; select bank2
 10109  13CA  3D45               	addwfc	(??_main+1)^(0+256),w
 10110  13CB  00C7               	movwf	(??_main+3)^(0+256)
 10111  13CC  3000               	movlw	0
 10112  13CD  0247               	subwf	(??_main+3)^(0+256),w
 10113  13CE  3065               	movlw	101
 10114  13CF  1903               	skipnz
 10115  13D0  0246               	subwf	(??_main+2)^(0+256),w
 10116  13D1  1C03               	skipc
 10117  13D2  2AB6               	goto	l18156
 10118                           
 10119                           ;main.c: 213: tInatividade = t10ms_global;
 10120  13D3  0143               	movlb	3	; select bank3
 10121  13D4  0845               	movf	(_t10ms_global+1)^(0+384),w
 10122  13D5  0144               	movlb	4	; select bank4
 10123  13D6  00D3               	movwf	(_tInatividade+1)^(0+512)
 10124  13D7  0143               	movlb	3	; select bank3
 10125  13D8  0844               	movf	_t10ms_global^(0+384),w
 10126  13D9  0144               	movlb	4	; select bank4
 10127  13DA  00D2               	movwf	_tInatividade^(0+512)
 10128                           
 10129                           ;main.c: 214: t5min++;
 10130  13DB  3001               	movlw	1
 10131  13DC  07D0               	addwf	_t5min^(0+512),f
 10132  13DD  3000               	movlw	0
 10133  13DE  3DD1               	addwfc	(_t5min+1)^(0+512),f
 10134                           
 10135                           ;main.c: 215: for(char ii = 0; ii<4;ii++){
 10136  13DF  0142               	movlb	2	; select bank2
 10137  13E0  01CD               	clrf	main@ii^(0+256)
 10138  13E1  3004               	movlw	4
 10139  13E2  024D               	subwf	main@ii^(0+256),w
 10140  13E3  1803               	btfsc	3,0
 10141  13E4  2BF6               	goto	l18318
 10142  13E5                     l18312:	
 10143                           
 10144                           ;main.c: 216: t1s[ii] += 1;
 10145  13E5  3001               	movlw	1
 10146  13E6  00C4               	movwf	??_main^(0+256)
 10147  13E7  084D               	movf	main@ii^(0+256),w
 10148  13E8  3EC8               	addlw	(low (_t1s| (0+512)))& (0+255)
 10149  13E9  0086               	movwf	6
 10150  13EA  3002               	movlw	2	; select bank5/6
 10151  13EB  0087               	movwf	7
 10152  13EC  0844               	movf	??_main^(0+256),w
 10153  13ED  0781               	addwf	1,f
 10154  13EE  3001               	movlw	1
 10155  13EF  00C4               	movwf	??_main^(0+256)
 10156  13F0  0844               	movf	??_main^(0+256),w
 10157  13F1  07CD               	addwf	main@ii^(0+256),f
 10158  13F2  3004               	movlw	4
 10159  13F3  024D               	subwf	main@ii^(0+256),w
 10160  13F4  1C03               	skipc
 10161  13F5  2BE5               	goto	l18312
 10162  13F6                     l18318:	
 10163                           
 10164                           ;main.c: 217: }
 10165                           ;main.c: 219: if(t1s[0] >= 20){
 10166  13F6  3014               	movlw	20
 10167  13F7  0145               	movlb	5	; select bank5
 10168  13F8  0248               	subwf	_t1s^(0+640),w
 10169  13F9  1C03               	skipc
 10170  13FA  2C1F               	goto	l18332
 10171                           
 10172                           ;main.c: 220: t1s[0] = 0;
 10173  13FB  01C8               	clrf	_t1s^(0+640)
 10174                           
 10175                           ;main.c: 221: led.HF = 1;
 10176  13FC  0143               	movlb	3	; select bank3
 10177  13FD  1465               	bsf	_led^(0+384),0	;volatile
 10178                           
 10179                           ;main.c: 223: if(ver_freq(get_freq(10)) > 0){
 10180  13FE  300A               	movlw	10
 10181  13FF  31C6  261D  3190   	fcall	_get_freq
 10182  1402  0140               	movlb	0	; select bank0
 10183  1403  083E               	movf	?_get_freq+1,w
 10184  1404  00C7               	movwf	ver_freq@f+1
 10185  1405  083D               	movf	?_get_freq,w
 10186  1406  00C6               	movwf	ver_freq@f
 10187  1407  31D6  260E  3190   	fcall	_ver_freq
 10188  140A  3A00               	xorlw	0
 10189  140B  1903               	skipnz
 10190  140C  2C12               	goto	l18328
 10191                           
 10192                           ;main.c: 224: freq_atual = freq_inicial;
 10193  140D  0143               	movlb	3	; select bank3
 10194  140E  0837               	movf	(_freq_inicial+1)^(0+384),w
 10195  140F  00B5               	movwf	(_freq_atual+1)^(0+384)
 10196  1410  0836               	movf	_freq_inicial^(0+384),w
 10197  1411  00B4               	movwf	_freq_atual^(0+384)
 10198  1412                     l18328:	
 10199                           
 10200                           ;main.c: 225: }
 10201                           ;main.c: 226: set_freq(freq_atual);
 10202  1412  0143               	movlb	3	; select bank3
 10203  1413  0835               	movf	(_freq_atual+1)^(0+384),w
 10204  1414  0140               	movlb	0	; select bank0
 10205  1415  00C7               	movwf	set_freq@f+1
 10206  1416  0143               	movlb	3	; select bank3
 10207  1417  0834               	movf	_freq_atual^(0+384),w
 10208  1418  0140               	movlb	0	; select bank0
 10209  1419  00C6               	movwf	set_freq@f
 10210  141A  31C5  2585  3190   	fcall	_set_freq
 10211                           
 10212                           ;main.c: 227: led.HF = 0;
 10213  141D  0143               	movlb	3	; select bank3
 10214  141E  1065               	bcf	_led^(0+384),0	;volatile
 10215  141F                     l18332:	
 10216                           
 10217                           ;main.c: 229: }
 10218                           ;main.c: 230: if(t1s[1] >= 2){
 10219  141F  3002               	movlw	2
 10220  1420  0145               	movlb	5	; select bank5
 10221  1421  0249               	subwf	(_t1s^(0+640)+1),w
 10222  1422  1C03               	skipc
 10223  1423  2C34               	goto	l18346
 10224                           
 10225                           ;main.c: 231: t1s[1] = 0;
 10226  1424  01C9               	clrf	(_t1s^(0+640)+1)
 10227                           
 10228                           ;main.c: 232: if (!troca_tela){
 10229  1425  0143               	movlb	3	; select bank3
 10230  1426  0862               	movf	_troca_tela^(0+384),w
 10231  1427  1D03               	btfss	3,2
 10232  1428  2C2F               	goto	l18342
 10233                           
 10234                           ;main.c: 233: troca_tela = 1;
 10235  1429  01E2               	clrf	_troca_tela^(0+384)
 10236  142A  0AE2               	incf	_troca_tela^(0+384),f
 10237                           
 10238                           ;main.c: 234: tela_inicial();
 10239  142B  31CF  2789  3190   	fcall	_tela_inicial
 10240                           
 10241                           ;main.c: 235: }
 10242  142E  2C34               	goto	l18346
 10243  142F                     l18342:	
 10244                           
 10245                           ;main.c: 236: else{
 10246                           ;main.c: 237: troca_tela = 0;
 10247  142F  0143               	movlb	3	; select bank3
 10248  1430  01E2               	clrf	_troca_tela^(0+384)
 10249                           
 10250                           ;main.c: 238: tela_ultima_solda();
 10251  1431  31AC  24B3  3190   	fcall	_tela_ultima_solda
 10252  1434                     l18346:	
 10253                           
 10254                           ;main.c: 239: }
 10255                           ;main.c: 240: }
 10256                           ;main.c: 241: if(t5min >= 60*10){
 10257  1434  3002               	movlw	2
 10258  1435  0144               	movlb	4	; select bank4
 10259  1436  0251               	subwf	(_t5min+1)^(0+512),w
 10260  1437  3058               	movlw	88
 10261  1438  1903               	skipnz
 10262  1439  0250               	subwf	_t5min^(0+512),w
 10263  143A  1C03               	skipc
 10264  143B  2AB6               	goto	l18156
 10265                           
 10266                           ;main.c: 242: t5min = 0;
 10267  143C  01D0               	clrf	_t5min^(0+512)
 10268  143D  01D1               	clrf	(_t5min+1)^(0+512)
 10269                           
 10270                           ;main.c: 243: led.value = 0xFF;
 10271  143E  30FF               	movlw	255
 10272  143F  0142               	movlb	2	; select bank2
 10273  1440  00C4               	movwf	??_main^(0+256)
 10274  1441  0844               	movf	??_main^(0+256),w
 10275  1442  0143               	movlb	3	; select bank3
 10276  1443  00E5               	movwf	_led^(0+384)	;volatile
 10277                           
 10278                           ;main.c: 244: LATBbits.LATB7 = 1;
 10279  1444  0140               	movlb	0	; select bank0
 10280  1445  1797               	bsf	23,7	;volatile
 10281                           
 10282                           ;main.c: 245: freq_atual = freq_inicial;
 10283  1446  0143               	movlb	3	; select bank3
 10284  1447  0837               	movf	(_freq_inicial+1)^(0+384),w
 10285  1448  00B5               	movwf	(_freq_atual+1)^(0+384)
 10286  1449  0836               	movf	_freq_inicial^(0+384),w
 10287  144A  00B4               	movwf	_freq_atual^(0+384)
 10288                           
 10289                           ;main.c: 246: set_freq(freq_atual);
 10290  144B  0835               	movf	(_freq_atual+1)^(0+384),w
 10291  144C  0140               	movlb	0	; select bank0
 10292  144D  00C7               	movwf	set_freq@f+1
 10293  144E  0143               	movlb	3	; select bank3
 10294  144F  0834               	movf	_freq_atual^(0+384),w
 10295  1450  0140               	movlb	0	; select bank0
 10296  1451  00C6               	movwf	set_freq@f
 10297  1452  31C5  2585  3190   	fcall	_set_freq
 10298                           
 10299                           ;main.c: 247: delay(10);
 10300  1455  300A               	movlw	10
 10301  1456  0140               	movlb	0	; select bank0
 10302  1457  00B3               	movwf	delay@ms
 10303  1458  3000               	movlw	0
 10304  1459  00B4               	movwf	delay@ms+1
 10305  145A  31D1  2136  3190   	fcall	_delay
 10306                           
 10307                           ;main.c: 248: led.value = 0;
 10308  145D  0143               	movlb	3	; select bank3
 10309  145E  01E5               	clrf	_led^(0+384)	;volatile
 10310                           
 10311                           ;main.c: 249: LATBbits.LATB7 = 0;
 10312  145F  0140               	movlb	0	; select bank0
 10313  1460  1397               	bcf	23,7	;volatile
 10314  1461  2AB6               	goto	l18156
 10315  1462                     __end_of_main:	
 10316                           
 10317                           	psect	text1
 10318  311D                     __ptext1:	
 10319 ;; *************** function _teste_pneumatico *****************
 10320 ;; Defined at:
 10321 ;;		line 1933 in file "func.c"
 10322 ;; Parameters:    Size  Location     Type
 10323 ;;  b               1    wreg     unsigned char 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  b               1   28[BANK1 ] unsigned char 
 10326 ;;  bt              1   29[BANK1 ] unsigned char 
 10327 ;; Return value:  Size  Location     Type
 10328 ;;                  1    wreg      void 
 10329 ;; Registers used:
 10330 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10331 ;; Tracked objects:
 10332 ;;		On entry : 0/0
 10333 ;;		On exit  : 0/0
 10334 ;;		Unchanged: 0/0
 10335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10337 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10338 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10339 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10340 ;;Total ram usage:        6 bytes
 10341 ;; Hardware stack levels used:    1
 10342 ;; Hardware stack levels required when called:   11
 10343 ;; This function calls:
 10344 ;;		_Lcd_Clear
 10345 ;;		___wmul
 10346 ;;		_emergencia
 10347 ;;		_escreve_LCD
 10348 ;;		_liberar
 10349 ;;		_liberar_tecla
 10350 ;;		_saida
 10351 ;;		_teclado
 10352 ;;		_ver_entrada
 10353 ;; This function is called by:
 10354 ;;		_main
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           
 10359                           ;psect for function _teste_pneumatico
 10360  311D                     _teste_pneumatico:	
 10361                           
 10362                           ;incstack = 0
 10363                           ; Regs used in _teste_pneumatico: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10364                           ;teste_pneumatico@b stored from wreg
 10365  311D  0141               	movlb	1	; select bank1
 10366  311E  00BC               	movwf	teste_pneumatico@b^(0+128)
 10367                           
 10368                           ;func.c: 1934: if(!cfg.pne_desce)
 10369  311F  0143               	movlb	3	; select bank3
 10370  3120  1E30               	btfss	_cfg^(0+384),4
 10371  3121  0008               	return
 10372                           
 10373                           ;func.c: 1936: else if(liberar_tecla(b,1000)){
 10374                           
 10375                           ;func.c: 1935: return;
 10376  3122  30E8               	movlw	232
 10377  3123  0140               	movlb	0	; select bank0
 10378  3124  00B3               	movwf	liberar_tecla@t
 10379  3125  3003               	movlw	3
 10380  3126  00B4               	movwf	liberar_tecla@t+1
 10381  3127  0141               	movlb	1	; select bank1
 10382  3128  083C               	movf	teste_pneumatico@b^(0+128),w
 10383  3129  31D7  2735  31B1   	fcall	_liberar_tecla
 10384  312C  0140               	movlb	0	; select bank0
 10385  312D  0833               	movf	?_liberar_tecla,w
 10386  312E  0434               	iorwf	?_liberar_tecla+1,w
 10387  312F  1903               	btfsc	3,2
 10388  3130  2A2F               	goto	l1829
 10389                           
 10390                           ;func.c: 1937: flag.teste = 1;
 10391  3131  0143               	movlb	3	; select bank3
 10392  3132  172D               	bsf	(_flag^(0+384)+1),6	;volatile
 10393                           
 10394                           ;func.c: 1938: char bt;
 10395                           ;func.c: 1940: Lcd_Clear();
 10396  3133  31E1  21DF  31B1   	fcall	_Lcd_Clear
 10397                           
 10398                           ;func.c: 1941: escreve_LCD(1,1,teste_PN1_str[idioma]);
 10399  3136  0140               	movlb	0	; select bank0
 10400  3137  01B5               	clrf	escreve_LCD@coluna
 10401  3138  0AB5               	incf	escreve_LCD@coluna,f
 10402  3139  0143               	movlb	3	; select bank3
 10403  313A  085A               	movf	_idioma^(0+384),w
 10404  313B  0141               	movlb	1	; select bank1
 10405  313C  00B8               	movwf	??_teste_pneumatico^(0+128)
 10406  313D  01B9               	clrf	(??_teste_pneumatico^(0+128)+1)
 10407  313E  0838               	movf	??_teste_pneumatico^(0+128),w
 10408  313F  0140               	movlb	0	; select bank0
 10409  3140  00AB               	movwf	___wmul@multiplier
 10410  3141  0141               	movlb	1	; select bank1
 10411  3142  0839               	movf	(??_teste_pneumatico+1)^(0+128),w
 10412  3143  0140               	movlb	0	; select bank0
 10413  3144  00AC               	movwf	___wmul@multiplier+1
 10414  3145  3011               	movlw	17
 10415  3146  00AD               	movwf	___wmul@multiplicand
 10416  3147  3000               	movlw	0
 10417  3148  00AE               	movwf	___wmul@multiplicand+1
 10418  3149  31D0  20FE  31B1   	fcall	___wmul
 10419  314C  30C0               	movlw	low (_teste_PN1_str| (0+32768))
 10420  314D  0141               	movlb	1	; select bank1
 10421  314E  00BA               	movwf	(??_teste_pneumatico+2)^(0+128)
 10422  314F  30DC               	movlw	high (_teste_PN1_str| (0+32768))
 10423  3150  00BB               	movwf	((??_teste_pneumatico+2)^(0+128)+1)
 10424  3151  0140               	movlb	0	; select bank0
 10425  3152  082B               	movf	?___wmul,w
 10426  3153  0141               	movlb	1	; select bank1
 10427  3154  073A               	addwf	(??_teste_pneumatico+2)^(0+128),w
 10428  3155  0140               	movlb	0	; select bank0
 10429  3156  00B6               	movwf	escreve_LCD@str
 10430  3157  082C               	movf	?___wmul+1,w
 10431  3158  0141               	movlb	1	; select bank1
 10432  3159  3D3B               	addwfc	(??_teste_pneumatico+3)^(0+128),w
 10433  315A  0140               	movlb	0	; select bank0
 10434  315B  00B7               	movwf	escreve_LCD@str+1
 10435  315C  3001               	movlw	1
 10436  315D  31E7  27C1  31B1   	fcall	_escreve_LCD
 10437                           
 10438                           ;func.c: 1942: escreve_LCD(2,1,Sai_enter_str[idioma]);
 10439  3160  0140               	movlb	0	; select bank0
 10440  3161  01B5               	clrf	escreve_LCD@coluna
 10441  3162  0AB5               	incf	escreve_LCD@coluna,f
 10442  3163  0143               	movlb	3	; select bank3
 10443  3164  085A               	movf	_idioma^(0+384),w
 10444  3165  0141               	movlb	1	; select bank1
 10445  3166  00B8               	movwf	??_teste_pneumatico^(0+128)
 10446  3167  01B9               	clrf	(??_teste_pneumatico^(0+128)+1)
 10447  3168  0838               	movf	??_teste_pneumatico^(0+128),w
 10448  3169  0140               	movlb	0	; select bank0
 10449  316A  00AB               	movwf	___wmul@multiplier
 10450  316B  0141               	movlb	1	; select bank1
 10451  316C  0839               	movf	(??_teste_pneumatico+1)^(0+128),w
 10452  316D  0140               	movlb	0	; select bank0
 10453  316E  00AC               	movwf	___wmul@multiplier+1
 10454  316F  3011               	movlw	17
 10455  3170  00AD               	movwf	___wmul@multiplicand
 10456  3171  3000               	movlw	0
 10457  3172  00AE               	movwf	___wmul@multiplicand+1
 10458  3173  31D0  20FE  31B1   	fcall	___wmul
 10459  3176  309E               	movlw	low (_Sai_enter_str| (0+32768))
 10460  3177  0141               	movlb	1	; select bank1
 10461  3178  00BA               	movwf	(??_teste_pneumatico+2)^(0+128)
 10462  3179  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 10463  317A  00BB               	movwf	((??_teste_pneumatico+2)^(0+128)+1)
 10464  317B  0140               	movlb	0	; select bank0
 10465  317C  082B               	movf	?___wmul,w
 10466  317D  0141               	movlb	1	; select bank1
 10467  317E  073A               	addwf	(??_teste_pneumatico+2)^(0+128),w
 10468  317F  0140               	movlb	0	; select bank0
 10469  3180  00B6               	movwf	escreve_LCD@str
 10470  3181  082C               	movf	?___wmul+1,w
 10471  3182  0141               	movlb	1	; select bank1
 10472  3183  3D3B               	addwfc	(??_teste_pneumatico+3)^(0+128),w
 10473  3184  0140               	movlb	0	; select bank0
 10474  3185  00B7               	movwf	escreve_LCD@str+1
 10475  3186  3002               	movlw	2
 10476  3187  31E7  27C1  31B1   	fcall	_escreve_LCD
 10477                           
 10478                           ;func.c: 1943: _delay((unsigned long)((1000)*(20000000/4000.0)));
 10479  318A  301A               	movlw	26
 10480  318B  0141               	movlb	1	; select bank1
 10481  318C  00B9               	movwf	(??_teste_pneumatico^(0+128)+1)
 10482  318D  305E               	movlw	94
 10483  318E  00B8               	movwf	??_teste_pneumatico^(0+128)
 10484  318F  306E               	movlw	110
 10485  3190                     u20657:	
 10486  3190  0B89               	decfsz	9,f
 10487  3191  2990               	goto	u20657
 10488  3192  0BB8               	decfsz	??_teste_pneumatico^(0+128),f
 10489  3193  2990               	goto	u20657
 10490  3194  0BB9               	decfsz	(??_teste_pneumatico^(0+128)+1),f
 10491  3195  2990               	goto	u20657
 10492  3196  0000               	nop
 10493                           
 10494                           ;func.c: 1944: flag.tela = 1;
 10495  3197  0143               	movlb	3	; select bank3
 10496  3198  142D               	bsf	(_flag^(0+384)+1),0	;volatile
 10497  3199                     l1831:	
 10498                           ;func.c: 1945: do{
 10499                           
 10500  3199  0064               	clrwdt	;# 
 10501                           
 10502                           ;func.c: 1947: ver_entrada();
 10503  319A  31CE  26BA  31B1   	fcall	_ver_entrada
 10504                           
 10505                           ;func.c: 1949: if(flag.inicia)
 10506  319D  0143               	movlb	3	; select bank3
 10507  319E  1E2C               	btfss	_flag^(0+384),4	;volatile
 10508  319F  29A5               	goto	l17906
 10509                           
 10510                           ;func.c: 1950: saida(PNE_DESCE,1);
 10511  31A0  3001               	movlw	1
 10512  31A1  0140               	movlb	0	; select bank0
 10513  31A2  00AB               	movwf	saida@b
 10514  31A3  3000               	movlw	0
 10515  31A4  29A8               	goto	L6
 10516  31A5                     l17906:	
 10517                           
 10518                           ;func.c: 1951: else
 10519                           ;func.c: 1952: saida(PNE_DESCE,0);
 10520  31A5  3000               	movlw	0
 10521  31A6  0140               	movlb	0	; select bank0
 10522  31A7  00AB               	movwf	saida@b
 10523  31A8                     L6:	
 10524  31A8  00AC               	movwf	saida@b+1
 10525  31A9  3001               	movlw	1
 10526  31AA  31D1  21CE  31B1   	fcall	_saida
 10527                           
 10528                           ;func.c: 1953: bt = teclado();
 10529  31AD  31C2  22CC  31B1   	fcall	_teclado
 10530  31B0  0141               	movlb	1	; select bank1
 10531  31B1  00B8               	movwf	??_teste_pneumatico^(0+128)
 10532  31B2  0838               	movf	??_teste_pneumatico^(0+128),w
 10533  31B3  00BD               	movwf	teste_pneumatico@bt^(0+128)
 10534                           
 10535                           ;func.c: 1954: if(flag_in.emerg){
 10536  31B4  0143               	movlb	3	; select bank3
 10537  31B5  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 10538  31B6  2A14               	goto	l17920
 10539                           
 10540                           ;func.c: 1955: emergencia();
 10541  31B7  31C4  2464  31B1   	fcall	_emergencia
 10542                           
 10543                           ;func.c: 1956: liberar();
 10544  31BA  31E1  21BB  31B1   	fcall	_liberar
 10545                           
 10546                           ;func.c: 1957: Lcd_Clear();
 10547  31BD  31E1  21DF  31B1   	fcall	_Lcd_Clear
 10548                           
 10549                           ;func.c: 1958: escreve_LCD(1,1,teste_PN1_str[idioma]);
 10550  31C0  0140               	movlb	0	; select bank0
 10551  31C1  01B5               	clrf	escreve_LCD@coluna
 10552  31C2  0AB5               	incf	escreve_LCD@coluna,f
 10553  31C3  0143               	movlb	3	; select bank3
 10554  31C4  085A               	movf	_idioma^(0+384),w
 10555  31C5  0141               	movlb	1	; select bank1
 10556  31C6  00B8               	movwf	??_teste_pneumatico^(0+128)
 10557  31C7  01B9               	clrf	(??_teste_pneumatico^(0+128)+1)
 10558  31C8  0838               	movf	??_teste_pneumatico^(0+128),w
 10559  31C9  0140               	movlb	0	; select bank0
 10560  31CA  00AB               	movwf	___wmul@multiplier
 10561  31CB  0141               	movlb	1	; select bank1
 10562  31CC  0839               	movf	(??_teste_pneumatico+1)^(0+128),w
 10563  31CD  0140               	movlb	0	; select bank0
 10564  31CE  00AC               	movwf	___wmul@multiplier+1
 10565  31CF  3011               	movlw	17
 10566  31D0  00AD               	movwf	___wmul@multiplicand
 10567  31D1  3000               	movlw	0
 10568  31D2  00AE               	movwf	___wmul@multiplicand+1
 10569  31D3  31D0  20FE  31B1   	fcall	___wmul
 10570  31D6  30C0               	movlw	low (_teste_PN1_str| (0+32768))
 10571  31D7  0141               	movlb	1	; select bank1
 10572  31D8  00BA               	movwf	(??_teste_pneumatico+2)^(0+128)
 10573  31D9  30DC               	movlw	high (_teste_PN1_str| (0+32768))
 10574  31DA  00BB               	movwf	((??_teste_pneumatico+2)^(0+128)+1)
 10575  31DB  0140               	movlb	0	; select bank0
 10576  31DC  082B               	movf	?___wmul,w
 10577  31DD  0141               	movlb	1	; select bank1
 10578  31DE  073A               	addwf	(??_teste_pneumatico+2)^(0+128),w
 10579  31DF  0140               	movlb	0	; select bank0
 10580  31E0  00B6               	movwf	escreve_LCD@str
 10581  31E1  082C               	movf	?___wmul+1,w
 10582  31E2  0141               	movlb	1	; select bank1
 10583  31E3  3D3B               	addwfc	(??_teste_pneumatico+3)^(0+128),w
 10584  31E4  0140               	movlb	0	; select bank0
 10585  31E5  00B7               	movwf	escreve_LCD@str+1
 10586  31E6  3001               	movlw	1
 10587  31E7  31E7  27C1  31B1   	fcall	_escreve_LCD
 10588                           
 10589                           ;func.c: 1959: escreve_LCD(2,1,Sai_enter_str[idioma]);
 10590  31EA  0140               	movlb	0	; select bank0
 10591  31EB  01B5               	clrf	escreve_LCD@coluna
 10592  31EC  0AB5               	incf	escreve_LCD@coluna,f
 10593  31ED  0143               	movlb	3	; select bank3
 10594  31EE  085A               	movf	_idioma^(0+384),w
 10595  31EF  0141               	movlb	1	; select bank1
 10596  31F0  00B8               	movwf	??_teste_pneumatico^(0+128)
 10597  31F1  01B9               	clrf	(??_teste_pneumatico^(0+128)+1)
 10598  31F2  0838               	movf	??_teste_pneumatico^(0+128),w
 10599  31F3  0140               	movlb	0	; select bank0
 10600  31F4  00AB               	movwf	___wmul@multiplier
 10601  31F5  0141               	movlb	1	; select bank1
 10602  31F6  0839               	movf	(??_teste_pneumatico+1)^(0+128),w
 10603  31F7  0140               	movlb	0	; select bank0
 10604  31F8  00AC               	movwf	___wmul@multiplier+1
 10605  31F9  3011               	movlw	17
 10606  31FA  00AD               	movwf	___wmul@multiplicand
 10607  31FB  3000               	movlw	0
 10608  31FC  00AE               	movwf	___wmul@multiplicand+1
 10609  31FD  31D0  20FE  31B1   	fcall	___wmul
 10610  3200  309E               	movlw	low (_Sai_enter_str| (0+32768))
 10611  3201  0141               	movlb	1	; select bank1
 10612  3202  00BA               	movwf	(??_teste_pneumatico+2)^(0+128)
 10613  3203  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 10614  3204  00BB               	movwf	((??_teste_pneumatico+2)^(0+128)+1)
 10615  3205  0140               	movlb	0	; select bank0
 10616  3206  082B               	movf	?___wmul,w
 10617  3207  0141               	movlb	1	; select bank1
 10618  3208  073A               	addwf	(??_teste_pneumatico+2)^(0+128),w
 10619  3209  0140               	movlb	0	; select bank0
 10620  320A  00B6               	movwf	escreve_LCD@str
 10621  320B  082C               	movf	?___wmul+1,w
 10622  320C  0141               	movlb	1	; select bank1
 10623  320D  3D3B               	addwfc	(??_teste_pneumatico+3)^(0+128),w
 10624  320E  0140               	movlb	0	; select bank0
 10625  320F  00B7               	movwf	escreve_LCD@str+1
 10626  3210  3002               	movlw	2
 10627  3211  31E7  27C1  31B1   	fcall	_escreve_LCD
 10628  3214                     l17920:	
 10629                           
 10630                           ;func.c: 1960: }
 10631                           ;func.c: 1961: if(bt == 18){
 10632  3214  3012               	movlw	18
 10633  3215  0141               	movlb	1	; select bank1
 10634  3216  063D               	xorwf	teste_pneumatico@bt^(0+128),w
 10635  3217  1D03               	btfss	3,2
 10636  3218  2A24               	goto	l17926
 10637                           
 10638                           ;func.c: 1962: flag.tela = 0;
 10639  3219  0143               	movlb	3	; select bank3
 10640  321A  102D               	bcf	(_flag^(0+384)+1),0	;volatile
 10641                           
 10642                           ;func.c: 1963: liberar_tecla(18,1000);
 10643  321B  30E8               	movlw	232
 10644  321C  0140               	movlb	0	; select bank0
 10645  321D  00B3               	movwf	liberar_tecla@t
 10646  321E  3003               	movlw	3
 10647  321F  00B4               	movwf	liberar_tecla@t+1
 10648  3220  3012               	movlw	18
 10649  3221  31D7  2735  31B1   	fcall	_liberar_tecla
 10650  3224                     l17926:	
 10651                           
 10652                           ;func.c: 1964: }
 10653                           ;func.c: 1965: }while(flag.tela || flag.inicia);
 10654  3224  0143               	movlb	3	; select bank3
 10655  3225  1C2D               	btfss	(_flag^(0+384)+1),0	;volatile
 10656  3226  1A2C               	btfsc	_flag^(0+384),4	;volatile
 10657  3227  2999               	goto	l1831
 10658                           
 10659                           ;func.c: 1967: saida(PNE_DESCE,0);
 10660  3228  3000               	movlw	0
 10661  3229  0140               	movlb	0	; select bank0
 10662  322A  00AB               	movwf	saida@b
 10663  322B  00AC               	movwf	saida@b+1
 10664  322C  3001               	movlw	1
 10665  322D  31D1  21CE         	fcall	_saida
 10666  322F                     l1829:	
 10667                           ;func.c: 1969: else{
 10668                           
 10669                           ;func.c: 1968: }
 10670                           
 10671                           
 10672                           ;func.c: 1971: }
 10673                           ;func.c: 1972: flag.teste = 0;
 10674  322F  0143               	movlb	3	; select bank3
 10675  3230  132D               	bcf	(_flag^(0+384)+1),6	;volatile
 10676  3231  0008               	return
 10677  3232                     __end_of_teste_pneumatico:	
 10678                           
 10679                           	psect	text2
 10680  5645                     __ptext2:	
 10681 ;; *************** function _teste_leds *****************
 10682 ;; Defined at:
 10683 ;;		line 1265 in file "func.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;		None
 10686 ;; Auto vars:     Size  Location     Type
 10687 ;;  i               1   16[BANK0 ] unsigned char 
 10688 ;;  temp            1   15[BANK0 ] unsigned char 
 10689 ;; Return value:  Size  Location     Type
 10690 ;;                  1    wreg      void 
 10691 ;; Registers used:
 10692 ;;		wreg, status,2, status,0, pclath, cstack
 10693 ;; Tracked objects:
 10694 ;;		On entry : 0/0
 10695 ;;		On exit  : 0/0
 10696 ;;		Unchanged: 0/0
 10697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10699 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10700 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10701 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10702 ;;Total ram usage:        4 bytes
 10703 ;; Hardware stack levels used:    1
 10704 ;; Hardware stack levels required when called:    4
 10705 ;; This function calls:
 10706 ;;		_clr
 10707 ;;		_data
 10708 ;; This function is called by:
 10709 ;;		_main
 10710 ;; This function uses a non-reentrant model
 10711 ;;
 10712                           
 10713                           
 10714                           ;psect for function _teste_leds
 10715  5645                     _teste_leds:	
 10716                           
 10717                           ;func.c: 1266: char temp = INTCONbits.GIE;
 10718                           
 10719                           ;incstack = 0
 10720                           ; Regs used in _teste_leds: [wreg+status,2+status,0+pclath+cstack]
 10721  5645  3000               	movlw	0
 10722  5646  1B8B               	btfsc	11,7	;volatile
 10723  5647  3001               	movlw	1
 10724  5648  0140               	movlb	0	; select bank0
 10725  5649  00AF               	movwf	teste_leds@temp
 10726                           
 10727                           ;func.c: 1267: INTCONbits.GIE = 0;
 10728  564A  138B               	bcf	11,7	;volatile
 10729                           
 10730                           ;func.c: 1268: clr();
 10731  564B  31E1  21EB  31D6   	fcall	_clr
 10732                           
 10733                           ;func.c: 1269: data(1);
 10734  564E  3001               	movlw	1
 10735  564F  0140               	movlb	0	; select bank0
 10736  5650  00AB               	movwf	data@b
 10737  5651  3000               	movlw	0
 10738  5652  00AC               	movwf	data@b+1
 10739  5653  31E7  2786  31D6   	fcall	_data
 10740                           
 10741                           ;func.c: 1270: for(char i = 0;i<14;i++){
 10742  5656  0140               	movlb	0	; select bank0
 10743  5657  01B0               	clrf	teste_leds@i
 10744  5658  300E               	movlw	14
 10745  5659  0230               	subwf	teste_leds@i,w
 10746  565A  1803               	btfsc	3,0
 10747  565B  2E7A               	goto	l17490
 10748  565C                     l1603:	
 10749  565C  0064               	clrwdt	;# 
 10750                           
 10751                           ;func.c: 1272: _delay((unsigned long)((200)*(20000000/4000.0)));
 10752  565D  3006               	movlw	6
 10753  565E  0140               	movlb	0	; select bank0
 10754  565F  00AE               	movwf	??_teste_leds+1
 10755  5660  3013               	movlw	19
 10756  5661  00AD               	movwf	??_teste_leds
 10757  5662  30AD               	movlw	173
 10758  5663                     u20667:	
 10759  5663  0B89               	decfsz	9,f
 10760  5664  2E63               	goto	u20667
 10761  5665  0BAD               	decfsz	??_teste_leds,f
 10762  5666  2E63               	goto	u20667
 10763  5667  0BAE               	decfsz	??_teste_leds+1,f
 10764  5668  2E63               	goto	u20667
 10765  5669  3200               	nop2
 10766                           
 10767                           ;func.c: 1273: data(0);
 10768  566A  3000               	movlw	0
 10769  566B  0140               	movlb	0	; select bank0
 10770  566C  00AB               	movwf	data@b
 10771  566D  00AC               	movwf	data@b+1
 10772  566E  31E7  2786  31D6   	fcall	_data
 10773  5671  3001               	movlw	1
 10774  5672  0140               	movlb	0	; select bank0
 10775  5673  00AD               	movwf	??_teste_leds
 10776  5674  082D               	movf	??_teste_leds,w
 10777  5675  07B0               	addwf	teste_leds@i,f
 10778  5676  300E               	movlw	14
 10779  5677  0230               	subwf	teste_leds@i,w
 10780  5678  1C03               	skipc
 10781  5679  2E5C               	goto	l1603
 10782  567A                     l17490:	
 10783                           
 10784                           ;func.c: 1274: }
 10785                           ;func.c: 1275: INTCONbits.GIE = (unsigned)temp;
 10786  567A  0C2F               	rrf	teste_leds@temp,w
 10787  567B  1C03               	skipc
 10788  567C  138B               	bcf	11,7	;volatile
 10789  567D  1803               	skipnc
 10790  567E  178B               	bsf	11,7	;volatile
 10791  567F  0008               	return
 10792  5680                     __end_of_teste_leds:	
 10793                           
 10794                           	psect	text3
 10795  6786                     __ptext3:	
 10796 ;; *************** function _data *****************
 10797 ;; Defined at:
 10798 ;;		line 1238 in file "func.c"
 10799 ;; Parameters:    Size  Location     Type
 10800 ;;  b               2   11[BANK0 ] unsigned int 
 10801 ;; Auto vars:     Size  Location     Type
 10802 ;;		None
 10803 ;; Return value:  Size  Location     Type
 10804 ;;                  1    wreg      void 
 10805 ;; Registers used:
 10806 ;;		wreg, status,0
 10807 ;; Tracked objects:
 10808 ;;		On entry : 0/0
 10809 ;;		On exit  : 0/0
 10810 ;;		Unchanged: 0/0
 10811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10812 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10815 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10816 ;;Total ram usage:        2 bytes
 10817 ;; Hardware stack levels used:    1
 10818 ;; Hardware stack levels required when called:    3
 10819 ;; This function calls:
 10820 ;;		Nothing
 10821 ;; This function is called by:
 10822 ;;		_teste_leds
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           
 10827                           ;psect for function _data
 10828  6786                     _data:	
 10829                           
 10830                           ;func.c: 1239: LATEbits.LATE1 = b;
 10831                           
 10832                           ;incstack = 0
 10833                           ; Regs used in _data: [wreg+status,0]
 10834  6786  0140               	movlb	0	; select bank0
 10835  6787  0C2B               	rrf	data@b,w
 10836  6788  1C03               	skipc
 10837  6789  109A               	bcf	26,1	;volatile
 10838  678A  1803               	skipnc
 10839  678B  149A               	bsf	26,1	;volatile
 10840                           
 10841                           ;func.c: 1240: __nop();__nop();
 10842  678C  0000               	nop
 10843  678D  0000               	nop
 10844                           
 10845                           ;func.c: 1241: LATEbits.LATE0 = 1;
 10846  678E  0140               	movlb	0	; select bank0
 10847  678F  141A               	bsf	26,0	;volatile
 10848                           
 10849                           ;func.c: 1242: __nop();__nop();
 10850  6790  0000               	nop
 10851  6791  0000               	nop
 10852                           
 10853                           ;func.c: 1243: LATEbits.LATE0 = 0;
 10854  6792  0140               	movlb	0	; select bank0
 10855  6793  101A               	bcf	26,0	;volatile
 10856                           
 10857                           ;func.c: 1244: __nop();__nop();
 10858  6794  0000               	nop
 10859  6795  0000               	nop
 10860                           
 10861                           ;func.c: 1245: LATEbits.LATE1 = 0;
 10862  6796  0140               	movlb	0	; select bank0
 10863  6797  109A               	bcf	26,1	;volatile
 10864  6798  0008               	return
 10865  6799                     __end_of_data:	
 10866                           
 10867                           	psect	text4
 10868  61EB                     __ptext4:	
 10869 ;; *************** function _clr *****************
 10870 ;; Defined at:
 10871 ;;		line 1231 in file "func.c"
 10872 ;; Parameters:    Size  Location     Type
 10873 ;;		None
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;                  1    wreg      void 
 10878 ;; Registers used:
 10879 ;;		None
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10888 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10889 ;;Total ram usage:        0 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    3
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_teste_leds
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           
 10900                           ;psect for function _clr
 10901  61EB                     _clr:	
 10902                           
 10903                           ;func.c: 1232: LATEbits.LATE2 = 0;
 10904                           
 10905                           ;incstack = 0
 10906                           ; Regs used in _clr: []
 10907  61EB  0140               	movlb	0	; select bank0
 10908  61EC  111A               	bcf	26,2	;volatile
 10909                           
 10910                           ;func.c: 1233: __nop();__nop();__nop();__nop();
 10911  61ED  0000               	nop
 10912  61EE  0000               	nop
 10913  61EF  0000               	nop
 10914  61F0  0000               	nop
 10915                           
 10916                           ;func.c: 1234: LATEbits.LATE2 = 1;
 10917  61F1  0140               	movlb	0	; select bank0
 10918  61F2  151A               	bsf	26,2	;volatile
 10919                           
 10920                           ;func.c: 1235: __nop();
 10921  61F3  0000               	nop
 10922  61F4  0008               	return
 10923  61F5                     __end_of_clr:	
 10924                           
 10925                           	psect	text5
 10926  1C99                     __ptext5:	
 10927 ;; *************** function _teste_US *****************
 10928 ;; Defined at:
 10929 ;;		line 1975 in file "func.c"
 10930 ;; Parameters:    Size  Location     Type
 10931 ;;  b               1    wreg     unsigned char 
 10932 ;; Auto vars:     Size  Location     Type
 10933 ;;  b               1   28[BANK1 ] unsigned char 
 10934 ;;  conta_erro      1   30[BANK1 ] unsigned char 
 10935 ;;  bt              1   29[BANK1 ] unsigned char 
 10936 ;; Return value:  Size  Location     Type
 10937 ;;                  1    wreg      void 
 10938 ;; Registers used:
 10939 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10940 ;; Tracked objects:
 10941 ;;		On entry : 0/0
 10942 ;;		On exit  : 0/0
 10943 ;;		Unchanged: 0/0
 10944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 10945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10946 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10947 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10948 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 10949 ;;Total ram usage:        7 bytes
 10950 ;; Hardware stack levels used:    1
 10951 ;; Hardware stack levels required when called:   11
 10952 ;; This function calls:
 10953 ;;		_Lcd_Clear
 10954 ;;		_Lcd_Write_String
 10955 ;;		___wmul
 10956 ;;		_emergencia
 10957 ;;		_escreve_LCD
 10958 ;;		_get_freq
 10959 ;;		_liberar
 10960 ;;		_liberar_tecla
 10961 ;;		_ltoa
 10962 ;;		_rst_inversor
 10963 ;;		_salva_EEPROM
 10964 ;;		_set_freq
 10965 ;;		_strcat
 10966 ;;		_strcpy
 10967 ;;		_teclado
 10968 ;;		_trava_erro
 10969 ;;		_ver_entrada
 10970 ;;		_ver_freq
 10971 ;; This function is called by:
 10972 ;;		_main
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           
 10976                           
 10977                           ;psect for function _teste_US
 10978  1C99                     _teste_US:	
 10979                           
 10980                           ;incstack = 0
 10981                           ; Regs used in _teste_US: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10982                           ;teste_US@b stored from wreg
 10983  1C99  0141               	movlb	1	; select bank1
 10984  1C9A  00BC               	movwf	teste_US@b^(0+128)
 10985                           
 10986                           ;func.c: 1976: if(liberar_tecla(b,1000)){
 10987  1C9B  30E8               	movlw	232
 10988  1C9C  0140               	movlb	0	; select bank0
 10989  1C9D  00B3               	movwf	liberar_tecla@t
 10990  1C9E  3003               	movlw	3
 10991  1C9F  00B4               	movwf	liberar_tecla@t+1
 10992  1CA0  0141               	movlb	1	; select bank1
 10993  1CA1  083C               	movf	teste_US@b^(0+128),w
 10994  1CA2  31D7  2735  319C   	fcall	_liberar_tecla
 10995  1CA5  0140               	movlb	0	; select bank0
 10996  1CA6  0833               	movf	?_liberar_tecla,w
 10997  1CA7  0434               	iorwf	?_liberar_tecla+1,w
 10998  1CA8  1903               	btfsc	3,2
 10999  1CA9  2FFD               	goto	l1872
 11000                           
 11001                           ;func.c: 1977: flag.teste = 1;
 11002  1CAA  0143               	movlb	3	; select bank3
 11003  1CAB  172D               	bsf	(_flag^(0+384)+1),6	;volatile
 11004                           
 11005                           ;func.c: 1978: char bt;
 11006                           ;func.c: 1980: Lcd_Clear();
 11007  1CAC  31E1  21DF  319C   	fcall	_Lcd_Clear
 11008                           
 11009                           ;func.c: 1981: strcpy(str1,teste_US1_str[idioma]);
 11010  1CAF  0143               	movlb	3	; select bank3
 11011  1CB0  085A               	movf	_idioma^(0+384),w
 11012  1CB1  0141               	movlb	1	; select bank1
 11013  1CB2  00B8               	movwf	??_teste_US^(0+128)
 11014  1CB3  01B9               	clrf	(??_teste_US^(0+128)+1)
 11015  1CB4  0838               	movf	??_teste_US^(0+128),w
 11016  1CB5  0140               	movlb	0	; select bank0
 11017  1CB6  00AB               	movwf	___wmul@multiplier
 11018  1CB7  0141               	movlb	1	; select bank1
 11019  1CB8  0839               	movf	(??_teste_US+1)^(0+128),w
 11020  1CB9  0140               	movlb	0	; select bank0
 11021  1CBA  00AC               	movwf	___wmul@multiplier+1
 11022  1CBB  3011               	movlw	17
 11023  1CBC  00AD               	movwf	___wmul@multiplicand
 11024  1CBD  3000               	movlw	0
 11025  1CBE  00AE               	movwf	___wmul@multiplicand+1
 11026  1CBF  31D0  20FE  319C   	fcall	___wmul
 11027  1CC2  30E2               	movlw	low (_teste_US1_str| (0+32768))
 11028  1CC3  0141               	movlb	1	; select bank1
 11029  1CC4  00BA               	movwf	(??_teste_US+2)^(0+128)
 11030  1CC5  30DC               	movlw	high (_teste_US1_str| (0+32768))
 11031  1CC6  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11032  1CC7  0140               	movlb	0	; select bank0
 11033  1CC8  082B               	movf	?___wmul,w
 11034  1CC9  0141               	movlb	1	; select bank1
 11035  1CCA  073A               	addwf	(??_teste_US+2)^(0+128),w
 11036  1CCB  0140               	movlb	0	; select bank0
 11037  1CCC  00B1               	movwf	strcpy@from
 11038  1CCD  082C               	movf	?___wmul+1,w
 11039  1CCE  0141               	movlb	1	; select bank1
 11040  1CCF  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11041  1CD0  0140               	movlb	0	; select bank0
 11042  1CD1  00B2               	movwf	strcpy@from+1
 11043  1CD2  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11044  1CD3  31D1  211A  319C   	fcall	_strcpy
 11045                           
 11046                           ;func.c: 1982: ltoa(str,freq_inicial,10);
 11047  1CD6  0143               	movlb	3	; select bank3
 11048  1CD7  0836               	movf	_freq_inicial^(0+384),w
 11049  1CD8  0140               	movlb	0	; select bank0
 11050  1CD9  00CA               	movwf	ltoa@val
 11051  1CDA  0143               	movlb	3	; select bank3
 11052  1CDB  0837               	movf	(_freq_inicial+1)^(0+384),w
 11053  1CDC  0140               	movlb	0	; select bank0
 11054  1CDD  00CB               	movwf	ltoa@val+1
 11055  1CDE  01CC               	clrf	ltoa@val+2
 11056  1CDF  01CD               	clrf	ltoa@val+3
 11057  1CE0  300A               	movlw	10
 11058  1CE1  00CE               	movwf	ltoa@base
 11059  1CE2  3000               	movlw	0
 11060  1CE3  00CF               	movwf	ltoa@base+1
 11061  1CE4  305C               	movlw	(low (_str| (0+512)))& (0+255)
 11062  1CE5  31D4  24DE  319C   	fcall	_ltoa
 11063                           
 11064                           ;func.c: 1983: strcat(str1,str);
 11065  1CE8  305C               	movlw	low _str
 11066  1CE9  0140               	movlb	0	; select bank0
 11067  1CEA  00B1               	movwf	strcat@from
 11068  1CEB  3002               	movlw	high _str
 11069  1CEC  00B2               	movwf	strcat@from+1
 11070  1CED  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11071  1CEE  31D3  2381  319C   	fcall	_strcat
 11072                           
 11073                           ;func.c: 1984: strcat(str1," Hz");
 11074  1CF1  300B               	movlw	low (STR_21| (0+32768))
 11075  1CF2  0140               	movlb	0	; select bank0
 11076  1CF3  00B1               	movwf	strcat@from
 11077  1CF4  30E9               	movlw	high (STR_21| (0+32768))
 11078  1CF5  00B2               	movwf	strcat@from+1
 11079  1CF6  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11080  1CF7  31D3  2381  319C   	fcall	_strcat
 11081                           
 11082                           ;func.c: 1985: escreve_LCD(1,1,str1);
 11083  1CFA  0140               	movlb	0	; select bank0
 11084  1CFB  01B5               	clrf	escreve_LCD@coluna
 11085  1CFC  0AB5               	incf	escreve_LCD@coluna,f
 11086  1CFD  3054               	movlw	low _str1
 11087  1CFE  00B6               	movwf	escreve_LCD@str
 11088  1CFF  3003               	movlw	high _str1
 11089  1D00  00B7               	movwf	escreve_LCD@str+1
 11090  1D01  3001               	movlw	1
 11091  1D02  31E7  27C1  319C   	fcall	_escreve_LCD
 11092                           
 11093                           ;func.c: 1986: escreve_LCD(2,1,Sai_enter_str[idioma]);
 11094  1D05  0140               	movlb	0	; select bank0
 11095  1D06  01B5               	clrf	escreve_LCD@coluna
 11096  1D07  0AB5               	incf	escreve_LCD@coluna,f
 11097  1D08  0143               	movlb	3	; select bank3
 11098  1D09  085A               	movf	_idioma^(0+384),w
 11099  1D0A  0141               	movlb	1	; select bank1
 11100  1D0B  00B8               	movwf	??_teste_US^(0+128)
 11101  1D0C  01B9               	clrf	(??_teste_US^(0+128)+1)
 11102  1D0D  0838               	movf	??_teste_US^(0+128),w
 11103  1D0E  0140               	movlb	0	; select bank0
 11104  1D0F  00AB               	movwf	___wmul@multiplier
 11105  1D10  0141               	movlb	1	; select bank1
 11106  1D11  0839               	movf	(??_teste_US+1)^(0+128),w
 11107  1D12  0140               	movlb	0	; select bank0
 11108  1D13  00AC               	movwf	___wmul@multiplier+1
 11109  1D14  3011               	movlw	17
 11110  1D15  00AD               	movwf	___wmul@multiplicand
 11111  1D16  3000               	movlw	0
 11112  1D17  00AE               	movwf	___wmul@multiplicand+1
 11113  1D18  31D0  20FE  319C   	fcall	___wmul
 11114  1D1B  309E               	movlw	low (_Sai_enter_str| (0+32768))
 11115  1D1C  0141               	movlb	1	; select bank1
 11116  1D1D  00BA               	movwf	(??_teste_US+2)^(0+128)
 11117  1D1E  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 11118  1D1F  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11119  1D20  0140               	movlb	0	; select bank0
 11120  1D21  082B               	movf	?___wmul,w
 11121  1D22  0141               	movlb	1	; select bank1
 11122  1D23  073A               	addwf	(??_teste_US+2)^(0+128),w
 11123  1D24  0140               	movlb	0	; select bank0
 11124  1D25  00B6               	movwf	escreve_LCD@str
 11125  1D26  082C               	movf	?___wmul+1,w
 11126  1D27  0141               	movlb	1	; select bank1
 11127  1D28  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11128  1D29  0140               	movlb	0	; select bank0
 11129  1D2A  00B7               	movwf	escreve_LCD@str+1
 11130  1D2B  3002               	movlw	2
 11131  1D2C  31E7  27C1  319C   	fcall	_escreve_LCD
 11132                           
 11133                           ;func.c: 1987: set_freq(freq_inicial);
 11134  1D2F  0143               	movlb	3	; select bank3
 11135  1D30  0837               	movf	(_freq_inicial+1)^(0+384),w
 11136  1D31  0140               	movlb	0	; select bank0
 11137  1D32  00C7               	movwf	set_freq@f+1
 11138  1D33  0143               	movlb	3	; select bank3
 11139  1D34  0836               	movf	_freq_inicial^(0+384),w
 11140  1D35  0140               	movlb	0	; select bank0
 11141  1D36  00C6               	movwf	set_freq@f
 11142  1D37  31C5  2585  319C   	fcall	_set_freq
 11143                           
 11144                           ;func.c: 1988: flag.tela = 1;
 11145  1D3A  0143               	movlb	3	; select bank3
 11146  1D3B  142D               	bsf	(_flag^(0+384)+1),0	;volatile
 11147                           
 11148                           ;func.c: 1989: char conta_erro = 0;
 11149  1D3C  0141               	movlb	1	; select bank1
 11150  1D3D  01BE               	clrf	teste_US@conta_erro^(0+128)
 11151  1D3E                     l1841:	
 11152                           ;func.c: 1990: do{
 11153                           
 11154  1D3E  0064               	clrwdt	;# 
 11155                           
 11156                           ;func.c: 1992: bt = teclado();
 11157  1D3F  31C2  22CC  319C   	fcall	_teclado
 11158  1D42  0141               	movlb	1	; select bank1
 11159  1D43  00B8               	movwf	??_teste_US^(0+128)
 11160  1D44  0838               	movf	??_teste_US^(0+128),w
 11161  1D45  00BD               	movwf	teste_US@bt^(0+128)
 11162                           
 11163                           ;func.c: 1993: ver_entrada();
 11164  1D46  31CE  26BA  319C   	fcall	_ver_entrada
 11165                           
 11166                           ;func.c: 1994: if(flag_in.emerg){
 11167  1D49  0143               	movlb	3	; select bank3
 11168  1D4A  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 11169  1D4B  2DDE               	goto	l1842
 11170                           
 11171                           ;func.c: 1995: emergencia();
 11172  1D4C  31C4  2464  319C   	fcall	_emergencia
 11173                           
 11174                           ;func.c: 1996: Lcd_Clear();
 11175  1D4F  31E1  21DF  319C   	fcall	_Lcd_Clear
 11176                           
 11177                           ;func.c: 1997: strcpy(str1,teste_US1_str[idioma]);
 11178  1D52  0143               	movlb	3	; select bank3
 11179  1D53  085A               	movf	_idioma^(0+384),w
 11180  1D54  0141               	movlb	1	; select bank1
 11181  1D55  00B8               	movwf	??_teste_US^(0+128)
 11182  1D56  01B9               	clrf	(??_teste_US^(0+128)+1)
 11183  1D57  0838               	movf	??_teste_US^(0+128),w
 11184  1D58  0140               	movlb	0	; select bank0
 11185  1D59  00AB               	movwf	___wmul@multiplier
 11186  1D5A  0141               	movlb	1	; select bank1
 11187  1D5B  0839               	movf	(??_teste_US+1)^(0+128),w
 11188  1D5C  0140               	movlb	0	; select bank0
 11189  1D5D  00AC               	movwf	___wmul@multiplier+1
 11190  1D5E  3011               	movlw	17
 11191  1D5F  00AD               	movwf	___wmul@multiplicand
 11192  1D60  3000               	movlw	0
 11193  1D61  00AE               	movwf	___wmul@multiplicand+1
 11194  1D62  31D0  20FE  319C   	fcall	___wmul
 11195  1D65  30E2               	movlw	low (_teste_US1_str| (0+32768))
 11196  1D66  0141               	movlb	1	; select bank1
 11197  1D67  00BA               	movwf	(??_teste_US+2)^(0+128)
 11198  1D68  30DC               	movlw	high (_teste_US1_str| (0+32768))
 11199  1D69  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11200  1D6A  0140               	movlb	0	; select bank0
 11201  1D6B  082B               	movf	?___wmul,w
 11202  1D6C  0141               	movlb	1	; select bank1
 11203  1D6D  073A               	addwf	(??_teste_US+2)^(0+128),w
 11204  1D6E  0140               	movlb	0	; select bank0
 11205  1D6F  00B1               	movwf	strcpy@from
 11206  1D70  082C               	movf	?___wmul+1,w
 11207  1D71  0141               	movlb	1	; select bank1
 11208  1D72  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11209  1D73  0140               	movlb	0	; select bank0
 11210  1D74  00B2               	movwf	strcpy@from+1
 11211  1D75  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11212  1D76  31D1  211A  319C   	fcall	_strcpy
 11213                           
 11214                           ;func.c: 1998: ltoa(str,freq_inicial,10);
 11215  1D79  0143               	movlb	3	; select bank3
 11216  1D7A  0836               	movf	_freq_inicial^(0+384),w
 11217  1D7B  0140               	movlb	0	; select bank0
 11218  1D7C  00CA               	movwf	ltoa@val
 11219  1D7D  0143               	movlb	3	; select bank3
 11220  1D7E  0837               	movf	(_freq_inicial+1)^(0+384),w
 11221  1D7F  0140               	movlb	0	; select bank0
 11222  1D80  00CB               	movwf	ltoa@val+1
 11223  1D81  01CC               	clrf	ltoa@val+2
 11224  1D82  01CD               	clrf	ltoa@val+3
 11225  1D83  300A               	movlw	10
 11226  1D84  00CE               	movwf	ltoa@base
 11227  1D85  3000               	movlw	0
 11228  1D86  00CF               	movwf	ltoa@base+1
 11229  1D87  305C               	movlw	(low (_str| (0+512)))& (0+255)
 11230  1D88  31D4  24DE  319C   	fcall	_ltoa
 11231                           
 11232                           ;func.c: 1999: strcat(str1,str);
 11233  1D8B  305C               	movlw	low _str
 11234  1D8C  0140               	movlb	0	; select bank0
 11235  1D8D  00B1               	movwf	strcat@from
 11236  1D8E  3002               	movlw	high _str
 11237  1D8F  00B2               	movwf	strcat@from+1
 11238  1D90  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11239  1D91  31D3  2381  319C   	fcall	_strcat
 11240                           
 11241                           ;func.c: 2000: strcat(str1," Hz");
 11242  1D94  300B               	movlw	low (STR_21| (0+32768))
 11243  1D95  0140               	movlb	0	; select bank0
 11244  1D96  00B1               	movwf	strcat@from
 11245  1D97  30E9               	movlw	high (STR_21| (0+32768))
 11246  1D98  00B2               	movwf	strcat@from+1
 11247  1D99  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11248  1D9A  31D3  2381  319C   	fcall	_strcat
 11249                           
 11250                           ;func.c: 2001: escreve_LCD(1,1,str1);
 11251  1D9D  0140               	movlb	0	; select bank0
 11252  1D9E  01B5               	clrf	escreve_LCD@coluna
 11253  1D9F  0AB5               	incf	escreve_LCD@coluna,f
 11254  1DA0  3054               	movlw	low _str1
 11255  1DA1  00B6               	movwf	escreve_LCD@str
 11256  1DA2  3003               	movlw	high _str1
 11257  1DA3  00B7               	movwf	escreve_LCD@str+1
 11258  1DA4  3001               	movlw	1
 11259  1DA5  31E7  27C1  319C   	fcall	_escreve_LCD
 11260                           
 11261                           ;func.c: 2002: escreve_LCD(2,1,Sai_enter_str[idioma]);
 11262  1DA8  0140               	movlb	0	; select bank0
 11263  1DA9  01B5               	clrf	escreve_LCD@coluna
 11264  1DAA  0AB5               	incf	escreve_LCD@coluna,f
 11265  1DAB  0143               	movlb	3	; select bank3
 11266  1DAC  085A               	movf	_idioma^(0+384),w
 11267  1DAD  0141               	movlb	1	; select bank1
 11268  1DAE  00B8               	movwf	??_teste_US^(0+128)
 11269  1DAF  01B9               	clrf	(??_teste_US^(0+128)+1)
 11270  1DB0  0838               	movf	??_teste_US^(0+128),w
 11271  1DB1  0140               	movlb	0	; select bank0
 11272  1DB2  00AB               	movwf	___wmul@multiplier
 11273  1DB3  0141               	movlb	1	; select bank1
 11274  1DB4  0839               	movf	(??_teste_US+1)^(0+128),w
 11275  1DB5  0140               	movlb	0	; select bank0
 11276  1DB6  00AC               	movwf	___wmul@multiplier+1
 11277  1DB7  3011               	movlw	17
 11278  1DB8  00AD               	movwf	___wmul@multiplicand
 11279  1DB9  3000               	movlw	0
 11280  1DBA  00AE               	movwf	___wmul@multiplicand+1
 11281  1DBB  31D0  20FE  319C   	fcall	___wmul
 11282  1DBE  309E               	movlw	low (_Sai_enter_str| (0+32768))
 11283  1DBF  0141               	movlb	1	; select bank1
 11284  1DC0  00BA               	movwf	(??_teste_US+2)^(0+128)
 11285  1DC1  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 11286  1DC2  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11287  1DC3  0140               	movlb	0	; select bank0
 11288  1DC4  082B               	movf	?___wmul,w
 11289  1DC5  0141               	movlb	1	; select bank1
 11290  1DC6  073A               	addwf	(??_teste_US+2)^(0+128),w
 11291  1DC7  0140               	movlb	0	; select bank0
 11292  1DC8  00B6               	movwf	escreve_LCD@str
 11293  1DC9  082C               	movf	?___wmul+1,w
 11294  1DCA  0141               	movlb	1	; select bank1
 11295  1DCB  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11296  1DCC  0140               	movlb	0	; select bank0
 11297  1DCD  00B7               	movwf	escreve_LCD@str+1
 11298  1DCE  3002               	movlw	2
 11299  1DCF  31E7  27C1  319C   	fcall	_escreve_LCD
 11300                           
 11301                           ;func.c: 2003: set_freq(freq_inicial);
 11302  1DD2  0143               	movlb	3	; select bank3
 11303  1DD3  0837               	movf	(_freq_inicial+1)^(0+384),w
 11304  1DD4  0140               	movlb	0	; select bank0
 11305  1DD5  00C7               	movwf	set_freq@f+1
 11306  1DD6  0143               	movlb	3	; select bank3
 11307  1DD7  0836               	movf	_freq_inicial^(0+384),w
 11308  1DD8  0140               	movlb	0	; select bank0
 11309  1DD9  00C6               	movwf	set_freq@f
 11310  1DDA  31C5  2585  319C   	fcall	_set_freq
 11311                           
 11312                           ;func.c: 2004: }
 11313  1DDD  2FF8               	goto	l18076
 11314  1DDE                     l1842:	
 11315                           
 11316                           ;func.c: 2025: else if(flag.inicia){
 11317  1DDE  1E2C               	btfss	_flag^(0+384),4	;volatile
 11318  1DDF  2FE0               	goto	l1844
 11319                           
 11320                           ;func.c: 2026: LATDbits.LATD6 = 1;
 11321  1DE0  0140               	movlb	0	; select bank0
 11322  1DE1  1719               	bsf	25,6	;volatile
 11323                           
 11324                           ;func.c: 2027: flag.US = 1;
 11325  1DE2  0143               	movlb	3	; select bank3
 11326  1DE3  16AC               	bsf	_flag^(0+384),5	;volatile
 11327                           
 11328                           ;func.c: 2028: flag.isr_pot = 0;
 11329  1DE4  13AC               	bcf	_flag^(0+384),7	;volatile
 11330  1DE5                     l17978:	
 11331                           ;func.c: 2029: do{
 11332                           
 11333                           
 11334                           ;func.c: 2030: ver_entrada();
 11335  1DE5  31CE  26BA  319C   	fcall	_ver_entrada
 11336                           
 11337                           ;func.c: 2031: if(flag_in.emerg){ erro = 250;}
 11338  1DE8  0143               	movlb	3	; select bank3
 11339  1DE9  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 11340  1DEA  2DED               	goto	l1846
 11341  1DEB  30FA               	movlw	250
 11342  1DEC  2E03               	goto	L9
 11343  1DED                     l1846:	
 11344                           
 11345                           ;func.c: 2032: else if(PORTDbits.RD7){ erro = 200;}
 11346  1DED  0140               	movlb	0	; select bank0
 11347  1DEE  1F8F               	btfss	15,7	;volatile
 11348  1DEF  2DF2               	goto	l1848
 11349  1DF0  30C8               	movlw	200
 11350  1DF1  2E03               	goto	L9
 11351  1DF2                     l1848:	
 11352                           
 11353                           ;func.c: 2033: else if(flag.isr_pot){erro = 100;}
 11354  1DF2  0143               	movlb	3	; select bank3
 11355  1DF3  1FAC               	btfss	_flag^(0+384),7	;volatile
 11356  1DF4  2DF7               	goto	l17988
 11357  1DF5  3064               	movlw	100
 11358  1DF6  2E03               	goto	L9
 11359  1DF7                     l17988:	
 11360                           
 11361                           ;func.c: 2034: else {erro = ver_freq(get_freq(5));}
 11362  1DF7  3005               	movlw	5
 11363  1DF8  31C6  261D  319C   	fcall	_get_freq
 11364  1DFB  0140               	movlb	0	; select bank0
 11365  1DFC  083E               	movf	?_get_freq+1,w
 11366  1DFD  00C7               	movwf	ver_freq@f+1
 11367  1DFE  083D               	movf	?_get_freq,w
 11368  1DFF  00C6               	movwf	ver_freq@f
 11369  1E00  31D6  260E  319C   	fcall	_ver_freq
 11370  1E03                     L9:	
 11371  1E03  0141               	movlb	1	; select bank1
 11372  1E04  00B8               	movwf	??_teste_US^(0+128)
 11373  1E05  0838               	movf	??_teste_US^(0+128),w
 11374  1E06  0140               	movlb	0	; select bank0
 11375  1E07  00E3               	movwf	_erro
 11376                           
 11377                           ;func.c: 2035: if(erro > 0){
 11378  1E08  0863               	movf	_erro,w
 11379  1E09  1903               	btfsc	3,2
 11380  1E0A  2E17               	goto	l17998
 11381                           
 11382                           ;func.c: 2036: conta_erro++;
 11383  1E0B  3001               	movlw	1
 11384  1E0C  0141               	movlb	1	; select bank1
 11385  1E0D  00B8               	movwf	??_teste_US^(0+128)
 11386  1E0E  0838               	movf	??_teste_US^(0+128),w
 11387  1E0F  07BE               	addwf	teste_US@conta_erro^(0+128),f
 11388                           
 11389                           ;func.c: 2037: if(conta_erro > 5) {
 11390  1E10  3006               	movlw	6
 11391  1E11  023E               	subwf	teste_US@conta_erro^(0+128),w
 11392  1E12  1C03               	skipc
 11393  1E13  2E19               	goto	l18000
 11394                           
 11395                           ;func.c: 2038: flag.abortar = 1;
 11396  1E14  0143               	movlb	3	; select bank3
 11397  1E15  172C               	bsf	_flag^(0+384),6	;volatile
 11398                           
 11399                           ;func.c: 2039: }
 11400                           ;func.c: 2040: }
 11401  1E16  2E19               	goto	l18000
 11402  1E17                     l17998:	
 11403                           
 11404                           ;func.c: 2041: else{
 11405                           ;func.c: 2042: conta_erro = 0;
 11406  1E17  0141               	movlb	1	; select bank1
 11407  1E18  01BE               	clrf	teste_US@conta_erro^(0+128)
 11408  1E19                     l18000:	
 11409                           
 11410                           ;func.c: 2043: }
 11411                           ;func.c: 2045: }while(!flag.abortar && (flag_in.aciona1 || flag_in.aciona2));
 11412  1E19  0143               	movlb	3	; select bank3
 11413  1E1A  1B2C               	btfsc	_flag^(0+384),6	;volatile
 11414  1E1B  2E1F               	goto	l1857
 11415  1E1C  1CCC               	btfss	_flag_in^(0+384),1	;volatile
 11416  1E1D  194C               	btfsc	_flag_in^(0+384),2	;volatile
 11417  1E1E  2DE5               	goto	l17978
 11418  1E1F                     l1857:	
 11419                           
 11420                           ;func.c: 2046: flag_in.liberado = 0;
 11421  1E1F  10CD               	bcf	(_flag_in^(0+384)+1),1	;volatile
 11422                           
 11423                           ;func.c: 2047: LATDbits.LATD6 = 0;
 11424  1E20  0140               	movlb	0	; select bank0
 11425  1E21  1319               	bcf	25,6	;volatile
 11426                           
 11427                           ;func.c: 2048: flag.US = 0;
 11428  1E22  0143               	movlb	3	; select bank3
 11429  1E23  12AC               	bcf	_flag^(0+384),5	;volatile
 11430                           
 11431                           ;func.c: 2049: if(flag.abortar){
 11432  1E24  1F2C               	btfss	_flag^(0+384),6	;volatile
 11433  1E25  2FBC               	goto	l18060
 11434                           
 11435                           ;func.c: 2050: LATDbits.LATD6 = 0;
 11436  1E26  0140               	movlb	0	; select bank0
 11437  1E27  1319               	bcf	25,6	;volatile
 11438                           
 11439                           ;func.c: 2051: led.ERR = 1;
 11440  1E28  0143               	movlb	3	; select bank3
 11441  1E29  1565               	bsf	_led^(0+384),2	;volatile
 11442                           
 11443                           ;func.c: 2052: Lcd_Clear();
 11444  1E2A  31E1  21DF  319C   	fcall	_Lcd_Clear
 11445                           
 11446                           ;func.c: 2053: if(erro == 250){
 11447  1E2D  30FA               	movlw	250
 11448  1E2E  0140               	movlb	0	; select bank0
 11449  1E2F  0663               	xorwf	_erro,w
 11450  1E30  1D03               	btfss	3,2
 11451  1E31  2E60               	goto	l1859
 11452                           
 11453                           ;func.c: 2054: emergencia();
 11454  1E32  31C4  2464  319C   	fcall	_emergencia
 11455                           
 11456                           ;func.c: 2055: escreve_LCD(1,1,emergencia_str[idioma]);
 11457  1E35  0140               	movlb	0	; select bank0
 11458  1E36  01B5               	clrf	escreve_LCD@coluna
 11459  1E37  0AB5               	incf	escreve_LCD@coluna,f
 11460  1E38  0143               	movlb	3	; select bank3
 11461  1E39  085A               	movf	_idioma^(0+384),w
 11462  1E3A  0141               	movlb	1	; select bank1
 11463  1E3B  00B8               	movwf	??_teste_US^(0+128)
 11464  1E3C  01B9               	clrf	(??_teste_US^(0+128)+1)
 11465  1E3D  0838               	movf	??_teste_US^(0+128),w
 11466  1E3E  0140               	movlb	0	; select bank0
 11467  1E3F  00AB               	movwf	___wmul@multiplier
 11468  1E40  0141               	movlb	1	; select bank1
 11469  1E41  0839               	movf	(??_teste_US+1)^(0+128),w
 11470  1E42  0140               	movlb	0	; select bank0
 11471  1E43  00AC               	movwf	___wmul@multiplier+1
 11472  1E44  3011               	movlw	17
 11473  1E45  00AD               	movwf	___wmul@multiplicand
 11474  1E46  3000               	movlw	0
 11475  1E47  00AE               	movwf	___wmul@multiplicand+1
 11476  1E48  31D0  20FE  319C   	fcall	___wmul
 11477  1E4B  3026               	movlw	low (_emergencia_str| (0+32768))
 11478  1E4C  0141               	movlb	1	; select bank1
 11479  1E4D  00BA               	movwf	(??_teste_US+2)^(0+128)
 11480  1E4E  30DD               	movlw	high (_emergencia_str| (0+32768))
 11481  1E4F  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11482  1E50  0140               	movlb	0	; select bank0
 11483  1E51  082B               	movf	?___wmul,w
 11484  1E52  0141               	movlb	1	; select bank1
 11485  1E53  073A               	addwf	(??_teste_US+2)^(0+128),w
 11486  1E54  0140               	movlb	0	; select bank0
 11487  1E55  00B6               	movwf	escreve_LCD@str
 11488  1E56  082C               	movf	?___wmul+1,w
 11489  1E57  0141               	movlb	1	; select bank1
 11490  1E58  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11491  1E59  0140               	movlb	0	; select bank0
 11492  1E5A  00B7               	movwf	escreve_LCD@str+1
 11493  1E5B  3001               	movlw	1
 11494  1E5C  31E7  27C1  319C   	fcall	_escreve_LCD
 11495                           
 11496                           ;func.c: 2056: }
 11497  1E5F  2F27               	goto	l18038
 11498  1E60                     l1859:	
 11499                           
 11500                           ;func.c: 2057: else if(PORTDbits.RD7){
 11501  1E60  1F8F               	btfss	15,7	;volatile
 11502  1E61  2EA4               	goto	l18026
 11503                           
 11504                           ;func.c: 2058: led.OVL = 1;
 11505  1E62  0143               	movlb	3	; select bank3
 11506  1E63  14E5               	bsf	_led^(0+384),1	;volatile
 11507                           
 11508                           ;func.c: 2059: escreve_LCD(1,1,erro_inv_str[idioma]);
 11509  1E64  0140               	movlb	0	; select bank0
 11510  1E65  01B5               	clrf	escreve_LCD@coluna
 11511  1E66  0AB5               	incf	escreve_LCD@coluna,f
 11512  1E67  0143               	movlb	3	; select bank3
 11513  1E68  085A               	movf	_idioma^(0+384),w
 11514  1E69  0141               	movlb	1	; select bank1
 11515  1E6A  00B8               	movwf	??_teste_US^(0+128)
 11516  1E6B  01B9               	clrf	(??_teste_US^(0+128)+1)
 11517  1E6C  0838               	movf	??_teste_US^(0+128),w
 11518  1E6D  0140               	movlb	0	; select bank0
 11519  1E6E  00AB               	movwf	___wmul@multiplier
 11520  1E6F  0141               	movlb	1	; select bank1
 11521  1E70  0839               	movf	(??_teste_US+1)^(0+128),w
 11522  1E71  0140               	movlb	0	; select bank0
 11523  1E72  00AC               	movwf	___wmul@multiplier+1
 11524  1E73  3011               	movlw	17
 11525  1E74  00AD               	movwf	___wmul@multiplicand
 11526  1E75  3000               	movlw	0
 11527  1E76  00AE               	movwf	___wmul@multiplicand+1
 11528  1E77  31D0  20FE  319C   	fcall	___wmul
 11529  1E7A  3038               	movlw	low (_erro_inv_str| (0+32768))
 11530  1E7B  0141               	movlb	1	; select bank1
 11531  1E7C  00BA               	movwf	(??_teste_US+2)^(0+128)
 11532  1E7D  30DC               	movlw	high (_erro_inv_str| (0+32768))
 11533  1E7E  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11534  1E7F  0140               	movlb	0	; select bank0
 11535  1E80  082B               	movf	?___wmul,w
 11536  1E81  0141               	movlb	1	; select bank1
 11537  1E82  073A               	addwf	(??_teste_US+2)^(0+128),w
 11538  1E83  0140               	movlb	0	; select bank0
 11539  1E84  00B6               	movwf	escreve_LCD@str
 11540  1E85  082C               	movf	?___wmul+1,w
 11541  1E86  0141               	movlb	1	; select bank1
 11542  1E87  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11543  1E88  0140               	movlb	0	; select bank0
 11544  1E89  00B7               	movwf	escreve_LCD@str+1
 11545  1E8A  3001               	movlw	1
 11546  1E8B  31E7  27C1  319C   	fcall	_escreve_LCD
 11547  1E8E                     l18020:	
 11548                           ;func.c: 2061: do{
 11549                           
 11550                           
 11551                           ;func.c: 2062: _delay((unsigned long)((500)*(20000000/4000.0)));
 11552  1E8E  300D               	movlw	13
 11553  1E8F  0141               	movlb	1	; select bank1
 11554  1E90  00B9               	movwf	(??_teste_US^(0+128)+1)
 11555  1E91  30AF               	movlw	175
 11556  1E92  00B8               	movwf	??_teste_US^(0+128)
 11557  1E93  30B6               	movlw	182
 11558  1E94                     u20677:	
 11559  1E94  0B89               	decfsz	9,f
 11560  1E95  2E94               	goto	u20677
 11561  1E96  0BB8               	decfsz	??_teste_US^(0+128),f
 11562  1E97  2E94               	goto	u20677
 11563  1E98  0BB9               	decfsz	(??_teste_US^(0+128)+1),f
 11564  1E99  2E94               	goto	u20677
 11565  1E9A  0000               	nop
 11566                           
 11567                           ;func.c: 2063: rst_inversor();
 11568  1E9B  31D2  220E  319C   	fcall	_rst_inversor
 11569                           
 11570                           ;func.c: 2064: }while(PORTDbits.RD7);
 11571  1E9E  0140               	movlb	0	; select bank0
 11572  1E9F  1B8F               	btfsc	15,7	;volatile
 11573  1EA0  2E8E               	goto	l18020
 11574                           
 11575                           ;func.c: 2065: led.OVL = 0;
 11576  1EA1  0143               	movlb	3	; select bank3
 11577  1EA2  10E5               	bcf	_led^(0+384),1	;volatile
 11578                           
 11579                           ;func.c: 2066: }
 11580  1EA3  2F27               	goto	l18038
 11581  1EA4                     l18026:	
 11582                           
 11583                           ;func.c: 2067: else if(erro == 100){
 11584  1EA4  3064               	movlw	100
 11585  1EA5  0140               	movlb	0	; select bank0
 11586  1EA6  0663               	xorwf	_erro,w
 11587  1EA7  1D03               	btfss	3,2
 11588  1EA8  2ED3               	goto	l18030
 11589                           
 11590                           ;func.c: 2068: escreve_LCD(1,1,erro_ovl_str[idioma]);
 11591  1EA9  01B5               	clrf	escreve_LCD@coluna
 11592  1EAA  0AB5               	incf	escreve_LCD@coluna,f
 11593  1EAB  0143               	movlb	3	; select bank3
 11594  1EAC  085A               	movf	_idioma^(0+384),w
 11595  1EAD  0141               	movlb	1	; select bank1
 11596  1EAE  00B8               	movwf	??_teste_US^(0+128)
 11597  1EAF  01B9               	clrf	(??_teste_US^(0+128)+1)
 11598  1EB0  0838               	movf	??_teste_US^(0+128),w
 11599  1EB1  0140               	movlb	0	; select bank0
 11600  1EB2  00AB               	movwf	___wmul@multiplier
 11601  1EB3  0141               	movlb	1	; select bank1
 11602  1EB4  0839               	movf	(??_teste_US+1)^(0+128),w
 11603  1EB5  0140               	movlb	0	; select bank0
 11604  1EB6  00AC               	movwf	___wmul@multiplier+1
 11605  1EB7  3011               	movlw	17
 11606  1EB8  00AD               	movwf	___wmul@multiplicand
 11607  1EB9  3000               	movlw	0
 11608  1EBA  00AE               	movwf	___wmul@multiplicand+1
 11609  1EBB  31D0  20FE  319C   	fcall	___wmul
 11610  1EBE  305A               	movlw	low (_erro_ovl_str| (0+32768))
 11611  1EBF  0141               	movlb	1	; select bank1
 11612  1EC0  00BA               	movwf	(??_teste_US+2)^(0+128)
 11613  1EC1  30DC               	movlw	high (_erro_ovl_str| (0+32768))
 11614  1EC2  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11615  1EC3  0140               	movlb	0	; select bank0
 11616  1EC4  082B               	movf	?___wmul,w
 11617  1EC5  0141               	movlb	1	; select bank1
 11618  1EC6  073A               	addwf	(??_teste_US+2)^(0+128),w
 11619  1EC7  0140               	movlb	0	; select bank0
 11620  1EC8  00B6               	movwf	escreve_LCD@str
 11621  1EC9  082C               	movf	?___wmul+1,w
 11622  1ECA  0141               	movlb	1	; select bank1
 11623  1ECB  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11624  1ECC  0140               	movlb	0	; select bank0
 11625  1ECD  00B7               	movwf	escreve_LCD@str+1
 11626  1ECE  3001               	movlw	1
 11627  1ECF  31E7  27C1  319C   	fcall	_escreve_LCD
 11628                           
 11629                           ;func.c: 2069: }
 11630  1ED2  2F27               	goto	l18038
 11631  1ED3                     l18030:	
 11632                           
 11633                           ;func.c: 2070: else if (erro < 100){
 11634  1ED3  3064               	movlw	100
 11635  1ED4  0140               	movlb	0	; select bank0
 11636  1ED5  0263               	subwf	_erro,w
 11637  1ED6  1803               	skipnc
 11638  1ED7  2F27               	goto	l18038
 11639                           
 11640                           ;func.c: 2071: escreve_LCD(1,1,erro_str[idioma]);
 11641  1ED8  01B5               	clrf	escreve_LCD@coluna
 11642  1ED9  0AB5               	incf	escreve_LCD@coluna,f
 11643  1EDA  0143               	movlb	3	; select bank3
 11644  1EDB  085A               	movf	_idioma^(0+384),w
 11645  1EDC  0141               	movlb	1	; select bank1
 11646  1EDD  00B8               	movwf	??_teste_US^(0+128)
 11647  1EDE  01B9               	clrf	(??_teste_US^(0+128)+1)
 11648  1EDF  0838               	movf	??_teste_US^(0+128),w
 11649  1EE0  0140               	movlb	0	; select bank0
 11650  1EE1  00AB               	movwf	___wmul@multiplier
 11651  1EE2  0141               	movlb	1	; select bank1
 11652  1EE3  0839               	movf	(??_teste_US+1)^(0+128),w
 11653  1EE4  0140               	movlb	0	; select bank0
 11654  1EE5  00AC               	movwf	___wmul@multiplier+1
 11655  1EE6  3011               	movlw	17
 11656  1EE7  00AD               	movwf	___wmul@multiplicand
 11657  1EE8  3000               	movlw	0
 11658  1EE9  00AE               	movwf	___wmul@multiplicand+1
 11659  1EEA  31D0  20FE  319C   	fcall	___wmul
 11660  1EED  307C               	movlw	low (_erro_str| (0+32768))
 11661  1EEE  0141               	movlb	1	; select bank1
 11662  1EEF  00BA               	movwf	(??_teste_US+2)^(0+128)
 11663  1EF0  30DC               	movlw	high (_erro_str| (0+32768))
 11664  1EF1  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11665  1EF2  0140               	movlb	0	; select bank0
 11666  1EF3  082B               	movf	?___wmul,w
 11667  1EF4  0141               	movlb	1	; select bank1
 11668  1EF5  073A               	addwf	(??_teste_US+2)^(0+128),w
 11669  1EF6  0140               	movlb	0	; select bank0
 11670  1EF7  00B6               	movwf	escreve_LCD@str
 11671  1EF8  082C               	movf	?___wmul+1,w
 11672  1EF9  0141               	movlb	1	; select bank1
 11673  1EFA  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11674  1EFB  0140               	movlb	0	; select bank0
 11675  1EFC  00B7               	movwf	escreve_LCD@str+1
 11676  1EFD  3001               	movlw	1
 11677  1EFE  31E7  27C1  319C   	fcall	_escreve_LCD
 11678                           
 11679                           ;func.c: 2072: ltoa(str,erro,10);
 11680  1F01  0140               	movlb	0	; select bank0
 11681  1F02  0863               	movf	_erro,w
 11682  1F03  0141               	movlb	1	; select bank1
 11683  1F04  00B8               	movwf	??_teste_US^(0+128)
 11684  1F05  01B9               	clrf	(??_teste_US^(0+128)+1)
 11685  1F06  01BA               	clrf	(??_teste_US^(0+128)+2)
 11686  1F07  01BB               	clrf	(??_teste_US^(0+128)+3)
 11687  1F08  083B               	movf	(??_teste_US+3)^(0+128),w
 11688  1F09  0140               	movlb	0	; select bank0
 11689  1F0A  00CD               	movwf	ltoa@val+3
 11690  1F0B  0141               	movlb	1	; select bank1
 11691  1F0C  083A               	movf	(??_teste_US+2)^(0+128),w
 11692  1F0D  0140               	movlb	0	; select bank0
 11693  1F0E  00CC               	movwf	ltoa@val+2
 11694  1F0F  0141               	movlb	1	; select bank1
 11695  1F10  0839               	movf	(??_teste_US+1)^(0+128),w
 11696  1F11  0140               	movlb	0	; select bank0
 11697  1F12  00CB               	movwf	ltoa@val+1
 11698  1F13  0141               	movlb	1	; select bank1
 11699  1F14  0838               	movf	??_teste_US^(0+128),w
 11700  1F15  0140               	movlb	0	; select bank0
 11701  1F16  00CA               	movwf	ltoa@val
 11702  1F17  300A               	movlw	10
 11703  1F18  00CE               	movwf	ltoa@base
 11704  1F19  3000               	movlw	0
 11705  1F1A  00CF               	movwf	ltoa@base+1
 11706  1F1B  305C               	movlw	(low (_str| (0+512)))& (0+255)
 11707  1F1C  31D4  24DE  319C   	fcall	_ltoa
 11708                           
 11709                           ;func.c: 2073: Lcd_Write_String(str);
 11710  1F1F  305C               	movlw	low _str
 11711  1F20  0140               	movlb	0	; select bank0
 11712  1F21  00B0               	movwf	Lcd_Write_String@a
 11713  1F22  3002               	movlw	high _str
 11714  1F23  00B1               	movwf	Lcd_Write_String@a+1
 11715  1F24  31D1  2171  319C   	fcall	_Lcd_Write_String
 11716  1F27                     l18038:	
 11717                           
 11718                           ;func.c: 2074: }
 11719                           ;func.c: 2075: trava_erro("\0");
 11720  1F27  3018               	movlw	low (STR_3| (0+32768))
 11721  1F28  0140               	movlb	0	; select bank0
 11722  1F29  00D7               	movwf	trava_erro@s
 11723  1F2A  30E9               	movlw	high (STR_3| (0+32768))
 11724  1F2B  00D8               	movwf	trava_erro@s+1
 11725  1F2C  31C6  26BE  319C   	fcall	_trava_erro
 11726                           
 11727                           ;func.c: 2076: led.ERR = 0;
 11728  1F2F  0143               	movlb	3	; select bank3
 11729  1F30  1165               	bcf	_led^(0+384),2	;volatile
 11730                           
 11731                           ;func.c: 2077: flag.abortar = 0;
 11732  1F31  132C               	bcf	_flag^(0+384),6	;volatile
 11733                           
 11734                           ;func.c: 2078: Lcd_Clear();
 11735  1F32  31E1  21DF  319C   	fcall	_Lcd_Clear
 11736                           
 11737                           ;func.c: 2079: strcpy(str1,teste_US1_str[idioma]);
 11738  1F35  0143               	movlb	3	; select bank3
 11739  1F36  085A               	movf	_idioma^(0+384),w
 11740  1F37  0141               	movlb	1	; select bank1
 11741  1F38  00B8               	movwf	??_teste_US^(0+128)
 11742  1F39  01B9               	clrf	(??_teste_US^(0+128)+1)
 11743  1F3A  0838               	movf	??_teste_US^(0+128),w
 11744  1F3B  0140               	movlb	0	; select bank0
 11745  1F3C  00AB               	movwf	___wmul@multiplier
 11746  1F3D  0141               	movlb	1	; select bank1
 11747  1F3E  0839               	movf	(??_teste_US+1)^(0+128),w
 11748  1F3F  0140               	movlb	0	; select bank0
 11749  1F40  00AC               	movwf	___wmul@multiplier+1
 11750  1F41  3011               	movlw	17
 11751  1F42  00AD               	movwf	___wmul@multiplicand
 11752  1F43  3000               	movlw	0
 11753  1F44  00AE               	movwf	___wmul@multiplicand+1
 11754  1F45  31D0  20FE  319C   	fcall	___wmul
 11755  1F48  30E2               	movlw	low (_teste_US1_str| (0+32768))
 11756  1F49  0141               	movlb	1	; select bank1
 11757  1F4A  00BA               	movwf	(??_teste_US+2)^(0+128)
 11758  1F4B  30DC               	movlw	high (_teste_US1_str| (0+32768))
 11759  1F4C  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11760  1F4D  0140               	movlb	0	; select bank0
 11761  1F4E  082B               	movf	?___wmul,w
 11762  1F4F  0141               	movlb	1	; select bank1
 11763  1F50  073A               	addwf	(??_teste_US+2)^(0+128),w
 11764  1F51  0140               	movlb	0	; select bank0
 11765  1F52  00B1               	movwf	strcpy@from
 11766  1F53  082C               	movf	?___wmul+1,w
 11767  1F54  0141               	movlb	1	; select bank1
 11768  1F55  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11769  1F56  0140               	movlb	0	; select bank0
 11770  1F57  00B2               	movwf	strcpy@from+1
 11771  1F58  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11772  1F59  31D1  211A  319C   	fcall	_strcpy
 11773                           
 11774                           ;func.c: 2080: ltoa(str,freq_inicial,10);
 11775  1F5C  0143               	movlb	3	; select bank3
 11776  1F5D  0836               	movf	_freq_inicial^(0+384),w
 11777  1F5E  0140               	movlb	0	; select bank0
 11778  1F5F  00CA               	movwf	ltoa@val
 11779  1F60  0143               	movlb	3	; select bank3
 11780  1F61  0837               	movf	(_freq_inicial+1)^(0+384),w
 11781  1F62  0140               	movlb	0	; select bank0
 11782  1F63  00CB               	movwf	ltoa@val+1
 11783  1F64  01CC               	clrf	ltoa@val+2
 11784  1F65  01CD               	clrf	ltoa@val+3
 11785  1F66  300A               	movlw	10
 11786  1F67  00CE               	movwf	ltoa@base
 11787  1F68  3000               	movlw	0
 11788  1F69  00CF               	movwf	ltoa@base+1
 11789  1F6A  305C               	movlw	(low (_str| (0+512)))& (0+255)
 11790  1F6B  31D4  24DE  319C   	fcall	_ltoa
 11791                           
 11792                           ;func.c: 2081: strcat(str1,str);
 11793  1F6E  305C               	movlw	low _str
 11794  1F6F  0140               	movlb	0	; select bank0
 11795  1F70  00B1               	movwf	strcat@from
 11796  1F71  3002               	movlw	high _str
 11797  1F72  00B2               	movwf	strcat@from+1
 11798  1F73  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11799  1F74  31D3  2381  319C   	fcall	_strcat
 11800                           
 11801                           ;func.c: 2082: strcat(str1," Hz");
 11802  1F77  300B               	movlw	low (STR_21| (0+32768))
 11803  1F78  0140               	movlb	0	; select bank0
 11804  1F79  00B1               	movwf	strcat@from
 11805  1F7A  30E9               	movlw	high (STR_21| (0+32768))
 11806  1F7B  00B2               	movwf	strcat@from+1
 11807  1F7C  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 11808  1F7D  31D3  2381  319C   	fcall	_strcat
 11809                           
 11810                           ;func.c: 2083: escreve_LCD(1,1,str1);
 11811  1F80  0140               	movlb	0	; select bank0
 11812  1F81  01B5               	clrf	escreve_LCD@coluna
 11813  1F82  0AB5               	incf	escreve_LCD@coluna,f
 11814  1F83  3054               	movlw	low _str1
 11815  1F84  00B6               	movwf	escreve_LCD@str
 11816  1F85  3003               	movlw	high _str1
 11817  1F86  00B7               	movwf	escreve_LCD@str+1
 11818  1F87  3001               	movlw	1
 11819  1F88  31E7  27C1  319C   	fcall	_escreve_LCD
 11820                           
 11821                           ;func.c: 2084: escreve_LCD(2,1,Sai_enter_str[idioma]);
 11822  1F8B  0140               	movlb	0	; select bank0
 11823  1F8C  01B5               	clrf	escreve_LCD@coluna
 11824  1F8D  0AB5               	incf	escreve_LCD@coluna,f
 11825  1F8E  0143               	movlb	3	; select bank3
 11826  1F8F  085A               	movf	_idioma^(0+384),w
 11827  1F90  0141               	movlb	1	; select bank1
 11828  1F91  00B8               	movwf	??_teste_US^(0+128)
 11829  1F92  01B9               	clrf	(??_teste_US^(0+128)+1)
 11830  1F93  0838               	movf	??_teste_US^(0+128),w
 11831  1F94  0140               	movlb	0	; select bank0
 11832  1F95  00AB               	movwf	___wmul@multiplier
 11833  1F96  0141               	movlb	1	; select bank1
 11834  1F97  0839               	movf	(??_teste_US+1)^(0+128),w
 11835  1F98  0140               	movlb	0	; select bank0
 11836  1F99  00AC               	movwf	___wmul@multiplier+1
 11837  1F9A  3011               	movlw	17
 11838  1F9B  00AD               	movwf	___wmul@multiplicand
 11839  1F9C  3000               	movlw	0
 11840  1F9D  00AE               	movwf	___wmul@multiplicand+1
 11841  1F9E  31D0  20FE  319C   	fcall	___wmul
 11842  1FA1  309E               	movlw	low (_Sai_enter_str| (0+32768))
 11843  1FA2  0141               	movlb	1	; select bank1
 11844  1FA3  00BA               	movwf	(??_teste_US+2)^(0+128)
 11845  1FA4  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 11846  1FA5  00BB               	movwf	((??_teste_US+2)^(0+128)+1)
 11847  1FA6  0140               	movlb	0	; select bank0
 11848  1FA7  082B               	movf	?___wmul,w
 11849  1FA8  0141               	movlb	1	; select bank1
 11850  1FA9  073A               	addwf	(??_teste_US+2)^(0+128),w
 11851  1FAA  0140               	movlb	0	; select bank0
 11852  1FAB  00B6               	movwf	escreve_LCD@str
 11853  1FAC  082C               	movf	?___wmul+1,w
 11854  1FAD  0141               	movlb	1	; select bank1
 11855  1FAE  3D3B               	addwfc	(??_teste_US+3)^(0+128),w
 11856  1FAF  0140               	movlb	0	; select bank0
 11857  1FB0  00B7               	movwf	escreve_LCD@str+1
 11858  1FB1  3002               	movlw	2
 11859  1FB2  31E7  27C1  319C   	fcall	_escreve_LCD
 11860                           
 11861                           ;func.c: 2085: set_freq(freq_inicial);
 11862  1FB5  0143               	movlb	3	; select bank3
 11863  1FB6  0837               	movf	(_freq_inicial+1)^(0+384),w
 11864  1FB7  0140               	movlb	0	; select bank0
 11865  1FB8  00C7               	movwf	set_freq@f+1
 11866  1FB9  0143               	movlb	3	; select bank3
 11867  1FBA  0836               	movf	_freq_inicial^(0+384),w
 11868  1FBB  2FD7               	goto	L10
 11869  1FBC                     l18060:	
 11870                           ;func.c: 2086: }
 11871                           
 11872                           
 11873                           ;func.c: 2087: else{
 11874                           ;func.c: 2088: salva_EEPROM(freq_inicial,218);
 11875  1FBC  0143               	movlb	3	; select bank3
 11876  1FBD  0837               	movf	(_freq_inicial+1)^(0+384),w
 11877  1FBE  0140               	movlb	0	; select bank0
 11878  1FBF  00AF               	movwf	salva_EEPROM@valor+1
 11879  1FC0  0143               	movlb	3	; select bank3
 11880  1FC1  0836               	movf	_freq_inicial^(0+384),w
 11881  1FC2  0140               	movlb	0	; select bank0
 11882  1FC3  00AE               	movwf	salva_EEPROM@valor
 11883  1FC4  30DA               	movlw	218
 11884  1FC5  0141               	movlb	1	; select bank1
 11885  1FC6  00B8               	movwf	??_teste_US^(0+128)
 11886  1FC7  0838               	movf	??_teste_US^(0+128),w
 11887  1FC8  0140               	movlb	0	; select bank0
 11888  1FC9  00B0               	movwf	salva_EEPROM@address
 11889  1FCA  31D5  250D  319C   	fcall	_salva_EEPROM
 11890                           
 11891                           ;func.c: 2089: freq_atual = freq_inicial;
 11892  1FCD  0143               	movlb	3	; select bank3
 11893  1FCE  0837               	movf	(_freq_inicial+1)^(0+384),w
 11894  1FCF  00B5               	movwf	(_freq_atual+1)^(0+384)
 11895  1FD0  0836               	movf	_freq_inicial^(0+384),w
 11896  1FD1  00B4               	movwf	_freq_atual^(0+384)
 11897                           
 11898                           ;func.c: 2090: set_freq(freq_atual);
 11899  1FD2  0835               	movf	(_freq_atual+1)^(0+384),w
 11900  1FD3  0140               	movlb	0	; select bank0
 11901  1FD4  00C7               	movwf	set_freq@f+1
 11902  1FD5  0143               	movlb	3	; select bank3
 11903  1FD6  0834               	movf	_freq_atual^(0+384),w
 11904  1FD7                     L10:	
 11905  1FD7  0140               	movlb	0	; select bank0
 11906  1FD8  00C6               	movwf	set_freq@f
 11907  1FD9  31C5  2585  319C   	fcall	_set_freq
 11908                           
 11909                           ;func.c: 2091: }
 11910                           ;func.c: 2092: liberar();
 11911  1FDC  31E1  21BB  319C   	fcall	_liberar
 11912                           
 11913                           ;func.c: 2093: }
 11914  1FDF  2FF8               	goto	l18076
 11915  1FE0                     l1844:	
 11916                           
 11917                           ;func.c: 2094: else{
 11918                           ;func.c: 2095: LATDbits.LATD6 = 0;
 11919  1FE0  0140               	movlb	0	; select bank0
 11920  1FE1  1319               	bcf	25,6	;volatile
 11921                           
 11922                           ;func.c: 2096: bt = teclado();
 11923  1FE2  31C2  22CC  319C   	fcall	_teclado
 11924  1FE5  0141               	movlb	1	; select bank1
 11925  1FE6  00B8               	movwf	??_teste_US^(0+128)
 11926  1FE7  0838               	movf	??_teste_US^(0+128),w
 11927  1FE8  00BD               	movwf	teste_US@bt^(0+128)
 11928                           
 11929                           ;func.c: 2097: if(bt == 18){
 11930  1FE9  3012               	movlw	18
 11931  1FEA  063D               	xorwf	teste_US@bt^(0+128),w
 11932  1FEB  1D03               	btfss	3,2
 11933  1FEC  2FF8               	goto	l18076
 11934                           
 11935                           ;func.c: 2098: flag.tela = 0;
 11936  1FED  0143               	movlb	3	; select bank3
 11937  1FEE  102D               	bcf	(_flag^(0+384)+1),0	;volatile
 11938                           
 11939                           ;func.c: 2099: liberar_tecla(18,1000);
 11940  1FEF  30E8               	movlw	232
 11941  1FF0  0140               	movlb	0	; select bank0
 11942  1FF1  00B3               	movwf	liberar_tecla@t
 11943  1FF2  3003               	movlw	3
 11944  1FF3  00B4               	movwf	liberar_tecla@t+1
 11945  1FF4  3012               	movlw	18
 11946  1FF5  31D7  2735  319C   	fcall	_liberar_tecla
 11947  1FF8                     l18076:	
 11948                           
 11949                           ;func.c: 2100: }
 11950                           ;func.c: 2101: }
 11951                           ;func.c: 2102: }while(flag.tela);
 11952  1FF8  0143               	movlb	3	; select bank3
 11953  1FF9  182D               	btfsc	(_flag^(0+384)+1),0	;volatile
 11954  1FFA  2D3E               	goto	l1841
 11955                           
 11956                           ;func.c: 2104: flag.abortar = 0;
 11957  1FFB  132C               	bcf	_flag^(0+384),6	;volatile
 11958                           
 11959                           ;func.c: 2105: flag.inicia = 0;
 11960  1FFC  122C               	bcf	_flag^(0+384),4	;volatile
 11961  1FFD                     l1872:	
 11962                           ;func.c: 2107: else{
 11963                           
 11964                           ;func.c: 2106: }
 11965                           
 11966                           
 11967                           ;func.c: 2109: }
 11968                           ;func.c: 2110: flag.teste = 0;
 11969  1FFD  0143               	movlb	3	; select bank3
 11970  1FFE  132D               	bcf	(_flag^(0+384)+1),6	;volatile
 11971  1FFF  0008               	return
 11972  2000                     __end_of_teste_US:	
 11973                           
 11974                           	psect	text6
 11975  61BB                     __ptext6:	
 11976 ;; *************** function _liberar *****************
 11977 ;; Defined at:
 11978 ;;		line 797 in file "func.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;		None
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;		None
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      void 
 11985 ;; Registers used:
 11986 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 11992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 11996 ;;Total ram usage:        0 bytes
 11997 ;; Hardware stack levels used:    1
 11998 ;; Hardware stack levels required when called:    5
 11999 ;; This function calls:
 12000 ;;		_ver_entrada
 12001 ;; This function is called by:
 12002 ;;		_main
 12003 ;;		_teste_pneumatico
 12004 ;;		_teste_US
 12005 ;; This function uses a non-reentrant model
 12006 ;;
 12007                           
 12008                           
 12009                           ;psect for function _liberar
 12010  61BB                     _liberar:	
 12011  61BB                     l1377:	
 12012                           ;incstack = 0
 12013                           ; Regs used in _liberar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12014                           ;func.c: 798: do{
 12015                           
 12016  61BB  0064               	clrwdt	;# 
 12017                           
 12018                           ;func.c: 800: ver_entrada();
 12019  61BC  31CE  26BA  31E1   	fcall	_ver_entrada
 12020                           
 12021                           ;func.c: 801: }while(flag_in.aciona1 || flag_in.aciona2);
 12022  61BF  0143               	movlb	3	; select bank3
 12023  61C0  1CCC               	btfss	_flag_in^(0+384),1	;volatile
 12024  61C1  194C               	btfsc	_flag_in^(0+384),2	;volatile
 12025  61C2  29BB               	goto	l1377
 12026                           
 12027                           ;func.c: 802: flag_in.liberado = 1;
 12028  61C3  14CD               	bsf	(_flag_in^(0+384)+1),1	;volatile
 12029                           
 12030                           ;func.c: 803: flag.abortar = 0;
 12031  61C4  132C               	bcf	_flag^(0+384),6	;volatile
 12032                           
 12033                           ;func.c: 804: flag.inicia = 0;
 12034  61C5  122C               	bcf	_flag^(0+384),4	;volatile
 12035  61C6  0008               	return
 12036  61C7                     __end_of_liberar:	
 12037                           
 12038                           	psect	text7
 12039  4464                     __ptext7:	
 12040 ;; *************** function _emergencia *****************
 12041 ;; Defined at:
 12042 ;;		line 830 in file "func.c"
 12043 ;; Parameters:    Size  Location     Type
 12044 ;;		None
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;  bt              1   23[BANK1 ] unsigned char 
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  1    wreg      void 
 12049 ;; Registers used:
 12050 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/0
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12057 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12058 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12059 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12060 ;;Total ram usage:        5 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; Hardware stack levels required when called:   10
 12063 ;; This function calls:
 12064 ;;		___wmul
 12065 ;;		_escreve_LCD
 12066 ;;		_rotina_tela
 12067 ;;		_status_gerador
 12068 ;;		_teclado
 12069 ;;		_tela_inicial
 12070 ;;		_ver_entrada
 12071 ;; This function is called by:
 12072 ;;		_main
 12073 ;;		_teste_pneumatico
 12074 ;;		_teste_US
 12075 ;; This function uses a non-reentrant model
 12076 ;;
 12077                           
 12078                           
 12079                           ;psect for function _emergencia
 12080  4464                     _emergencia:	
 12081                           
 12082                           ;func.c: 831: uint8_t bt = 0;
 12083                           
 12084                           ;incstack = 0
 12085                           ; Regs used in _emergencia: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12086  4464  0141               	movlb	1	; select bank1
 12087  4465  01B7               	clrf	emergencia@bt^(0+128)
 12088                           
 12089                           ;func.c: 832: if(cfg.emergencia && flag_in.emerg){
 12090  4466  0143               	movlb	3	; select bank3
 12091  4467  1830               	btfsc	_cfg^(0+384),0
 12092  4468  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 12093  4469  2CF0               	goto	l16060
 12094                           
 12095                           ;func.c: 833: status_gerador(ERRO,1);
 12096  446A  3001               	movlw	1
 12097  446B  0140               	movlb	0	; select bank0
 12098  446C  00B0               	movwf	status_gerador@b
 12099  446D  3000               	movlw	0
 12100  446E  00B1               	movwf	status_gerador@b+1
 12101  446F  3003               	movlw	3
 12102  4470  31CC  24C4  31C4   	fcall	_status_gerador
 12103  4473  2C7B               	goto	l16038
 12104  4474                     l16048:	
 12105                           
 12106                           ;func.c: 844: LATBbits.LATB7 = 0;
 12107  4474  0140               	movlb	0	; select bank0
 12108  4475  1397               	bcf	23,7	;volatile
 12109                           
 12110                           ;func.c: 845: rotina_tela();
 12111  4476  31B4  246B  31C4   	fcall	_rotina_tela
 12112                           
 12113                           ;func.c: 846: bt = 0;
 12114  4479  0141               	movlb	1	; select bank1
 12115  447A  01B7               	clrf	emergencia@bt^(0+128)
 12116  447B                     l16038:	
 12117                           ;func.c: 834: EMERG_1:
 12118                           
 12119                           ;func.c: 847: goto EMERG_1;
 12120                           
 12121                           
 12122                           ;func.c: 835: escreve_LCD(1,1,emergencia_str[idioma]);
 12123  447B  0140               	movlb	0	; select bank0
 12124  447C  01B5               	clrf	escreve_LCD@coluna
 12125  447D  0AB5               	incf	escreve_LCD@coluna,f
 12126  447E  0143               	movlb	3	; select bank3
 12127  447F  085A               	movf	_idioma^(0+384),w
 12128  4480  0141               	movlb	1	; select bank1
 12129  4481  00B3               	movwf	??_emergencia^(0+128)
 12130  4482  01B4               	clrf	(??_emergencia^(0+128)+1)
 12131  4483  0833               	movf	??_emergencia^(0+128),w
 12132  4484  0140               	movlb	0	; select bank0
 12133  4485  00AB               	movwf	___wmul@multiplier
 12134  4486  0141               	movlb	1	; select bank1
 12135  4487  0834               	movf	(??_emergencia+1)^(0+128),w
 12136  4488  0140               	movlb	0	; select bank0
 12137  4489  00AC               	movwf	___wmul@multiplier+1
 12138  448A  3011               	movlw	17
 12139  448B  00AD               	movwf	___wmul@multiplicand
 12140  448C  3000               	movlw	0
 12141  448D  00AE               	movwf	___wmul@multiplicand+1
 12142  448E  31D0  20FE  31C4   	fcall	___wmul
 12143  4491  3026               	movlw	low (_emergencia_str| (0+32768))
 12144  4492  0141               	movlb	1	; select bank1
 12145  4493  00B5               	movwf	(??_emergencia+2)^(0+128)
 12146  4494  30DD               	movlw	high (_emergencia_str| (0+32768))
 12147  4495  00B6               	movwf	((??_emergencia+2)^(0+128)+1)
 12148  4496  0140               	movlb	0	; select bank0
 12149  4497  082B               	movf	?___wmul,w
 12150  4498  0141               	movlb	1	; select bank1
 12151  4499  0735               	addwf	(??_emergencia+2)^(0+128),w
 12152  449A  0140               	movlb	0	; select bank0
 12153  449B  00B6               	movwf	escreve_LCD@str
 12154  449C  082C               	movf	?___wmul+1,w
 12155  449D  0141               	movlb	1	; select bank1
 12156  449E  3D36               	addwfc	(??_emergencia+3)^(0+128),w
 12157  449F  0140               	movlb	0	; select bank0
 12158  44A0  00B7               	movwf	escreve_LCD@str+1
 12159  44A1  3001               	movlw	1
 12160  44A2  31E7  27C1  31C4   	fcall	_escreve_LCD
 12161                           
 12162                           ;func.c: 836: escreve_LCD(2,1,emerg2_str[idioma]);
 12163  44A5  0140               	movlb	0	; select bank0
 12164  44A6  01B5               	clrf	escreve_LCD@coluna
 12165  44A7  0AB5               	incf	escreve_LCD@coluna,f
 12166  44A8  0143               	movlb	3	; select bank3
 12167  44A9  085A               	movf	_idioma^(0+384),w
 12168  44AA  0141               	movlb	1	; select bank1
 12169  44AB  00B3               	movwf	??_emergencia^(0+128)
 12170  44AC  01B4               	clrf	(??_emergencia^(0+128)+1)
 12171  44AD  0833               	movf	??_emergencia^(0+128),w
 12172  44AE  0140               	movlb	0	; select bank0
 12173  44AF  00AB               	movwf	___wmul@multiplier
 12174  44B0  0141               	movlb	1	; select bank1
 12175  44B1  0834               	movf	(??_emergencia+1)^(0+128),w
 12176  44B2  0140               	movlb	0	; select bank0
 12177  44B3  00AC               	movwf	___wmul@multiplier+1
 12178  44B4  3011               	movlw	17
 12179  44B5  00AD               	movwf	___wmul@multiplicand
 12180  44B6  3000               	movlw	0
 12181  44B7  00AE               	movwf	___wmul@multiplicand+1
 12182  44B8  31D0  20FE  31C4   	fcall	___wmul
 12183  44BB  3004               	movlw	low (_emerg2_str| (0+32768))
 12184  44BC  0141               	movlb	1	; select bank1
 12185  44BD  00B5               	movwf	(??_emergencia+2)^(0+128)
 12186  44BE  30DD               	movlw	high (_emerg2_str| (0+32768))
 12187  44BF  00B6               	movwf	((??_emergencia+2)^(0+128)+1)
 12188  44C0  0140               	movlb	0	; select bank0
 12189  44C1  082B               	movf	?___wmul,w
 12190  44C2  0141               	movlb	1	; select bank1
 12191  44C3  0735               	addwf	(??_emergencia+2)^(0+128),w
 12192  44C4  0140               	movlb	0	; select bank0
 12193  44C5  00B6               	movwf	escreve_LCD@str
 12194  44C6  082C               	movf	?___wmul+1,w
 12195  44C7  0141               	movlb	1	; select bank1
 12196  44C8  3D36               	addwfc	(??_emergencia+3)^(0+128),w
 12197  44C9  0140               	movlb	0	; select bank0
 12198  44CA  00B7               	movwf	escreve_LCD@str+1
 12199  44CB  3002               	movlw	2
 12200  44CC  31E7  27C1  31C4   	fcall	_escreve_LCD
 12201                           
 12202                           ;func.c: 839: LATBbits.LATB7 = 1;
 12203  44CF  0140               	movlb	0	; select bank0
 12204  44D0  1797               	bsf	23,7	;volatile
 12205  44D1                     l1396:	
 12206                           ;func.c: 840: do{
 12207                           
 12208                           
 12209                           ;func.c: 841: ver_entrada();
 12210  44D1  31CE  26BA  31C4   	fcall	_ver_entrada
 12211                           
 12212                           ;func.c: 842: bt = teclado();
 12213  44D4  31C2  22CC  31C4   	fcall	_teclado
 12214  44D7  0141               	movlb	1	; select bank1
 12215  44D8  00B3               	movwf	??_emergencia^(0+128)
 12216  44D9  0833               	movf	??_emergencia^(0+128),w
 12217  44DA  00B7               	movwf	emergencia@bt^(0+128)
 12218                           
 12219                           ;func.c: 843: if(bt == 9){
 12220  44DB  3009               	movlw	9
 12221  44DC  0637               	xorwf	emergencia@bt^(0+128),w
 12222  44DD  1903               	btfsc	3,2
 12223  44DE  2C74               	goto	l16048
 12224                           
 12225                           ;func.c: 848: }
 12226                           ;func.c: 849: }while(flag_in.emerg);
 12227  44DF  0143               	movlb	3	; select bank3
 12228  44E0  184C               	btfsc	_flag_in^(0+384),0	;volatile
 12229  44E1  2CD1               	goto	l1396
 12230                           
 12231                           ;func.c: 850: LATBbits.LATB7 = 0;
 12232  44E2  0140               	movlb	0	; select bank0
 12233  44E3  1397               	bcf	23,7	;volatile
 12234                           
 12235                           ;func.c: 853: status_gerador(ERRO,0);
 12236  44E4  3000               	movlw	0
 12237  44E5  00B0               	movwf	status_gerador@b
 12238  44E6  00B1               	movwf	status_gerador@b+1
 12239  44E7  3003               	movlw	3
 12240  44E8  31CC  24C4  31C4   	fcall	_status_gerador
 12241                           
 12242                           ;func.c: 854: if(!flag.teste)
 12243  44EB  0143               	movlb	3	; select bank3
 12244  44EC  1B2D               	btfsc	(_flag^(0+384)+1),6	;volatile
 12245  44ED  2CF0               	goto	l16060
 12246                           
 12247                           ;func.c: 855: tela_inicial();
 12248  44EE  31CF  2789         	fcall	_tela_inicial
 12249  44F0                     l16060:	
 12250                           
 12251                           ;func.c: 856: }
 12252                           ;func.c: 857: LATBbits.LATB7 = 0;
 12253  44F0  0140               	movlb	0	; select bank0
 12254  44F1  1397               	bcf	23,7	;volatile
 12255  44F2  0008               	return
 12256  44F3                     __end_of_emergencia:	
 12257                           
 12258                           	psect	text8
 12259  346B                     __ptext8:	
 12260 ;; *************** function _rotina_tela *****************
 12261 ;; Defined at:
 12262 ;;		line 2949 in file "func.c"
 12263 ;; Parameters:    Size  Location     Type
 12264 ;;		None
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;		None
 12267 ;; Return value:  Size  Location     Type
 12268 ;;                  1    wreg      void 
 12269 ;; Registers used:
 12270 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12271 ;; Tracked objects:
 12272 ;;		On entry : 0/0
 12273 ;;		On exit  : 0/0
 12274 ;;		Unchanged: 0/0
 12275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12278 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12279 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12280 ;;Total ram usage:        2 bytes
 12281 ;; Hardware stack levels used:    1
 12282 ;; Hardware stack levels required when called:    9
 12283 ;; This function calls:
 12284 ;;		_delay
 12285 ;;		_eeprom_write
 12286 ;;		_liberar_tecla
 12287 ;;		_salva_EEPROM
 12288 ;;		_salva_EEPROM32
 12289 ;;		_set_freq
 12290 ;;		_teclado
 12291 ;;		_telas
 12292 ;;		_verifPagina
 12293 ;; This function is called by:
 12294 ;;		_main
 12295 ;;		_emergencia
 12296 ;; This function uses a non-reentrant model
 12297 ;;
 12298                           
 12299                           
 12300                           ;psect for function _rotina_tela
 12301  346B                     _rotina_tela:	
 12302                           
 12303                           ;func.c: 2950: static uint8_t bt;
 12304                           ;func.c: 2958: delay(10);
 12305                           
 12306                           ;incstack = 0
 12307                           ; Regs used in _rotina_tela: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12308  346B  300A               	movlw	10
 12309  346C  0140               	movlb	0	; select bank0
 12310  346D  00B3               	movwf	delay@ms
 12311  346E  3000               	movlw	0
 12312  346F  00B4               	movwf	delay@ms+1
 12313  3470  31D1  2136  31B4   	fcall	_delay
 12314                           
 12315                           ;func.c: 2959: flag.tela = 1;
 12316  3473  0143               	movlb	3	; select bank3
 12317  3474  142D               	bsf	(_flag^(0+384)+1),0	;volatile
 12318                           
 12319                           ;func.c: 2960: flag.muda_tela = 1;
 12320  3475  14AD               	bsf	(_flag^(0+384)+1),1	;volatile
 12321                           
 12322                           ;func.c: 2961: pagina = verifPagina(pagina,34);
 12323  3476  3022               	movlw	34
 12324  3477  0140               	movlb	0	; select bank0
 12325  3478  00D8               	movwf	??_rotina_tela
 12326  3479  0858               	movf	??_rotina_tela,w
 12327  347A  00AB               	movwf	verifPagina@bt_local
 12328  347B  0864               	movf	_pagina,w	;volatile
 12329  347C  31C0  2058  31B4   	fcall	_verifPagina
 12330  347F  0140               	movlb	0	; select bank0
 12331  3480  00D9               	movwf	??_rotina_tela+1
 12332  3481  0859               	movf	??_rotina_tela+1,w
 12333  3482  00E4               	movwf	_pagina	;volatile
 12334  3483                     l2070:	
 12335                           ;func.c: 2962: do{
 12336                           
 12337  3483  0064               	clrwdt	;# 
 12338                           
 12339                           ;func.c: 2966: bt = teclado();
 12340  3484  31C2  22CC  31B4   	fcall	_teclado
 12341  3487  0140               	movlb	0	; select bank0
 12342  3488  00D8               	movwf	??_rotina_tela
 12343  3489  0858               	movf	??_rotina_tela,w
 12344  348A  0143               	movlb	3	; select bank3
 12345  348B  00D4               	movwf	rotina_tela@bt^(0+384)
 12346                           
 12347                           ;func.c: 2969: if(bt > 8){
 12348  348C  3009               	movlw	9
 12349  348D  0254               	subwf	rotina_tela@bt^(0+384),w
 12350  348E  1C03               	skipc
 12351  348F  2CD0               	goto	l2071
 12352                           
 12353                           ;func.c: 2970: flag.muda_tela = 1;
 12354  3490  14AD               	bsf	(_flag^(0+384)+1),1	;volatile
 12355                           
 12356                           ;func.c: 2971: if(!flag.rapido){
 12357  3491  1A2D               	btfsc	(_flag^(0+384)+1),4	;volatile
 12358  3492  2CAD               	goto	l15634
 12359                           
 12360                           ;func.c: 2972: if(0 == liberar_tecla(bt,500) && (bt==17 || bt==20)){
 12361  3493  30F4               	movlw	244
 12362  3494  0140               	movlb	0	; select bank0
 12363  3495  00B3               	movwf	liberar_tecla@t
 12364  3496  3001               	movlw	1
 12365  3497  00B4               	movwf	liberar_tecla@t+1
 12366  3498  0143               	movlb	3	; select bank3
 12367  3499  0854               	movf	rotina_tela@bt^(0+384),w
 12368  349A  31D7  2735  31B4   	fcall	_liberar_tecla
 12369  349D  0140               	movlb	0	; select bank0
 12370  349E  0833               	movf	?_liberar_tecla,w
 12371  349F  0434               	iorwf	?_liberar_tecla+1,w
 12372  34A0  1D03               	btfss	3,2
 12373  34A1  2CD0               	goto	l2071
 12374  34A2  3011               	movlw	17
 12375  34A3  0143               	movlb	3	; select bank3
 12376  34A4  0654               	xorwf	rotina_tela@bt^(0+384),w
 12377  34A5  1903               	btfsc	3,2
 12378  34A6  2CAB               	goto	l2075
 12379  34A7  3014               	movlw	20
 12380  34A8  0654               	xorwf	rotina_tela@bt^(0+384),w
 12381  34A9  1D03               	btfss	3,2
 12382  34AA  2CD0               	goto	l2071
 12383  34AB                     l2075:	
 12384                           
 12385                           ;func.c: 2973: flag.rapido = 1;
 12386  34AB  162D               	bsf	(_flag^(0+384)+1),4	;volatile
 12387                           
 12388                           ;func.c: 2974: }
 12389                           ;func.c: 2975: }
 12390  34AC  2CD0               	goto	l2071
 12391  34AD                     l15634:	
 12392                           
 12393                           ;func.c: 2976: else if(bt == 17 || bt == 20){
 12394  34AD  3011               	movlw	17
 12395  34AE  0654               	xorwf	rotina_tela@bt^(0+384),w
 12396  34AF  1903               	btfsc	3,2
 12397  34B0  2CB5               	goto	l15638
 12398  34B1  3014               	movlw	20
 12399  34B2  0654               	xorwf	rotina_tela@bt^(0+384),w
 12400  34B3  1D03               	btfss	3,2
 12401  34B4  2CCF               	goto	l2077
 12402  34B5                     l15638:	
 12403                           
 12404                           ;func.c: 2977: if(1 == liberar_tecla(bt,50)){
 12405  34B5  3032               	movlw	50
 12406  34B6  0140               	movlb	0	; select bank0
 12407  34B7  00B3               	movwf	liberar_tecla@t
 12408  34B8  3000               	movlw	0
 12409  34B9  00B4               	movwf	liberar_tecla@t+1
 12410  34BA  0143               	movlb	3	; select bank3
 12411  34BB  0854               	movf	rotina_tela@bt^(0+384),w
 12412  34BC  31D7  2735  31B4   	fcall	_liberar_tecla
 12413  34BF  0140               	movlb	0	; select bank0
 12414  34C0  0333               	decf	?_liberar_tecla,w
 12415  34C1  0434               	iorwf	?_liberar_tecla+1,w
 12416  34C2  1D03               	btfss	3,2
 12417  34C3  2CD0               	goto	l2071
 12418                           
 12419                           ;func.c: 2978: flag.rapido = 0;
 12420  34C4  0143               	movlb	3	; select bank3
 12421  34C5  122D               	bcf	(_flag^(0+384)+1),4	;volatile
 12422                           
 12423                           ;func.c: 2979: delay(20);
 12424  34C6  3014               	movlw	20
 12425  34C7  0140               	movlb	0	; select bank0
 12426  34C8  00B3               	movwf	delay@ms
 12427  34C9  3000               	movlw	0
 12428  34CA  00B4               	movwf	delay@ms+1
 12429  34CB  31D1  2136  31B4   	fcall	_delay
 12430                           
 12431                           ;func.c: 2980: }
 12432                           ;func.c: 2981: }
 12433  34CE  2CD0               	goto	l2071
 12434  34CF                     l2077:	
 12435                           
 12436                           ;func.c: 2982: else{
 12437                           ;func.c: 2983: flag.rapido = 0;
 12438  34CF  122D               	bcf	(_flag^(0+384)+1),4	;volatile
 12439  34D0                     l2071:	
 12440                           
 12441                           ;func.c: 2984: }
 12442                           ;func.c: 2985: }
 12443                           ;func.c: 2986: if(flag.muda_tela){
 12444  34D0  0143               	movlb	3	; select bank3
 12445  34D1  1CAD               	btfss	(_flag^(0+384)+1),1	;volatile
 12446  34D2  2CD9               	goto	l15648
 12447                           
 12448                           ;func.c: 2987: telas(bt);
 12449  34D3  0854               	movf	rotina_tela@bt^(0+384),w
 12450  34D4  31A2  22CD  31B4   	fcall	_telas
 12451                           
 12452                           ;func.c: 2988: flag.muda_tela = 0;
 12453  34D7  0143               	movlb	3	; select bank3
 12454  34D8  10AD               	bcf	(_flag^(0+384)+1),1	;volatile
 12455  34D9                     l15648:	
 12456                           
 12457                           ;func.c: 2989: }
 12458                           ;func.c: 2990: if(bt == 9){
 12459  34D9  3009               	movlw	9
 12460  34DA  0654               	xorwf	rotina_tela@bt^(0+384),w
 12461  34DB  1903               	btfsc	3,2
 12462                           
 12463                           ;func.c: 2991: flag.tela = 0;
 12464  34DC  102D               	bcf	(_flag^(0+384)+1),0	;volatile
 12465                           
 12466                           ;func.c: 2992: }
 12467                           ;func.c: 2993: }while(flag.tela);
 12468  34DD  182D               	btfsc	(_flag^(0+384)+1),0	;volatile
 12469  34DE  2C83               	goto	l2070
 12470                           
 12471                           ;func.c: 2994: bt = 0;
 12472  34DF  01D4               	clrf	rotina_tela@bt^(0+384)
 12473                           
 12474                           ;func.c: 2997: eeprom_write(198,tipo_maquina);
 12475  34E0  0860               	movf	_tipo_maquina^(0+384),w
 12476  34E1  0140               	movlb	0	; select bank0
 12477  34E2  00D8               	movwf	??_rotina_tela
 12478  34E3  0858               	movf	??_rotina_tela,w
 12479  34E4  00AB               	movwf	eeprom_write@value
 12480  34E5  30C6               	movlw	198
 12481  34E6  31D2  2299  31B4   	fcall	_eeprom_write
 12482                           
 12483                           ;func.c: 2998: eeprom_write(250,idioma);
 12484  34E9  0143               	movlb	3	; select bank3
 12485  34EA  085A               	movf	_idioma^(0+384),w
 12486  34EB  0140               	movlb	0	; select bank0
 12487  34EC  00D8               	movwf	??_rotina_tela
 12488  34ED  0858               	movf	??_rotina_tela,w
 12489  34EE  00AB               	movwf	eeprom_write@value
 12490  34EF  30FA               	movlw	250
 12491  34F0  31D2  2299  31B4   	fcall	_eeprom_write
 12492                           
 12493                           ;func.c: 2999: salva_EEPROM(tmp_desce,200);
 12494  34F3  0143               	movlb	3	; select bank3
 12495  34F4  0843               	movf	(_tmp_desce+1)^(0+384),w
 12496  34F5  0140               	movlb	0	; select bank0
 12497  34F6  00AF               	movwf	salva_EEPROM@valor+1
 12498  34F7  0143               	movlb	3	; select bank3
 12499  34F8  0842               	movf	_tmp_desce^(0+384),w
 12500  34F9  0140               	movlb	0	; select bank0
 12501  34FA  00AE               	movwf	salva_EEPROM@valor
 12502  34FB  30C8               	movlw	200
 12503  34FC  00D8               	movwf	??_rotina_tela
 12504  34FD  0858               	movf	??_rotina_tela,w
 12505  34FE  00B0               	movwf	salva_EEPROM@address
 12506  34FF  31D5  250D  31B4   	fcall	_salva_EEPROM
 12507                           
 12508                           ;func.c: 3000: salva_EEPROM(tmp_solda,202);
 12509  3502  0143               	movlb	3	; select bank3
 12510  3503  0841               	movf	(_tmp_solda+1)^(0+384),w
 12511  3504  0140               	movlb	0	; select bank0
 12512  3505  00AF               	movwf	salva_EEPROM@valor+1
 12513  3506  0143               	movlb	3	; select bank3
 12514  3507  0840               	movf	_tmp_solda^(0+384),w
 12515  3508  0140               	movlb	0	; select bank0
 12516  3509  00AE               	movwf	salva_EEPROM@valor
 12517  350A  30CA               	movlw	202
 12518  350B  00D8               	movwf	??_rotina_tela
 12519  350C  0858               	movf	??_rotina_tela,w
 12520  350D  00B0               	movwf	salva_EEPROM@address
 12521  350E  31D5  250D  31B4   	fcall	_salva_EEPROM
 12522                           
 12523                           ;func.c: 3001: salva_EEPROM(ener_solda,204);
 12524  3511  0143               	movlb	3	; select bank3
 12525  3512  083F               	movf	(_ener_solda+1)^(0+384),w
 12526  3513  0140               	movlb	0	; select bank0
 12527  3514  00AF               	movwf	salva_EEPROM@valor+1
 12528  3515  0143               	movlb	3	; select bank3
 12529  3516  083E               	movf	_ener_solda^(0+384),w
 12530  3517  0140               	movlb	0	; select bank0
 12531  3518  00AE               	movwf	salva_EEPROM@valor
 12532  3519  30CC               	movlw	204
 12533  351A  00D8               	movwf	??_rotina_tela
 12534  351B  0858               	movf	??_rotina_tela,w
 12535  351C  00B0               	movwf	salva_EEPROM@address
 12536  351D  31D5  250D  31B4   	fcall	_salva_EEPROM
 12537                           
 12538                           ;func.c: 3002: salva_EEPROM(tmp_fixar,206);
 12539  3520  0143               	movlb	3	; select bank3
 12540  3521  083D               	movf	(_tmp_fixar+1)^(0+384),w
 12541  3522  0140               	movlb	0	; select bank0
 12542  3523  00AF               	movwf	salva_EEPROM@valor+1
 12543  3524  0143               	movlb	3	; select bank3
 12544  3525  083C               	movf	_tmp_fixar^(0+384),w
 12545  3526  0140               	movlb	0	; select bank0
 12546  3527  00AE               	movwf	salva_EEPROM@valor
 12547  3528  30CE               	movlw	206
 12548  3529  00D8               	movwf	??_rotina_tela
 12549  352A  0858               	movf	??_rotina_tela,w
 12550  352B  00B0               	movwf	salva_EEPROM@address
 12551  352C  31D5  250D  31B4   	fcall	_salva_EEPROM
 12552                           
 12553                           ;func.c: 3003: salva_EEPROM(tmp_metal,208);
 12554  352F  0143               	movlb	3	; select bank3
 12555  3530  083B               	movf	(_tmp_metal+1)^(0+384),w
 12556  3531  0140               	movlb	0	; select bank0
 12557  3532  00AF               	movwf	salva_EEPROM@valor+1
 12558  3533  0143               	movlb	3	; select bank3
 12559  3534  083A               	movf	_tmp_metal^(0+384),w
 12560  3535  0140               	movlb	0	; select bank0
 12561  3536  00AE               	movwf	salva_EEPROM@valor
 12562  3537  30D0               	movlw	208
 12563  3538  00D8               	movwf	??_rotina_tela
 12564  3539  0858               	movf	??_rotina_tela,w
 12565  353A  00B0               	movwf	salva_EEPROM@address
 12566  353B  31D5  250D  31B4   	fcall	_salva_EEPROM
 12567                           
 12568                           ;func.c: 3004: salva_EEPROM(freq_inicial,218);
 12569  353E  0143               	movlb	3	; select bank3
 12570  353F  0837               	movf	(_freq_inicial+1)^(0+384),w
 12571  3540  0140               	movlb	0	; select bank0
 12572  3541  00AF               	movwf	salva_EEPROM@valor+1
 12573  3542  0143               	movlb	3	; select bank3
 12574  3543  0836               	movf	_freq_inicial^(0+384),w
 12575  3544  0140               	movlb	0	; select bank0
 12576  3545  00AE               	movwf	salva_EEPROM@valor
 12577  3546  30DA               	movlw	218
 12578  3547  00D8               	movwf	??_rotina_tela
 12579  3548  0858               	movf	??_rotina_tela,w
 12580  3549  00B0               	movwf	salva_EEPROM@address
 12581  354A  31D5  250D  31B4   	fcall	_salva_EEPROM
 12582                           
 12583                           ;func.c: 3005: salva_EEPROM32((7&flag.value),210);
 12584  354D  3007               	movlw	7
 12585  354E  0143               	movlb	3	; select bank3
 12586  354F  052C               	andwf	_flag^(0+384),w	;volatile
 12587  3550  0140               	movlb	0	; select bank0
 12588  3551  00AE               	movwf	salva_EEPROM32@valor
 12589  3552  3000               	movlw	0
 12590  3553  0143               	movlb	3	; select bank3
 12591  3554  052D               	andwf	(_flag+1)^(0+384),w	;volatile
 12592  3555  0140               	movlb	0	; select bank0
 12593  3556  00AF               	movwf	salva_EEPROM32@valor+1
 12594  3557  3000               	movlw	0
 12595  3558  0143               	movlb	3	; select bank3
 12596  3559  052E               	andwf	(_flag+2)^(0+384),w	;volatile
 12597  355A  0140               	movlb	0	; select bank0
 12598  355B  00B0               	movwf	salva_EEPROM32@valor+2
 12599  355C  3000               	movlw	0
 12600  355D  0143               	movlb	3	; select bank3
 12601  355E  052F               	andwf	(_flag+3)^(0+384),w	;volatile
 12602  355F  0140               	movlb	0	; select bank0
 12603  3560  00B1               	movwf	salva_EEPROM32@valor+3
 12604  3561  30D2               	movlw	210
 12605  3562  00D8               	movwf	??_rotina_tela
 12606  3563  0858               	movf	??_rotina_tela,w
 12607  3564  00B2               	movwf	salva_EEPROM32@address
 12608  3565  31CD  2527  31B4   	fcall	_salva_EEPROM32
 12609                           
 12610                           ;func.c: 3006: salva_EEPROM32(cont_pecas,214);
 12611  3568  0143               	movlb	3	; select bank3
 12612  3569  0827               	movf	(_cont_pecas+3)^(0+384),w
 12613  356A  0140               	movlb	0	; select bank0
 12614  356B  00B1               	movwf	salva_EEPROM32@valor+3
 12615  356C  0143               	movlb	3	; select bank3
 12616  356D  0826               	movf	(_cont_pecas+2)^(0+384),w
 12617  356E  0140               	movlb	0	; select bank0
 12618  356F  00B0               	movwf	salva_EEPROM32@valor+2
 12619  3570  0143               	movlb	3	; select bank3
 12620  3571  0825               	movf	(_cont_pecas+1)^(0+384),w
 12621  3572  0140               	movlb	0	; select bank0
 12622  3573  00AF               	movwf	salva_EEPROM32@valor+1
 12623  3574  0143               	movlb	3	; select bank3
 12624  3575  0824               	movf	_cont_pecas^(0+384),w
 12625  3576  0140               	movlb	0	; select bank0
 12626  3577  00AE               	movwf	salva_EEPROM32@valor
 12627  3578  30D6               	movlw	214
 12628  3579  00D8               	movwf	??_rotina_tela
 12629  357A  0858               	movf	??_rotina_tela,w
 12630  357B  00B2               	movwf	salva_EEPROM32@address
 12631  357C  31CD  2527  31B4   	fcall	_salva_EEPROM32
 12632                           
 12633                           ;func.c: 3008: set_freq(freq_atual);
 12634  357F  0143               	movlb	3	; select bank3
 12635  3580  0835               	movf	(_freq_atual+1)^(0+384),w
 12636  3581  0140               	movlb	0	; select bank0
 12637  3582  00C7               	movwf	set_freq@f+1
 12638  3583  0143               	movlb	3	; select bank3
 12639  3584  0834               	movf	_freq_atual^(0+384),w
 12640  3585  0140               	movlb	0	; select bank0
 12641  3586  00C6               	movwf	set_freq@f
 12642  3587  31C5  2585         	fcall	_set_freq
 12643                           
 12644                           ;func.c: 3009: flag.inatividade = 0;
 12645  3589  0143               	movlb	3	; select bank3
 12646  358A  13AD               	bcf	(_flag^(0+384)+1),7	;volatile
 12647                           
 12648                           ;func.c: 3010: t_tela = 0;
 12649  358B  01E3               	clrf	_t_tela^(0+384)
 12650  358C  0008               	return
 12651  358D                     __end_of_rotina_tela:	
 12652                           
 12653                           	psect	text9
 12654  22CD                     __ptext9:	
 12655 ;; *************** function _telas *****************
 12656 ;; Defined at:
 12657 ;;		line 1456 in file "func.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  b               1    wreg     unsigned char 
 12660 ;; Auto vars:     Size  Location     Type
 12661 ;;  b               1   16[BANK1 ] unsigned char 
 12662 ;; Return value:  Size  Location     Type
 12663 ;;                  1    wreg      void 
 12664 ;; Registers used:
 12665 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12666 ;; Tracked objects:
 12667 ;;		On entry : 0/0
 12668 ;;		On exit  : 0/0
 12669 ;;		Unchanged: 0/0
 12670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 12671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12672 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12673 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12674 ;;      Totals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 12675 ;;Total ram usage:       11 bytes
 12676 ;; Hardware stack levels used:    1
 12677 ;; Hardware stack levels required when called:    8
 12678 ;; This function calls:
 12679 ;;		_Lcd_Clear
 12680 ;;		___wmul
 12681 ;;		_addr_receitas
 12682 ;;		_carrega_EEPROM
 12683 ;;		_carrega_EEPROM32
 12684 ;;		_config_maq
 12685 ;;		_config_saidas
 12686 ;;		_escreve_LCD
 12687 ;;		_escreve_tempos
 12688 ;;		_salva_EEPROM
 12689 ;;		_salva_EEPROM32
 12690 ;;		_strcpy
 12691 ;;		_totalCiclos
 12692 ;;		_verifPagina
 12693 ;; This function is called by:
 12694 ;;		_rotina_tela
 12695 ;; This function uses a non-reentrant model
 12696 ;;
 12697                           
 12698                           
 12699                           ;psect for function _telas
 12700  22CD                     _telas:	
 12701                           
 12702                           ;incstack = 0
 12703                           ; Regs used in _telas: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12704                           ;telas@b stored from wreg
 12705  22CD  0141               	movlb	1	; select bank1
 12706  22CE  00B0               	movwf	telas@b^(0+128)
 12707                           
 12708                           ;func.c: 1457: static char ee_addr;
 12709                           ;func.c: 1458: static long temp;
 12710                           ;func.c: 1461: switch(b){
 12711  22CF  3183  2B3A         	goto	l15138
 12712  22D1                     l15004:	
 12713                           ;func.c: 1462: case 34:
 12714                           
 12715                           
 12716                           ;func.c: 1463: if(pagina < TAMANHO_MENU)
 12717  22D1  300E               	movlw	14
 12718  22D2  0140               	movlb	0	; select bank0
 12719  22D3  0264               	subwf	_pagina,w	;volatile
 12720  22D4  1803               	skipnc
 12721  22D5  2ADD               	goto	l15008
 12722                           
 12723                           ;func.c: 1464: pagina++;
 12724  22D6  3001               	movlw	1
 12725  22D7  0141               	movlb	1	; select bank1
 12726  22D8  00A8               	movwf	??_telas^(0+128)
 12727  22D9  0828               	movf	??_telas^(0+128),w
 12728  22DA  0140               	movlb	0	; select bank0
 12729  22DB  07E4               	addwf	_pagina,f	;volatile
 12730  22DC  2AED               	goto	l15018
 12731  22DD                     l15008:	
 12732                           
 12733                           ;func.c: 1465: else
 12734                           ;func.c: 1466: pagina = TELA_TMP_DESCE;
 12735  22DD  3001               	movlw	1
 12736  22DE  2AE8               	goto	L21
 12737  22DF                     l15012:	
 12738                           ;func.c: 1471: case 10:
 12739                           
 12740                           ;func.c: 1469: break;
 12741                           
 12742                           ;func.c: 1468: pagina = verifPagina(pagina,b);
 12743                           
 12744                           
 12745                           ;func.c: 1472: if(pagina > TELA_TMP_DESCE)
 12746  22DF  3002               	movlw	2
 12747  22E0  0140               	movlb	0	; select bank0
 12748  22E1  0264               	subwf	_pagina,w	;volatile
 12749  22E2  1C03               	skipc
 12750  22E3  2AE7               	goto	l15016
 12751                           
 12752                           ;func.c: 1473: pagina--;
 12753  22E4  3001               	movlw	1
 12754  22E5  02E4               	subwf	_pagina,f	;volatile
 12755  22E6  2AED               	goto	l15018
 12756  22E7                     l15016:	
 12757                           
 12758                           ;func.c: 1474: else
 12759                           ;func.c: 1475: pagina = TAMANHO_MENU;
 12760  22E7  300E               	movlw	14
 12761  22E8                     L21:	
 12762  22E8  0141               	movlb	1	; select bank1
 12763  22E9  00A8               	movwf	??_telas^(0+128)
 12764  22EA  0828               	movf	??_telas^(0+128),w
 12765  22EB  0140               	movlb	0	; select bank0
 12766  22EC  00E4               	movwf	_pagina	;volatile
 12767  22ED                     l15018:	
 12768                           
 12769                           ;func.c: 1477: pagina = verifPagina(pagina,b);
 12770  22ED  0141               	movlb	1	; select bank1
 12771  22EE  0830               	movf	telas@b^(0+128),w
 12772  22EF  00A8               	movwf	??_telas^(0+128)
 12773  22F0  0828               	movf	??_telas^(0+128),w
 12774  22F1  0140               	movlb	0	; select bank0
 12775  22F2  00AB               	movwf	verifPagina@bt_local
 12776  22F3  0864               	movf	_pagina,w	;volatile
 12777  22F4  31C0  2058         	fcall	_verifPagina
 12778  22F6  0141               	movlb	1	; select bank1
 12779  22F7  00A9               	movwf	(??_telas+1)^(0+128)
 12780  22F8  0829               	movf	(??_telas+1)^(0+128),w
 12781  22F9  0140               	movlb	0	; select bank0
 12782  22FA  00E4               	movwf	_pagina	;volatile
 12783  22FB                     L67:	
 12784                           
 12785                           ;func.c: 1478: break;
 12786  22FB  3187  2F56         	goto	l15270
 12787  22FD                     l15020:	
 12788                           ;func.c: 1482: case TELA_TMP_LOAD:
 12789                           
 12790                           ;func.c: 1481: switch(pagina){
 12791                           
 12792                           ;func.c: 1480: case 17:
 12793                           
 12794                           
 12795                           ;func.c: 1483: case TELA_TMP_SAVE:
 12796                           ;func.c: 1484: if(ee_addr < 9)
 12797  22FD  3009               	movlw	9
 12798  22FE  0262               	subwf	telas@ee_addr,w
 12799  22FF  1803               	skipnc
 12800  2300  2B07               	goto	L66
 12801                           
 12802                           ;func.c: 1485: ee_addr++;
 12803  2301  3001               	movlw	1
 12804  2302  0141               	movlb	1	; select bank1
 12805  2303  00A8               	movwf	??_telas^(0+128)
 12806  2304  0828               	movf	??_telas^(0+128),w
 12807  2305  0140               	movlb	0	; select bank0
 12808  2306  07E2               	addwf	telas@ee_addr,f
 12809  2307                     L66:	
 12810  2307  3183  2B04         	goto	l1729
 12811  2309                     l15026:	
 12812                           ;func.c: 1488: case TELA_TMP_DESCE:
 12813                           
 12814                           ;func.c: 1487: break;
 12815                           
 12816                           ;func.c: 1486: flag.muda_valor = 1;
 12817                           
 12818                           
 12819                           ;func.c: 1489: if(temp < 3000){
 12820  2309  0140               	movlb	0	; select bank0
 12821  230A  1BDD               	btfsc	telas@temp+3,7
 12822  230B  2B18               	goto	l15028
 12823  230C  085D               	movf	telas@temp+3,w
 12824  230D  1D03               	btfss	3,2
 12825  230E  2B07               	goto	L66
 12826  230F  085C               	movf	telas@temp+2,w
 12827  2310  1D03               	btfss	3,2
 12828  2311  2B07               	goto	L66
 12829  2312  30B8               	movlw	184
 12830  2313  025A               	subwf	telas@temp,w
 12831  2314  300B               	movlw	11
 12832  2315  3B5B               	subwfb	telas@temp+1,w
 12833  2316  1803               	btfsc	3,0
 12834  2317  2B07               	goto	L66
 12835  2318                     l15028:	
 12836                           
 12837                           ;func.c: 1490: temp = temp + tmp_soma;
 12838  2318  085A               	movf	telas@temp,w
 12839  2319  0141               	movlb	1	; select bank1
 12840  231A  00A8               	movwf	??_telas^(0+128)
 12841  231B  0140               	movlb	0	; select bank0
 12842  231C  085B               	movf	telas@temp+1,w
 12843  231D  0141               	movlb	1	; select bank1
 12844  231E  00A9               	movwf	(??_telas^(0+128)+1)
 12845  231F  0140               	movlb	0	; select bank0
 12846  2320  085C               	movf	telas@temp+2,w
 12847  2321  0141               	movlb	1	; select bank1
 12848  2322  00AA               	movwf	(??_telas^(0+128)+2)
 12849  2323  0140               	movlb	0	; select bank0
 12850  2324  085D               	movf	telas@temp+3,w
 12851  2325  0141               	movlb	1	; select bank1
 12852  2326  00AB               	movwf	(??_telas^(0+128)+3)
 12853  2327  0143               	movlb	3	; select bank3
 12854  2328  0866               	movf	_tmp_soma^(0+384),w
 12855  2329  0141               	movlb	1	; select bank1
 12856  232A  00AC               	movwf	(??_telas+4)^(0+128)
 12857  232B  0143               	movlb	3	; select bank3
 12858  232C  0867               	movf	(_tmp_soma+1)^(0+384),w
 12859  232D  0141               	movlb	1	; select bank1
 12860  232E  00AD               	movwf	((??_telas+4)^(0+128)+1)
 12861  232F  01AE               	clrf	((??_telas+4)^(0+128)+2)
 12862  2330  01AF               	clrf	((??_telas+4)^(0+128)+3)
 12863  2331  082C               	movf	(??_telas+4)^(0+128),w
 12864  2332  07A8               	addwf	??_telas^(0+128),f
 12865  2333  082D               	movf	(??_telas+5)^(0+128),w
 12866  2334  3DA9               	addwfc	(??_telas^(0+128)+1),f
 12867  2335  082E               	movf	(??_telas+6)^(0+128),w
 12868  2336  3DAA               	addwfc	(??_telas^(0+128)+2),f
 12869  2337  082F               	movf	(??_telas+7)^(0+128),w
 12870  2338  3DAB               	addwfc	(??_telas^(0+128)+3),f
 12871  2339  082B               	movf	(??_telas+3)^(0+128),w
 12872  233A  0140               	movlb	0	; select bank0
 12873  233B  00DD               	movwf	telas@temp+3
 12874  233C  0141               	movlb	1	; select bank1
 12875  233D  082A               	movf	(??_telas+2)^(0+128),w
 12876  233E  0140               	movlb	0	; select bank0
 12877  233F  00DC               	movwf	telas@temp+2
 12878  2340  0141               	movlb	1	; select bank1
 12879  2341  0829               	movf	(??_telas+1)^(0+128),w
 12880  2342  0140               	movlb	0	; select bank0
 12881  2343  00DB               	movwf	telas@temp+1
 12882  2344  0141               	movlb	1	; select bank1
 12883  2345  0828               	movf	??_telas^(0+128),w
 12884  2346  0140               	movlb	0	; select bank0
 12885  2347  00DA               	movwf	telas@temp
 12886                           
 12887                           ;func.c: 1491: if(temp > 3000) temp = 3000;
 12888  2348  1BDD               	btfsc	telas@temp+3,7
 12889  2349  2B07               	goto	L66
 12890  234A  085D               	movf	telas@temp+3,w
 12891  234B  1D03               	btfss	3,2
 12892  234C  2B56               	goto	l15032
 12893  234D  085C               	movf	telas@temp+2,w
 12894  234E  1D03               	btfss	3,2
 12895  234F  2B56               	goto	l15032
 12896  2350  30B9               	movlw	185
 12897  2351  025A               	subwf	telas@temp,w
 12898  2352  300B               	movlw	11
 12899  2353  3B5B               	subwfb	telas@temp+1,w
 12900  2354  1C03               	btfss	3,0
 12901  2355  2B07               	goto	L66
 12902  2356                     l15032:	
 12903  2356  3000               	movlw	0
 12904  2357  00DD               	movwf	telas@temp+3
 12905  2358  3000               	movlw	0
 12906  2359  00DC               	movwf	telas@temp+2
 12907  235A  300B               	movlw	11
 12908  235B  00DB               	movwf	telas@temp+1
 12909  235C  30B8               	movlw	184
 12910  235D  2D49               	goto	L27
 12911  235E                     l15036:	
 12912                           ;func.c: 1495: case TELA_METAL:
 12913                           
 12914                           ;func.c: 1494: break;
 12915                           
 12916                           ;func.c: 1492: }
 12917                           ;func.c: 1493: flag.muda_valor = 1;
 12918                           
 12919                           
 12920                           ;func.c: 1496: if(temp < 500){
 12921  235E  0140               	movlb	0	; select bank0
 12922  235F  1BDD               	btfsc	telas@temp+3,7
 12923  2360  2B6D               	goto	l15038
 12924  2361  085D               	movf	telas@temp+3,w
 12925  2362  1D03               	btfss	3,2
 12926  2363  2B07               	goto	L66
 12927  2364  085C               	movf	telas@temp+2,w
 12928  2365  1D03               	btfss	3,2
 12929  2366  2B07               	goto	L66
 12930  2367  30F4               	movlw	244
 12931  2368  025A               	subwf	telas@temp,w
 12932  2369  3001               	movlw	1
 12933  236A  3B5B               	subwfb	telas@temp+1,w
 12934  236B  1803               	btfsc	3,0
 12935  236C  2B07               	goto	L66
 12936  236D                     l15038:	
 12937                           
 12938                           ;func.c: 1497: temp = temp + tmp_soma;
 12939  236D  085A               	movf	telas@temp,w
 12940  236E  0141               	movlb	1	; select bank1
 12941  236F  00A8               	movwf	??_telas^(0+128)
 12942  2370  0140               	movlb	0	; select bank0
 12943  2371  085B               	movf	telas@temp+1,w
 12944  2372  0141               	movlb	1	; select bank1
 12945  2373  00A9               	movwf	(??_telas^(0+128)+1)
 12946  2374  0140               	movlb	0	; select bank0
 12947  2375  085C               	movf	telas@temp+2,w
 12948  2376  0141               	movlb	1	; select bank1
 12949  2377  00AA               	movwf	(??_telas^(0+128)+2)
 12950  2378  0140               	movlb	0	; select bank0
 12951  2379  085D               	movf	telas@temp+3,w
 12952  237A  0141               	movlb	1	; select bank1
 12953  237B  00AB               	movwf	(??_telas^(0+128)+3)
 12954  237C  0143               	movlb	3	; select bank3
 12955  237D  0866               	movf	_tmp_soma^(0+384),w
 12956  237E  0141               	movlb	1	; select bank1
 12957  237F  00AC               	movwf	(??_telas+4)^(0+128)
 12958  2380  0143               	movlb	3	; select bank3
 12959  2381  0867               	movf	(_tmp_soma+1)^(0+384),w
 12960  2382  0141               	movlb	1	; select bank1
 12961  2383  00AD               	movwf	((??_telas+4)^(0+128)+1)
 12962  2384  01AE               	clrf	((??_telas+4)^(0+128)+2)
 12963  2385  01AF               	clrf	((??_telas+4)^(0+128)+3)
 12964  2386  082C               	movf	(??_telas+4)^(0+128),w
 12965  2387  07A8               	addwf	??_telas^(0+128),f
 12966  2388  082D               	movf	(??_telas+5)^(0+128),w
 12967  2389  3DA9               	addwfc	(??_telas^(0+128)+1),f
 12968  238A  082E               	movf	(??_telas+6)^(0+128),w
 12969  238B  3DAA               	addwfc	(??_telas^(0+128)+2),f
 12970  238C  082F               	movf	(??_telas+7)^(0+128),w
 12971  238D  3DAB               	addwfc	(??_telas^(0+128)+3),f
 12972  238E  082B               	movf	(??_telas+3)^(0+128),w
 12973  238F  0140               	movlb	0	; select bank0
 12974  2390  00DD               	movwf	telas@temp+3
 12975  2391  0141               	movlb	1	; select bank1
 12976  2392  082A               	movf	(??_telas+2)^(0+128),w
 12977  2393  0140               	movlb	0	; select bank0
 12978  2394  00DC               	movwf	telas@temp+2
 12979  2395  0141               	movlb	1	; select bank1
 12980  2396  0829               	movf	(??_telas+1)^(0+128),w
 12981  2397  0140               	movlb	0	; select bank0
 12982  2398  00DB               	movwf	telas@temp+1
 12983  2399  0141               	movlb	1	; select bank1
 12984  239A  0828               	movf	??_telas^(0+128),w
 12985  239B  0140               	movlb	0	; select bank0
 12986  239C  00DA               	movwf	telas@temp
 12987                           
 12988                           ;func.c: 1498: if(temp > 500) temp = 500;
 12989  239D  1BDD               	btfsc	telas@temp+3,7
 12990  239E  2B07               	goto	L66
 12991  239F  085D               	movf	telas@temp+3,w
 12992  23A0  1D03               	btfss	3,2
 12993  23A1  2BAB               	goto	l15042
 12994  23A2  085C               	movf	telas@temp+2,w
 12995  23A3  1D03               	btfss	3,2
 12996  23A4  2BAB               	goto	l15042
 12997  23A5  30F5               	movlw	245
 12998  23A6  025A               	subwf	telas@temp,w
 12999  23A7  3001               	movlw	1
 13000  23A8  3B5B               	subwfb	telas@temp+1,w
 13001  23A9  1C03               	btfss	3,0
 13002  23AA  2B07               	goto	L66
 13003  23AB                     l15042:	
 13004  23AB  3000               	movlw	0
 13005  23AC  00DD               	movwf	telas@temp+3
 13006  23AD  3000               	movlw	0
 13007  23AE  00DC               	movwf	telas@temp+2
 13008  23AF  3001               	movlw	1
 13009  23B0  00DB               	movwf	telas@temp+1
 13010  23B1  30F4               	movlw	244
 13011  23B2  2D49               	goto	L27
 13012  23B3                     l15046:	
 13013                           ;func.c: 1502: case TELA_TMP_CONT:
 13014                           
 13015                           ;func.c: 1501: break;
 13016                           
 13017                           ;func.c: 1499: }
 13018                           ;func.c: 1500: flag.muda_valor = 1;
 13019                           
 13020                           
 13021                           ;func.c: 1503: if(temp < 100000){
 13022  23B3  0140               	movlb	0	; select bank0
 13023  23B4  1BDD               	btfsc	telas@temp+3,7
 13024  23B5  2BC1               	goto	l15048
 13025  23B6  085D               	movf	telas@temp+3,w
 13026  23B7  1D03               	btfss	3,2
 13027  23B8  2B07               	goto	L66
 13028  23B9  30A0               	movlw	160
 13029  23BA  025A               	subwf	telas@temp,w
 13030  23BB  3086               	movlw	134
 13031  23BC  3B5B               	subwfb	telas@temp+1,w
 13032  23BD  3001               	movlw	1
 13033  23BE  3B5C               	subwfb	telas@temp+2,w
 13034  23BF  1803               	btfsc	3,0
 13035  23C0  2B07               	goto	L66
 13036  23C1                     l15048:	
 13037                           
 13038                           ;func.c: 1504: temp = temp + tmp_soma;
 13039  23C1  085A               	movf	telas@temp,w
 13040  23C2  0141               	movlb	1	; select bank1
 13041  23C3  00A8               	movwf	??_telas^(0+128)
 13042  23C4  0140               	movlb	0	; select bank0
 13043  23C5  085B               	movf	telas@temp+1,w
 13044  23C6  0141               	movlb	1	; select bank1
 13045  23C7  00A9               	movwf	(??_telas^(0+128)+1)
 13046  23C8  0140               	movlb	0	; select bank0
 13047  23C9  085C               	movf	telas@temp+2,w
 13048  23CA  0141               	movlb	1	; select bank1
 13049  23CB  00AA               	movwf	(??_telas^(0+128)+2)
 13050  23CC  0140               	movlb	0	; select bank0
 13051  23CD  085D               	movf	telas@temp+3,w
 13052  23CE  0141               	movlb	1	; select bank1
 13053  23CF  00AB               	movwf	(??_telas^(0+128)+3)
 13054  23D0  0143               	movlb	3	; select bank3
 13055  23D1  0866               	movf	_tmp_soma^(0+384),w
 13056  23D2  0141               	movlb	1	; select bank1
 13057  23D3  00AC               	movwf	(??_telas+4)^(0+128)
 13058  23D4  0143               	movlb	3	; select bank3
 13059  23D5  0867               	movf	(_tmp_soma+1)^(0+384),w
 13060  23D6  0141               	movlb	1	; select bank1
 13061  23D7  00AD               	movwf	((??_telas+4)^(0+128)+1)
 13062  23D8  01AE               	clrf	((??_telas+4)^(0+128)+2)
 13063  23D9  01AF               	clrf	((??_telas+4)^(0+128)+3)
 13064  23DA  082C               	movf	(??_telas+4)^(0+128),w
 13065  23DB  07A8               	addwf	??_telas^(0+128),f
 13066  23DC  082D               	movf	(??_telas+5)^(0+128),w
 13067  23DD  3DA9               	addwfc	(??_telas^(0+128)+1),f
 13068  23DE  082E               	movf	(??_telas+6)^(0+128),w
 13069  23DF  3DAA               	addwfc	(??_telas^(0+128)+2),f
 13070  23E0  082F               	movf	(??_telas+7)^(0+128),w
 13071  23E1  3DAB               	addwfc	(??_telas^(0+128)+3),f
 13072  23E2  082B               	movf	(??_telas+3)^(0+128),w
 13073  23E3  0140               	movlb	0	; select bank0
 13074  23E4  00DD               	movwf	telas@temp+3
 13075  23E5  0141               	movlb	1	; select bank1
 13076  23E6  082A               	movf	(??_telas+2)^(0+128),w
 13077  23E7  0140               	movlb	0	; select bank0
 13078  23E8  00DC               	movwf	telas@temp+2
 13079  23E9  0141               	movlb	1	; select bank1
 13080  23EA  0829               	movf	(??_telas+1)^(0+128),w
 13081  23EB  0140               	movlb	0	; select bank0
 13082  23EC  00DB               	movwf	telas@temp+1
 13083  23ED  0141               	movlb	1	; select bank1
 13084  23EE  0828               	movf	??_telas^(0+128),w
 13085  23EF  0140               	movlb	0	; select bank0
 13086  23F0  00DA               	movwf	telas@temp
 13087                           
 13088                           ;func.c: 1505: if(temp > 10000) temp = 10000;
 13089  23F1  1BDD               	btfsc	telas@temp+3,7
 13090  23F2  2B07               	goto	L66
 13091  23F3  085D               	movf	telas@temp+3,w
 13092  23F4  1D03               	btfss	3,2
 13093  23F5  2BFF               	goto	l15052
 13094  23F6  085C               	movf	telas@temp+2,w
 13095  23F7  1D03               	btfss	3,2
 13096  23F8  2BFF               	goto	l15052
 13097  23F9  3011               	movlw	17
 13098  23FA  025A               	subwf	telas@temp,w
 13099  23FB  3027               	movlw	39
 13100  23FC  3B5B               	subwfb	telas@temp+1,w
 13101  23FD  1C03               	btfss	3,0
 13102  23FE  2B07               	goto	L66
 13103  23FF                     l15052:	
 13104  23FF  3000               	movlw	0
 13105  2400  00DD               	movwf	telas@temp+3
 13106  2401  3000               	movlw	0
 13107  2402  00DC               	movwf	telas@temp+2
 13108  2403  3027               	movlw	39
 13109  2404  00DB               	movwf	telas@temp+1
 13110  2405  3010               	movlw	16
 13111  2406  2D49               	goto	L27
 13112  2407                     l15056:	
 13113                           ;func.c: 1509: case TELA_FREQ_INI:
 13114                           
 13115                           ;func.c: 1508: break;
 13116                           
 13117                           ;func.c: 1506: }
 13118                           ;func.c: 1507: flag.muda_valor = 1;
 13119                           
 13120                           
 13121                           ;func.c: 1510: if(temp < limite_22 - 50)
 13122  2407  0144               	movlb	4	; select bank4
 13123  2408  083E               	movf	_limite_22^(0+512),w
 13124  2409  3ECE               	addlw	206
 13125  240A  0141               	movlb	1	; select bank1
 13126  240B  00A8               	movwf	??_telas^(0+128)
 13127  240C  30FF               	movlw	255
 13128  240D  0144               	movlb	4	; select bank4
 13129  240E  3D3F               	addwfc	(_limite_22+1)^(0+512),w
 13130  240F  0141               	movlb	1	; select bank1
 13131  2410  00A9               	movwf	(??_telas+1)^(0+128)
 13132  2411  0828               	movf	??_telas^(0+128),w
 13133  2412  00AA               	movwf	(??_telas+2)^(0+128)
 13134  2413  0829               	movf	(??_telas+1)^(0+128),w
 13135  2414  00AB               	movwf	((??_telas+2)^(0+128)+1)
 13136  2415  01AC               	clrf	((??_telas+2)^(0+128)+2)
 13137  2416  01AD               	clrf	((??_telas+2)^(0+128)+3)
 13138  2417  0140               	movlb	0	; select bank0
 13139  2418  085D               	movf	telas@temp+3,w
 13140  2419  3A80               	xorlw	128
 13141  241A  0141               	movlb	1	; select bank1
 13142  241B  00AE               	movwf	(??_telas+6)^(0+128)
 13143  241C  082D               	movf	(??_telas+5)^(0+128),w
 13144  241D  3A80               	xorlw	128
 13145  241E  022E               	subwf	(??_telas+6)^(0+128),w
 13146  241F  0140               	movlb	0	; select bank0
 13147  2420  1D03               	skipz
 13148  2421  2C32               	goto	u16453
 13149  2422  0141               	movlb	1	; select bank1
 13150  2423  082C               	movf	(??_telas+4)^(0+128),w
 13151  2424  0140               	movlb	0	; select bank0
 13152  2425  025C               	subwf	telas@temp+2,w
 13153  2426  1D03               	skipz
 13154  2427  2C32               	goto	u16453
 13155  2428  0141               	movlb	1	; select bank1
 13156  2429  082B               	movf	(??_telas+3)^(0+128),w
 13157  242A  0140               	movlb	0	; select bank0
 13158  242B  025B               	subwf	telas@temp+1,w
 13159  242C  1D03               	skipz
 13160  242D  2C32               	goto	u16453
 13161  242E  0141               	movlb	1	; select bank1
 13162  242F  082A               	movf	(??_telas+2)^(0+128),w
 13163  2430  0140               	movlb	0	; select bank0
 13164  2431  025A               	subwf	telas@temp,w
 13165  2432                     u16453:	
 13166  2432  1C03               	btfss	3,0
 13167  2433  2C4F               	goto	l15066
 13168                           
 13169                           ;func.c: 1512: else temp = limite_22;
 13170                           
 13171                           ;func.c: 1511: temp = temp + tmp_soma;
 13172  2434  0144               	movlb	4	; select bank4
 13173  2435  083E               	movf	_limite_22^(0+512),w
 13174  2436  0140               	movlb	0	; select bank0
 13175  2437  00DA               	movwf	telas@temp
 13176  2438  0144               	movlb	4	; select bank4
 13177  2439  083F               	movf	(_limite_22+1)^(0+512),w
 13178  243A  2CFC               	goto	L26
 13179  243B                     l1700:	
 13180                           ;func.c: 1515: case TELA_TIPO_SOLDA:
 13181                           
 13182                           ;func.c: 1514: break;
 13183                           
 13184                           ;func.c: 1513: flag.muda_valor = 1;
 13185                           
 13186  243B  3182  2AFB         	goto	l1726
 13187  243D                     l1701:	
 13188                           ;func.c: 1520: case TELA_OP_TMP:
 13189                           
 13190                           ;func.c: 1519: break;
 13191                           
 13192                           ;func.c: 1518: flag.salvar = 1;
 13193                           
 13194                           ;func.c: 1516: case TELA_TIPO_CONT:
 13195                           ;func.c: 1517: flag.muda_valor = 0;
 13196                           
 13197                           
 13198                           ;func.c: 1521: flag.muda_valor = 0;
 13199  243D  0143               	movlb	3	; select bank3
 13200  243E  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 13201                           
 13202                           ;func.c: 1522: flag.salvar = 0;
 13203  243F  11AD               	bcf	(_flag^(0+384)+1),3	;volatile
 13204  2440                     l15064:	
 13205                           ;func.c: 1523: default:
 13206                           
 13207                           
 13208                           ;func.c: 1524: if(temp < 10000)
 13209  2440  0140               	movlb	0	; select bank0
 13210  2441  1BDD               	btfsc	telas@temp+3,7
 13211  2442  2C4F               	goto	l15066
 13212  2443  085D               	movf	telas@temp+3,w
 13213  2444  1D03               	btfss	3,2
 13214  2445  2B07               	goto	L66
 13215  2446  085C               	movf	telas@temp+2,w
 13216  2447  1D03               	btfss	3,2
 13217  2448  2B07               	goto	L66
 13218  2449  3010               	movlw	16
 13219  244A  025A               	subwf	telas@temp,w
 13220  244B  3027               	movlw	39
 13221  244C  3B5B               	subwfb	telas@temp+1,w
 13222  244D  1803               	btfsc	3,0
 13223  244E  2B07               	goto	L66
 13224  244F                     l15066:	
 13225                           
 13226                           ;func.c: 1525: temp = temp + tmp_soma;
 13227  244F  085A               	movf	telas@temp,w
 13228  2450  0141               	movlb	1	; select bank1
 13229  2451  00A8               	movwf	??_telas^(0+128)
 13230  2452  0140               	movlb	0	; select bank0
 13231  2453  085B               	movf	telas@temp+1,w
 13232  2454  0141               	movlb	1	; select bank1
 13233  2455  00A9               	movwf	(??_telas^(0+128)+1)
 13234  2456  0140               	movlb	0	; select bank0
 13235  2457  085C               	movf	telas@temp+2,w
 13236  2458  0141               	movlb	1	; select bank1
 13237  2459  00AA               	movwf	(??_telas^(0+128)+2)
 13238  245A  0140               	movlb	0	; select bank0
 13239  245B  085D               	movf	telas@temp+3,w
 13240  245C  0141               	movlb	1	; select bank1
 13241  245D  00AB               	movwf	(??_telas^(0+128)+3)
 13242  245E  0143               	movlb	3	; select bank3
 13243  245F  0866               	movf	_tmp_soma^(0+384),w
 13244  2460  0141               	movlb	1	; select bank1
 13245  2461  00AC               	movwf	(??_telas+4)^(0+128)
 13246  2462  0143               	movlb	3	; select bank3
 13247  2463  0867               	movf	(_tmp_soma+1)^(0+384),w
 13248  2464  0141               	movlb	1	; select bank1
 13249  2465  00AD               	movwf	((??_telas+4)^(0+128)+1)
 13250  2466  01AE               	clrf	((??_telas+4)^(0+128)+2)
 13251  2467  01AF               	clrf	((??_telas+4)^(0+128)+3)
 13252  2468  2CDF               	goto	L28
 13253  2469                     l15072:	
 13254                           ;func.c: 1528: }
 13255                           
 13256                           ;func.c: 1527: break;
 13257                           
 13258                           ;func.c: 1526: flag.muda_valor = 1;
 13259                           
 13260  2469  0140               	movlb	0	; select bank0
 13261  246A  0864               	movf	_pagina,w	;volatile
 13262                           
 13263                           ; Switch size 1, requested type "space"
 13264                           ; Number of cases is 9, Range of values is 1 to 13
 13265                           ; switch strategies available:
 13266                           ; Name         Instructions Cycles
 13267                           ; simple_byte           28    15 (average)
 13268                           ; direct_byte           35     9 (fixed)
 13269                           ; jumptable            263     9 (fixed)
 13270                           ;	Chosen strategy is simple_byte
 13271  246B  3A01               	xorlw	1	; case 1
 13272  246C  1903               	skipnz
 13273  246D  2B09               	goto	l15026
 13274  246E  3A05               	xorlw	5	; case 4
 13275  246F  1903               	skipnz
 13276  2470  2C3B               	goto	l1700
 13277  2471  3A02               	xorlw	2	; case 6
 13278  2472  1903               	skipnz
 13279  2473  2B5E               	goto	l15036
 13280  2474  3A01               	xorlw	1	; case 7
 13281  2475  1903               	skipnz
 13282  2476  2BB3               	goto	l15046
 13283  2477  3A0F               	xorlw	15	; case 8
 13284  2478  1903               	skipnz
 13285  2479  2C3B               	goto	l1700
 13286  247A  3A01               	xorlw	1	; case 9
 13287  247B  1903               	skipnz
 13288  247C  2C07               	goto	l15056
 13289  247D  3A02               	xorlw	2	; case 11
 13290  247E  1903               	skipnz
 13291  247F  2AFD               	goto	l15020
 13292  2480  3A07               	xorlw	7	; case 12
 13293  2481  1903               	skipnz
 13294  2482  2AFD               	goto	l15020
 13295  2483  3A01               	xorlw	1	; case 13
 13296  2484  1903               	skipnz
 13297  2485  2C3D               	goto	l1701
 13298  2486  2C40               	goto	l15064
 13299                           
 13300                           ;func.c: 1530: break;
 13301  2487  2AFB               	goto	L67
 13302  2488                     l15074:	
 13303                           ;func.c: 1534: case TELA_TMP_LOAD:
 13304                           
 13305                           ;func.c: 1533: switch(pagina){
 13306                           
 13307                           ;func.c: 1532: case 20:
 13308                           
 13309                           
 13310                           ;func.c: 1535: case TELA_TMP_SAVE:
 13311                           ;func.c: 1536: if(ee_addr > 0)
 13312  2488  0862               	movf	telas@ee_addr,w
 13313  2489  1903               	btfsc	3,2
 13314  248A  2B07               	goto	L66
 13315                           
 13316                           ;func.c: 1537: ee_addr--;
 13317  248B  3001               	movlw	1
 13318  248C  02E2               	subwf	telas@ee_addr,f
 13319  248D  2B07               	goto	L66
 13320  248E                     l15080:	
 13321                           ;func.c: 1540: case TELA_FREQ_INI:
 13322                           
 13323                           ;func.c: 1539: break;
 13324                           
 13325                           ;func.c: 1538: flag.muda_valor = 1;
 13326                           
 13327                           
 13328                           ;func.c: 1541: if(temp > limite_17 + 50)
 13329  248E  0144               	movlb	4	; select bank4
 13330  248F  083C               	movf	_limite_17^(0+512),w
 13331  2490  3E32               	addlw	50
 13332  2491  0141               	movlb	1	; select bank1
 13333  2492  00A8               	movwf	??_telas^(0+128)
 13334  2493  3000               	movlw	0
 13335  2494  0144               	movlb	4	; select bank4
 13336  2495  3D3D               	addwfc	(_limite_17+1)^(0+512),w
 13337  2496  0141               	movlb	1	; select bank1
 13338  2497  00A9               	movwf	(??_telas+1)^(0+128)
 13339  2498  0828               	movf	??_telas^(0+128),w
 13340  2499  00AA               	movwf	(??_telas+2)^(0+128)
 13341  249A  0829               	movf	(??_telas+1)^(0+128),w
 13342  249B  00AB               	movwf	((??_telas+2)^(0+128)+1)
 13343  249C  01AC               	clrf	((??_telas+2)^(0+128)+2)
 13344  249D  01AD               	clrf	((??_telas+2)^(0+128)+3)
 13345  249E  082D               	movf	(??_telas+5)^(0+128),w
 13346  249F  3A80               	xorlw	128
 13347  24A0  00AE               	movwf	(??_telas+6)^(0+128)
 13348  24A1  0140               	movlb	0	; select bank0
 13349  24A2  085D               	movf	telas@temp+3,w
 13350  24A3  3A80               	xorlw	128
 13351  24A4  0141               	movlb	1	; select bank1
 13352  24A5  022E               	subwf	(??_telas+6)^(0+128),w
 13353  24A6  1D03               	skipz
 13354  24A7  2CB8               	goto	u16483
 13355  24A8  0140               	movlb	0	; select bank0
 13356  24A9  085C               	movf	telas@temp+2,w
 13357  24AA  0141               	movlb	1	; select bank1
 13358  24AB  022C               	subwf	(??_telas+4)^(0+128),w
 13359  24AC  1D03               	skipz
 13360  24AD  2CB8               	goto	u16483
 13361  24AE  0140               	movlb	0	; select bank0
 13362  24AF  085B               	movf	telas@temp+1,w
 13363  24B0  0141               	movlb	1	; select bank1
 13364  24B1  022B               	subwf	(??_telas+3)^(0+128),w
 13365  24B2  1D03               	skipz
 13366  24B3  2CB8               	goto	u16483
 13367  24B4  0140               	movlb	0	; select bank0
 13368  24B5  085A               	movf	telas@temp,w
 13369  24B6  0141               	movlb	1	; select bank1
 13370  24B7  022A               	subwf	(??_telas+2)^(0+128),w
 13371  24B8                     u16483:	
 13372  24B8  1803               	skipnc
 13373  24B9  2CF6               	goto	l15084
 13374                           
 13375                           ;func.c: 1542: temp = temp - tmp_soma;
 13376  24BA  0140               	movlb	0	; select bank0
 13377  24BB  085A               	movf	telas@temp,w
 13378  24BC  0141               	movlb	1	; select bank1
 13379  24BD  00A8               	movwf	??_telas^(0+128)
 13380  24BE  0140               	movlb	0	; select bank0
 13381  24BF  085B               	movf	telas@temp+1,w
 13382  24C0  0141               	movlb	1	; select bank1
 13383  24C1  00A9               	movwf	(??_telas^(0+128)+1)
 13384  24C2  0140               	movlb	0	; select bank0
 13385  24C3  085C               	movf	telas@temp+2,w
 13386  24C4  0141               	movlb	1	; select bank1
 13387  24C5  00AA               	movwf	(??_telas^(0+128)+2)
 13388  24C6  0140               	movlb	0	; select bank0
 13389  24C7  085D               	movf	telas@temp+3,w
 13390  24C8  0141               	movlb	1	; select bank1
 13391  24C9  00AB               	movwf	(??_telas^(0+128)+3)
 13392  24CA  0143               	movlb	3	; select bank3
 13393  24CB  0866               	movf	_tmp_soma^(0+384),w
 13394  24CC  0141               	movlb	1	; select bank1
 13395  24CD  00AC               	movwf	(??_telas+4)^(0+128)
 13396  24CE  0143               	movlb	3	; select bank3
 13397  24CF  0867               	movf	(_tmp_soma+1)^(0+384),w
 13398  24D0  0141               	movlb	1	; select bank1
 13399  24D1  00AD               	movwf	((??_telas+4)^(0+128)+1)
 13400  24D2  01AE               	clrf	((??_telas+4)^(0+128)+2)
 13401  24D3  01AF               	clrf	((??_telas+4)^(0+128)+3)
 13402  24D4  09AC               	comf	(??_telas+4)^(0+128),f
 13403  24D5  09AD               	comf	((??_telas+4)^(0+128)+1),f
 13404  24D6  09AE               	comf	((??_telas+4)^(0+128)+2),f
 13405  24D7  09AF               	comf	((??_telas+4)^(0+128)+3),f
 13406  24D8  0AAC               	incf	(??_telas+4)^(0+128),f
 13407  24D9  1903               	skipnz
 13408  24DA  0AAD               	incf	((??_telas+4)^(0+128)+1),f
 13409  24DB  1903               	skipnz
 13410  24DC  0AAE               	incf	((??_telas+4)^(0+128)+2),f
 13411  24DD  1903               	skipnz
 13412  24DE  0AAF               	incf	((??_telas+4)^(0+128)+3),f
 13413  24DF                     L28:	
 13414  24DF  082C               	movf	(??_telas+4)^(0+128),w
 13415  24E0  07A8               	addwf	??_telas^(0+128),f
 13416  24E1  082D               	movf	(??_telas+5)^(0+128),w
 13417  24E2  3DA9               	addwfc	(??_telas^(0+128)+1),f
 13418  24E3  082E               	movf	(??_telas+6)^(0+128),w
 13419  24E4  3DAA               	addwfc	(??_telas^(0+128)+2),f
 13420  24E5  082F               	movf	(??_telas+7)^(0+128),w
 13421  24E6  3DAB               	addwfc	(??_telas^(0+128)+3),f
 13422  24E7  082B               	movf	(??_telas+3)^(0+128),w
 13423  24E8  0140               	movlb	0	; select bank0
 13424  24E9  00DD               	movwf	telas@temp+3
 13425  24EA  0141               	movlb	1	; select bank1
 13426  24EB  082A               	movf	(??_telas+2)^(0+128),w
 13427  24EC  0140               	movlb	0	; select bank0
 13428  24ED  00DC               	movwf	telas@temp+2
 13429  24EE  0141               	movlb	1	; select bank1
 13430  24EF  0829               	movf	(??_telas+1)^(0+128),w
 13431  24F0  0140               	movlb	0	; select bank0
 13432  24F1  00DB               	movwf	telas@temp+1
 13433  24F2  0141               	movlb	1	; select bank1
 13434  24F3  0828               	movf	??_telas^(0+128),w
 13435  24F4  0140               	movlb	0	; select bank0
 13436  24F5  2D49               	goto	L27
 13437  24F6                     l15084:	
 13438                           
 13439                           ;func.c: 1543: else temp = limite_17;
 13440  24F6  0144               	movlb	4	; select bank4
 13441  24F7  083C               	movf	_limite_17^(0+512),w
 13442  24F8  0140               	movlb	0	; select bank0
 13443  24F9  00DA               	movwf	telas@temp
 13444  24FA  0144               	movlb	4	; select bank4
 13445  24FB  083D               	movf	(_limite_17+1)^(0+512),w
 13446  24FC                     L26:	
 13447  24FC  0140               	movlb	0	; select bank0
 13448  24FD  00DB               	movwf	telas@temp+1
 13449  24FE  01DC               	clrf	telas@temp+2
 13450  24FF  01DD               	clrf	telas@temp+3
 13451  2500  2B07               	goto	L66
 13452  2501                     l1714:	
 13453                           ;func.c: 1546: case TELA_TIPO_SOLDA:
 13454                           
 13455                           ;func.c: 1545: break;
 13456                           
 13457                           ;func.c: 1544: flag.muda_valor = 1;
 13458                           
 13459  2501  2C3B               	goto	l1700
 13460  2502                     l1715:	
 13461                           ;func.c: 1551: case TELA_OP_TMP:
 13462                           
 13463                           ;func.c: 1550: break;
 13464                           
 13465                           ;func.c: 1549: flag.salvar = 1;
 13466                           
 13467                           ;func.c: 1547: case TELA_TIPO_CONT:
 13468                           ;func.c: 1548: flag.muda_valor = 0;
 13469                           
 13470  2502  3183  2B00         	goto	l1728
 13471  2504                     l15088:	
 13472                           ;func.c: 1555: default:
 13473                           
 13474                           ;func.c: 1554: break;
 13475                           
 13476                           ;func.c: 1553: flag.salvar = 0;
 13477                           
 13478                           ;func.c: 1552: flag.muda_valor = 0;
 13479                           
 13480                           
 13481                           ;func.c: 1556: temp = temp - tmp_soma;
 13482  2504  0140               	movlb	0	; select bank0
 13483  2505  085A               	movf	telas@temp,w
 13484  2506  0141               	movlb	1	; select bank1
 13485  2507  00A8               	movwf	??_telas^(0+128)
 13486  2508  0140               	movlb	0	; select bank0
 13487  2509  085B               	movf	telas@temp+1,w
 13488  250A  0141               	movlb	1	; select bank1
 13489  250B  00A9               	movwf	(??_telas^(0+128)+1)
 13490  250C  0140               	movlb	0	; select bank0
 13491  250D  085C               	movf	telas@temp+2,w
 13492  250E  0141               	movlb	1	; select bank1
 13493  250F  00AA               	movwf	(??_telas^(0+128)+2)
 13494  2510  0140               	movlb	0	; select bank0
 13495  2511  085D               	movf	telas@temp+3,w
 13496  2512  0141               	movlb	1	; select bank1
 13497  2513  00AB               	movwf	(??_telas^(0+128)+3)
 13498  2514  0143               	movlb	3	; select bank3
 13499  2515  0866               	movf	_tmp_soma^(0+384),w
 13500  2516  0141               	movlb	1	; select bank1
 13501  2517  00AC               	movwf	(??_telas+4)^(0+128)
 13502  2518  0143               	movlb	3	; select bank3
 13503  2519  0867               	movf	(_tmp_soma+1)^(0+384),w
 13504  251A  0141               	movlb	1	; select bank1
 13505  251B  00AD               	movwf	((??_telas+4)^(0+128)+1)
 13506  251C  01AE               	clrf	((??_telas+4)^(0+128)+2)
 13507  251D  01AF               	clrf	((??_telas+4)^(0+128)+3)
 13508  251E  09AC               	comf	(??_telas+4)^(0+128),f
 13509  251F  09AD               	comf	((??_telas+4)^(0+128)+1),f
 13510  2520  09AE               	comf	((??_telas+4)^(0+128)+2),f
 13511  2521  09AF               	comf	((??_telas+4)^(0+128)+3),f
 13512  2522  0AAC               	incf	(??_telas+4)^(0+128),f
 13513  2523  1903               	skipnz
 13514  2524  0AAD               	incf	((??_telas+4)^(0+128)+1),f
 13515  2525  1903               	skipnz
 13516  2526  0AAE               	incf	((??_telas+4)^(0+128)+2),f
 13517  2527  1903               	skipnz
 13518  2528  0AAF               	incf	((??_telas+4)^(0+128)+3),f
 13519  2529  082C               	movf	(??_telas+4)^(0+128),w
 13520  252A  07A8               	addwf	??_telas^(0+128),f
 13521  252B  082D               	movf	(??_telas+5)^(0+128),w
 13522  252C  3DA9               	addwfc	(??_telas^(0+128)+1),f
 13523  252D  082E               	movf	(??_telas+6)^(0+128),w
 13524  252E  3DAA               	addwfc	(??_telas^(0+128)+2),f
 13525  252F  082F               	movf	(??_telas+7)^(0+128),w
 13526  2530  3DAB               	addwfc	(??_telas^(0+128)+3),f
 13527  2531  082B               	movf	(??_telas+3)^(0+128),w
 13528  2532  0140               	movlb	0	; select bank0
 13529  2533  00DD               	movwf	telas@temp+3
 13530  2534  0141               	movlb	1	; select bank1
 13531  2535  082A               	movf	(??_telas+2)^(0+128),w
 13532  2536  0140               	movlb	0	; select bank0
 13533  2537  00DC               	movwf	telas@temp+2
 13534  2538  0141               	movlb	1	; select bank1
 13535  2539  0829               	movf	(??_telas+1)^(0+128),w
 13536  253A  0140               	movlb	0	; select bank0
 13537  253B  00DB               	movwf	telas@temp+1
 13538  253C  0141               	movlb	1	; select bank1
 13539  253D  0828               	movf	??_telas^(0+128),w
 13540  253E  0140               	movlb	0	; select bank0
 13541  253F  00DA               	movwf	telas@temp
 13542                           
 13543                           ;func.c: 1557: if(temp<0)
 13544  2540  1FDD               	btfss	telas@temp+3,7
 13545  2541  2B07               	goto	L66
 13546                           
 13547                           ;func.c: 1558: temp = 0;
 13548  2542  3000               	movlw	0
 13549  2543  00DD               	movwf	telas@temp+3
 13550  2544  3000               	movlw	0
 13551  2545  00DC               	movwf	telas@temp+2
 13552  2546  3000               	movlw	0
 13553  2547  00DB               	movwf	telas@temp+1
 13554  2548  3000               	movlw	0
 13555  2549                     L27:	
 13556  2549  00DA               	movwf	telas@temp
 13557  254A  2B07               	goto	L66
 13558                           
 13559                           	psect	swtext1
 13560  5070                     __pswtext1:	
 13561  5070                     S18602:	
 13562  5070  3183  2B4F         	ljmp	l1737
 13563  5072  3183  2B9B         	ljmp	l1740
 13564  5074  3183  2BE7         	ljmp	l1742
 13565  5076  3185  2D7C         	ljmp	l1753
 13566  5078  3184  2C33         	ljmp	l1744
 13567  507A  3184  2C7F         	ljmp	l1746
 13568  507C  3185  2D1E         	ljmp	l1751
 13569  507E  3185  2DC9         	ljmp	l1755
 13570  5080  3186  2E17         	ljmp	l1757
 13571  5082  3184  2CCB         	ljmp	l1748
 13572  5084  3186  2E4C         	ljmp	l1759
 13573  5086  3186  2E9F         	ljmp	l1762
 13574  5088  3187  2F04         	ljmp	l1765
 13575  508A  3187  2F0A         	ljmp	l1766
 13576                           
 13577                           	psect	text10
 13578  4058                     __ptext10:	
 13579 ;; *************** function _verifPagina *****************
 13580 ;; Defined at:
 13581 ;;		line 3021 in file "func.c"
 13582 ;; Parameters:    Size  Location     Type
 13583 ;;  pag             1    wreg     unsigned char 
 13584 ;;  bt_local        1   11[BANK0 ] unsigned char 
 13585 ;; Auto vars:     Size  Location     Type
 13586 ;;  pag             1   14[BANK0 ] unsigned char 
 13587 ;;  ok              1   13[BANK0 ] unsigned char 
 13588 ;; Return value:  Size  Location     Type
 13589 ;;                  1    wreg      unsigned char 
 13590 ;; Registers used:
 13591 ;;		wreg, status,2, status,0
 13592 ;; Tracked objects:
 13593 ;;		On entry : 0/0
 13594 ;;		On exit  : 0/0
 13595 ;;		Unchanged: 0/0
 13596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13597 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13598 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13599 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13600 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13601 ;;Total ram usage:        4 bytes
 13602 ;; Hardware stack levels used:    1
 13603 ;; Hardware stack levels required when called:    3
 13604 ;; This function calls:
 13605 ;;		Nothing
 13606 ;; This function is called by:
 13607 ;;		_telas
 13608 ;;		_rotina_tela
 13609 ;; This function uses a non-reentrant model
 13610 ;;
 13611                           
 13612                           
 13613                           ;psect for function _verifPagina
 13614  4058                     _verifPagina:	
 13615                           
 13616                           ;incstack = 0
 13617                           ; Regs used in _verifPagina: [wreg+status,2+status,0]
 13618                           ;verifPagina@pag stored from wreg
 13619  4058  0140               	movlb	0	; select bank0
 13620  4059  00AE               	movwf	verifPagina@pag
 13621                           
 13622                           ;func.c: 3022: char ok = 0;
 13623  405A  01AD               	clrf	verifPagina@ok
 13624  405B                     l2091:	
 13625                           ;func.c: 3025: do{
 13626                           
 13627                           
 13628                           ;func.c: 3026: ok = 0;
 13629  405B  01AD               	clrf	verifPagina@ok
 13630                           
 13631                           ;func.c: 3027: if(bt_local == 34){
 13632  405C  3022               	movlw	34
 13633  405D  062B               	xorwf	verifPagina@bt_local,w
 13634  405E  1D03               	btfss	3,2
 13635  405F  2892               	goto	l14516
 13636                           
 13637                           ;func.c: 3028: if(!cfg.pne_desce && pag == TELA_TMP_DESCE){
 13638  4060  0143               	movlb	3	; select bank3
 13639  4061  1A30               	btfsc	_cfg^(0+384),4
 13640  4062  2867               	goto	l14498
 13641  4063  0140               	movlb	0	; select bank0
 13642  4064  032E               	decf	verifPagina@pag,w
 13643  4065  1903               	btfsc	3,2
 13644  4066  287F               	goto	L34
 13645  4067                     l14498:	
 13646                           ;func.c: 3031: }
 13647                           
 13648                           ;func.c: 3030: ok++;
 13649                           
 13650                           ;func.c: 3029: pag++;
 13651                           
 13652                           
 13653                           ;func.c: 3032: else if (pag == TELA_FREQ_INI){
 13654  4067  3009               	movlw	9
 13655  4068  0140               	movlb	0	; select bank0
 13656  4069  062E               	xorwf	verifPagina@pag,w
 13657  406A  1903               	btfsc	3,2
 13658  406B  287F               	goto	L34
 13659                           
 13660                           ;func.c: 3036: else if (pag == TELA_TIPO_MAQU && tipo_maquina == ESPECIAL) {
 13661                           
 13662                           ;func.c: 3035: }
 13663                           
 13664                           ;func.c: 3034: ok++;
 13665                           
 13666                           ;func.c: 3033: pag++;
 13667  406C  300A               	movlw	10
 13668  406D  062E               	xorwf	verifPagina@pag,w
 13669  406E  1D03               	btfss	3,2
 13670  406F  2877               	goto	l2097
 13671  4070  0143               	movlb	3	; select bank3
 13672  4071  0860               	movf	_tipo_maquina^(0+384),w
 13673  4072  1D03               	btfss	3,2
 13674  4073  2877               	goto	l2097
 13675                           
 13676                           ;func.c: 3037: pag++;
 13677  4074  3001               	movlw	1
 13678  4075  0140               	movlb	0	; select bank0
 13679  4076  2880               	goto	L30
 13680  4077                     l2097:	
 13681                           ;func.c: 3039: }
 13682                           
 13683                           ;func.c: 3038: ok++;
 13684                           
 13685                           
 13686                           ;func.c: 3040: else if(!cfg.metal && pag == TELA_METAL){
 13687  4077  0143               	movlb	3	; select bank3
 13688  4078  1A31               	btfsc	(_cfg^(0+384)+1),4
 13689  4079  2887               	goto	l2094
 13690  407A  3006               	movlw	6
 13691  407B  0140               	movlb	0	; select bank0
 13692  407C  062E               	xorwf	verifPagina@pag,w
 13693  407D  1D03               	btfss	3,2
 13694  407E  2887               	goto	l2094
 13695  407F                     L34:	
 13696                           
 13697                           ;func.c: 3041: pag++;
 13698  407F  3001               	movlw	1
 13699  4080                     L30:	
 13700  4080  00AC               	movwf	??_verifPagina
 13701  4081  082C               	movf	??_verifPagina,w
 13702  4082  07AE               	addwf	verifPagina@pag,f
 13703                           
 13704                           ;func.c: 3042: ok++;
 13705  4083  3001               	movlw	1
 13706  4084  00AC               	movwf	??_verifPagina
 13707  4085  082C               	movf	??_verifPagina,w
 13708  4086  07AD               	addwf	verifPagina@ok,f
 13709  4087                     l2094:	
 13710                           
 13711                           ;func.c: 3043: }
 13712                           ;func.c: 3045: if(ok && pag > TAMANHO_MENU){
 13713  4087  0140               	movlb	0	; select bank0
 13714  4088  082D               	movf	verifPagina@ok,w
 13715  4089  1903               	btfsc	3,2
 13716  408A  28CC               	goto	l14544
 13717  408B  300F               	movlw	15
 13718  408C  022E               	subwf	verifPagina@pag,w
 13719  408D  1C03               	skipc
 13720  408E  28CC               	goto	l14544
 13721                           
 13722                           ;func.c: 3046: pag = TELA_TMP_DESCE;
 13723  408F  01AE               	clrf	verifPagina@pag
 13724  4090  0AAE               	incf	verifPagina@pag,f
 13725                           
 13726                           ;func.c: 3047: }
 13727                           ;func.c: 3048: }
 13728  4091  28CC               	goto	l14544
 13729  4092                     l14516:	
 13730                           
 13731                           ;func.c: 3049: else if(bt_local == 10){
 13732  4092  300A               	movlw	10
 13733  4093  062B               	xorwf	verifPagina@bt_local,w
 13734  4094  1D03               	btfss	3,2
 13735  4095  28CC               	goto	l14544
 13736                           
 13737                           ;func.c: 3050: if(!cfg.pne_desce && pag == TELA_TMP_DESCE){
 13738  4096  0143               	movlb	3	; select bank3
 13739  4097  1A30               	btfsc	_cfg^(0+384),4
 13740  4098  28A2               	goto	l14526
 13741  4099  0140               	movlb	0	; select bank0
 13742  409A  032E               	decf	verifPagina@pag,w
 13743  409B  1D03               	btfss	3,2
 13744  409C  28A2               	goto	l14526
 13745                           
 13746                           ;func.c: 3051: pag = TAMANHO_MENU;
 13747  409D  300E               	movlw	14
 13748  409E  00AC               	movwf	??_verifPagina
 13749  409F  082C               	movf	??_verifPagina,w
 13750  40A0  00AE               	movwf	verifPagina@pag
 13751  40A1  28BD               	goto	L33
 13752  40A2                     l14526:	
 13753                           ;func.c: 3053: }
 13754                           
 13755                           ;func.c: 3052: ok++;
 13756                           
 13757                           
 13758                           ;func.c: 3054: else if (pag == TELA_TIPO_MAQU && tipo_maquina == ESPECIAL){
 13759  40A2  300A               	movlw	10
 13760  40A3  0140               	movlb	0	; select bank0
 13761  40A4  062E               	xorwf	verifPagina@pag,w
 13762  40A5  1D03               	btfss	3,2
 13763  40A6  28AE               	goto	l14532
 13764  40A7  0143               	movlb	3	; select bank3
 13765  40A8  0860               	movf	_tipo_maquina^(0+384),w
 13766  40A9  1D03               	btfss	3,2
 13767  40AA  28AE               	goto	l14532
 13768                           
 13769                           ;func.c: 3055: pag--;
 13770  40AB  3001               	movlw	1
 13771  40AC  0140               	movlb	0	; select bank0
 13772  40AD  28BC               	goto	L35
 13773  40AE                     l14532:	
 13774                           ;func.c: 3057: }
 13775                           
 13776                           ;func.c: 3056: ok++;
 13777                           
 13778                           
 13779                           ;func.c: 3058: else if (pag == TELA_FREQ_INI) {
 13780  40AE  3009               	movlw	9
 13781  40AF  0140               	movlb	0	; select bank0
 13782  40B0  062E               	xorwf	verifPagina@pag,w
 13783  40B1  1903               	btfsc	3,2
 13784  40B2  28BB               	goto	L36
 13785                           
 13786                           ;func.c: 3062: else if(!cfg.metal && pag == TELA_METAL){
 13787                           
 13788                           ;func.c: 3061: }
 13789                           
 13790                           ;func.c: 3060: ok++;
 13791                           
 13792                           ;func.c: 3059: pag--;
 13793  40B3  0143               	movlb	3	; select bank3
 13794  40B4  1A31               	btfsc	(_cfg^(0+384)+1),4
 13795  40B5  28C1               	goto	l2104
 13796  40B6  3006               	movlw	6
 13797  40B7  0140               	movlb	0	; select bank0
 13798  40B8  062E               	xorwf	verifPagina@pag,w
 13799  40B9  1D03               	btfss	3,2
 13800  40BA  28C1               	goto	l2104
 13801  40BB                     L36:	
 13802                           
 13803                           ;func.c: 3063: pag--;
 13804  40BB  3001               	movlw	1
 13805  40BC                     L35:	
 13806  40BC  02AE               	subwf	verifPagina@pag,f
 13807  40BD                     L33:	
 13808                           
 13809                           ;func.c: 3064: ok++;
 13810  40BD  3001               	movlw	1
 13811  40BE  00AC               	movwf	??_verifPagina
 13812  40BF  082C               	movf	??_verifPagina,w
 13813  40C0  07AD               	addwf	verifPagina@ok,f
 13814  40C1                     l2104:	
 13815                           
 13816                           ;func.c: 3065: }
 13817                           ;func.c: 3067: if(ok && pag < TELA_TMP_DESCE){
 13818  40C1  0140               	movlb	0	; select bank0
 13819  40C2  082D               	movf	verifPagina@ok,w
 13820  40C3  1903               	btfsc	3,2
 13821  40C4  28CC               	goto	l14544
 13822  40C5  082E               	movf	verifPagina@pag,w
 13823  40C6  1D03               	btfss	3,2
 13824  40C7  28CC               	goto	l14544
 13825                           
 13826                           ;func.c: 3068: pag = TAMANHO_MENU;
 13827  40C8  300E               	movlw	14
 13828  40C9  00AC               	movwf	??_verifPagina
 13829  40CA  082C               	movf	??_verifPagina,w
 13830  40CB  00AE               	movwf	verifPagina@pag
 13831  40CC                     l14544:	
 13832                           
 13833                           ;func.c: 3069: }
 13834                           ;func.c: 3070: }
 13835                           ;func.c: 3071: }while(ok);
 13836  40CC  082D               	movf	verifPagina@ok,w
 13837  40CD  1D03               	btfss	3,2
 13838  40CE  285B               	goto	l2091
 13839                           
 13840                           ;func.c: 3074: return pag;
 13841  40CF  082E               	movf	verifPagina@pag,w
 13842  40D0  0008               	return
 13843  40D1                     __end_of_verifPagina:	
 13844                           
 13845                           	psect	text11
 13846  3E3B                     __ptext11:	
 13847 ;; *************** function _totalCiclos *****************
 13848 ;; Defined at:
 13849 ;;		line 1328 in file "func.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;		None
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      void 
 13856 ;; Registers used:
 13857 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 13863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13864 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13866 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 13867 ;;Total ram usage:        8 bytes
 13868 ;; Hardware stack levels used:    1
 13869 ;; Hardware stack levels required when called:    7
 13870 ;; This function calls:
 13871 ;;		_Lcd_Clear
 13872 ;;		_Lcd_Write_String
 13873 ;;		___lldiv
 13874 ;;		___llmod
 13875 ;;		_escreve_LCD
 13876 ;;		_ltoa
 13877 ;; This function is called by:
 13878 ;;		_main
 13879 ;;		_telas
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           
 13884                           ;psect for function _totalCiclos
 13885  3E3B                     _totalCiclos:	
 13886                           
 13887                           ;incstack = 0
 13888                           ; Regs used in _totalCiclos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 13889  3E3B  0064               	clrwdt	;# 
 13890                           
 13891                           ;func.c: 1331: Lcd_Clear();
 13892  3E3C  31E1  21DF  31BE   	fcall	_Lcd_Clear
 13893                           
 13894                           ;func.c: 1333: escreve_LCD(1,1,"OP:");
 13895  3E3F  0140               	movlb	0	; select bank0
 13896  3E40  01B5               	clrf	escreve_LCD@coluna
 13897  3E41  0AB5               	incf	escreve_LCD@coluna,f
 13898  3E42  30FF               	movlw	low (STR_10| (0+32768))
 13899  3E43  00B6               	movwf	escreve_LCD@str
 13900  3E44  30E8               	movlw	high (STR_10| (0+32768))
 13901  3E45  00B7               	movwf	escreve_LCD@str+1
 13902  3E46  3001               	movlw	1
 13903  3E47  31E7  27C1  31BE   	fcall	_escreve_LCD
 13904                           
 13905                           ;func.c: 1334: ltoa(str,n_pecas_l,10);
 13906  3E4A  0144               	movlb	4	; select bank4
 13907  3E4B  0833               	movf	(_n_pecas_l+3)^(0+512),w
 13908  3E4C  0140               	movlb	0	; select bank0
 13909  3E4D  00CD               	movwf	ltoa@val+3
 13910  3E4E  0144               	movlb	4	; select bank4
 13911  3E4F  0832               	movf	(_n_pecas_l+2)^(0+512),w
 13912  3E50  0140               	movlb	0	; select bank0
 13913  3E51  00CC               	movwf	ltoa@val+2
 13914  3E52  0144               	movlb	4	; select bank4
 13915  3E53  0831               	movf	(_n_pecas_l+1)^(0+512),w
 13916  3E54  0140               	movlb	0	; select bank0
 13917  3E55  00CB               	movwf	ltoa@val+1
 13918  3E56  0144               	movlb	4	; select bank4
 13919  3E57  0830               	movf	_n_pecas_l^(0+512),w
 13920  3E58  0140               	movlb	0	; select bank0
 13921  3E59  00CA               	movwf	ltoa@val
 13922  3E5A  300A               	movlw	10
 13923  3E5B  00CE               	movwf	ltoa@base
 13924  3E5C  3000               	movlw	0
 13925  3E5D  00CF               	movwf	ltoa@base+1
 13926  3E5E  305C               	movlw	(low (_str| (0+512)))& (0+255)
 13927  3E5F  31D4  24DE  31BE   	fcall	_ltoa
 13928                           
 13929                           ;func.c: 1335: Lcd_Write_String(str);
 13930  3E62  305C               	movlw	low _str
 13931  3E63  0140               	movlb	0	; select bank0
 13932  3E64  00B0               	movwf	Lcd_Write_String@a
 13933  3E65  3002               	movlw	high _str
 13934  3E66  00B1               	movwf	Lcd_Write_String@a+1
 13935  3E67  31D1  2171  31BE   	fcall	_Lcd_Write_String
 13936                           
 13937                           ;func.c: 1337: escreve_LCD(2,1,"T:");
 13938  3E6A  0140               	movlb	0	; select bank0
 13939  3E6B  01B5               	clrf	escreve_LCD@coluna
 13940  3E6C  0AB5               	incf	escreve_LCD@coluna,f
 13941  3E6D  3012               	movlw	low (STR_11| (0+32768))
 13942  3E6E  00B6               	movwf	escreve_LCD@str
 13943  3E6F  30E9               	movlw	high (STR_11| (0+32768))
 13944  3E70  00B7               	movwf	escreve_LCD@str+1
 13945  3E71  3002               	movlw	2
 13946  3E72  31E7  27C1  31BE   	fcall	_escreve_LCD
 13947                           
 13948                           ;func.c: 1338: ltoa(str,t100ms_solda/10,10);
 13949  3E75  3000               	movlw	0
 13950  3E76  0140               	movlb	0	; select bank0
 13951  3E77  00B2               	movwf	___lldiv@divisor+3
 13952  3E78  3000               	movlw	0
 13953  3E79  00B1               	movwf	___lldiv@divisor+2
 13954  3E7A  3000               	movlw	0
 13955  3E7B  00B0               	movwf	___lldiv@divisor+1
 13956  3E7C  300A               	movlw	10
 13957  3E7D  00AF               	movwf	___lldiv@divisor
 13958  3E7E  0144               	movlb	4	; select bank4
 13959  3E7F  082F               	movf	(_t100ms_solda+3)^(0+512),w
 13960  3E80  0140               	movlb	0	; select bank0
 13961  3E81  00B6               	movwf	___lldiv@dividend+3
 13962  3E82  0144               	movlb	4	; select bank4
 13963  3E83  082E               	movf	(_t100ms_solda+2)^(0+512),w
 13964  3E84  0140               	movlb	0	; select bank0
 13965  3E85  00B5               	movwf	___lldiv@dividend+2
 13966  3E86  0144               	movlb	4	; select bank4
 13967  3E87  082D               	movf	(_t100ms_solda+1)^(0+512),w
 13968  3E88  0140               	movlb	0	; select bank0
 13969  3E89  00B4               	movwf	___lldiv@dividend+1
 13970  3E8A  0144               	movlb	4	; select bank4
 13971  3E8B  082C               	movf	_t100ms_solda^(0+512),w
 13972  3E8C  0140               	movlb	0	; select bank0
 13973  3E8D  00B3               	movwf	___lldiv@dividend
 13974  3E8E  31CB  236E  31BE   	fcall	___lldiv
 13975  3E91  0140               	movlb	0	; select bank0
 13976  3E92  0832               	movf	?___lldiv+3,w
 13977  3E93  0141               	movlb	1	; select bank1
 13978  3E94  00A3               	movwf	(_totalCiclos$4265+3)^(0+128)
 13979  3E95  0140               	movlb	0	; select bank0
 13980  3E96  0831               	movf	?___lldiv+2,w
 13981  3E97  0141               	movlb	1	; select bank1
 13982  3E98  00A2               	movwf	(_totalCiclos$4265+2)^(0+128)
 13983  3E99  0140               	movlb	0	; select bank0
 13984  3E9A  0830               	movf	?___lldiv+1,w
 13985  3E9B  0141               	movlb	1	; select bank1
 13986  3E9C  00A1               	movwf	(_totalCiclos$4265+1)^(0+128)
 13987  3E9D  0140               	movlb	0	; select bank0
 13988  3E9E  082F               	movf	?___lldiv,w
 13989  3E9F  0141               	movlb	1	; select bank1
 13990  3EA0  00A0               	movwf	_totalCiclos$4265^(0+128)
 13991                           
 13992                           ;func.c: 1338: ltoa(str,t100ms_solda/10,10);
 13993  3EA1  0823               	movf	(_totalCiclos$4265+3)^(0+128),w
 13994  3EA2  0140               	movlb	0	; select bank0
 13995  3EA3  00CD               	movwf	ltoa@val+3
 13996  3EA4  0141               	movlb	1	; select bank1
 13997  3EA5  0822               	movf	(_totalCiclos$4265+2)^(0+128),w
 13998  3EA6  0140               	movlb	0	; select bank0
 13999  3EA7  00CC               	movwf	ltoa@val+2
 14000  3EA8  0141               	movlb	1	; select bank1
 14001  3EA9  0821               	movf	(_totalCiclos$4265+1)^(0+128),w
 14002  3EAA  0140               	movlb	0	; select bank0
 14003  3EAB  00CB               	movwf	ltoa@val+1
 14004  3EAC  0141               	movlb	1	; select bank1
 14005  3EAD  0820               	movf	_totalCiclos$4265^(0+128),w
 14006  3EAE  0140               	movlb	0	; select bank0
 14007  3EAF  00CA               	movwf	ltoa@val
 14008  3EB0  300A               	movlw	10
 14009  3EB1  00CE               	movwf	ltoa@base
 14010  3EB2  3000               	movlw	0
 14011  3EB3  00CF               	movwf	ltoa@base+1
 14012  3EB4  305C               	movlw	(low (_str| (0+512)))& (0+255)
 14013  3EB5  31D4  24DE  31BE   	fcall	_ltoa
 14014                           
 14015                           ;func.c: 1339: Lcd_Write_String(str);
 14016  3EB8  305C               	movlw	low _str
 14017  3EB9  0140               	movlb	0	; select bank0
 14018  3EBA  00B0               	movwf	Lcd_Write_String@a
 14019  3EBB  3002               	movlw	high _str
 14020  3EBC  00B1               	movwf	Lcd_Write_String@a+1
 14021  3EBD  31D1  2171  31BE   	fcall	_Lcd_Write_String
 14022                           
 14023                           ;func.c: 1340: Lcd_Write_String(".");
 14024  3EC0  301A               	movlw	low (STR_6| (0+32768))
 14025  3EC1  0140               	movlb	0	; select bank0
 14026  3EC2  00B0               	movwf	Lcd_Write_String@a
 14027  3EC3  30E9               	movlw	high (STR_6| (0+32768))
 14028  3EC4  00B1               	movwf	Lcd_Write_String@a+1
 14029  3EC5  31D1  2171  31BE   	fcall	_Lcd_Write_String
 14030                           
 14031                           ;func.c: 1341: ltoa(str,t100ms_solda%10,10);
 14032  3EC8  3000               	movlw	0
 14033  3EC9  0140               	movlb	0	; select bank0
 14034  3ECA  00AE               	movwf	___llmod@divisor+3
 14035  3ECB  3000               	movlw	0
 14036  3ECC  00AD               	movwf	___llmod@divisor+2
 14037  3ECD  3000               	movlw	0
 14038  3ECE  00AC               	movwf	___llmod@divisor+1
 14039  3ECF  300A               	movlw	10
 14040  3ED0  00AB               	movwf	___llmod@divisor
 14041  3ED1  0144               	movlb	4	; select bank4
 14042  3ED2  082F               	movf	(_t100ms_solda+3)^(0+512),w
 14043  3ED3  0140               	movlb	0	; select bank0
 14044  3ED4  00B2               	movwf	___llmod@dividend+3
 14045  3ED5  0144               	movlb	4	; select bank4
 14046  3ED6  082E               	movf	(_t100ms_solda+2)^(0+512),w
 14047  3ED7  0140               	movlb	0	; select bank0
 14048  3ED8  00B1               	movwf	___llmod@dividend+2
 14049  3ED9  0144               	movlb	4	; select bank4
 14050  3EDA  082D               	movf	(_t100ms_solda+1)^(0+512),w
 14051  3EDB  0140               	movlb	0	; select bank0
 14052  3EDC  00B0               	movwf	___llmod@dividend+1
 14053  3EDD  0144               	movlb	4	; select bank4
 14054  3EDE  082C               	movf	_t100ms_solda^(0+512),w
 14055  3EDF  0140               	movlb	0	; select bank0
 14056  3EE0  00AF               	movwf	___llmod@dividend
 14057  3EE1  31D7  2778  31BE   	fcall	___llmod
 14058  3EE4  0140               	movlb	0	; select bank0
 14059  3EE5  082E               	movf	?___llmod+3,w
 14060  3EE6  0141               	movlb	1	; select bank1
 14061  3EE7  00A7               	movwf	(_totalCiclos$4266+3)^(0+128)
 14062  3EE8  0140               	movlb	0	; select bank0
 14063  3EE9  082D               	movf	?___llmod+2,w
 14064  3EEA  0141               	movlb	1	; select bank1
 14065  3EEB  00A6               	movwf	(_totalCiclos$4266+2)^(0+128)
 14066  3EEC  0140               	movlb	0	; select bank0
 14067  3EED  082C               	movf	?___llmod+1,w
 14068  3EEE  0141               	movlb	1	; select bank1
 14069  3EEF  00A5               	movwf	(_totalCiclos$4266+1)^(0+128)
 14070  3EF0  0140               	movlb	0	; select bank0
 14071  3EF1  082B               	movf	?___llmod,w
 14072  3EF2  0141               	movlb	1	; select bank1
 14073  3EF3  00A4               	movwf	_totalCiclos$4266^(0+128)
 14074                           
 14075                           ;func.c: 1341: ltoa(str,t100ms_solda%10,10);
 14076  3EF4  0827               	movf	(_totalCiclos$4266+3)^(0+128),w
 14077  3EF5  0140               	movlb	0	; select bank0
 14078  3EF6  00CD               	movwf	ltoa@val+3
 14079  3EF7  0141               	movlb	1	; select bank1
 14080  3EF8  0826               	movf	(_totalCiclos$4266+2)^(0+128),w
 14081  3EF9  0140               	movlb	0	; select bank0
 14082  3EFA  00CC               	movwf	ltoa@val+2
 14083  3EFB  0141               	movlb	1	; select bank1
 14084  3EFC  0825               	movf	(_totalCiclos$4266+1)^(0+128),w
 14085  3EFD  0140               	movlb	0	; select bank0
 14086  3EFE  00CB               	movwf	ltoa@val+1
 14087  3EFF  0141               	movlb	1	; select bank1
 14088  3F00  0824               	movf	_totalCiclos$4266^(0+128),w
 14089  3F01  0140               	movlb	0	; select bank0
 14090  3F02  00CA               	movwf	ltoa@val
 14091  3F03  300A               	movlw	10
 14092  3F04  00CE               	movwf	ltoa@base
 14093  3F05  3000               	movlw	0
 14094  3F06  00CF               	movwf	ltoa@base+1
 14095  3F07  305C               	movlw	(low (_str| (0+512)))& (0+255)
 14096  3F08  31D4  24DE  31BE   	fcall	_ltoa
 14097                           
 14098                           ;func.c: 1342: Lcd_Write_String(str);
 14099  3F0B  305C               	movlw	low _str
 14100  3F0C  0140               	movlb	0	; select bank0
 14101  3F0D  00B0               	movwf	Lcd_Write_String@a
 14102  3F0E  3002               	movlw	high _str
 14103  3F0F  00B1               	movwf	Lcd_Write_String@a+1
 14104  3F10  31D1  2171  31BE   	fcall	_Lcd_Write_String
 14105                           
 14106                           ;func.c: 1343: Lcd_Write_String("s  ");
 14107  3F13  30FB               	movlw	low (STR_7| (0+32768))
 14108  3F14  0140               	movlb	0	; select bank0
 14109  3F15  00B0               	movwf	Lcd_Write_String@a
 14110  3F16  30E8               	movlw	high (STR_7| (0+32768))
 14111  3F17  00B1               	movwf	Lcd_Write_String@a+1
 14112  3F18  31D1  2171         	fcall	_Lcd_Write_String
 14113  3F1A  0008               	return
 14114  3F1B                     __end_of_totalCiclos:	
 14115                           
 14116                           	psect	text12
 14117  207D                     __ptext12:	
 14118 ;; *************** function _escreve_tempos *****************
 14119 ;; Defined at:
 14120 ;;		line 1775 in file "func.c"
 14121 ;; Parameters:    Size  Location     Type
 14122 ;;  s1              2   51[BANK0 ] PTR const unsigned char 
 14123 ;;		 -> idioma_str(34), salva_str(34), carrega_str(34), freq_ini_str(13), 
 14124 ;;		 -> ctrl_pecas_str(34), ctrl_solda_str(34), cont_pecas_str(34), tipo_maquina_str(34), 
 14125 ;;		 -> metal_str(34), fixacao_str(34), joule_str(34), solda_str(34), 
 14126 ;;		 -> descida_str(34), 
 14127 ;;  t               2   53[BANK0 ] unsigned int 
 14128 ;;  pag             1   55[BANK0 ] unsigned char 
 14129 ;; Auto vars:     Size  Location     Type
 14130 ;;		None
 14131 ;; Return value:  Size  Location     Type
 14132 ;;                  1    wreg      void 
 14133 ;; Registers used:
 14134 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14135 ;; Tracked objects:
 14136 ;;		On entry : 0/0
 14137 ;;		On exit  : 0/0
 14138 ;;		Unchanged: 0/0
 14139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14140 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14142 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14143 ;;      Totals:         0       5       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14144 ;;Total ram usage:        9 bytes
 14145 ;; Hardware stack levels used:    1
 14146 ;; Hardware stack levels required when called:    6
 14147 ;; This function calls:
 14148 ;;		___wmul
 14149 ;;		_ltoa
 14150 ;;		_strcat
 14151 ;;		_strcpy
 14152 ;; This function is called by:
 14153 ;;		_telas
 14154 ;; This function uses a non-reentrant model
 14155 ;;
 14156                           
 14157                           
 14158                           ;psect for function _escreve_tempos
 14159  207D                     _escreve_tempos:	
 14160                           
 14161                           ;func.c: 1776: strcpy(str1,s1);
 14162                           
 14163                           ;incstack = 0
 14164                           ; Regs used in _escreve_tempos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14165  207D  0140               	movlb	0	; select bank0
 14166  207E  0854               	movf	escreve_tempos@s1+1,w
 14167  207F  00B2               	movwf	strcpy@from+1
 14168  2080  0853               	movf	escreve_tempos@s1,w
 14169  2081  00B1               	movwf	strcpy@from
 14170  2082  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 14171  2083  31D1  211A  31A0   	fcall	_strcpy
 14172                           
 14173                           ;func.c: 1777: switch(pag){
 14174  2086  2AB7               	goto	l14612
 14175  2087                     l14556:	
 14176                           ;func.c: 1778: case TELA_TMP_LOAD:
 14177                           
 14178                           
 14179                           ;func.c: 1779: case TELA_TMP_SAVE:
 14180                           ;func.c: 1780: strcpy(str2,valor_a_str[idioma]);
 14181  2087  0143               	movlb	3	; select bank3
 14182  2088  085A               	movf	_idioma^(0+384),w
 14183  2089  0141               	movlb	1	; select bank1
 14184  208A  00A0               	movwf	??_escreve_tempos^(0+128)
 14185  208B  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14186  208C  0820               	movf	??_escreve_tempos^(0+128),w
 14187  208D  0140               	movlb	0	; select bank0
 14188  208E  00AB               	movwf	___wmul@multiplier
 14189  208F  0141               	movlb	1	; select bank1
 14190  2090  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14191  2091  0140               	movlb	0	; select bank0
 14192  2092  00AC               	movwf	___wmul@multiplier+1
 14193  2093  3011               	movlw	17
 14194  2094  00AD               	movwf	___wmul@multiplicand
 14195  2095  3000               	movlw	0
 14196  2096  00AE               	movwf	___wmul@multiplicand+1
 14197  2097  31D0  20FE  31A0   	fcall	___wmul
 14198  209A  30F2               	movlw	low (_valor_a_str| (0+32768))
 14199  209B  0141               	movlb	1	; select bank1
 14200  209C  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14201  209D  30DD               	movlw	high (_valor_a_str| (0+32768))
 14202  209E  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14203  209F  0140               	movlb	0	; select bank0
 14204  20A0  082B               	movf	?___wmul,w
 14205  20A1  0141               	movlb	1	; select bank1
 14206  20A2  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14207  20A3  0140               	movlb	0	; select bank0
 14208  20A4  00B1               	movwf	strcpy@from
 14209  20A5  082C               	movf	?___wmul+1,w
 14210  20A6  0141               	movlb	1	; select bank1
 14211  20A7  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14212  20A8  0140               	movlb	0	; select bank0
 14213  20A9  00B2               	movwf	strcpy@from+1
 14214  20AA  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14215  20AB  31D1  211A  31A0   	fcall	_strcpy
 14216                           
 14217                           ;func.c: 1781: ltoa(str,t,10);
 14218  20AE  0140               	movlb	0	; select bank0
 14219  20AF  0855               	movf	escreve_tempos@t,w
 14220  20B0  00CA               	movwf	ltoa@val
 14221  20B1  0856               	movf	escreve_tempos@t+1,w
 14222  20B2  00CB               	movwf	ltoa@val+1
 14223  20B3  01CC               	clrf	ltoa@val+2
 14224  20B4  01CD               	clrf	ltoa@val+3
 14225  20B5  300A               	movlw	10
 14226  20B6  00CE               	movwf	ltoa@base
 14227  20B7  3000               	movlw	0
 14228  20B8  00CF               	movwf	ltoa@base+1
 14229  20B9  305C               	movlw	(low (_str| (0+512)))& (0+255)
 14230  20BA  31D4  24DE  31A0   	fcall	_ltoa
 14231                           
 14232                           ;func.c: 1782: strcat(str2,str);
 14233  20BD  305C               	movlw	low _str
 14234  20BE  0140               	movlb	0	; select bank0
 14235  20BF  00B1               	movwf	strcat@from
 14236  20C0  3002               	movlw	high _str
 14237  20C1  00B2               	movwf	strcat@from+1
 14238  20C2  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14239  20C3  31D3  2381         	fcall	_strcat
 14240                           
 14241                           ;func.c: 1783: break;
 14242  20C5  0008               	return
 14243  20C6                     l1777:	
 14244                           ;func.c: 1784: case TELA_TIPO_SOLDA:
 14245                           
 14246                           
 14247                           ;func.c: 1785: if(!flag.energia)
 14248  20C6  0143               	movlb	3	; select bank3
 14249  20C7  182C               	btfsc	_flag^(0+384),0	;volatile
 14250  20C8  28E0               	goto	l14564
 14251                           
 14252                           ;func.c: 1786: strcpy(str2,tipo_tempo_str[idioma]);
 14253  20C9  085A               	movf	_idioma^(0+384),w
 14254  20CA  0141               	movlb	1	; select bank1
 14255  20CB  00A0               	movwf	??_escreve_tempos^(0+128)
 14256  20CC  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14257  20CD  0820               	movf	??_escreve_tempos^(0+128),w
 14258  20CE  0140               	movlb	0	; select bank0
 14259  20CF  00AB               	movwf	___wmul@multiplier
 14260  20D0  0141               	movlb	1	; select bank1
 14261  20D1  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14262  20D2  0140               	movlb	0	; select bank0
 14263  20D3  00AC               	movwf	___wmul@multiplier+1
 14264  20D4  3011               	movlw	17
 14265  20D5  00AD               	movwf	___wmul@multiplicand
 14266  20D6  3000               	movlw	0
 14267  20D7  00AE               	movwf	___wmul@multiplicand+1
 14268  20D8  31D0  20FE  31A0   	fcall	___wmul
 14269  20DB  308E               	movlw	low (_tipo_tempo_str| (0+32768))
 14270  20DC  0141               	movlb	1	; select bank1
 14271  20DD  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14272  20DE  30DB               	movlw	high (_tipo_tempo_str| (0+32768))
 14273  20DF  28F7               	goto	L37
 14274  20E0                     l14564:	
 14275                           
 14276                           ;func.c: 1787: else
 14277                           ;func.c: 1788: strcpy(str2,tipo_energia_str[idioma]);
 14278  20E0  0143               	movlb	3	; select bank3
 14279  20E1  085A               	movf	_idioma^(0+384),w
 14280  20E2  0141               	movlb	1	; select bank1
 14281  20E3  00A0               	movwf	??_escreve_tempos^(0+128)
 14282  20E4  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14283  20E5  0820               	movf	??_escreve_tempos^(0+128),w
 14284  20E6  0140               	movlb	0	; select bank0
 14285  20E7  00AB               	movwf	___wmul@multiplier
 14286  20E8  0141               	movlb	1	; select bank1
 14287  20E9  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14288  20EA  0140               	movlb	0	; select bank0
 14289  20EB  00AC               	movwf	___wmul@multiplier+1
 14290  20EC  3011               	movlw	17
 14291  20ED  00AD               	movwf	___wmul@multiplicand
 14292  20EE  3000               	movlw	0
 14293  20EF  00AE               	movwf	___wmul@multiplicand+1
 14294  20F0  31D0  20FE  31A0   	fcall	___wmul
 14295  20F3  30B0               	movlw	low (_tipo_energia_str| (0+32768))
 14296  20F4  0141               	movlb	1	; select bank1
 14297  20F5  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14298  20F6  30DB               	movlw	high (_tipo_energia_str| (0+32768))
 14299  20F7                     L37:	
 14300  20F7  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14301  20F8  0140               	movlb	0	; select bank0
 14302  20F9  082B               	movf	?___wmul,w
 14303  20FA  0141               	movlb	1	; select bank1
 14304  20FB  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14305  20FC  0140               	movlb	0	; select bank0
 14306  20FD  00B1               	movwf	strcpy@from
 14307  20FE  082C               	movf	?___wmul+1,w
 14308  20FF  0141               	movlb	1	; select bank1
 14309  2100  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14310  2101  0140               	movlb	0	; select bank0
 14311  2102  00B2               	movwf	strcpy@from+1
 14312  2103  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14313  2104  31D1  211A  31A0   	fcall	_strcpy
 14314                           
 14315                           ;func.c: 1789: if(flag.energiaErro)
 14316  2107  0143               	movlb	3	; select bank3
 14317  2108  1CAC               	btfss	_flag^(0+384),1	;volatile
 14318  2109  0008               	return
 14319                           
 14320                           ;func.c: 1790: strcat(str2,erro_energia_str[idioma]);
 14321  210A  085A               	movf	_idioma^(0+384),w
 14322  210B  0141               	movlb	1	; select bank1
 14323  210C  00A0               	movwf	??_escreve_tempos^(0+128)
 14324  210D  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14325  210E  0820               	movf	??_escreve_tempos^(0+128),w
 14326  210F  0140               	movlb	0	; select bank0
 14327  2110  00AB               	movwf	___wmul@multiplier
 14328  2111  0141               	movlb	1	; select bank1
 14329  2112  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14330  2113  0140               	movlb	0	; select bank0
 14331  2114  00AC               	movwf	___wmul@multiplier+1
 14332  2115  3011               	movlw	17
 14333  2116  00AD               	movwf	___wmul@multiplicand
 14334  2117  3000               	movlw	0
 14335  2118  00AE               	movwf	___wmul@multiplicand+1
 14336  2119  31D0  20FE  31A0   	fcall	___wmul
 14337  211C  307E               	movlw	low (_erro_energia_str| (0+32768))
 14338  211D  0141               	movlb	1	; select bank1
 14339  211E  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14340  211F  30DA               	movlw	high (_erro_energia_str| (0+32768))
 14341  2120  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14342  2121  0140               	movlb	0	; select bank0
 14343  2122  082B               	movf	?___wmul,w
 14344  2123  0141               	movlb	1	; select bank1
 14345  2124  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14346  2125  0140               	movlb	0	; select bank0
 14347  2126  00B1               	movwf	strcat@from
 14348  2127  082C               	movf	?___wmul+1,w
 14349  2128  0141               	movlb	1	; select bank1
 14350  2129  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14351  212A  0140               	movlb	0	; select bank0
 14352  212B  00B2               	movwf	strcat@from+1
 14353  212C  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14354  212D  31D3  2381         	fcall	_strcat
 14355                           
 14356                           ;func.c: 1791: break;
 14357  212F  0008               	return
 14358  2130                     l1781:	
 14359                           ;func.c: 1792: case TELA_TIPO_CONT:
 14360                           
 14361                           
 14362                           ;func.c: 1793: if(flag.regressivo)
 14363  2130  0143               	movlb	3	; select bank3
 14364  2131  1D2C               	btfss	_flag^(0+384),2	;volatile
 14365  2132  2959               	goto	l14572
 14366                           
 14367                           ;func.c: 1794: strcpy(str2,tipo_regress_str[idioma]);
 14368  2133  085A               	movf	_idioma^(0+384),w
 14369  2134  0141               	movlb	1	; select bank1
 14370  2135  00A0               	movwf	??_escreve_tempos^(0+128)
 14371  2136  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14372  2137  0820               	movf	??_escreve_tempos^(0+128),w
 14373  2138  0140               	movlb	0	; select bank0
 14374  2139  00AB               	movwf	___wmul@multiplier
 14375  213A  0141               	movlb	1	; select bank1
 14376  213B  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14377  213C  0140               	movlb	0	; select bank0
 14378  213D  00AC               	movwf	___wmul@multiplier+1
 14379  213E  3011               	movlw	17
 14380  213F  00AD               	movwf	___wmul@multiplicand
 14381  2140  3000               	movlw	0
 14382  2141  00AE               	movwf	___wmul@multiplicand+1
 14383  2142  31D0  20FE  31A0   	fcall	___wmul
 14384  2145  306C               	movlw	low (_tipo_regress_str| (0+32768))
 14385  2146  0141               	movlb	1	; select bank1
 14386  2147  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14387  2148  30DB               	movlw	high (_tipo_regress_str| (0+32768))
 14388  2149  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14389  214A  0140               	movlb	0	; select bank0
 14390  214B  082B               	movf	?___wmul,w
 14391  214C  0141               	movlb	1	; select bank1
 14392  214D  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14393  214E  0140               	movlb	0	; select bank0
 14394  214F  00B1               	movwf	strcpy@from
 14395  2150  082C               	movf	?___wmul+1,w
 14396  2151  0141               	movlb	1	; select bank1
 14397  2152  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14398  2153  0140               	movlb	0	; select bank0
 14399  2154  00B2               	movwf	strcpy@from+1
 14400  2155  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14401  2156  31D1  211A         	fcall	_strcpy
 14402  2158  0008               	return
 14403  2159                     l14572:	
 14404                           
 14405                           ;func.c: 1795: else
 14406                           ;func.c: 1796: strcpy(str2,tipo_progress_str[idioma]);
 14407  2159  0143               	movlb	3	; select bank3
 14408  215A  085A               	movf	_idioma^(0+384),w
 14409  215B  0141               	movlb	1	; select bank1
 14410  215C  00A0               	movwf	??_escreve_tempos^(0+128)
 14411  215D  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14412  215E  0820               	movf	??_escreve_tempos^(0+128),w
 14413  215F  0140               	movlb	0	; select bank0
 14414  2160  00AB               	movwf	___wmul@multiplier
 14415  2161  0141               	movlb	1	; select bank1
 14416  2162  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14417  2163  0140               	movlb	0	; select bank0
 14418  2164  00AC               	movwf	___wmul@multiplier+1
 14419  2165  3011               	movlw	17
 14420  2166  00AD               	movwf	___wmul@multiplicand
 14421  2167  3000               	movlw	0
 14422  2168  00AE               	movwf	___wmul@multiplicand+1
 14423  2169  31D0  20FE  31A0   	fcall	___wmul
 14424  216C  304A               	movlw	low (_tipo_progress_str| (0+32768))
 14425  216D  0141               	movlb	1	; select bank1
 14426  216E  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14427  216F  30DB               	movlw	high (_tipo_progress_str| (0+32768))
 14428  2170  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14429  2171  0140               	movlb	0	; select bank0
 14430  2172  082B               	movf	?___wmul,w
 14431  2173  0141               	movlb	1	; select bank1
 14432  2174  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14433  2175  0140               	movlb	0	; select bank0
 14434  2176  00B1               	movwf	strcpy@from
 14435  2177  082C               	movf	?___wmul+1,w
 14436  2178  0141               	movlb	1	; select bank1
 14437  2179  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14438  217A  0140               	movlb	0	; select bank0
 14439  217B  00B2               	movwf	strcpy@from+1
 14440  217C  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14441  217D  31D1  211A         	fcall	_strcpy
 14442                           
 14443                           ;func.c: 1797: break;
 14444  217F  0008               	return
 14445  2180                     l14574:	
 14446                           ;func.c: 1798: case TELA_TIPO_MAQU:
 14447                           
 14448                           
 14449                           ;func.c: 1799: if(t == PISTOLA_PULSADO)
 14450  2180  0140               	movlb	0	; select bank0
 14451  2181  0355               	decf	escreve_tempos@t,w
 14452  2182  0456               	iorwf	escreve_tempos@t+1,w
 14453  2183  1D03               	btfss	3,2
 14454  2184  29AC               	goto	l14578
 14455                           
 14456                           ;func.c: 1800: strcpy(str2,tipo_maquina1_str[idioma]);
 14457  2185  0143               	movlb	3	; select bank3
 14458  2186  085A               	movf	_idioma^(0+384),w
 14459  2187  0141               	movlb	1	; select bank1
 14460  2188  00A0               	movwf	??_escreve_tempos^(0+128)
 14461  2189  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14462  218A  0820               	movf	??_escreve_tempos^(0+128),w
 14463  218B  0140               	movlb	0	; select bank0
 14464  218C  00AB               	movwf	___wmul@multiplier
 14465  218D  0141               	movlb	1	; select bank1
 14466  218E  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14467  218F  0140               	movlb	0	; select bank0
 14468  2190  00AC               	movwf	___wmul@multiplier+1
 14469  2191  3011               	movlw	17
 14470  2192  00AD               	movwf	___wmul@multiplicand
 14471  2193  3000               	movlw	0
 14472  2194  00AE               	movwf	___wmul@multiplicand+1
 14473  2195  31D0  20FE  31A0   	fcall	___wmul
 14474  2198  3028               	movlw	low (_tipo_maquina1_str| (0+32768))
 14475  2199  0141               	movlb	1	; select bank1
 14476  219A  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14477  219B  30DB               	movlw	high (_tipo_maquina1_str| (0+32768))
 14478  219C  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14479  219D  0140               	movlb	0	; select bank0
 14480  219E  082B               	movf	?___wmul,w
 14481  219F  0141               	movlb	1	; select bank1
 14482  21A0  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14483  21A1  0140               	movlb	0	; select bank0
 14484  21A2  00B1               	movwf	strcpy@from
 14485  21A3  082C               	movf	?___wmul+1,w
 14486  21A4  0141               	movlb	1	; select bank1
 14487  21A5  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14488  21A6  0140               	movlb	0	; select bank0
 14489  21A7  00B2               	movwf	strcpy@from+1
 14490  21A8  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14491  21A9  31D1  211A         	fcall	_strcpy
 14492  21AB  0008               	return
 14493  21AC                     l14578:	
 14494                           
 14495                           ;func.c: 1801: else if(t == MAQUINA_PULSADO)
 14496  21AC  3002               	movlw	2
 14497  21AD  0140               	movlb	0	; select bank0
 14498  21AE  0655               	xorwf	escreve_tempos@t,w
 14499  21AF  0456               	iorwf	escreve_tempos@t+1,w
 14500  21B0  1D03               	btfss	3,2
 14501  21B1  29D9               	goto	l14582
 14502                           
 14503                           ;func.c: 1802: strcpy(str2,tipo_maquina2_str[idioma]);
 14504  21B2  0143               	movlb	3	; select bank3
 14505  21B3  085A               	movf	_idioma^(0+384),w
 14506  21B4  0141               	movlb	1	; select bank1
 14507  21B5  00A0               	movwf	??_escreve_tempos^(0+128)
 14508  21B6  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14509  21B7  0820               	movf	??_escreve_tempos^(0+128),w
 14510  21B8  0140               	movlb	0	; select bank0
 14511  21B9  00AB               	movwf	___wmul@multiplier
 14512  21BA  0141               	movlb	1	; select bank1
 14513  21BB  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14514  21BC  0140               	movlb	0	; select bank0
 14515  21BD  00AC               	movwf	___wmul@multiplier+1
 14516  21BE  3011               	movlw	17
 14517  21BF  00AD               	movwf	___wmul@multiplicand
 14518  21C0  3000               	movlw	0
 14519  21C1  00AE               	movwf	___wmul@multiplicand+1
 14520  21C2  31D0  20FE  31A0   	fcall	___wmul
 14521  21C5  3006               	movlw	low (_tipo_maquina2_str| (0+32768))
 14522  21C6  0141               	movlb	1	; select bank1
 14523  21C7  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14524  21C8  30DB               	movlw	high (_tipo_maquina2_str| (0+32768))
 14525  21C9  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14526  21CA  0140               	movlb	0	; select bank0
 14527  21CB  082B               	movf	?___wmul,w
 14528  21CC  0141               	movlb	1	; select bank1
 14529  21CD  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14530  21CE  0140               	movlb	0	; select bank0
 14531  21CF  00B1               	movwf	strcpy@from
 14532  21D0  082C               	movf	?___wmul+1,w
 14533  21D1  0141               	movlb	1	; select bank1
 14534  21D2  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14535  21D3  0140               	movlb	0	; select bank0
 14536  21D4  00B2               	movwf	strcpy@from+1
 14537  21D5  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14538  21D6  31D1  211A         	fcall	_strcpy
 14539  21D8  0008               	return
 14540  21D9                     l14582:	
 14541                           
 14542                           ;func.c: 1803: else if(t == MAQUINA_MM)
 14543  21D9  3003               	movlw	3
 14544  21DA  0140               	movlb	0	; select bank0
 14545  21DB  0655               	xorwf	escreve_tempos@t,w
 14546  21DC  0456               	iorwf	escreve_tempos@t+1,w
 14547  21DD  1D03               	btfss	3,2
 14548  21DE  0008               	return
 14549                           
 14550                           ;func.c: 1804: strcpy(str2,tipo_maquina3_str[idioma]);
 14551  21DF  0143               	movlb	3	; select bank3
 14552  21E0  085A               	movf	_idioma^(0+384),w
 14553  21E1  0141               	movlb	1	; select bank1
 14554  21E2  00A0               	movwf	??_escreve_tempos^(0+128)
 14555  21E3  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14556  21E4  0820               	movf	??_escreve_tempos^(0+128),w
 14557  21E5  0140               	movlb	0	; select bank0
 14558  21E6  00AB               	movwf	___wmul@multiplier
 14559  21E7  0141               	movlb	1	; select bank1
 14560  21E8  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14561  21E9  0140               	movlb	0	; select bank0
 14562  21EA  00AC               	movwf	___wmul@multiplier+1
 14563  21EB  3011               	movlw	17
 14564  21EC  00AD               	movwf	___wmul@multiplicand
 14565  21ED  3000               	movlw	0
 14566  21EE  00AE               	movwf	___wmul@multiplicand+1
 14567  21EF  31D0  20FE  31A0   	fcall	___wmul
 14568  21F2  30E4               	movlw	low (_tipo_maquina3_str| (0+32768))
 14569  21F3  0141               	movlb	1	; select bank1
 14570  21F4  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14571  21F5  30DA               	movlw	high (_tipo_maquina3_str| (0+32768))
 14572  21F6  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14573  21F7  0140               	movlb	0	; select bank0
 14574  21F8  082B               	movf	?___wmul,w
 14575  21F9  0141               	movlb	1	; select bank1
 14576  21FA  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14577  21FB  0140               	movlb	0	; select bank0
 14578  21FC  00B1               	movwf	strcpy@from
 14579  21FD  082C               	movf	?___wmul+1,w
 14580  21FE  0141               	movlb	1	; select bank1
 14581  21FF  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14582  2200  0140               	movlb	0	; select bank0
 14583  2201  00B2               	movwf	strcpy@from+1
 14584  2202  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14585  2203  31D1  211A         	fcall	_strcpy
 14586                           
 14587                           ;func.c: 1805: break;
 14588  2205  0008               	return
 14589  2206                     l14586:	
 14590                           ;func.c: 1806: case TELA_IDIOMA:
 14591                           
 14592                           
 14593                           ;func.c: 1807: strcpy(str2,tipo_idioma_str[idioma]);
 14594  2206  0143               	movlb	3	; select bank3
 14595  2207  085A               	movf	_idioma^(0+384),w
 14596  2208  0141               	movlb	1	; select bank1
 14597  2209  00A0               	movwf	??_escreve_tempos^(0+128)
 14598  220A  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14599  220B  0820               	movf	??_escreve_tempos^(0+128),w
 14600  220C  0140               	movlb	0	; select bank0
 14601  220D  00AB               	movwf	___wmul@multiplier
 14602  220E  0141               	movlb	1	; select bank1
 14603  220F  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14604  2210  0140               	movlb	0	; select bank0
 14605  2211  00AC               	movwf	___wmul@multiplier+1
 14606  2212  3011               	movlw	17
 14607  2213  00AD               	movwf	___wmul@multiplicand
 14608  2214  3000               	movlw	0
 14609  2215  00AE               	movwf	___wmul@multiplicand+1
 14610  2216  31D0  20FE  31A0   	fcall	___wmul
 14611  2219  30D2               	movlw	low (_tipo_idioma_str| (0+32768))
 14612  221A  0141               	movlb	1	; select bank1
 14613  221B  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14614  221C  30DB               	movlw	high (_tipo_idioma_str| (0+32768))
 14615  221D  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14616  221E  0140               	movlb	0	; select bank0
 14617  221F  082B               	movf	?___wmul,w
 14618  2220  0141               	movlb	1	; select bank1
 14619  2221  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14620  2222  0140               	movlb	0	; select bank0
 14621  2223  00B1               	movwf	strcpy@from
 14622  2224  082C               	movf	?___wmul+1,w
 14623  2225  0141               	movlb	1	; select bank1
 14624  2226  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14625  2227  0140               	movlb	0	; select bank0
 14626  2228  00B2               	movwf	strcpy@from+1
 14627  2229  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14628  222A  31D1  211A         	fcall	_strcpy
 14629                           
 14630                           ;func.c: 1808: break;
 14631  222C  0008               	return
 14632  222D                     l14588:	
 14633                           ;func.c: 1813: default:
 14634                           
 14635                           
 14636                           ;func.c: 1814: ltoa(str,tmp_soma,10);
 14637  222D  0143               	movlb	3	; select bank3
 14638  222E  0866               	movf	_tmp_soma^(0+384),w
 14639  222F  0140               	movlb	0	; select bank0
 14640  2230  00CA               	movwf	ltoa@val
 14641  2231  0143               	movlb	3	; select bank3
 14642  2232  0867               	movf	(_tmp_soma+1)^(0+384),w
 14643  2233  0140               	movlb	0	; select bank0
 14644  2234  00CB               	movwf	ltoa@val+1
 14645  2235  01CC               	clrf	ltoa@val+2
 14646  2236  01CD               	clrf	ltoa@val+3
 14647  2237  300A               	movlw	10
 14648  2238  00CE               	movwf	ltoa@base
 14649  2239  3000               	movlw	0
 14650  223A  00CF               	movwf	ltoa@base+1
 14651  223B  305C               	movlw	(low (_str| (0+512)))& (0+255)
 14652  223C  31D4  24DE  31A0   	fcall	_ltoa
 14653                           
 14654                           ;func.c: 1815: strcat(str1,str);
 14655  223F  305C               	movlw	low _str
 14656  2240  0140               	movlb	0	; select bank0
 14657  2241  00B1               	movwf	strcat@from
 14658  2242  3002               	movlw	high _str
 14659  2243  00B2               	movwf	strcat@from+1
 14660  2244  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 14661  2245  31D3  2381  31A0   	fcall	_strcat
 14662                           
 14663                           ;func.c: 1816: strcat(str1,")");
 14664  2248  30F9               	movlw	low ((STR_18+3)| (0+32768))
 14665  2249  0140               	movlb	0	; select bank0
 14666  224A  00B1               	movwf	strcat@from
 14667  224B  30E8               	movlw	high ((STR_18+3)| (0+32768))
 14668  224C  00B2               	movwf	strcat@from+1
 14669  224D  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 14670  224E  31D3  2381  31A0   	fcall	_strcat
 14671                           
 14672                           ;func.c: 1817: strcpy(str2,valor_a_str[idioma]);
 14673  2251  0143               	movlb	3	; select bank3
 14674  2252  085A               	movf	_idioma^(0+384),w
 14675  2253  0141               	movlb	1	; select bank1
 14676  2254  00A0               	movwf	??_escreve_tempos^(0+128)
 14677  2255  01A1               	clrf	(??_escreve_tempos^(0+128)+1)
 14678  2256  0820               	movf	??_escreve_tempos^(0+128),w
 14679  2257  0140               	movlb	0	; select bank0
 14680  2258  00AB               	movwf	___wmul@multiplier
 14681  2259  0141               	movlb	1	; select bank1
 14682  225A  0821               	movf	(??_escreve_tempos+1)^(0+128),w
 14683  225B  0140               	movlb	0	; select bank0
 14684  225C  00AC               	movwf	___wmul@multiplier+1
 14685  225D  3011               	movlw	17
 14686  225E  00AD               	movwf	___wmul@multiplicand
 14687  225F  3000               	movlw	0
 14688  2260  00AE               	movwf	___wmul@multiplicand+1
 14689  2261  31D0  20FE  31A0   	fcall	___wmul
 14690  2264  30F2               	movlw	low (_valor_a_str| (0+32768))
 14691  2265  0141               	movlb	1	; select bank1
 14692  2266  00A2               	movwf	(??_escreve_tempos+2)^(0+128)
 14693  2267  30DD               	movlw	high (_valor_a_str| (0+32768))
 14694  2268  00A3               	movwf	((??_escreve_tempos+2)^(0+128)+1)
 14695  2269  0140               	movlb	0	; select bank0
 14696  226A  082B               	movf	?___wmul,w
 14697  226B  0141               	movlb	1	; select bank1
 14698  226C  0722               	addwf	(??_escreve_tempos+2)^(0+128),w
 14699  226D  0140               	movlb	0	; select bank0
 14700  226E  00B1               	movwf	strcpy@from
 14701  226F  082C               	movf	?___wmul+1,w
 14702  2270  0141               	movlb	1	; select bank1
 14703  2271  3D23               	addwfc	(??_escreve_tempos+3)^(0+128),w
 14704  2272  0140               	movlb	0	; select bank0
 14705  2273  00B2               	movwf	strcpy@from+1
 14706  2274  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14707  2275  31D1  211A  31A0   	fcall	_strcpy
 14708                           
 14709                           ;func.c: 1818: ltoa(str,t,10);
 14710  2278  0140               	movlb	0	; select bank0
 14711  2279  0855               	movf	escreve_tempos@t,w
 14712  227A  00CA               	movwf	ltoa@val
 14713  227B  0856               	movf	escreve_tempos@t+1,w
 14714  227C  00CB               	movwf	ltoa@val+1
 14715  227D  01CC               	clrf	ltoa@val+2
 14716  227E  01CD               	clrf	ltoa@val+3
 14717  227F  300A               	movlw	10
 14718  2280  00CE               	movwf	ltoa@base
 14719  2281  3000               	movlw	0
 14720  2282  00CF               	movwf	ltoa@base+1
 14721  2283  305C               	movlw	(low (_str| (0+512)))& (0+255)
 14722  2284  31D4  24DE  31A0   	fcall	_ltoa
 14723                           
 14724                           ;func.c: 1819: strcat(str2,str);
 14725  2287  305C               	movlw	low _str
 14726  2288  0140               	movlb	0	; select bank0
 14727  2289  00B1               	movwf	strcat@from
 14728  228A  3002               	movlw	high _str
 14729  228B  00B2               	movwf	strcat@from+1
 14730  228C  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14731  228D  31D3  2381  31A0   	fcall	_strcat
 14732                           
 14733                           ;func.c: 1820: if(pag == TELA_TMP_JOULE)
 14734  2290  3003               	movlw	3
 14735  2291  0140               	movlb	0	; select bank0
 14736  2292  0657               	xorwf	escreve_tempos@pag,w
 14737  2293  1D03               	btfss	3,2
 14738  2294  2A9D               	goto	l14602
 14739                           
 14740                           ;func.c: 1821: strcat(str2,"J");
 14741  2295  3016               	movlw	low ((STR_8+1)| (0+32768))
 14742  2296  00B1               	movwf	strcat@from
 14743  2297  30E9               	movlw	high ((STR_8+1)| (0+32768))
 14744  2298  00B2               	movwf	strcat@from+1
 14745  2299  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14746  229A  31D3  2381         	fcall	_strcat
 14747  229C  0008               	return
 14748  229D                     l14602:	
 14749                           
 14750                           ;func.c: 1822: else if(pag == TELA_FREQ_INI)
 14751  229D  3009               	movlw	9
 14752  229E  0140               	movlb	0	; select bank0
 14753  229F  0657               	xorwf	escreve_tempos@pag,w
 14754  22A0  1D03               	btfss	3,2
 14755  22A1  2AAA               	goto	l14606
 14756                           
 14757                           ;func.c: 1823: strcat(str2,"Hz");
 14758  22A2  300C               	movlw	low ((STR_21+1)| (0+32768))
 14759  22A3  00B1               	movwf	strcat@from
 14760  22A4  30E9               	movlw	high ((STR_21+1)| (0+32768))
 14761  22A5  00B2               	movwf	strcat@from+1
 14762  22A6  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14763  22A7  31D3  2381         	fcall	_strcat
 14764  22A9  0008               	return
 14765  22AA                     l14606:	
 14766                           
 14767                           ;func.c: 1824: else if (pag != TELA_TMP_CONT)
 14768  22AA  3007               	movlw	7
 14769  22AB  0140               	movlb	0	; select bank0
 14770  22AC  0657               	xorwf	escreve_tempos@pag,w
 14771  22AD  1903               	btfsc	3,2
 14772  22AE  0008               	return
 14773                           
 14774                           ;func.c: 1825: strcat(str2,"ms");
 14775  22AF  3008               	movlw	low ((STR_9+1)| (0+32768))
 14776  22B0  00B1               	movwf	strcat@from
 14777  22B1  30E9               	movlw	high ((STR_9+1)| (0+32768))
 14778  22B2  00B2               	movwf	strcat@from+1
 14779  22B3  3040               	movlw	(low (_str2| (0+768)))& (0+255)
 14780  22B4  31D3  2381         	fcall	_strcat
 14781                           
 14782                           ;func.c: 1827: }
 14783                           
 14784                           ;func.c: 1826: break;
 14785  22B6  0008               	return
 14786  22B7                     l14612:	
 14787  22B7  0140               	movlb	0	; select bank0
 14788  22B8  0857               	movf	escreve_tempos@pag,w
 14789                           
 14790                           ; Switch size 1, requested type "space"
 14791                           ; Number of cases is 6, Range of values is 4 to 14
 14792                           ; switch strategies available:
 14793                           ; Name         Instructions Cycles
 14794                           ; simple_byte           19    10 (average)
 14795                           ; direct_byte           31     9 (fixed)
 14796                           ; jumptable            263     9 (fixed)
 14797                           ;	Chosen strategy is simple_byte
 14798  22B9  3A04               	xorlw	4	; case 4
 14799  22BA  1903               	skipnz
 14800  22BB  28C6               	goto	l1777
 14801  22BC  3A0C               	xorlw	12	; case 8
 14802  22BD  1903               	skipnz
 14803  22BE  2930               	goto	l1781
 14804  22BF  3A02               	xorlw	2	; case 10
 14805  22C0  1903               	skipnz
 14806  22C1  2980               	goto	l14574
 14807  22C2  3A01               	xorlw	1	; case 11
 14808  22C3  1903               	skipnz
 14809  22C4  2887               	goto	l14556
 14810  22C5  3A07               	xorlw	7	; case 12
 14811  22C6  1903               	skipnz
 14812  22C7  2887               	goto	l14556
 14813  22C8  3A02               	xorlw	2	; case 14
 14814  22C9  1903               	skipnz
 14815  22CA  2A06               	goto	l14586
 14816  22CB  2A2D               	goto	l14588
 14817  22CC  0008               	return
 14818  22CD                     __end_of_escreve_tempos:	
 14819                           
 14820                           	psect	text13
 14821  511A                     __ptext13:	
 14822 ;; *************** function _strcpy *****************
 14823 ;; Defined at:
 14824 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 14825 ;; Parameters:    Size  Location     Type
 14826 ;;  to              1    wreg     PTR unsigned char 
 14827 ;;		 -> str2(20), str1(20), 
 14828 ;;  from            2   17[BANK0 ] PTR const unsigned char 
 14829 ;;		 -> teste_US1_str(34), tipo_idioma_str(34), tipo_maquina3_str(34), tipo_maquina2_str(34), 
 14830 ;;		 -> tipo_maquina1_str(34), tipo_progress_str(34), tipo_regress_str(34), tipo_energia_str(34), 
 14831 ;;		 -> tipo_tempo_str(34), valor_a_str(34), idioma_str(34), salva_str(34), 
 14832 ;;		 -> receita_salva_str(34), carrega_str(34), receita_carreg_str(34), freq_ini_str(13), 
 14833 ;;		 -> ctrl_pecas_str(34), ctrl_solda_str(34), cont_pecas_str(34), tipo_maquina_str(34), 
 14834 ;;		 -> metal_str(34), fixacao_str(34), joule_str(34), solda_str(34), 
 14835 ;;		 -> descida_str(34), 
 14836 ;; Auto vars:     Size  Location     Type
 14837 ;;  to              1   21[BANK0 ] PTR unsigned char 
 14838 ;;		 -> str2(20), str1(20), 
 14839 ;;  cp              1   20[BANK0 ] PTR unsigned char 
 14840 ;;		 -> str2(20), str1(20), 
 14841 ;; Return value:  Size  Location     Type
 14842 ;;                  1    wreg      PTR unsigned char 
 14843 ;; Registers used:
 14844 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14845 ;; Tracked objects:
 14846 ;;		On entry : 0/0
 14847 ;;		On exit  : 0/0
 14848 ;;		Unchanged: 0/0
 14849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14850 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14851 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14852 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14853 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14854 ;;Total ram usage:        5 bytes
 14855 ;; Hardware stack levels used:    1
 14856 ;; Hardware stack levels required when called:    3
 14857 ;; This function calls:
 14858 ;;		Nothing
 14859 ;; This function is called by:
 14860 ;;		_telas
 14861 ;;		_escreve_tempos
 14862 ;;		_teste_US
 14863 ;; This function uses a non-reentrant model
 14864 ;;
 14865                           
 14866                           
 14867                           ;psect for function _strcpy
 14868  511A                     _strcpy:	
 14869                           
 14870                           ;incstack = 0
 14871                           ; Regs used in _strcpy: [wreg-fsr1h+status,2+status,0+pclath]
 14872                           ;strcpy@to stored from wreg
 14873  511A  0140               	movlb	0	; select bank0
 14874  511B  00B5               	movwf	strcpy@to
 14875  511C  0835               	movf	strcpy@to,w
 14876  511D  00B3               	movwf	??_strcpy
 14877  511E  0833               	movf	??_strcpy,w
 14878  511F  00B4               	movwf	strcpy@cp
 14879  5120                     l14136:	
 14880  5120  0834               	movf	strcpy@cp,w
 14881  5121  0086               	movwf	6
 14882  5122  3003               	movlw	3	; select bank6/7
 14883  5123  0087               	movwf	7
 14884  5124  0831               	movf	strcpy@from,w
 14885  5125  0084               	movwf	4
 14886  5126  0832               	movf	strcpy@from+1,w
 14887  5127  0085               	movwf	5
 14888  5128  0800               	movf	0,w	;code access
 14889  5129  3FC0               	movwi [0]fsr1
 14890  512A  0889               	movf	9,f
 14891  512B  1903               	btfsc	3,2
 14892  512C  0008               	return
 14893  512D  3001               	movlw	1
 14894  512E  00B3               	movwf	??_strcpy
 14895  512F  0833               	movf	??_strcpy,w
 14896  5130  07B4               	addwf	strcpy@cp,f
 14897  5131  3001               	movlw	1
 14898  5132  07B1               	addwf	strcpy@from,f
 14899  5133  3000               	movlw	0
 14900  5134  3DB2               	addwfc	strcpy@from+1,f
 14901  5135  2920               	goto	l14136
 14902  5136                     __end_of_strcpy:	
 14903                           ;	Return value of _strcpy is never used
 14904                           
 14905                           
 14906                           	psect	text14
 14907  5381                     __ptext14:	
 14908 ;; *************** function _strcat *****************
 14909 ;; Defined at:
 14910 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  to              1    wreg     PTR unsigned char 
 14913 ;;		 -> str2(20), str1(20), 
 14914 ;;  from            2   17[BANK0 ] PTR const unsigned char 
 14915 ;;		 -> STR_24(4), STR_22(4), STR_21(4), STR_17(3), 
 14916 ;;		 -> STR_16(3), STR_15(2), STR_14(2), erro_energia_str(34), 
 14917 ;;		 -> str(20), 
 14918 ;; Auto vars:     Size  Location     Type
 14919 ;;  to              1   21[BANK0 ] PTR unsigned char 
 14920 ;;		 -> str2(20), str1(20), 
 14921 ;;  cp              1   20[BANK0 ] PTR unsigned char 
 14922 ;;		 -> str2(20), str1(20), 
 14923 ;; Return value:  Size  Location     Type
 14924 ;;                  1    wreg      PTR unsigned char 
 14925 ;; Registers used:
 14926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 14927 ;; Tracked objects:
 14928 ;;		On entry : 0/0
 14929 ;;		On exit  : 0/0
 14930 ;;		Unchanged: 0/0
 14931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 14932 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14933 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14934 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14935 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 14936 ;;Total ram usage:        5 bytes
 14937 ;; Hardware stack levels used:    1
 14938 ;; Hardware stack levels required when called:    3
 14939 ;; This function calls:
 14940 ;;		Nothing
 14941 ;; This function is called by:
 14942 ;;		_escreve_tempos
 14943 ;;		_teste_US
 14944 ;; This function uses a non-reentrant model
 14945 ;;
 14946                           
 14947                           
 14948                           ;psect for function _strcat
 14949  5381                     _strcat:	
 14950                           
 14951                           ;incstack = 0
 14952                           ; Regs used in _strcat: [wreg-fsr1h+status,2+status,0+pclath]
 14953                           ;strcat@to stored from wreg
 14954  5381  0140               	movlb	0	; select bank0
 14955  5382  00B5               	movwf	strcat@to
 14956  5383  0835               	movf	strcat@to,w
 14957  5384  00B3               	movwf	??_strcat
 14958  5385  0833               	movf	??_strcat,w
 14959  5386  00B4               	movwf	strcat@cp
 14960  5387                     l14142:	
 14961  5387  0834               	movf	strcat@cp,w
 14962  5388  0086               	movwf	6
 14963  5389  3003               	movlw	3	; select bank6/7
 14964  538A  0087               	movwf	7
 14965  538B  0801               	movf	1,w
 14966  538C  1903               	btfsc	3,2
 14967  538D  2B9B               	goto	l14148
 14968  538E  3001               	movlw	1
 14969  538F  00B3               	movwf	??_strcat
 14970  5390  0833               	movf	??_strcat,w
 14971  5391  07B4               	addwf	strcat@cp,f
 14972  5392  2B87               	goto	l14142
 14973  5393                     l14144:	
 14974  5393  3001               	movlw	1
 14975  5394  00B3               	movwf	??_strcat
 14976  5395  0833               	movf	??_strcat,w
 14977  5396  07B4               	addwf	strcat@cp,f
 14978  5397  3001               	movlw	1
 14979  5398  07B1               	addwf	strcat@from,f
 14980  5399  3000               	movlw	0
 14981  539A  3DB2               	addwfc	strcat@from+1,f
 14982  539B                     l14148:	
 14983  539B  0834               	movf	strcat@cp,w
 14984  539C  0086               	movwf	6
 14985  539D  3003               	movlw	3	; select bank6/7
 14986  539E  0087               	movwf	7
 14987  539F  0831               	movf	strcat@from,w
 14988  53A0  0084               	movwf	4
 14989  53A1  0832               	movf	strcat@from+1,w
 14990  53A2  0085               	movwf	5
 14991  53A3  0800               	movf	0,w	;code access
 14992  53A4  3FC0               	movwi [0]fsr1
 14993  53A5  0889               	movf	9,f
 14994  53A6  1903               	btfsc	3,2
 14995  53A7  0008               	return
 14996  53A8  2B93               	goto	l14144
 14997  53A9                     __end_of_strcat:	
 14998                           ;	Return value of _strcat is never used
 14999                           
 15000                           
 15001                           	psect	text15
 15002  2B4C                     __ptext15:	
 15003 ;; *************** function _config_maq *****************
 15004 ;; Defined at:
 15005 ;;		line 1074 in file "func.c"
 15006 ;; Parameters:    Size  Location     Type
 15007 ;;  x               1    wreg     enum E15124
 15008 ;; Auto vars:     Size  Location     Type
 15009 ;;  x               1   18[BANK0 ] enum E15124
 15010 ;;  i               1   20[BANK0 ] unsigned char 
 15011 ;;  i               1   19[BANK0 ] unsigned char 
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  1    wreg      void 
 15014 ;; Registers used:
 15015 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15022 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15023 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15024 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15025 ;;Total ram usage:        4 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; Hardware stack levels required when called:    6
 15028 ;; This function calls:
 15029 ;;		_config_entrada
 15030 ;;		_config_saidas
 15031 ;; This function is called by:
 15032 ;;		_main
 15033 ;;		_telas
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           
 15038                           ;psect for function _config_maq
 15039  2B4C                     _config_maq:	
 15040                           
 15041                           ;incstack = 0
 15042                           ; Regs used in _config_maq: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15043                           ;config_maq@x stored from wreg
 15044  2B4C  0140               	movlb	0	; select bank0
 15045  2B4D  00B2               	movwf	config_maq@x
 15046                           
 15047                           ;func.c: 1075: for(char i = 0;i<=ENTRADA_MAX;i++){
 15048  2B4E  01B3               	clrf	config_maq@i
 15049  2B4F  3006               	movlw	6
 15050  2B50  0233               	subwf	config_maq@i,w
 15051  2B51  1803               	btfsc	3,0
 15052  2B52  2B6C               	goto	l14246
 15053  2B53                     l14240:	
 15054                           
 15055                           ;func.c: 1076: byte_in[in[i]] = 0;
 15056  2B53  0833               	movf	config_maq@i,w
 15057  2B54  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 15058  2B55  0086               	movwf	6
 15059  2B56  3002               	movlw	2	; select bank5/6
 15060  2B57  0087               	movwf	7
 15061  2B58  0801               	movf	1,w
 15062  2B59  3EA8               	addlw	(low (_byte_in| (0+512)))& (0+255)
 15063  2B5A  0086               	movwf	6
 15064  2B5B  3002               	movlw	2	; select bank5/6
 15065  2B5C  0087               	movwf	7
 15066  2B5D  0181               	clrf	1
 15067                           
 15068                           ;func.c: 1077: in[i] = 0;
 15069  2B5E  0833               	movf	config_maq@i,w
 15070  2B5F  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 15071  2B60  0086               	movwf	6
 15072  2B61  3002               	movlw	2	; select bank5/6
 15073  2B62  0087               	movwf	7
 15074  2B63  0181               	clrf	1
 15075  2B64  3001               	movlw	1
 15076  2B65  00B1               	movwf	??_config_maq
 15077  2B66  0831               	movf	??_config_maq,w
 15078  2B67  07B3               	addwf	config_maq@i,f
 15079  2B68  3006               	movlw	6
 15080  2B69  0233               	subwf	config_maq@i,w
 15081  2B6A  1C03               	skipc
 15082  2B6B  2B53               	goto	l14240
 15083  2B6C                     l14246:	
 15084                           
 15085                           ;func.c: 1078: }
 15086                           ;func.c: 1079: for(char i = 0;i<=SAIDA_MAX;i++){
 15087  2B6C  01B4               	clrf	config_maq@i_2523
 15088  2B6D  3005               	movlw	5
 15089  2B6E  0234               	subwf	config_maq@i_2523,w
 15090  2B6F  1803               	btfsc	3,0
 15091  2B70  2B8A               	goto	l14258
 15092  2B71                     l14252:	
 15093                           
 15094                           ;func.c: 1080: byte_out[out[i]] = 0;
 15095  2B71  0834               	movf	config_maq@i_2523,w
 15096  2B72  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 15097  2B73  0086               	movwf	6
 15098  2B74  3002               	movlw	2	; select bank5/6
 15099  2B75  0087               	movwf	7
 15100  2B76  0801               	movf	1,w
 15101  2B77  3EA0               	addlw	(low (_byte_out| (0+512)))& (0+255)
 15102  2B78  0086               	movwf	6
 15103  2B79  3002               	movlw	2	; select bank5/6
 15104  2B7A  0087               	movwf	7
 15105  2B7B  0181               	clrf	1
 15106                           
 15107                           ;func.c: 1081: out[i] = 0;
 15108  2B7C  0834               	movf	config_maq@i_2523,w
 15109  2B7D  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 15110  2B7E  0086               	movwf	6
 15111  2B7F  3002               	movlw	2	; select bank5/6
 15112  2B80  0087               	movwf	7
 15113  2B81  0181               	clrf	1
 15114  2B82  3001               	movlw	1
 15115  2B83  00B1               	movwf	??_config_maq
 15116  2B84  0831               	movf	??_config_maq,w
 15117  2B85  07B4               	addwf	config_maq@i_2523,f
 15118  2B86  3005               	movlw	5
 15119  2B87  0234               	subwf	config_maq@i_2523,w
 15120  2B88  1C03               	skipc
 15121  2B89  2B71               	goto	l14252
 15122  2B8A                     l14258:	
 15123                           
 15124                           ;func.c: 1082: }
 15125                           ;func.c: 1083: cfg.value = 0;
 15126  2B8A  3000               	movlw	0
 15127  2B8B  0143               	movlb	3	; select bank3
 15128  2B8C  00B3               	movwf	(_cfg+3)^(0+384)
 15129  2B8D  3000               	movlw	0
 15130  2B8E  00B2               	movwf	(_cfg+2)^(0+384)
 15131  2B8F  3000               	movlw	0
 15132  2B90  00B1               	movwf	(_cfg+1)^(0+384)
 15133  2B91  3000               	movlw	0
 15134  2B92  00B0               	movwf	_cfg^(0+384)
 15135                           
 15136                           ;func.c: 1084: flag_in.value = 0;
 15137  2B93  01CC               	clrf	_flag_in^(0+384)	;volatile
 15138  2B94  01CD               	clrf	(_flag_in+1)^(0+384)	;volatile
 15139                           
 15140                           ;func.c: 1085: switch(x){
 15141  2B95  2CA6               	goto	l14298
 15142  2B96                     l14262:	
 15143                           ;func.c: 1086: case PISTOLA_PULSADO:
 15144                           
 15145                           
 15146                           ;func.c: 1087: config_entrada(0,IN5);
 15147  2B96  3005               	movlw	5
 15148  2B97  0140               	movlb	0	; select bank0
 15149  2B98  00B1               	movwf	??_config_maq
 15150  2B99  0831               	movf	??_config_maq,w
 15151  2B9A  00AD               	movwf	config_entrada@ch
 15152  2B9B  3000               	movlw	0
 15153  2B9C  31C1  21C9  31AB   	fcall	_config_entrada
 15154                           
 15155                           ;func.c: 1088: config_entrada(ACIONAMENTO1,IN4);
 15156  2B9F  3004               	movlw	4
 15157  2BA0  0140               	movlb	0	; select bank0
 15158  2BA1  00B1               	movwf	??_config_maq
 15159  2BA2  0831               	movf	??_config_maq,w
 15160  2BA3  00AD               	movwf	config_entrada@ch
 15161  2BA4  3002               	movlw	2
 15162  2BA5  31C1  21C9  31AB   	fcall	_config_entrada
 15163                           
 15164                           ;func.c: 1089: config_entrada(0,IN3);
 15165  2BA8  3003               	movlw	3
 15166  2BA9  0140               	movlb	0	; select bank0
 15167  2BAA  00B1               	movwf	??_config_maq
 15168  2BAB  0831               	movf	??_config_maq,w
 15169  2BAC  00AD               	movwf	config_entrada@ch
 15170  2BAD  3000               	movlw	0
 15171  2BAE  31C1  21C9  31AB   	fcall	_config_entrada
 15172                           
 15173                           ;func.c: 1090: config_entrada(RESET,IN2);
 15174  2BB1  3002               	movlw	2
 15175  2BB2  0140               	movlb	0	; select bank0
 15176  2BB3  00B1               	movwf	??_config_maq
 15177  2BB4  0831               	movf	??_config_maq,w
 15178  2BB5  00AD               	movwf	config_entrada@ch
 15179  2BB6  3004               	movlw	4
 15180  2BB7  31C1  21C9  31AB   	fcall	_config_entrada
 15181                           
 15182                           ;func.c: 1091: config_entrada(0,IN1);
 15183  2BBA  0140               	movlb	0	; select bank0
 15184  2BBB  01AD               	clrf	config_entrada@ch
 15185  2BBC  0AAD               	incf	config_entrada@ch,f
 15186  2BBD  3000               	movlw	0
 15187  2BBE  31C1  21C9  31AB   	fcall	_config_entrada
 15188                           
 15189                           ;func.c: 1093: config_saidas(RST_INV,OUT1);
 15190  2BC1  0140               	movlb	0	; select bank0
 15191  2BC2  01AE               	clrf	config_saidas@ch
 15192  2BC3  0AAE               	incf	config_saidas@ch,f
 15193  2BC4  3007               	movlw	7
 15194  2BC5  31CC  246B  31AB   	fcall	_config_saidas
 15195                           
 15196                           ;func.c: 1095: if(flag.energiaErro)
 15197  2BC8  0143               	movlb	3	; select bank3
 15198  2BC9  1CAC               	btfss	_flag^(0+384),1	;volatile
 15199  2BCA  2BD2               	goto	l14268
 15200                           
 15201                           ;func.c: 1096: config_saidas(ERRO_ENE,OUT3);
 15202  2BCB  3003               	movlw	3
 15203  2BCC  0140               	movlb	0	; select bank0
 15204  2BCD  00B1               	movwf	??_config_maq
 15205  2BCE  0831               	movf	??_config_maq,w
 15206  2BCF  00AE               	movwf	config_saidas@ch
 15207  2BD0  3004               	movlw	4
 15208  2BD1  2BD8               	goto	L38
 15209  2BD2                     l14268:	
 15210                           
 15211                           ;func.c: 1097: else
 15212                           ;func.c: 1098: config_saidas(STATUS_HF,OUT3);
 15213  2BD2  3003               	movlw	3
 15214  2BD3  0140               	movlb	0	; select bank0
 15215  2BD4  00B1               	movwf	??_config_maq
 15216  2BD5  0831               	movf	??_config_maq,w
 15217  2BD6  00AE               	movwf	config_saidas@ch
 15218  2BD7  3006               	movlw	6
 15219  2BD8                     L38:	
 15220  2BD8  31CC  246B  31AB   	fcall	_config_saidas
 15221                           
 15222                           ;func.c: 1099: config_saidas(ERRO,OUT4);
 15223  2BDB  3004               	movlw	4
 15224  2BDC  0140               	movlb	0	; select bank0
 15225  2BDD  00B1               	movwf	??_config_maq
 15226  2BDE  0831               	movf	??_config_maq,w
 15227  2BDF  00AE               	movwf	config_saidas@ch
 15228  2BE0  3003               	movlw	3
 15229  2BE1  31CC  246B         	fcall	_config_saidas
 15230                           
 15231                           ;func.c: 1100: cfg.stop_release = 1;
 15232  2BE3  0143               	movlb	3	; select bank3
 15233  2BE4  1432               	bsf	(_cfg^(0+384)+2),0
 15234                           
 15235                           ;func.c: 1101: break;
 15236  2BE5  0008               	return
 15237  2BE6                     l14272:	
 15238                           ;func.c: 1102: case MAQUINA_PULSADO:
 15239                           
 15240                           
 15241                           ;func.c: 1103: config_entrada(EMERGENCIA,IN5);
 15242  2BE6  3005               	movlw	5
 15243  2BE7  0140               	movlb	0	; select bank0
 15244  2BE8  00B1               	movwf	??_config_maq
 15245  2BE9  0831               	movf	??_config_maq,w
 15246  2BEA  00AD               	movwf	config_entrada@ch
 15247  2BEB  3001               	movlw	1
 15248  2BEC  31C1  21C9  31AB   	fcall	_config_entrada
 15249                           
 15250                           ;func.c: 1104: config_entrada(ACIONAMENTO1,IN4);
 15251  2BEF  3004               	movlw	4
 15252  2BF0  0140               	movlb	0	; select bank0
 15253  2BF1  00B1               	movwf	??_config_maq
 15254  2BF2  0831               	movf	??_config_maq,w
 15255  2BF3  00AD               	movwf	config_entrada@ch
 15256  2BF4  3002               	movlw	2
 15257  2BF5  31C1  21C9  31AB   	fcall	_config_entrada
 15258                           
 15259                           ;func.c: 1105: config_entrada(ACIONAMENTO2,IN3);
 15260  2BF8  3003               	movlw	3
 15261  2BF9  0140               	movlb	0	; select bank0
 15262  2BFA  00B1               	movwf	??_config_maq
 15263  2BFB  0831               	movf	??_config_maq,w
 15264  2BFC  00AD               	movwf	config_entrada@ch
 15265  2BFD  3003               	movlw	3
 15266  2BFE  31C1  21C9  31AB   	fcall	_config_entrada
 15267                           
 15268                           ;func.c: 1106: config_entrada(RESET,IN2);
 15269  2C01  3002               	movlw	2
 15270  2C02  0140               	movlb	0	; select bank0
 15271  2C03  00B1               	movwf	??_config_maq
 15272  2C04  0831               	movf	??_config_maq,w
 15273  2C05  00AD               	movwf	config_entrada@ch
 15274  2C06  3004               	movlw	4
 15275  2C07  31C1  21C9  31AB   	fcall	_config_entrada
 15276                           
 15277                           ;func.c: 1107: config_entrada(0,IN1);
 15278  2C0A  0140               	movlb	0	; select bank0
 15279  2C0B  01AD               	clrf	config_entrada@ch
 15280  2C0C  0AAD               	incf	config_entrada@ch,f
 15281  2C0D  3000               	movlw	0
 15282  2C0E  31C1  21C9  31AB   	fcall	_config_entrada
 15283                           
 15284                           ;func.c: 1109: config_saidas(RST_INV,OUT1);
 15285  2C11  0140               	movlb	0	; select bank0
 15286  2C12  01AE               	clrf	config_saidas@ch
 15287  2C13  0AAE               	incf	config_saidas@ch,f
 15288  2C14  3007               	movlw	7
 15289  2C15  31CC  246B  31AB   	fcall	_config_saidas
 15290                           
 15291                           ;func.c: 1110: config_saidas(PNE_DESCE,OUT2);
 15292  2C18  3002               	movlw	2
 15293  2C19  0140               	movlb	0	; select bank0
 15294  2C1A  00B1               	movwf	??_config_maq
 15295  2C1B  0831               	movf	??_config_maq,w
 15296  2C1C  00AE               	movwf	config_saidas@ch
 15297  2C1D  3001               	movlw	1
 15298  2C1E  31CC  246B  31AB   	fcall	_config_saidas
 15299                           
 15300                           ;func.c: 1111: if(flag.energiaErro)
 15301  2C21  0143               	movlb	3	; select bank3
 15302  2C22  1CAC               	btfss	_flag^(0+384),1	;volatile
 15303  2C23  2C2B               	goto	l14278
 15304                           
 15305                           ;func.c: 1112: config_saidas(ERRO_ENE,OUT3);
 15306  2C24  3003               	movlw	3
 15307  2C25  0140               	movlb	0	; select bank0
 15308  2C26  00B1               	movwf	??_config_maq
 15309  2C27  0831               	movf	??_config_maq,w
 15310  2C28  00AE               	movwf	config_saidas@ch
 15311  2C29  3004               	movlw	4
 15312  2C2A  2C31               	goto	L39
 15313  2C2B                     l14278:	
 15314                           
 15315                           ;func.c: 1113: else
 15316                           ;func.c: 1114: config_saidas(STATUS_GERADOR,OUT3);
 15317  2C2B  3003               	movlw	3
 15318  2C2C  0140               	movlb	0	; select bank0
 15319  2C2D  00B1               	movwf	??_config_maq
 15320  2C2E  0831               	movf	??_config_maq,w
 15321  2C2F  00AE               	movwf	config_saidas@ch
 15322  2C30  3005               	movlw	5
 15323  2C31                     L39:	
 15324  2C31  31CC  246B  31AB   	fcall	_config_saidas
 15325                           
 15326                           ;func.c: 1115: config_saidas(ERRO,OUT4);
 15327  2C34  3004               	movlw	4
 15328  2C35  0140               	movlb	0	; select bank0
 15329  2C36  00B1               	movwf	??_config_maq
 15330  2C37  0831               	movf	??_config_maq,w
 15331  2C38  00AE               	movwf	config_saidas@ch
 15332  2C39  3003               	movlw	3
 15333  2C3A  31CC  246B  31AB   	fcall	_config_saidas
 15334                           
 15335                           ;func.c: 1117: if(modo == CONTINUO) cfg.stop_release = 1;
 15336  2C3D  3002               	movlw	2
 15337  2C3E  0143               	movlb	3	; select bank3
 15338  2C3F  065C               	xorwf	_modo^(0+384),w
 15339  2C40  1D03               	btfss	3,2
 15340  2C41  2C44               	goto	l1519
 15341  2C42  1432               	bsf	(_cfg^(0+384)+2),0
 15342  2C43  0008               	return
 15343  2C44                     l1519:	
 15344                           
 15345                           ;func.c: 1118: else cfg.stop_release = 0;
 15346  2C44  1032               	bcf	(_cfg^(0+384)+2),0
 15347                           
 15348                           ;func.c: 1119: break;
 15349  2C45  0008               	return
 15350  2C46                     l14284:	
 15351                           ;func.c: 1120: case MAQUINA_MM:
 15352                           
 15353                           
 15354                           ;func.c: 1121: config_entrada(EMERGENCIA,IN5);
 15355  2C46  3005               	movlw	5
 15356  2C47  0140               	movlb	0	; select bank0
 15357  2C48  00B1               	movwf	??_config_maq
 15358  2C49  0831               	movf	??_config_maq,w
 15359  2C4A  00AD               	movwf	config_entrada@ch
 15360  2C4B  3001               	movlw	1
 15361  2C4C  31C1  21C9  31AB   	fcall	_config_entrada
 15362                           
 15363                           ;func.c: 1122: config_entrada(ACIONAMENTO1,IN4);
 15364  2C4F  3004               	movlw	4
 15365  2C50  0140               	movlb	0	; select bank0
 15366  2C51  00B1               	movwf	??_config_maq
 15367  2C52  0831               	movf	??_config_maq,w
 15368  2C53  00AD               	movwf	config_entrada@ch
 15369  2C54  3002               	movlw	2
 15370  2C55  31C1  21C9  31AB   	fcall	_config_entrada
 15371                           
 15372                           ;func.c: 1123: config_entrada(ACIONAMENTO2,IN3);
 15373  2C58  3003               	movlw	3
 15374  2C59  0140               	movlb	0	; select bank0
 15375  2C5A  00B1               	movwf	??_config_maq
 15376  2C5B  0831               	movf	??_config_maq,w
 15377  2C5C  00AD               	movwf	config_entrada@ch
 15378  2C5D  3003               	movlw	3
 15379  2C5E  31C1  21C9  31AB   	fcall	_config_entrada
 15380                           
 15381                           ;func.c: 1124: config_entrada(METAL,IN2);
 15382  2C61  3002               	movlw	2
 15383  2C62  0140               	movlb	0	; select bank0
 15384  2C63  00B1               	movwf	??_config_maq
 15385  2C64  0831               	movf	??_config_maq,w
 15386  2C65  00AD               	movwf	config_entrada@ch
 15387  2C66  3005               	movlw	5
 15388  2C67  31C1  21C9  31AB   	fcall	_config_entrada
 15389                           
 15390                           ;func.c: 1125: config_entrada(0,IN1);
 15391  2C6A  0140               	movlb	0	; select bank0
 15392  2C6B  01AD               	clrf	config_entrada@ch
 15393  2C6C  0AAD               	incf	config_entrada@ch,f
 15394  2C6D  3000               	movlw	0
 15395  2C6E  31C1  21C9  31AB   	fcall	_config_entrada
 15396                           
 15397                           ;func.c: 1127: config_saidas(RST_INV,OUT1);
 15398  2C71  0140               	movlb	0	; select bank0
 15399  2C72  01AE               	clrf	config_saidas@ch
 15400  2C73  0AAE               	incf	config_saidas@ch,f
 15401  2C74  3007               	movlw	7
 15402  2C75  31CC  246B  31AB   	fcall	_config_saidas
 15403                           
 15404                           ;func.c: 1128: config_saidas(PNE_DESCE,OUT2);
 15405  2C78  3002               	movlw	2
 15406  2C79  0140               	movlb	0	; select bank0
 15407  2C7A  00B1               	movwf	??_config_maq
 15408  2C7B  0831               	movf	??_config_maq,w
 15409  2C7C  00AE               	movwf	config_saidas@ch
 15410  2C7D  3001               	movlw	1
 15411  2C7E  31CC  246B  31AB   	fcall	_config_saidas
 15412                           
 15413                           ;func.c: 1129: if(flag.energiaErro)
 15414  2C81  0143               	movlb	3	; select bank3
 15415  2C82  1CAC               	btfss	_flag^(0+384),1	;volatile
 15416  2C83  2C8B               	goto	l14290
 15417                           
 15418                           ;func.c: 1130: config_saidas(ERRO_ENE,OUT3);
 15419  2C84  3003               	movlw	3
 15420  2C85  0140               	movlb	0	; select bank0
 15421  2C86  00B1               	movwf	??_config_maq
 15422  2C87  0831               	movf	??_config_maq,w
 15423  2C88  00AE               	movwf	config_saidas@ch
 15424  2C89  3004               	movlw	4
 15425  2C8A  2C91               	goto	L40
 15426  2C8B                     l14290:	
 15427                           
 15428                           ;func.c: 1131: else
 15429                           ;func.c: 1132: config_saidas(STATUS_GERADOR,OUT3);
 15430  2C8B  3003               	movlw	3
 15431  2C8C  0140               	movlb	0	; select bank0
 15432  2C8D  00B1               	movwf	??_config_maq
 15433  2C8E  0831               	movf	??_config_maq,w
 15434  2C8F  00AE               	movwf	config_saidas@ch
 15435  2C90  3005               	movlw	5
 15436  2C91                     L40:	
 15437  2C91  31CC  246B  31AB   	fcall	_config_saidas
 15438                           
 15439                           ;func.c: 1133: config_saidas(ERRO,OUT4);
 15440  2C94  3004               	movlw	4
 15441  2C95  0140               	movlb	0	; select bank0
 15442  2C96  00B1               	movwf	??_config_maq
 15443  2C97  0831               	movf	??_config_maq,w
 15444  2C98  00AE               	movwf	config_saidas@ch
 15445  2C99  3003               	movlw	3
 15446  2C9A  31CC  246B  31AB   	fcall	_config_saidas
 15447                           
 15448                           ;func.c: 1134: if(modo == CONTINUO) cfg.stop_release = 1;
 15449  2C9D  3002               	movlw	2
 15450  2C9E  0143               	movlb	3	; select bank3
 15451  2C9F  065C               	xorwf	_modo^(0+384),w
 15452  2CA0  1D03               	btfss	3,2
 15453  2CA1  2CA4               	goto	l1524
 15454  2CA2  1432               	bsf	(_cfg^(0+384)+2),0
 15455  2CA3  0008               	return
 15456  2CA4                     l1524:	
 15457                           
 15458                           ;func.c: 1135: else cfg.stop_release = 0;
 15459  2CA4  1032               	bcf	(_cfg^(0+384)+2),0
 15460                           
 15461                           ;func.c: 1137: }
 15462                           
 15463                           ;func.c: 1136: break;
 15464  2CA5  0008               	return
 15465  2CA6                     l14298:	
 15466  2CA6  0140               	movlb	0	; select bank0
 15467  2CA7  0832               	movf	config_maq@x,w
 15468                           
 15469                           ; Switch size 1, requested type "space"
 15470                           ; Number of cases is 3, Range of values is 1 to 3
 15471                           ; switch strategies available:
 15472                           ; Name         Instructions Cycles
 15473                           ; simple_byte           10     6 (average)
 15474                           ; direct_byte           15     9 (fixed)
 15475                           ; jumptable            263     9 (fixed)
 15476                           ;	Chosen strategy is simple_byte
 15477  2CA8  3A01               	xorlw	1	; case 1
 15478  2CA9  1903               	skipnz
 15479  2CAA  2B96               	goto	l14262
 15480  2CAB  3A03               	xorlw	3	; case 2
 15481  2CAC  1903               	skipnz
 15482  2CAD  2BE6               	goto	l14272
 15483  2CAE  3A01               	xorlw	1	; case 3
 15484  2CAF  1903               	skipnz
 15485  2CB0  2C46               	goto	l14284
 15486  2CB1  2CB2               	goto	l1526
 15487  2CB2                     l1526:	
 15488  2CB2  0008               	return
 15489  2CB3                     __end_of_config_maq:	
 15490                           
 15491                           	psect	text16
 15492  508C                     __ptext16:	
 15493 ;; *************** function _addr_receitas *****************
 15494 ;; Defined at:
 15495 ;;		line 1830 in file "func.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;  addr            1    wreg     unsigned char 
 15498 ;;  tempo           1   11[BANK0 ] unsigned char 
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;  addr            1   13[BANK0 ] unsigned char 
 15501 ;; Return value:  Size  Location     Type
 15502 ;;                  1    wreg      unsigned char 
 15503 ;; Registers used:
 15504 ;;		wreg, status,2, status,0
 15505 ;; Tracked objects:
 15506 ;;		On entry : 0/0
 15507 ;;		On exit  : 0/0
 15508 ;;		Unchanged: 0/0
 15509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15510 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15511 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15512 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15513 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15514 ;;Total ram usage:        3 bytes
 15515 ;; Hardware stack levels used:    1
 15516 ;; Hardware stack levels required when called:    3
 15517 ;; This function calls:
 15518 ;;		Nothing
 15519 ;; This function is called by:
 15520 ;;		_telas
 15521 ;; This function uses a non-reentrant model
 15522 ;;
 15523                           
 15524                           
 15525                           ;psect for function _addr_receitas
 15526  508C                     _addr_receitas:	
 15527                           
 15528                           ;incstack = 0
 15529                           ; Regs used in _addr_receitas: [wreg+status,2+status,0]
 15530                           ;addr_receitas@addr stored from wreg
 15531  508C  0140               	movlb	0	; select bank0
 15532  508D  00AD               	movwf	addr_receitas@addr
 15533                           
 15534                           ;func.c: 1831: return (9 + tempo + (addr*16));
 15535  508E  082D               	movf	addr_receitas@addr,w
 15536  508F  00AC               	movwf	??_addr_receitas
 15537  5090  3003               	movlw	3
 15538  5091                     u15395:	
 15539  5091  35AC               	lslf	??_addr_receitas,f
 15540  5092  3EFF               	addlw	-1
 15541  5093  1D03               	skipz
 15542  5094  2891               	goto	u15395
 15543  5095  352C               	lslf	??_addr_receitas,w
 15544  5096  072B               	addwf	addr_receitas@tempo,w
 15545  5097  3E09               	addlw	9
 15546  5098  0008               	return
 15547  5099                     __end_of_addr_receitas:	
 15548                           
 15549                           	psect	text17
 15550  0A4C                     __ptext17:	
 15551 ;; *************** function _ini_ee_tempos *****************
 15552 ;; Defined at:
 15553 ;;		line 2648 in file "func.c"
 15554 ;; Parameters:    Size  Location     Type
 15555 ;;  t               3   51[BANK1 ] float 
 15556 ;;  tipo            1   54[BANK1 ] enum E15124
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;  i               1   16[BANK2 ] unsigned char 
 15559 ;;  _num            8   17[BANK2 ] int [4]
 15560 ;;  K               3   13[BANK2 ] float 
 15561 ;;  k_int           2    9[BANK2 ] int 
 15562 ;;  b1              1   12[BANK2 ] unsigned char 
 15563 ;;  b2              1   11[BANK2 ] unsigned char 
 15564 ;; Return value:  Size  Location     Type
 15565 ;;                  1    wreg      void 
 15566 ;; Registers used:
 15567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 15568 ;; Tracked objects:
 15569 ;;		On entry : 0/0
 15570 ;;		On exit  : 0/0
 15571 ;;		Unchanged: 0/0
 15572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 15573 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15574 ;;      Locals:         0       0       0      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15575 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15576 ;;      Totals:         0       0      10      25       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 15577 ;;Total ram usage:       35 bytes
 15578 ;; Hardware stack levels used:    1
 15579 ;; Hardware stack levels required when called:    8
 15580 ;; This function calls:
 15581 ;;		_Lcd_Clear
 15582 ;;		_Lcd_White_Center_String
 15583 ;;		___awmod
 15584 ;;		___awtoft
 15585 ;;		___ftadd
 15586 ;;		___ftdiv
 15587 ;;		___ftmul
 15588 ;;		___ftneg
 15589 ;;		___fttol
 15590 ;;		___wmul
 15591 ;;		_bip_tecla
 15592 ;;		_carrega_EEPROM
 15593 ;;		_carrega_EEPROM32
 15594 ;;		_eeprom_read
 15595 ;;		_eeprom_write
 15596 ;;		_get_temp
 15597 ;;		_salva_EEPROM
 15598 ;;		_salva_EEPROM32
 15599 ;;		_selectModo
 15600 ;;		_teclado
 15601 ;; This function is called by:
 15602 ;;		_main
 15603 ;; This function uses a non-reentrant model
 15604 ;;
 15605                           
 15606                           
 15607                           ;psect for function _ini_ee_tempos
 15608  0A4C                     _ini_ee_tempos:	
 15609                           
 15610                           ;func.c: 2649: char b1 = teclado();
 15611                           
 15612                           ;incstack = 0
 15613                           ; Regs used in _ini_ee_tempos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 15614  0A4C  31C2  22CC  318A   	fcall	_teclado
 15615  0A4F  0141               	movlb	1	; select bank1
 15616  0A50  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15617  0A51  0857               	movf	??_ini_ee_tempos^(0+128),w
 15618  0A52  0142               	movlb	2	; select bank2
 15619  0A53  00AC               	movwf	ini_ee_tempos@b1^(0+256)
 15620                           
 15621                           ;func.c: 2650: char b2 = teclado();
 15622  0A54  31C2  22CC  318A   	fcall	_teclado
 15623  0A57  0141               	movlb	1	; select bank1
 15624  0A58  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15625  0A59  0857               	movf	??_ini_ee_tempos^(0+128),w
 15626  0A5A  0142               	movlb	2	; select bank2
 15627  0A5B  00AB               	movwf	ini_ee_tempos@b2^(0+256)
 15628                           
 15629                           ;func.c: 2651: if(b1 != b2){
 15630  0A5C  082C               	movf	ini_ee_tempos@b1^(0+256),w
 15631  0A5D  062B               	xorwf	ini_ee_tempos@b2^(0+256),w
 15632  0A5E  1903               	skipnz
 15633  0A5F  2A62               	goto	l17240
 15634                           
 15635                           ;func.c: 2652: b1 = 0;
 15636  0A60  01AC               	clrf	ini_ee_tempos@b1^(0+256)
 15637                           
 15638                           ;func.c: 2653: b2 = 0;
 15639  0A61  01AB               	clrf	ini_ee_tempos@b2^(0+256)
 15640  0A62                     l17240:	
 15641                           
 15642                           ;func.c: 2654: }
 15643                           ;func.c: 2657: if(eeprom_read(0)){
 15644  0A62  3000               	movlw	0
 15645  0A63  31E1  2112  318A   	fcall	_eeprom_read
 15646  0A66  3A00               	xorlw	0
 15647  0A67  1903               	skipnz
 15648  0A68  2EAE               	goto	l17280
 15649                           
 15650                           ;func.c: 2659: _delay((unsigned long)((1000)*(20000000/4000.0)));
 15651  0A69  301A               	movlw	26
 15652  0A6A  0141               	movlb	1	; select bank1
 15653  0A6B  00D8               	movwf	(??_ini_ee_tempos^(0+128)+1)
 15654  0A6C  305E               	movlw	94
 15655  0A6D  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15656  0A6E  306E               	movlw	110
 15657  0A6F                     u20687:	
 15658  0A6F  0B89               	decfsz	9,f
 15659  0A70  2A6F               	goto	u20687
 15660  0A71  0BD7               	decfsz	??_ini_ee_tempos^(0+128),f
 15661  0A72  2A6F               	goto	u20687
 15662  0A73  0BD8               	decfsz	(??_ini_ee_tempos^(0+128)+1),f
 15663  0A74  2A6F               	goto	u20687
 15664  0A75  0000               	nop
 15665                           
 15666                           ;func.c: 2660: LATBbits.LATB7 = 1;
 15667  0A76  0140               	movlb	0	; select bank0
 15668  0A77  1797               	bsf	23,7	;volatile
 15669  0A78  0064               	clrwdt	;# 
 15670                           
 15671                           ;func.c: 2662: for(unsigned char i = 0; i<0xFF;i++){
 15672  0A79  0142               	movlb	2	; select bank2
 15673  0A7A  01B0               	clrf	ini_ee_tempos@i^(0+256)
 15674  0A7B                     L43:	
 15675  0A7B  0A30               	incf	ini_ee_tempos@i^(0+256),w
 15676  0A7C  1903               	btfsc	3,2
 15677  0A7D  2A9D               	goto	l17266
 15678  0A7E  0064               	clrwdt	;# 
 15679                           
 15680                           ;func.c: 2664: eeprom_write(i,0);
 15681  0A7F  0140               	movlb	0	; select bank0
 15682  0A80  01AB               	clrf	eeprom_write@value
 15683  0A81  0142               	movlb	2	; select bank2
 15684  0A82  0830               	movf	ini_ee_tempos@i^(0+256),w
 15685  0A83  31D2  2299  318A   	fcall	_eeprom_write
 15686  0A86  3001               	movlw	1
 15687  0A87  0141               	movlb	1	; select bank1
 15688  0A88  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15689  0A89  0857               	movf	??_ini_ee_tempos^(0+128),w
 15690  0A8A  0142               	movlb	2	; select bank2
 15691  0A8B  07B0               	addwf	ini_ee_tempos@i^(0+256),f
 15692  0A8C  2A7B               	goto	L43
 15693  0A8D                     l17258:	
 15694                           ;func.c: 2667: case SOW280:
 15695                           
 15696                           ;func.c: 2665: }
 15697                           ;func.c: 2666: switch (SOW280){
 15698                           
 15699                           
 15700                           ;func.c: 2668: case SOW160:
 15701                           ;func.c: 2669: freq_inicial = 20100;
 15702  0A8D  3084               	movlw	132
 15703  0A8E  0143               	movlb	3	; select bank3
 15704  0A8F  00B6               	movwf	_freq_inicial^(0+384)
 15705  0A90  304E               	movlw	78
 15706  0A91  2A9B               	goto	L42
 15707  0A92                     l17260:	
 15708                           ;func.c: 2671: case SOW120:
 15709                           
 15710                           ;func.c: 2670: break;
 15711                           
 15712                           
 15713                           ;func.c: 2672: case SOW100:
 15714                           ;func.c: 2673: freq_inicial = 35100;
 15715  0A92  301C               	movlw	28
 15716  0A93  0143               	movlb	3	; select bank3
 15717  0A94  00B6               	movwf	_freq_inicial^(0+384)
 15718  0A95  3089               	movlw	137
 15719  0A96  2A9B               	goto	L42
 15720  0A97                     l17262:	
 15721                           ;func.c: 2675: case SOWESP:
 15722                           
 15723                           ;func.c: 2674: break;
 15724                           
 15725                           
 15726                           ;func.c: 2676: freq_inicial = 15100;
 15727  0A97  30FC               	movlw	252
 15728  0A98  0143               	movlb	3	; select bank3
 15729  0A99  00B6               	movwf	_freq_inicial^(0+384)
 15730  0A9A  303A               	movlw	58
 15731  0A9B                     L42:	
 15732  0A9B  00B7               	movwf	(_freq_inicial^(0+384)+1)
 15733                           
 15734                           ;func.c: 2678: }
 15735                           
 15736                           ;func.c: 2677: break;
 15737  0A9C  2AA7               	goto	l17268
 15738  0A9D                     l17266:	
 15739  0A9D  3000               	movlw	0
 15740                           
 15741                           ; Switch size 1, requested type "space"
 15742                           ; Number of cases is 5, Range of values is 0 to 4
 15743                           ; switch strategies available:
 15744                           ; Name         Instructions Cycles
 15745                           ; direct_byte           16     6 (fixed)
 15746                           ; simple_byte           16     9 (average)
 15747                           ; jumptable            260     6 (fixed)
 15748                           ;	Chosen strategy is direct_byte
 15749  0A9E  0084               	movwf	4
 15750  0A9F  3005               	movlw	5
 15751  0AA0  0204               	subwf	4,w
 15752  0AA1  1803               	skipnc
 15753  0AA2  2AA7               	goto	l17268
 15754  0AA3  31E1               	movlp	high S18604
 15755  0AA4  3504               	lslf	4,w
 15756  0AA5  3EF5               	addlw	low S18604
 15757  0AA6  0082               	movwf	2
 15758  0AA7                     l17268:	
 15759                           
 15760                           ;func.c: 2680: salva_EEPROM(200,200);
 15761  0AA7  30C8               	movlw	200
 15762  0AA8  0140               	movlb	0	; select bank0
 15763  0AA9  00AE               	movwf	salva_EEPROM@valor
 15764  0AAA  3000               	movlw	0
 15765  0AAB  00AF               	movwf	salva_EEPROM@valor+1
 15766  0AAC  30C8               	movlw	200
 15767  0AAD  0141               	movlb	1	; select bank1
 15768  0AAE  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15769  0AAF  0857               	movf	??_ini_ee_tempos^(0+128),w
 15770  0AB0  0140               	movlb	0	; select bank0
 15771  0AB1  00B0               	movwf	salva_EEPROM@address
 15772  0AB2  31D5  250D  318A   	fcall	_salva_EEPROM
 15773                           
 15774                           ;func.c: 2681: salva_EEPROM(1000,202);
 15775  0AB5  30E8               	movlw	232
 15776  0AB6  0140               	movlb	0	; select bank0
 15777  0AB7  00AE               	movwf	salva_EEPROM@valor
 15778  0AB8  3003               	movlw	3
 15779  0AB9  00AF               	movwf	salva_EEPROM@valor+1
 15780  0ABA  30CA               	movlw	202
 15781  0ABB  0141               	movlb	1	; select bank1
 15782  0ABC  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15783  0ABD  0857               	movf	??_ini_ee_tempos^(0+128),w
 15784  0ABE  0140               	movlb	0	; select bank0
 15785  0ABF  00B0               	movwf	salva_EEPROM@address
 15786  0AC0  31D5  250D  318A   	fcall	_salva_EEPROM
 15787                           
 15788                           ;func.c: 2682: salva_EEPROM(1000,204);
 15789  0AC3  30E8               	movlw	232
 15790  0AC4  0140               	movlb	0	; select bank0
 15791  0AC5  00AE               	movwf	salva_EEPROM@valor
 15792  0AC6  3003               	movlw	3
 15793  0AC7  00AF               	movwf	salva_EEPROM@valor+1
 15794  0AC8  30CC               	movlw	204
 15795  0AC9  0141               	movlb	1	; select bank1
 15796  0ACA  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15797  0ACB  0857               	movf	??_ini_ee_tempos^(0+128),w
 15798  0ACC  0140               	movlb	0	; select bank0
 15799  0ACD  00B0               	movwf	salva_EEPROM@address
 15800  0ACE  31D5  250D  318A   	fcall	_salva_EEPROM
 15801                           
 15802                           ;func.c: 2683: salva_EEPROM(200,206);
 15803  0AD1  30C8               	movlw	200
 15804  0AD2  0140               	movlb	0	; select bank0
 15805  0AD3  00AE               	movwf	salva_EEPROM@valor
 15806  0AD4  3000               	movlw	0
 15807  0AD5  00AF               	movwf	salva_EEPROM@valor+1
 15808  0AD6  30CE               	movlw	206
 15809  0AD7  0141               	movlb	1	; select bank1
 15810  0AD8  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15811  0AD9  0857               	movf	??_ini_ee_tempos^(0+128),w
 15812  0ADA  0140               	movlb	0	; select bank0
 15813  0ADB  00B0               	movwf	salva_EEPROM@address
 15814  0ADC  31D5  250D  318A   	fcall	_salva_EEPROM
 15815                           
 15816                           ;func.c: 2684: salva_EEPROM(10,208);
 15817  0ADF  300A               	movlw	10
 15818  0AE0  0140               	movlb	0	; select bank0
 15819  0AE1  00AE               	movwf	salva_EEPROM@valor
 15820  0AE2  3000               	movlw	0
 15821  0AE3  00AF               	movwf	salva_EEPROM@valor+1
 15822  0AE4  30D0               	movlw	208
 15823  0AE5  0141               	movlb	1	; select bank1
 15824  0AE6  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15825  0AE7  0857               	movf	??_ini_ee_tempos^(0+128),w
 15826  0AE8  0140               	movlb	0	; select bank0
 15827  0AE9  00B0               	movwf	salva_EEPROM@address
 15828  0AEA  31D5  250D  318A   	fcall	_salva_EEPROM
 15829                           
 15830                           ;func.c: 2685: salva_EEPROM(freq_inicial,218);
 15831  0AED  0143               	movlb	3	; select bank3
 15832  0AEE  0837               	movf	(_freq_inicial+1)^(0+384),w
 15833  0AEF  0140               	movlb	0	; select bank0
 15834  0AF0  00AF               	movwf	salva_EEPROM@valor+1
 15835  0AF1  0143               	movlb	3	; select bank3
 15836  0AF2  0836               	movf	_freq_inicial^(0+384),w
 15837  0AF3  0140               	movlb	0	; select bank0
 15838  0AF4  00AE               	movwf	salva_EEPROM@valor
 15839  0AF5  30DA               	movlw	218
 15840  0AF6  0141               	movlb	1	; select bank1
 15841  0AF7  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15842  0AF8  0857               	movf	??_ini_ee_tempos^(0+128),w
 15843  0AF9  0140               	movlb	0	; select bank0
 15844  0AFA  00B0               	movwf	salva_EEPROM@address
 15845  0AFB  31D5  250D  318A   	fcall	_salva_EEPROM
 15846                           
 15847                           ;func.c: 2686: salva_EEPROM32(0,210);
 15848  0AFE  3000               	movlw	0
 15849  0AFF  0140               	movlb	0	; select bank0
 15850  0B00  00B1               	movwf	salva_EEPROM32@valor+3
 15851  0B01  3000               	movlw	0
 15852  0B02  00B0               	movwf	salva_EEPROM32@valor+2
 15853  0B03  3000               	movlw	0
 15854  0B04  00AF               	movwf	salva_EEPROM32@valor+1
 15855  0B05  3000               	movlw	0
 15856  0B06  00AE               	movwf	salva_EEPROM32@valor
 15857  0B07  30D2               	movlw	210
 15858  0B08  0141               	movlb	1	; select bank1
 15859  0B09  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15860  0B0A  0857               	movf	??_ini_ee_tempos^(0+128),w
 15861  0B0B  0140               	movlb	0	; select bank0
 15862  0B0C  00B2               	movwf	salva_EEPROM32@address
 15863  0B0D  31CD  2527  318A   	fcall	_salva_EEPROM32
 15864                           
 15865                           ;func.c: 2687: salva_EEPROM32(200,214);
 15866  0B10  3000               	movlw	0
 15867  0B11  0140               	movlb	0	; select bank0
 15868  0B12  00B1               	movwf	salva_EEPROM32@valor+3
 15869  0B13  3000               	movlw	0
 15870  0B14  00B0               	movwf	salva_EEPROM32@valor+2
 15871  0B15  3000               	movlw	0
 15872  0B16  00AF               	movwf	salva_EEPROM32@valor+1
 15873  0B17  30C8               	movlw	200
 15874  0B18  00AE               	movwf	salva_EEPROM32@valor
 15875  0B19  30D6               	movlw	214
 15876  0B1A  0141               	movlb	1	; select bank1
 15877  0B1B  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15878  0B1C  0857               	movf	??_ini_ee_tempos^(0+128),w
 15879  0B1D  0140               	movlb	0	; select bank0
 15880  0B1E  00B2               	movwf	salva_EEPROM32@address
 15881  0B1F  31CD  2527  318A   	fcall	_salva_EEPROM32
 15882                           
 15883                           ;func.c: 2689: eeprom_write(196,modo);
 15884  0B22  0143               	movlb	3	; select bank3
 15885  0B23  085C               	movf	_modo^(0+384),w
 15886  0B24  0141               	movlb	1	; select bank1
 15887  0B25  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15888  0B26  0857               	movf	??_ini_ee_tempos^(0+128),w
 15889  0B27  0140               	movlb	0	; select bank0
 15890  0B28  00AB               	movwf	eeprom_write@value
 15891  0B29  30C4               	movlw	196
 15892  0B2A  31D2  2299  318A   	fcall	_eeprom_write
 15893                           
 15894                           ;func.c: 2690: eeprom_write(198,tipo);
 15895  0B2D  0141               	movlb	1	; select bank1
 15896  0B2E  0856               	movf	ini_ee_tempos@tipo^(0+128),w
 15897  0B2F  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15898  0B30  0857               	movf	??_ini_ee_tempos^(0+128),w
 15899  0B31  0140               	movlb	0	; select bank0
 15900  0B32  00AB               	movwf	eeprom_write@value
 15901  0B33  30C6               	movlw	198
 15902  0B34  31D2  2299  318A   	fcall	_eeprom_write
 15903                           
 15904                           ;func.c: 2691: eeprom_write(250,idioma);
 15905  0B37  0143               	movlb	3	; select bank3
 15906  0B38  085A               	movf	_idioma^(0+384),w
 15907  0B39  0141               	movlb	1	; select bank1
 15908  0B3A  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15909  0B3B  0857               	movf	??_ini_ee_tempos^(0+128),w
 15910  0B3C  0140               	movlb	0	; select bank0
 15911  0B3D  00AB               	movwf	eeprom_write@value
 15912  0B3E  30FA               	movlw	250
 15913  0B3F  31D2  2299  318A   	fcall	_eeprom_write
 15914                           
 15915                           ;func.c: 2693: salva_EEPROM32(0,1);
 15916  0B42  3000               	movlw	0
 15917  0B43  0140               	movlb	0	; select bank0
 15918  0B44  00B1               	movwf	salva_EEPROM32@valor+3
 15919  0B45  3000               	movlw	0
 15920  0B46  00B0               	movwf	salva_EEPROM32@valor+2
 15921  0B47  3000               	movlw	0
 15922  0B48  00AF               	movwf	salva_EEPROM32@valor+1
 15923  0B49  3000               	movlw	0
 15924  0B4A  00AE               	movwf	salva_EEPROM32@valor
 15925  0B4B  01B2               	clrf	salva_EEPROM32@address
 15926  0B4C  0AB2               	incf	salva_EEPROM32@address,f
 15927  0B4D  31CD  2527  318A   	fcall	_salva_EEPROM32
 15928                           
 15929                           ;func.c: 2694: salva_EEPROM32(0,220);
 15930  0B50  3000               	movlw	0
 15931  0B51  0140               	movlb	0	; select bank0
 15932  0B52  00B1               	movwf	salva_EEPROM32@valor+3
 15933  0B53  3000               	movlw	0
 15934  0B54  00B0               	movwf	salva_EEPROM32@valor+2
 15935  0B55  3000               	movlw	0
 15936  0B56  00AF               	movwf	salva_EEPROM32@valor+1
 15937  0B57  3000               	movlw	0
 15938  0B58  00AE               	movwf	salva_EEPROM32@valor
 15939  0B59  30DC               	movlw	220
 15940  0B5A  0141               	movlb	1	; select bank1
 15941  0B5B  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15942  0B5C  0857               	movf	??_ini_ee_tempos^(0+128),w
 15943  0B5D  0140               	movlb	0	; select bank0
 15944  0B5E  00B2               	movwf	salva_EEPROM32@address
 15945  0B5F  31CD  2527  318A   	fcall	_salva_EEPROM32
 15946                           
 15947                           ;func.c: 2696: eeprom_write(230,'0');
 15948  0B62  3030               	movlw	48
 15949  0B63  0141               	movlb	1	; select bank1
 15950  0B64  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15951  0B65  0857               	movf	??_ini_ee_tempos^(0+128),w
 15952  0B66  0140               	movlb	0	; select bank0
 15953  0B67  00AB               	movwf	eeprom_write@value
 15954  0B68  30E6               	movlw	230
 15955  0B69  31D2  2299  318A   	fcall	_eeprom_write
 15956                           
 15957                           ;func.c: 2697: eeprom_write(231,'0');
 15958  0B6C  3030               	movlw	48
 15959  0B6D  0141               	movlb	1	; select bank1
 15960  0B6E  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15961  0B6F  0857               	movf	??_ini_ee_tempos^(0+128),w
 15962  0B70  0140               	movlb	0	; select bank0
 15963  0B71  00AB               	movwf	eeprom_write@value
 15964  0B72  30E7               	movlw	231
 15965  0B73  31D2  2299  318A   	fcall	_eeprom_write
 15966                           
 15967                           ;func.c: 2698: eeprom_write(232,'0');
 15968  0B76  3030               	movlw	48
 15969  0B77  0141               	movlb	1	; select bank1
 15970  0B78  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15971  0B79  0857               	movf	??_ini_ee_tempos^(0+128),w
 15972  0B7A  0140               	movlb	0	; select bank0
 15973  0B7B  00AB               	movwf	eeprom_write@value
 15974  0B7C  30E8               	movlw	232
 15975  0B7D  31D2  2299  318A   	fcall	_eeprom_write
 15976                           
 15977                           ;func.c: 2699: eeprom_write(233,'0');
 15978  0B80  3030               	movlw	48
 15979  0B81  0141               	movlb	1	; select bank1
 15980  0B82  00D7               	movwf	??_ini_ee_tempos^(0+128)
 15981  0B83  0857               	movf	??_ini_ee_tempos^(0+128),w
 15982  0B84  0140               	movlb	0	; select bank0
 15983  0B85  00AB               	movwf	eeprom_write@value
 15984  0B86  30E9               	movlw	233
 15985  0B87  31D2  2299  318A   	fcall	_eeprom_write
 15986                           
 15987                           ;func.c: 2707: int _num[4];
 15988                           ;func.c: 2708: _num[0] = "E25 3804"[4] - '0';
 15989  0B8A  30B9               	movlw	low ((STR_2+4)| (0+32768))
 15990  0B8B  0084               	movwf	4
 15991  0B8C  30E8               	movlw	high ((STR_2+4)| (0+32768))
 15992  0B8D  0085               	movwf	5
 15993  0B8E  0800               	movf	0,w	;code access
 15994  0B8F  3ED0               	addlw	208
 15995  0B90  0142               	movlb	2	; select bank2
 15996  0B91  00B1               	movwf	ini_ee_tempos@_num^(0+256)
 15997  0B92  30FF               	movlw	255
 15998  0B93  1803               	skipnc
 15999  0B94  3000               	movlw	0
 16000  0B95  00B2               	movwf	(ini_ee_tempos@_num^(0+256)+1)
 16001                           
 16002                           ;func.c: 2709: _num[1] = "E25 3804"[5] - '0';
 16003  0B96  30BA               	movlw	low ((STR_2+5)| (0+32768))
 16004  0B97  0084               	movwf	4
 16005  0B98  30E8               	movlw	high ((STR_2+5)| (0+32768))
 16006  0B99  0085               	movwf	5
 16007  0B9A  0800               	movf	0,w	;code access
 16008  0B9B  3ED0               	addlw	208
 16009  0B9C  00B3               	movwf	(ini_ee_tempos@_num^(0+256)+2)
 16010  0B9D  30FF               	movlw	255
 16011  0B9E  1803               	skipnc
 16012  0B9F  3000               	movlw	0
 16013  0BA0  00B4               	movwf	(ini_ee_tempos@_num^(0+256)+3)
 16014                           
 16015                           ;func.c: 2710: _num[2] = "E25 3804"[6] - '0';
 16016  0BA1  30BB               	movlw	low ((STR_2+6)| (0+32768))
 16017  0BA2  0084               	movwf	4
 16018  0BA3  30E8               	movlw	high ((STR_2+6)| (0+32768))
 16019  0BA4  0085               	movwf	5
 16020  0BA5  0800               	movf	0,w	;code access
 16021  0BA6  3ED0               	addlw	208
 16022  0BA7  00B5               	movwf	(ini_ee_tempos@_num^(0+256)+4)
 16023  0BA8  30FF               	movlw	255
 16024  0BA9  1803               	skipnc
 16025  0BAA  3000               	movlw	0
 16026  0BAB  00B6               	movwf	(ini_ee_tempos@_num^(0+256)+5)
 16027                           
 16028                           ;func.c: 2711: _num[3] = "E25 3804"[7] - '0';
 16029  0BAC  30BC               	movlw	low ((STR_2+7)| (0+32768))
 16030  0BAD  0084               	movwf	4
 16031  0BAE  30E8               	movlw	high ((STR_2+7)| (0+32768))
 16032  0BAF  0085               	movwf	5
 16033  0BB0  0800               	movf	0,w	;code access
 16034  0BB1  3ED0               	addlw	208
 16035  0BB2  00B7               	movwf	(ini_ee_tempos@_num^(0+256)+6)
 16036  0BB3  30FF               	movlw	255
 16037  0BB4  1803               	skipnc
 16038  0BB5  3000               	movlw	0
 16039  0BB6  00B8               	movwf	(ini_ee_tempos@_num^(0+256)+7)
 16040                           
 16041                           ;func.c: 2713: _num[0] = ((_num[1]*7 + _num[2]*11 + _num[3]*13)%10) + '0';
 16042  0BB7  300A               	movlw	10
 16043  0BB8  0140               	movlb	0	; select bank0
 16044  0BB9  00B1               	movwf	___awmod@divisor
 16045  0BBA  3000               	movlw	0
 16046  0BBB  00B2               	movwf	___awmod@divisor+1
 16047  0BBC  0142               	movlb	2	; select bank2
 16048  0BBD  0834               	movf	((ini_ee_tempos@_num+1)^(0+256)+2),w
 16049  0BBE  0140               	movlb	0	; select bank0
 16050  0BBF  00AC               	movwf	___wmul@multiplier+1
 16051  0BC0  0142               	movlb	2	; select bank2
 16052  0BC1  0833               	movf	(ini_ee_tempos@_num^(0+256)+2),w
 16053  0BC2  0140               	movlb	0	; select bank0
 16054  0BC3  00AB               	movwf	___wmul@multiplier
 16055  0BC4  3007               	movlw	7
 16056  0BC5  00AD               	movwf	___wmul@multiplicand
 16057  0BC6  3000               	movlw	0
 16058  0BC7  00AE               	movwf	___wmul@multiplicand+1
 16059  0BC8  31D0  20FE  318A   	fcall	___wmul
 16060  0BCB  0140               	movlb	0	; select bank0
 16061  0BCC  082B               	movf	?___wmul,w
 16062  0BCD  0141               	movlb	1	; select bank1
 16063  0BCE  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16064  0BCF  0140               	movlb	0	; select bank0
 16065  0BD0  082C               	movf	?___wmul+1,w
 16066  0BD1  0141               	movlb	1	; select bank1
 16067  0BD2  00D8               	movwf	(??_ini_ee_tempos^(0+128)+1)
 16068  0BD3  0142               	movlb	2	; select bank2
 16069  0BD4  0836               	movf	((ini_ee_tempos@_num+1)^(0+256)+4),w
 16070  0BD5  0140               	movlb	0	; select bank0
 16071  0BD6  00AC               	movwf	___wmul@multiplier+1
 16072  0BD7  0142               	movlb	2	; select bank2
 16073  0BD8  0835               	movf	(ini_ee_tempos@_num^(0+256)+4),w
 16074  0BD9  0140               	movlb	0	; select bank0
 16075  0BDA  00AB               	movwf	___wmul@multiplier
 16076  0BDB  300B               	movlw	11
 16077  0BDC  00AD               	movwf	___wmul@multiplicand
 16078  0BDD  3000               	movlw	0
 16079  0BDE  00AE               	movwf	___wmul@multiplicand+1
 16080  0BDF  31D0  20FE  318A   	fcall	___wmul
 16081  0BE2  0140               	movlb	0	; select bank0
 16082  0BE3  082B               	movf	?___wmul,w
 16083  0BE4  0141               	movlb	1	; select bank1
 16084  0BE5  0757               	addwf	??_ini_ee_tempos^(0+128),w
 16085  0BE6  00D9               	movwf	(??_ini_ee_tempos+2)^(0+128)
 16086  0BE7  0140               	movlb	0	; select bank0
 16087  0BE8  082C               	movf	?___wmul+1,w
 16088  0BE9  0141               	movlb	1	; select bank1
 16089  0BEA  3D58               	addwfc	(??_ini_ee_tempos+1)^(0+128),w
 16090  0BEB  00DA               	movwf	(??_ini_ee_tempos+3)^(0+128)
 16091  0BEC  0142               	movlb	2	; select bank2
 16092  0BED  0838               	movf	((ini_ee_tempos@_num+1)^(0+256)+6),w
 16093  0BEE  0140               	movlb	0	; select bank0
 16094  0BEF  00AC               	movwf	___wmul@multiplier+1
 16095  0BF0  0142               	movlb	2	; select bank2
 16096  0BF1  0837               	movf	(ini_ee_tempos@_num^(0+256)+6),w
 16097  0BF2  0140               	movlb	0	; select bank0
 16098  0BF3  00AB               	movwf	___wmul@multiplier
 16099  0BF4  300D               	movlw	13
 16100  0BF5  00AD               	movwf	___wmul@multiplicand
 16101  0BF6  3000               	movlw	0
 16102  0BF7  00AE               	movwf	___wmul@multiplicand+1
 16103  0BF8  31D0  20FE  318A   	fcall	___wmul
 16104  0BFB  0140               	movlb	0	; select bank0
 16105  0BFC  082B               	movf	?___wmul,w
 16106  0BFD  0141               	movlb	1	; select bank1
 16107  0BFE  0759               	addwf	(??_ini_ee_tempos+2)^(0+128),w
 16108  0BFF  0140               	movlb	0	; select bank0
 16109  0C00  00B3               	movwf	___awmod@dividend
 16110  0C01  082C               	movf	?___wmul+1,w
 16111  0C02  0141               	movlb	1	; select bank1
 16112  0C03  3D5A               	addwfc	(??_ini_ee_tempos+3)^(0+128),w
 16113  0C04  0140               	movlb	0	; select bank0
 16114  0C05  00B4               	movwf	___awmod@dividend+1
 16115  0C06  31C8  20FE  318A   	fcall	___awmod
 16116  0C09  0140               	movlb	0	; select bank0
 16117  0C0A  0831               	movf	?___awmod,w
 16118  0C0B  3E30               	addlw	48
 16119  0C0C  0142               	movlb	2	; select bank2
 16120  0C0D  00B1               	movwf	ini_ee_tempos@_num^(0+256)
 16121  0C0E  3000               	movlw	0
 16122  0C0F  0140               	movlb	0	; select bank0
 16123  0C10  3D32               	addwfc	?___awmod+1,w
 16124  0C11  0142               	movlb	2	; select bank2
 16125  0C12  00B2               	movwf	(ini_ee_tempos@_num+1)^(0+256)
 16126                           
 16127                           ;func.c: 2714: _num[1] = ((_num[0]*7 + _num[2]*11 + _num[3]*13)%10) + '0';
 16128  0C13  300A               	movlw	10
 16129  0C14  0140               	movlb	0	; select bank0
 16130  0C15  00B1               	movwf	___awmod@divisor
 16131  0C16  3000               	movlw	0
 16132  0C17  00B2               	movwf	___awmod@divisor+1
 16133  0C18  0142               	movlb	2	; select bank2
 16134  0C19  0832               	movf	(ini_ee_tempos@_num+1)^(0+256),w
 16135  0C1A  0140               	movlb	0	; select bank0
 16136  0C1B  00AC               	movwf	___wmul@multiplier+1
 16137  0C1C  0142               	movlb	2	; select bank2
 16138  0C1D  0831               	movf	ini_ee_tempos@_num^(0+256),w
 16139  0C1E  0140               	movlb	0	; select bank0
 16140  0C1F  00AB               	movwf	___wmul@multiplier
 16141  0C20  3007               	movlw	7
 16142  0C21  00AD               	movwf	___wmul@multiplicand
 16143  0C22  3000               	movlw	0
 16144  0C23  00AE               	movwf	___wmul@multiplicand+1
 16145  0C24  31D0  20FE  318A   	fcall	___wmul
 16146  0C27  0140               	movlb	0	; select bank0
 16147  0C28  082B               	movf	?___wmul,w
 16148  0C29  0141               	movlb	1	; select bank1
 16149  0C2A  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16150  0C2B  0140               	movlb	0	; select bank0
 16151  0C2C  082C               	movf	?___wmul+1,w
 16152  0C2D  0141               	movlb	1	; select bank1
 16153  0C2E  00D8               	movwf	(??_ini_ee_tempos^(0+128)+1)
 16154  0C2F  0142               	movlb	2	; select bank2
 16155  0C30  0836               	movf	((ini_ee_tempos@_num+1)^(0+256)+4),w
 16156  0C31  0140               	movlb	0	; select bank0
 16157  0C32  00AC               	movwf	___wmul@multiplier+1
 16158  0C33  0142               	movlb	2	; select bank2
 16159  0C34  0835               	movf	(ini_ee_tempos@_num^(0+256)+4),w
 16160  0C35  0140               	movlb	0	; select bank0
 16161  0C36  00AB               	movwf	___wmul@multiplier
 16162  0C37  300B               	movlw	11
 16163  0C38  00AD               	movwf	___wmul@multiplicand
 16164  0C39  3000               	movlw	0
 16165  0C3A  00AE               	movwf	___wmul@multiplicand+1
 16166  0C3B  31D0  20FE  318A   	fcall	___wmul
 16167  0C3E  0140               	movlb	0	; select bank0
 16168  0C3F  082B               	movf	?___wmul,w
 16169  0C40  0141               	movlb	1	; select bank1
 16170  0C41  0757               	addwf	??_ini_ee_tempos^(0+128),w
 16171  0C42  00D9               	movwf	(??_ini_ee_tempos+2)^(0+128)
 16172  0C43  0140               	movlb	0	; select bank0
 16173  0C44  082C               	movf	?___wmul+1,w
 16174  0C45  0141               	movlb	1	; select bank1
 16175  0C46  3D58               	addwfc	(??_ini_ee_tempos+1)^(0+128),w
 16176  0C47  00DA               	movwf	(??_ini_ee_tempos+3)^(0+128)
 16177  0C48  0142               	movlb	2	; select bank2
 16178  0C49  0838               	movf	((ini_ee_tempos@_num+1)^(0+256)+6),w
 16179  0C4A  0140               	movlb	0	; select bank0
 16180  0C4B  00AC               	movwf	___wmul@multiplier+1
 16181  0C4C  0142               	movlb	2	; select bank2
 16182  0C4D  0837               	movf	(ini_ee_tempos@_num^(0+256)+6),w
 16183  0C4E  0140               	movlb	0	; select bank0
 16184  0C4F  00AB               	movwf	___wmul@multiplier
 16185  0C50  300D               	movlw	13
 16186  0C51  00AD               	movwf	___wmul@multiplicand
 16187  0C52  3000               	movlw	0
 16188  0C53  00AE               	movwf	___wmul@multiplicand+1
 16189  0C54  31D0  20FE  318A   	fcall	___wmul
 16190  0C57  0140               	movlb	0	; select bank0
 16191  0C58  082B               	movf	?___wmul,w
 16192  0C59  0141               	movlb	1	; select bank1
 16193  0C5A  0759               	addwf	(??_ini_ee_tempos+2)^(0+128),w
 16194  0C5B  0140               	movlb	0	; select bank0
 16195  0C5C  00B3               	movwf	___awmod@dividend
 16196  0C5D  082C               	movf	?___wmul+1,w
 16197  0C5E  0141               	movlb	1	; select bank1
 16198  0C5F  3D5A               	addwfc	(??_ini_ee_tempos+3)^(0+128),w
 16199  0C60  0140               	movlb	0	; select bank0
 16200  0C61  00B4               	movwf	___awmod@dividend+1
 16201  0C62  31C8  20FE  318A   	fcall	___awmod
 16202  0C65  0140               	movlb	0	; select bank0
 16203  0C66  0831               	movf	?___awmod,w
 16204  0C67  3E30               	addlw	48
 16205  0C68  0142               	movlb	2	; select bank2
 16206  0C69  00B3               	movwf	(ini_ee_tempos@_num^(0+256)+2)
 16207  0C6A  3000               	movlw	0
 16208  0C6B  0140               	movlb	0	; select bank0
 16209  0C6C  3D32               	addwfc	?___awmod+1,w
 16210  0C6D  0142               	movlb	2	; select bank2
 16211  0C6E  00B4               	movwf	((ini_ee_tempos@_num+1)^(0+256)+2)
 16212                           
 16213                           ;func.c: 2715: _num[2] = ((_num[1]*7 + _num[0]*11 + _num[3]*13)%10) + '0';
 16214  0C6F  300A               	movlw	10
 16215  0C70  0140               	movlb	0	; select bank0
 16216  0C71  00B1               	movwf	___awmod@divisor
 16217  0C72  3000               	movlw	0
 16218  0C73  00B2               	movwf	___awmod@divisor+1
 16219  0C74  0142               	movlb	2	; select bank2
 16220  0C75  0834               	movf	((ini_ee_tempos@_num+1)^(0+256)+2),w
 16221  0C76  0140               	movlb	0	; select bank0
 16222  0C77  00AC               	movwf	___wmul@multiplier+1
 16223  0C78  0142               	movlb	2	; select bank2
 16224  0C79  0833               	movf	(ini_ee_tempos@_num^(0+256)+2),w
 16225  0C7A  0140               	movlb	0	; select bank0
 16226  0C7B  00AB               	movwf	___wmul@multiplier
 16227  0C7C  3007               	movlw	7
 16228  0C7D  00AD               	movwf	___wmul@multiplicand
 16229  0C7E  3000               	movlw	0
 16230  0C7F  00AE               	movwf	___wmul@multiplicand+1
 16231  0C80  31D0  20FE  318A   	fcall	___wmul
 16232  0C83  0140               	movlb	0	; select bank0
 16233  0C84  082B               	movf	?___wmul,w
 16234  0C85  0141               	movlb	1	; select bank1
 16235  0C86  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16236  0C87  0140               	movlb	0	; select bank0
 16237  0C88  082C               	movf	?___wmul+1,w
 16238  0C89  0141               	movlb	1	; select bank1
 16239  0C8A  00D8               	movwf	(??_ini_ee_tempos^(0+128)+1)
 16240  0C8B  0142               	movlb	2	; select bank2
 16241  0C8C  0832               	movf	(ini_ee_tempos@_num+1)^(0+256),w
 16242  0C8D  0140               	movlb	0	; select bank0
 16243  0C8E  00AC               	movwf	___wmul@multiplier+1
 16244  0C8F  0142               	movlb	2	; select bank2
 16245  0C90  0831               	movf	ini_ee_tempos@_num^(0+256),w
 16246  0C91  0140               	movlb	0	; select bank0
 16247  0C92  00AB               	movwf	___wmul@multiplier
 16248  0C93  300B               	movlw	11
 16249  0C94  00AD               	movwf	___wmul@multiplicand
 16250  0C95  3000               	movlw	0
 16251  0C96  00AE               	movwf	___wmul@multiplicand+1
 16252  0C97  31D0  20FE  318A   	fcall	___wmul
 16253  0C9A  0140               	movlb	0	; select bank0
 16254  0C9B  082B               	movf	?___wmul,w
 16255  0C9C  0141               	movlb	1	; select bank1
 16256  0C9D  0757               	addwf	??_ini_ee_tempos^(0+128),w
 16257  0C9E  00D9               	movwf	(??_ini_ee_tempos+2)^(0+128)
 16258  0C9F  0140               	movlb	0	; select bank0
 16259  0CA0  082C               	movf	?___wmul+1,w
 16260  0CA1  0141               	movlb	1	; select bank1
 16261  0CA2  3D58               	addwfc	(??_ini_ee_tempos+1)^(0+128),w
 16262  0CA3  00DA               	movwf	(??_ini_ee_tempos+3)^(0+128)
 16263  0CA4  0142               	movlb	2	; select bank2
 16264  0CA5  0838               	movf	((ini_ee_tempos@_num+1)^(0+256)+6),w
 16265  0CA6  0140               	movlb	0	; select bank0
 16266  0CA7  00AC               	movwf	___wmul@multiplier+1
 16267  0CA8  0142               	movlb	2	; select bank2
 16268  0CA9  0837               	movf	(ini_ee_tempos@_num^(0+256)+6),w
 16269  0CAA  0140               	movlb	0	; select bank0
 16270  0CAB  00AB               	movwf	___wmul@multiplier
 16271  0CAC  300D               	movlw	13
 16272  0CAD  00AD               	movwf	___wmul@multiplicand
 16273  0CAE  3000               	movlw	0
 16274  0CAF  00AE               	movwf	___wmul@multiplicand+1
 16275  0CB0  31D0  20FE  318A   	fcall	___wmul
 16276  0CB3  0140               	movlb	0	; select bank0
 16277  0CB4  082B               	movf	?___wmul,w
 16278  0CB5  0141               	movlb	1	; select bank1
 16279  0CB6  0759               	addwf	(??_ini_ee_tempos+2)^(0+128),w
 16280  0CB7  0140               	movlb	0	; select bank0
 16281  0CB8  00B3               	movwf	___awmod@dividend
 16282  0CB9  082C               	movf	?___wmul+1,w
 16283  0CBA  0141               	movlb	1	; select bank1
 16284  0CBB  3D5A               	addwfc	(??_ini_ee_tempos+3)^(0+128),w
 16285  0CBC  0140               	movlb	0	; select bank0
 16286  0CBD  00B4               	movwf	___awmod@dividend+1
 16287  0CBE  31C8  20FE  318A   	fcall	___awmod
 16288  0CC1  0140               	movlb	0	; select bank0
 16289  0CC2  0831               	movf	?___awmod,w
 16290  0CC3  3E30               	addlw	48
 16291  0CC4  0142               	movlb	2	; select bank2
 16292  0CC5  00B5               	movwf	(ini_ee_tempos@_num^(0+256)+4)
 16293  0CC6  3000               	movlw	0
 16294  0CC7  0140               	movlb	0	; select bank0
 16295  0CC8  3D32               	addwfc	?___awmod+1,w
 16296  0CC9  0142               	movlb	2	; select bank2
 16297  0CCA  00B6               	movwf	((ini_ee_tempos@_num+1)^(0+256)+4)
 16298                           
 16299                           ;func.c: 2716: _num[3] = ((_num[1]*7 + _num[2]*11 + _num[0]*13)%10) + '0';
 16300  0CCB  300A               	movlw	10
 16301  0CCC  0140               	movlb	0	; select bank0
 16302  0CCD  00B1               	movwf	___awmod@divisor
 16303  0CCE  3000               	movlw	0
 16304  0CCF  00B2               	movwf	___awmod@divisor+1
 16305  0CD0  0142               	movlb	2	; select bank2
 16306  0CD1  0834               	movf	((ini_ee_tempos@_num+1)^(0+256)+2),w
 16307  0CD2  0140               	movlb	0	; select bank0
 16308  0CD3  00AC               	movwf	___wmul@multiplier+1
 16309  0CD4  0142               	movlb	2	; select bank2
 16310  0CD5  0833               	movf	(ini_ee_tempos@_num^(0+256)+2),w
 16311  0CD6  0140               	movlb	0	; select bank0
 16312  0CD7  00AB               	movwf	___wmul@multiplier
 16313  0CD8  3007               	movlw	7
 16314  0CD9  00AD               	movwf	___wmul@multiplicand
 16315  0CDA  3000               	movlw	0
 16316  0CDB  00AE               	movwf	___wmul@multiplicand+1
 16317  0CDC  31D0  20FE  318A   	fcall	___wmul
 16318  0CDF  0140               	movlb	0	; select bank0
 16319  0CE0  082B               	movf	?___wmul,w
 16320  0CE1  0141               	movlb	1	; select bank1
 16321  0CE2  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16322  0CE3  0140               	movlb	0	; select bank0
 16323  0CE4  082C               	movf	?___wmul+1,w
 16324  0CE5  0141               	movlb	1	; select bank1
 16325  0CE6  00D8               	movwf	(??_ini_ee_tempos^(0+128)+1)
 16326  0CE7  0142               	movlb	2	; select bank2
 16327  0CE8  0836               	movf	((ini_ee_tempos@_num+1)^(0+256)+4),w
 16328  0CE9  0140               	movlb	0	; select bank0
 16329  0CEA  00AC               	movwf	___wmul@multiplier+1
 16330  0CEB  0142               	movlb	2	; select bank2
 16331  0CEC  0835               	movf	(ini_ee_tempos@_num^(0+256)+4),w
 16332  0CED  0140               	movlb	0	; select bank0
 16333  0CEE  00AB               	movwf	___wmul@multiplier
 16334  0CEF  300B               	movlw	11
 16335  0CF0  00AD               	movwf	___wmul@multiplicand
 16336  0CF1  3000               	movlw	0
 16337  0CF2  00AE               	movwf	___wmul@multiplicand+1
 16338  0CF3  31D0  20FE  318A   	fcall	___wmul
 16339  0CF6  0140               	movlb	0	; select bank0
 16340  0CF7  082B               	movf	?___wmul,w
 16341  0CF8  0141               	movlb	1	; select bank1
 16342  0CF9  0757               	addwf	??_ini_ee_tempos^(0+128),w
 16343  0CFA  00D9               	movwf	(??_ini_ee_tempos+2)^(0+128)
 16344  0CFB  0140               	movlb	0	; select bank0
 16345  0CFC  082C               	movf	?___wmul+1,w
 16346  0CFD  0141               	movlb	1	; select bank1
 16347  0CFE  3D58               	addwfc	(??_ini_ee_tempos+1)^(0+128),w
 16348  0CFF  00DA               	movwf	(??_ini_ee_tempos+3)^(0+128)
 16349  0D00  0142               	movlb	2	; select bank2
 16350  0D01  0832               	movf	(ini_ee_tempos@_num+1)^(0+256),w
 16351  0D02  0140               	movlb	0	; select bank0
 16352  0D03  00AC               	movwf	___wmul@multiplier+1
 16353  0D04  0142               	movlb	2	; select bank2
 16354  0D05  0831               	movf	ini_ee_tempos@_num^(0+256),w
 16355  0D06  0140               	movlb	0	; select bank0
 16356  0D07  00AB               	movwf	___wmul@multiplier
 16357  0D08  300D               	movlw	13
 16358  0D09  00AD               	movwf	___wmul@multiplicand
 16359  0D0A  3000               	movlw	0
 16360  0D0B  00AE               	movwf	___wmul@multiplicand+1
 16361  0D0C  31D0  20FE  318A   	fcall	___wmul
 16362  0D0F  0140               	movlb	0	; select bank0
 16363  0D10  082B               	movf	?___wmul,w
 16364  0D11  0141               	movlb	1	; select bank1
 16365  0D12  0759               	addwf	(??_ini_ee_tempos+2)^(0+128),w
 16366  0D13  0140               	movlb	0	; select bank0
 16367  0D14  00B3               	movwf	___awmod@dividend
 16368  0D15  082C               	movf	?___wmul+1,w
 16369  0D16  0141               	movlb	1	; select bank1
 16370  0D17  3D5A               	addwfc	(??_ini_ee_tempos+3)^(0+128),w
 16371  0D18  0140               	movlb	0	; select bank0
 16372  0D19  00B4               	movwf	___awmod@dividend+1
 16373  0D1A  31C8  20FE  318A   	fcall	___awmod
 16374  0D1D  0140               	movlb	0	; select bank0
 16375  0D1E  0831               	movf	?___awmod,w
 16376  0D1F  3E30               	addlw	48
 16377  0D20  0142               	movlb	2	; select bank2
 16378  0D21  00B7               	movwf	(ini_ee_tempos@_num^(0+256)+6)
 16379  0D22  3000               	movlw	0
 16380  0D23  0140               	movlb	0	; select bank0
 16381  0D24  3D32               	addwfc	?___awmod+1,w
 16382  0D25  0142               	movlb	2	; select bank2
 16383  0D26  00B8               	movwf	((ini_ee_tempos@_num+1)^(0+256)+6)
 16384                           
 16385                           ;func.c: 2718: eeprom_write(234,(char)_num[0]);
 16386  0D27  0831               	movf	ini_ee_tempos@_num^(0+256),w
 16387  0D28  0141               	movlb	1	; select bank1
 16388  0D29  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16389  0D2A  0857               	movf	??_ini_ee_tempos^(0+128),w
 16390  0D2B  0140               	movlb	0	; select bank0
 16391  0D2C  00AB               	movwf	eeprom_write@value
 16392  0D2D  30EA               	movlw	234
 16393  0D2E  31D2  2299  318A   	fcall	_eeprom_write
 16394                           
 16395                           ;func.c: 2719: eeprom_write(235,(char)_num[1]);
 16396  0D31  0142               	movlb	2	; select bank2
 16397  0D32  0833               	movf	(ini_ee_tempos@_num^(0+256)+2),w
 16398  0D33  0141               	movlb	1	; select bank1
 16399  0D34  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16400  0D35  0857               	movf	??_ini_ee_tempos^(0+128),w
 16401  0D36  0140               	movlb	0	; select bank0
 16402  0D37  00AB               	movwf	eeprom_write@value
 16403  0D38  30EB               	movlw	235
 16404  0D39  31D2  2299  318A   	fcall	_eeprom_write
 16405                           
 16406                           ;func.c: 2720: eeprom_write(236,(char)_num[2]);
 16407  0D3C  0142               	movlb	2	; select bank2
 16408  0D3D  0835               	movf	(ini_ee_tempos@_num^(0+256)+4),w
 16409  0D3E  0141               	movlb	1	; select bank1
 16410  0D3F  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16411  0D40  0857               	movf	??_ini_ee_tempos^(0+128),w
 16412  0D41  0140               	movlb	0	; select bank0
 16413  0D42  00AB               	movwf	eeprom_write@value
 16414  0D43  30EC               	movlw	236
 16415  0D44  31D2  2299  318A   	fcall	_eeprom_write
 16416                           
 16417                           ;func.c: 2721: eeprom_write(237,(char)_num[3]);
 16418  0D47  0142               	movlb	2	; select bank2
 16419  0D48  0837               	movf	(ini_ee_tempos@_num^(0+256)+6),w
 16420  0D49  0141               	movlb	1	; select bank1
 16421  0D4A  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16422  0D4B  0857               	movf	??_ini_ee_tempos^(0+128),w
 16423  0D4C  0140               	movlb	0	; select bank0
 16424  0D4D  00AB               	movwf	eeprom_write@value
 16425  0D4E  30ED               	movlw	237
 16426  0D4F  31D2  2299  318A   	fcall	_eeprom_write
 16427                           
 16428                           ;func.c: 2723: float K = 5-(4*(0.659-((t+40)*0.00132)));
 16429  0D52  0141               	movlb	1	; select bank1
 16430  0D53  0853               	movf	ini_ee_tempos@t^(0+128),w
 16431  0D54  0140               	movlb	0	; select bank0
 16432  0D55  00BE               	movwf	___ftadd@f2
 16433  0D56  0141               	movlb	1	; select bank1
 16434  0D57  0854               	movf	(ini_ee_tempos@t+1)^(0+128),w
 16435  0D58  0140               	movlb	0	; select bank0
 16436  0D59  00BF               	movwf	___ftadd@f2+1
 16437  0D5A  0141               	movlb	1	; select bank1
 16438  0D5B  0855               	movf	(ini_ee_tempos@t+2)^(0+128),w
 16439  0D5C  0140               	movlb	0	; select bank0
 16440  0D5D  00C0               	movwf	___ftadd@f2+2
 16441  0D5E  3000               	movlw	0
 16442  0D5F  00BB               	movwf	___ftadd@f1
 16443  0D60  3020               	movlw	32
 16444  0D61  00BC               	movwf	___ftadd@f1+1
 16445  0D62  3042               	movlw	66
 16446  0D63  00BD               	movwf	___ftadd@f1+2
 16447  0D64  31B0  2027  318A   	fcall	___ftadd
 16448  0D67  0140               	movlb	0	; select bank0
 16449  0D68  083B               	movf	?___ftadd,w
 16450  0D69  00CB               	movwf	___ftmul@f2
 16451  0D6A  083C               	movf	?___ftadd+1,w
 16452  0D6B  00CC               	movwf	___ftmul@f2+1
 16453  0D6C  083D               	movf	?___ftadd+2,w
 16454  0D6D  00CD               	movwf	___ftmul@f2+2
 16455  0D6E  3004               	movlw	4
 16456  0D6F  00C8               	movwf	___ftmul@f1
 16457  0D70  30AD               	movlw	173
 16458  0D71  00C9               	movwf	___ftmul@f1+1
 16459  0D72  303A               	movlw	58
 16460  0D73  00CA               	movwf	___ftmul@f1+2
 16461  0D74  31B9  218F  318A   	fcall	___ftmul
 16462  0D77  0140               	movlb	0	; select bank0
 16463  0D78  0848               	movf	?___ftmul,w
 16464  0D79  0141               	movlb	1	; select bank1
 16465  0D7A  00D0               	movwf	___ftneg@f1^(0+128)
 16466  0D7B  0140               	movlb	0	; select bank0
 16467  0D7C  0849               	movf	?___ftmul+1,w
 16468  0D7D  0141               	movlb	1	; select bank1
 16469  0D7E  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 16470  0D7F  0140               	movlb	0	; select bank0
 16471  0D80  084A               	movf	?___ftmul+2,w
 16472  0D81  0141               	movlb	1	; select bank1
 16473  0D82  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 16474  0D83  31E2  2209  318A   	fcall	___ftneg
 16475  0D86  0141               	movlb	1	; select bank1
 16476  0D87  0850               	movf	?___ftneg^(0+128),w
 16477  0D88  0142               	movlb	2	; select bank2
 16478  0D89  00A0               	movwf	_ini_ee_tempos$4268^(0+256)
 16479  0D8A  0141               	movlb	1	; select bank1
 16480  0D8B  0851               	movf	(?___ftneg+1)^(0+128),w
 16481  0D8C  0142               	movlb	2	; select bank2
 16482  0D8D  00A1               	movwf	(_ini_ee_tempos$4268+1)^(0+256)
 16483  0D8E  0141               	movlb	1	; select bank1
 16484  0D8F  0852               	movf	(?___ftneg+2)^(0+128),w
 16485  0D90  0142               	movlb	2	; select bank2
 16486  0D91  00A2               	movwf	(_ini_ee_tempos$4268+2)^(0+256)
 16487                           
 16488                           ;func.c: 2723: float K = 5-(4*(0.659-((t+40)*0.00132)));
 16489  0D92  0820               	movf	_ini_ee_tempos$4268^(0+256),w
 16490  0D93  0140               	movlb	0	; select bank0
 16491  0D94  00BE               	movwf	___ftadd@f2
 16492  0D95  0142               	movlb	2	; select bank2
 16493  0D96  0821               	movf	(_ini_ee_tempos$4268+1)^(0+256),w
 16494  0D97  0140               	movlb	0	; select bank0
 16495  0D98  00BF               	movwf	___ftadd@f2+1
 16496  0D99  0142               	movlb	2	; select bank2
 16497  0D9A  0822               	movf	(_ini_ee_tempos$4268+2)^(0+256),w
 16498  0D9B  0140               	movlb	0	; select bank0
 16499  0D9C  00C0               	movwf	___ftadd@f2+2
 16500  0D9D  30B4               	movlw	180
 16501  0D9E  00BB               	movwf	___ftadd@f1
 16502  0D9F  3028               	movlw	40
 16503  0DA0  00BC               	movwf	___ftadd@f1+1
 16504  0DA1  303F               	movlw	63
 16505  0DA2  00BD               	movwf	___ftadd@f1+2
 16506  0DA3  31B0  2027  318A   	fcall	___ftadd
 16507  0DA6  0140               	movlb	0	; select bank0
 16508  0DA7  083B               	movf	?___ftadd,w
 16509  0DA8  00CB               	movwf	___ftmul@f2
 16510  0DA9  083C               	movf	?___ftadd+1,w
 16511  0DAA  00CC               	movwf	___ftmul@f2+1
 16512  0DAB  083D               	movf	?___ftadd+2,w
 16513  0DAC  00CD               	movwf	___ftmul@f2+2
 16514  0DAD  3000               	movlw	0
 16515  0DAE  00C8               	movwf	___ftmul@f1
 16516  0DAF  3080               	movlw	128
 16517  0DB0  00C9               	movwf	___ftmul@f1+1
 16518  0DB1  3040               	movlw	64
 16519  0DB2  00CA               	movwf	___ftmul@f1+2
 16520  0DB3  31B9  218F  318A   	fcall	___ftmul
 16521  0DB6  0140               	movlb	0	; select bank0
 16522  0DB7  0848               	movf	?___ftmul,w
 16523  0DB8  0141               	movlb	1	; select bank1
 16524  0DB9  00D0               	movwf	___ftneg@f1^(0+128)
 16525  0DBA  0140               	movlb	0	; select bank0
 16526  0DBB  0849               	movf	?___ftmul+1,w
 16527  0DBC  0141               	movlb	1	; select bank1
 16528  0DBD  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 16529  0DBE  0140               	movlb	0	; select bank0
 16530  0DBF  084A               	movf	?___ftmul+2,w
 16531  0DC0  0141               	movlb	1	; select bank1
 16532  0DC1  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 16533  0DC2  31E2  2209  318A   	fcall	___ftneg
 16534  0DC5  0141               	movlb	1	; select bank1
 16535  0DC6  0850               	movf	?___ftneg^(0+128),w
 16536  0DC7  0142               	movlb	2	; select bank2
 16537  0DC8  00A3               	movwf	_ini_ee_tempos$4269^(0+256)
 16538  0DC9  0141               	movlb	1	; select bank1
 16539  0DCA  0851               	movf	(?___ftneg+1)^(0+128),w
 16540  0DCB  0142               	movlb	2	; select bank2
 16541  0DCC  00A4               	movwf	(_ini_ee_tempos$4269+1)^(0+256)
 16542  0DCD  0141               	movlb	1	; select bank1
 16543  0DCE  0852               	movf	(?___ftneg+2)^(0+128),w
 16544  0DCF  0142               	movlb	2	; select bank2
 16545  0DD0  00A5               	movwf	(_ini_ee_tempos$4269+2)^(0+256)
 16546                           
 16547                           ;func.c: 2723: float K = 5-(4*(0.659-((t+40)*0.00132)));
 16548  0DD1  3000               	movlw	0
 16549  0DD2  0140               	movlb	0	; select bank0
 16550  0DD3  00BB               	movwf	___ftadd@f1
 16551  0DD4  30A0               	movlw	160
 16552  0DD5  00BC               	movwf	___ftadd@f1+1
 16553  0DD6  3040               	movlw	64
 16554  0DD7  00BD               	movwf	___ftadd@f1+2
 16555  0DD8  0142               	movlb	2	; select bank2
 16556  0DD9  0823               	movf	_ini_ee_tempos$4269^(0+256),w
 16557  0DDA  0140               	movlb	0	; select bank0
 16558  0DDB  00BE               	movwf	___ftadd@f2
 16559  0DDC  0142               	movlb	2	; select bank2
 16560  0DDD  0824               	movf	(_ini_ee_tempos$4269+1)^(0+256),w
 16561  0DDE  0140               	movlb	0	; select bank0
 16562  0DDF  00BF               	movwf	___ftadd@f2+1
 16563  0DE0  0142               	movlb	2	; select bank2
 16564  0DE1  0825               	movf	(_ini_ee_tempos$4269+2)^(0+256),w
 16565  0DE2  0140               	movlb	0	; select bank0
 16566  0DE3  00C0               	movwf	___ftadd@f2+2
 16567  0DE4  31B0  2027  318A   	fcall	___ftadd
 16568  0DE7  0140               	movlb	0	; select bank0
 16569  0DE8  083B               	movf	?___ftadd,w
 16570  0DE9  0142               	movlb	2	; select bank2
 16571  0DEA  00AD               	movwf	ini_ee_tempos@K^(0+256)
 16572  0DEB  0140               	movlb	0	; select bank0
 16573  0DEC  083C               	movf	?___ftadd+1,w
 16574  0DED  0142               	movlb	2	; select bank2
 16575  0DEE  00AE               	movwf	(ini_ee_tempos@K+1)^(0+256)
 16576  0DEF  0140               	movlb	0	; select bank0
 16577  0DF0  083D               	movf	?___ftadd+2,w
 16578  0DF1  0142               	movlb	2	; select bank2
 16579  0DF2  00AF               	movwf	(ini_ee_tempos@K+2)^(0+256)
 16580                           
 16581                           ;func.c: 2724: K = (1023*K)/5;
 16582  0DF3  3000               	movlw	0
 16583  0DF4  0141               	movlb	1	; select bank1
 16584  0DF5  00AA               	movwf	___ftdiv@f2^(0+128)
 16585  0DF6  30A0               	movlw	160
 16586  0DF7  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 16587  0DF8  3040               	movlw	64
 16588  0DF9  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 16589  0DFA  30C0               	movlw	192
 16590  0DFB  0140               	movlb	0	; select bank0
 16591  0DFC  00C8               	movwf	___ftmul@f1
 16592  0DFD  307F               	movlw	127
 16593  0DFE  00C9               	movwf	___ftmul@f1+1
 16594  0DFF  3044               	movlw	68
 16595  0E00  00CA               	movwf	___ftmul@f1+2
 16596  0E01  0142               	movlb	2	; select bank2
 16597  0E02  082D               	movf	ini_ee_tempos@K^(0+256),w
 16598  0E03  0140               	movlb	0	; select bank0
 16599  0E04  00CB               	movwf	___ftmul@f2
 16600  0E05  0142               	movlb	2	; select bank2
 16601  0E06  082E               	movf	(ini_ee_tempos@K+1)^(0+256),w
 16602  0E07  0140               	movlb	0	; select bank0
 16603  0E08  00CC               	movwf	___ftmul@f2+1
 16604  0E09  0142               	movlb	2	; select bank2
 16605  0E0A  082F               	movf	(ini_ee_tempos@K+2)^(0+256),w
 16606  0E0B  0140               	movlb	0	; select bank0
 16607  0E0C  00CD               	movwf	___ftmul@f2+2
 16608  0E0D  31B9  218F  318A   	fcall	___ftmul
 16609  0E10  0140               	movlb	0	; select bank0
 16610  0E11  0848               	movf	?___ftmul,w
 16611  0E12  0141               	movlb	1	; select bank1
 16612  0E13  00AD               	movwf	___ftdiv@f1^(0+128)
 16613  0E14  0140               	movlb	0	; select bank0
 16614  0E15  0849               	movf	?___ftmul+1,w
 16615  0E16  0141               	movlb	1	; select bank1
 16616  0E17  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 16617  0E18  0140               	movlb	0	; select bank0
 16618  0E19  084A               	movf	?___ftmul+2,w
 16619  0E1A  0141               	movlb	1	; select bank1
 16620  0E1B  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 16621  0E1C  31BA  2243  318A   	fcall	___ftdiv
 16622  0E1F  0141               	movlb	1	; select bank1
 16623  0E20  082A               	movf	?___ftdiv^(0+128),w
 16624  0E21  0142               	movlb	2	; select bank2
 16625  0E22  00AD               	movwf	ini_ee_tempos@K^(0+256)
 16626  0E23  0141               	movlb	1	; select bank1
 16627  0E24  082B               	movf	(?___ftdiv+1)^(0+128),w
 16628  0E25  0142               	movlb	2	; select bank2
 16629  0E26  00AE               	movwf	(ini_ee_tempos@K+1)^(0+256)
 16630  0E27  0141               	movlb	1	; select bank1
 16631  0E28  082C               	movf	(?___ftdiv+2)^(0+128),w
 16632  0E29  0142               	movlb	2	; select bank2
 16633  0E2A  00AF               	movwf	(ini_ee_tempos@K+2)^(0+256)
 16634                           
 16635                           ;func.c: 2727: K = K - get_temp(0);
 16636  0E2B  3000               	movlw	0
 16637  0E2C  0141               	movlb	1	; select bank1
 16638  0E2D  00BA               	movwf	get_temp@K^(0+128)
 16639  0E2E  3000               	movlw	0
 16640  0E2F  00BB               	movwf	(get_temp@K+1)^(0+128)
 16641  0E30  3000               	movlw	0
 16642  0E31  00BC               	movwf	(get_temp@K+2)^(0+128)
 16643  0E32  31B8  20DC  318A   	fcall	_get_temp
 16644  0E35  0141               	movlb	1	; select bank1
 16645  0E36  083A               	movf	?_get_temp^(0+128),w
 16646  0E37  00D0               	movwf	___ftneg@f1^(0+128)
 16647  0E38  083B               	movf	(?_get_temp+1)^(0+128),w
 16648  0E39  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 16649  0E3A  083C               	movf	(?_get_temp+2)^(0+128),w
 16650  0E3B  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 16651  0E3C  31E2  2209  318A   	fcall	___ftneg
 16652  0E3F  0141               	movlb	1	; select bank1
 16653  0E40  0850               	movf	?___ftneg^(0+128),w
 16654  0E41  0142               	movlb	2	; select bank2
 16655  0E42  00A6               	movwf	_ini_ee_tempos$4270^(0+256)
 16656  0E43  0141               	movlb	1	; select bank1
 16657  0E44  0851               	movf	(?___ftneg+1)^(0+128),w
 16658  0E45  0142               	movlb	2	; select bank2
 16659  0E46  00A7               	movwf	(_ini_ee_tempos$4270+1)^(0+256)
 16660  0E47  0141               	movlb	1	; select bank1
 16661  0E48  0852               	movf	(?___ftneg+2)^(0+128),w
 16662  0E49  0142               	movlb	2	; select bank2
 16663  0E4A  00A8               	movwf	(_ini_ee_tempos$4270+2)^(0+256)
 16664                           
 16665                           ;func.c: 2727: K = K - get_temp(0);
 16666  0E4B  082D               	movf	ini_ee_tempos@K^(0+256),w
 16667  0E4C  0140               	movlb	0	; select bank0
 16668  0E4D  00BB               	movwf	___ftadd@f1
 16669  0E4E  0142               	movlb	2	; select bank2
 16670  0E4F  082E               	movf	(ini_ee_tempos@K+1)^(0+256),w
 16671  0E50  0140               	movlb	0	; select bank0
 16672  0E51  00BC               	movwf	___ftadd@f1+1
 16673  0E52  0142               	movlb	2	; select bank2
 16674  0E53  082F               	movf	(ini_ee_tempos@K+2)^(0+256),w
 16675  0E54  0140               	movlb	0	; select bank0
 16676  0E55  00BD               	movwf	___ftadd@f1+2
 16677  0E56  0142               	movlb	2	; select bank2
 16678  0E57  0826               	movf	_ini_ee_tempos$4270^(0+256),w
 16679  0E58  0140               	movlb	0	; select bank0
 16680  0E59  00BE               	movwf	___ftadd@f2
 16681  0E5A  0142               	movlb	2	; select bank2
 16682  0E5B  0827               	movf	(_ini_ee_tempos$4270+1)^(0+256),w
 16683  0E5C  0140               	movlb	0	; select bank0
 16684  0E5D  00BF               	movwf	___ftadd@f2+1
 16685  0E5E  0142               	movlb	2	; select bank2
 16686  0E5F  0828               	movf	(_ini_ee_tempos$4270+2)^(0+256),w
 16687  0E60  0140               	movlb	0	; select bank0
 16688  0E61  00C0               	movwf	___ftadd@f2+2
 16689  0E62  31B0  2027  318A   	fcall	___ftadd
 16690  0E65  0140               	movlb	0	; select bank0
 16691  0E66  083B               	movf	?___ftadd,w
 16692  0E67  0142               	movlb	2	; select bank2
 16693  0E68  00AD               	movwf	ini_ee_tempos@K^(0+256)
 16694  0E69  0140               	movlb	0	; select bank0
 16695  0E6A  083C               	movf	?___ftadd+1,w
 16696  0E6B  0142               	movlb	2	; select bank2
 16697  0E6C  00AE               	movwf	(ini_ee_tempos@K+1)^(0+256)
 16698  0E6D  0140               	movlb	0	; select bank0
 16699  0E6E  083D               	movf	?___ftadd+2,w
 16700  0E6F  0142               	movlb	2	; select bank2
 16701  0E70  00AF               	movwf	(ini_ee_tempos@K+2)^(0+256)
 16702                           
 16703                           ;func.c: 2728: int k_int = (int)(K*100);
 16704  0E71  082D               	movf	ini_ee_tempos@K^(0+256),w
 16705  0E72  0140               	movlb	0	; select bank0
 16706  0E73  00CB               	movwf	___ftmul@f2
 16707  0E74  0142               	movlb	2	; select bank2
 16708  0E75  082E               	movf	(ini_ee_tempos@K+1)^(0+256),w
 16709  0E76  0140               	movlb	0	; select bank0
 16710  0E77  00CC               	movwf	___ftmul@f2+1
 16711  0E78  0142               	movlb	2	; select bank2
 16712  0E79  082F               	movf	(ini_ee_tempos@K+2)^(0+256),w
 16713  0E7A  0140               	movlb	0	; select bank0
 16714  0E7B  00CD               	movwf	___ftmul@f2+2
 16715  0E7C  3000               	movlw	0
 16716  0E7D  00C8               	movwf	___ftmul@f1
 16717  0E7E  30C8               	movlw	200
 16718  0E7F  00C9               	movwf	___ftmul@f1+1
 16719  0E80  3042               	movlw	66
 16720  0E81  00CA               	movwf	___ftmul@f1+2
 16721  0E82  31B9  218F  318A   	fcall	___ftmul
 16722  0E85  0140               	movlb	0	; select bank0
 16723  0E86  0848               	movf	?___ftmul,w
 16724  0E87  0141               	movlb	1	; select bank1
 16725  0E88  00BA               	movwf	___fttol@f1^(0+128)
 16726  0E89  0140               	movlb	0	; select bank0
 16727  0E8A  0849               	movf	?___ftmul+1,w
 16728  0E8B  0141               	movlb	1	; select bank1
 16729  0E8C  00BB               	movwf	(___fttol@f1+1)^(0+128)
 16730  0E8D  0140               	movlb	0	; select bank0
 16731  0E8E  084A               	movf	?___ftmul+2,w
 16732  0E8F  0141               	movlb	1	; select bank1
 16733  0E90  00BC               	movwf	(___fttol@f1+2)^(0+128)
 16734  0E91  31C3  2352  318A   	fcall	___fttol
 16735  0E94  0141               	movlb	1	; select bank1
 16736  0E95  083B               	movf	(?___fttol+1)^(0+128),w
 16737  0E96  0142               	movlb	2	; select bank2
 16738  0E97  00AA               	movwf	(ini_ee_tempos@k_int+1)^(0+256)
 16739  0E98  0141               	movlb	1	; select bank1
 16740  0E99  083A               	movf	?___fttol^(0+128),w
 16741  0E9A  0142               	movlb	2	; select bank2
 16742  0E9B  00A9               	movwf	ini_ee_tempos@k_int^(0+256)
 16743                           
 16744                           ;func.c: 2729: salva_EEPROM(k_int,240);
 16745  0E9C  082A               	movf	(ini_ee_tempos@k_int+1)^(0+256),w
 16746  0E9D  0140               	movlb	0	; select bank0
 16747  0E9E  00AF               	movwf	salva_EEPROM@valor+1
 16748  0E9F  0142               	movlb	2	; select bank2
 16749  0EA0  0829               	movf	ini_ee_tempos@k_int^(0+256),w
 16750  0EA1  0140               	movlb	0	; select bank0
 16751  0EA2  00AE               	movwf	salva_EEPROM@valor
 16752  0EA3  30F0               	movlw	240
 16753  0EA4  0141               	movlb	1	; select bank1
 16754  0EA5  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16755  0EA6  0857               	movf	??_ini_ee_tempos^(0+128),w
 16756  0EA7  0140               	movlb	0	; select bank0
 16757  0EA8  00B0               	movwf	salva_EEPROM@address
 16758  0EA9  31D5  250D  318A   	fcall	_salva_EEPROM
 16759                           
 16760                           ;func.c: 2731: LATBbits.LATB7 = 0;
 16761  0EAC  0140               	movlb	0	; select bank0
 16762  0EAD  1397               	bcf	23,7	;volatile
 16763  0EAE                     l17280:	
 16764                           
 16765                           ;func.c: 2732: }
 16766                           ;func.c: 2733: _delay((unsigned long)((500)*(20000000/4000.0)));
 16767  0EAE  300D               	movlw	13
 16768  0EAF  0141               	movlb	1	; select bank1
 16769  0EB0  00D8               	movwf	(??_ini_ee_tempos^(0+128)+1)
 16770  0EB1  30AF               	movlw	175
 16771  0EB2  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16772  0EB3  30B6               	movlw	182
 16773  0EB4                     u20697:	
 16774  0EB4  0B89               	decfsz	9,f
 16775  0EB5  2EB4               	goto	u20697
 16776  0EB6  0BD7               	decfsz	??_ini_ee_tempos^(0+128),f
 16777  0EB7  2EB4               	goto	u20697
 16778  0EB8  0BD8               	decfsz	(??_ini_ee_tempos^(0+128)+1),f
 16779  0EB9  2EB4               	goto	u20697
 16780  0EBA  0000               	nop
 16781                           
 16782                           ;func.c: 2734: Lcd_Clear();
 16783  0EBB  31E1  21DF  318A   	fcall	_Lcd_Clear
 16784                           
 16785                           ;func.c: 2735: Lcd_White_Center_String(1,modelo_str[SOW280]);
 16786  0EBE  3058               	movlw	low (_modelo_str| (0+32768))
 16787  0EBF  0140               	movlb	0	; select bank0
 16788  0EC0  00B5               	movwf	Lcd_White_Center_String@a
 16789  0EC1  30D8               	movlw	high (_modelo_str| (0+32768))
 16790  0EC2  00B6               	movwf	Lcd_White_Center_String@a+1
 16791  0EC3  3001               	movlw	1
 16792  0EC4  31C0  2000  318A   	fcall	_Lcd_White_Center_String
 16793                           
 16794                           ;func.c: 2736: Lcd_White_Center_String(2,"Ver. 4.2.95");
 16795  0EC7  309F               	movlw	low (STR_29| (0+32768))
 16796  0EC8  0140               	movlb	0	; select bank0
 16797  0EC9  00B5               	movwf	Lcd_White_Center_String@a
 16798  0ECA  30E8               	movlw	high (STR_29| (0+32768))
 16799  0ECB  00B6               	movwf	Lcd_White_Center_String@a+1
 16800  0ECC  3002               	movlw	2
 16801  0ECD  31C0  2000  318A   	fcall	_Lcd_White_Center_String
 16802                           
 16803                           ;func.c: 2738: idioma = eeprom_read(250);
 16804  0ED0  30FA               	movlw	250
 16805  0ED1  31E1  2112  318A   	fcall	_eeprom_read
 16806  0ED4  0141               	movlb	1	; select bank1
 16807  0ED5  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16808  0ED6  0857               	movf	??_ini_ee_tempos^(0+128),w
 16809  0ED7  0143               	movlb	3	; select bank3
 16810  0ED8  00DA               	movwf	_idioma^(0+384)
 16811                           
 16812                           ;func.c: 2739: tipo_maquina = eeprom_read(198);
 16813  0ED9  30C6               	movlw	198
 16814  0EDA  31E1  2112  318A   	fcall	_eeprom_read
 16815  0EDD  0141               	movlb	1	; select bank1
 16816  0EDE  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16817  0EDF  0857               	movf	??_ini_ee_tempos^(0+128),w
 16818  0EE0  0143               	movlb	3	; select bank3
 16819  0EE1  00E0               	movwf	_tipo_maquina^(0+384)
 16820                           
 16821                           ;func.c: 2740: modo = eeprom_read(196);
 16822  0EE2  30C4               	movlw	196
 16823  0EE3  31E1  2112  318A   	fcall	_eeprom_read
 16824  0EE6  0141               	movlb	1	; select bank1
 16825  0EE7  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16826  0EE8  0857               	movf	??_ini_ee_tempos^(0+128),w
 16827  0EE9  0143               	movlb	3	; select bank3
 16828  0EEA  00DC               	movwf	_modo^(0+384)
 16829                           
 16830                           ;func.c: 2742: tmp_desce = carrega_EEPROM(200);
 16831  0EEB  30C8               	movlw	200
 16832  0EEC  3198  2001  318A   	fcall	_carrega_EEPROM
 16833  0EEF  0140               	movlb	0	; select bank0
 16834  0EF0  082D               	movf	?_carrega_EEPROM+1,w
 16835  0EF1  0143               	movlb	3	; select bank3
 16836  0EF2  00C3               	movwf	(_tmp_desce+1)^(0+384)
 16837  0EF3  0140               	movlb	0	; select bank0
 16838  0EF4  082C               	movf	?_carrega_EEPROM,w
 16839  0EF5  0143               	movlb	3	; select bank3
 16840  0EF6  00C2               	movwf	_tmp_desce^(0+384)
 16841                           
 16842                           ;func.c: 2743: tmp_solda = carrega_EEPROM(202);
 16843  0EF7  30CA               	movlw	202
 16844  0EF8  3198  2001  318A   	fcall	_carrega_EEPROM
 16845  0EFB  0140               	movlb	0	; select bank0
 16846  0EFC  082D               	movf	?_carrega_EEPROM+1,w
 16847  0EFD  0143               	movlb	3	; select bank3
 16848  0EFE  00C1               	movwf	(_tmp_solda+1)^(0+384)
 16849  0EFF  0140               	movlb	0	; select bank0
 16850  0F00  082C               	movf	?_carrega_EEPROM,w
 16851  0F01  0143               	movlb	3	; select bank3
 16852  0F02  00C0               	movwf	_tmp_solda^(0+384)
 16853                           
 16854                           ;func.c: 2744: ener_solda = carrega_EEPROM(204);
 16855  0F03  30CC               	movlw	204
 16856  0F04  3198  2001  318A   	fcall	_carrega_EEPROM
 16857  0F07  0140               	movlb	0	; select bank0
 16858  0F08  082D               	movf	?_carrega_EEPROM+1,w
 16859  0F09  0143               	movlb	3	; select bank3
 16860  0F0A  00BF               	movwf	(_ener_solda+1)^(0+384)
 16861  0F0B  0140               	movlb	0	; select bank0
 16862  0F0C  082C               	movf	?_carrega_EEPROM,w
 16863  0F0D  0143               	movlb	3	; select bank3
 16864  0F0E  00BE               	movwf	_ener_solda^(0+384)
 16865                           
 16866                           ;func.c: 2745: tmp_fixar = carrega_EEPROM(206);
 16867  0F0F  30CE               	movlw	206
 16868  0F10  3198  2001  318A   	fcall	_carrega_EEPROM
 16869  0F13  0140               	movlb	0	; select bank0
 16870  0F14  082D               	movf	?_carrega_EEPROM+1,w
 16871  0F15  0143               	movlb	3	; select bank3
 16872  0F16  00BD               	movwf	(_tmp_fixar+1)^(0+384)
 16873  0F17  0140               	movlb	0	; select bank0
 16874  0F18  082C               	movf	?_carrega_EEPROM,w
 16875  0F19  0143               	movlb	3	; select bank3
 16876  0F1A  00BC               	movwf	_tmp_fixar^(0+384)
 16877                           
 16878                           ;func.c: 2746: tmp_metal = carrega_EEPROM(208);
 16879  0F1B  30D0               	movlw	208
 16880  0F1C  3198  2001  318A   	fcall	_carrega_EEPROM
 16881  0F1F  0140               	movlb	0	; select bank0
 16882  0F20  082D               	movf	?_carrega_EEPROM+1,w
 16883  0F21  0143               	movlb	3	; select bank3
 16884  0F22  00BB               	movwf	(_tmp_metal+1)^(0+384)
 16885  0F23  0140               	movlb	0	; select bank0
 16886  0F24  082C               	movf	?_carrega_EEPROM,w
 16887  0F25  0143               	movlb	3	; select bank3
 16888  0F26  00BA               	movwf	_tmp_metal^(0+384)
 16889                           
 16890                           ;func.c: 2747: freq_inicial = carrega_EEPROM(218);
 16891  0F27  30DA               	movlw	218
 16892  0F28  3198  2001  318A   	fcall	_carrega_EEPROM
 16893  0F2B  0140               	movlb	0	; select bank0
 16894  0F2C  082D               	movf	?_carrega_EEPROM+1,w
 16895  0F2D  0143               	movlb	3	; select bank3
 16896  0F2E  00B7               	movwf	(_freq_inicial+1)^(0+384)
 16897  0F2F  0140               	movlb	0	; select bank0
 16898  0F30  082C               	movf	?_carrega_EEPROM,w
 16899  0F31  0143               	movlb	3	; select bank3
 16900  0F32  00B6               	movwf	_freq_inicial^(0+384)
 16901                           
 16902                           ;func.c: 2749: flag.value |= (7&carrega_EEPROM(210));
 16903  0F33  30D2               	movlw	210
 16904  0F34  3198  2001  318A   	fcall	_carrega_EEPROM
 16905  0F37  3007               	movlw	7
 16906  0F38  0140               	movlb	0	; select bank0
 16907  0F39  052C               	andwf	?_carrega_EEPROM,w
 16908  0F3A  0141               	movlb	1	; select bank1
 16909  0F3B  00D7               	movwf	??_ini_ee_tempos^(0+128)
 16910  0F3C  3000               	movlw	0
 16911  0F3D  0140               	movlb	0	; select bank0
 16912  0F3E  052D               	andwf	?_carrega_EEPROM+1,w
 16913  0F3F  0141               	movlb	1	; select bank1
 16914  0F40  00D8               	movwf	(??_ini_ee_tempos+1)^(0+128)
 16915  0F41  0857               	movf	??_ini_ee_tempos^(0+128),w
 16916  0F42  00D9               	movwf	(??_ini_ee_tempos+2)^(0+128)
 16917  0F43  0858               	movf	(??_ini_ee_tempos+1)^(0+128),w
 16918  0F44  00DA               	movwf	((??_ini_ee_tempos+2)^(0+128)+1)
 16919  0F45  01DB               	clrf	((??_ini_ee_tempos+2)^(0+128)+2)
 16920  0F46  01DC               	clrf	((??_ini_ee_tempos+2)^(0+128)+3)
 16921  0F47  0859               	movf	(??_ini_ee_tempos+2)^(0+128),w
 16922  0F48  0143               	movlb	3	; select bank3
 16923  0F49  04AC               	iorwf	_flag^(0+384),f	;volatile
 16924  0F4A  0141               	movlb	1	; select bank1
 16925  0F4B  085A               	movf	(??_ini_ee_tempos+3)^(0+128),w
 16926  0F4C  0143               	movlb	3	; select bank3
 16927  0F4D  04AD               	iorwf	(_flag+1)^(0+384),f	;volatile
 16928  0F4E  0141               	movlb	1	; select bank1
 16929  0F4F  085B               	movf	(??_ini_ee_tempos+4)^(0+128),w
 16930  0F50  0143               	movlb	3	; select bank3
 16931  0F51  04AE               	iorwf	(_flag+2)^(0+384),f	;volatile
 16932  0F52  0141               	movlb	1	; select bank1
 16933  0F53  085C               	movf	(??_ini_ee_tempos+5)^(0+128),w
 16934  0F54  0143               	movlb	3	; select bank3
 16935  0F55  04AF               	iorwf	(_flag+3)^(0+384),f	;volatile
 16936                           
 16937                           ;func.c: 2751: cont_pecas = carrega_EEPROM32(214);
 16938  0F56  30D6               	movlw	214
 16939  0F57  31CE  2654  318A   	fcall	_carrega_EEPROM32
 16940  0F5A  0140               	movlb	0	; select bank0
 16941  0F5B  082F               	movf	?_carrega_EEPROM32+3,w
 16942  0F5C  0143               	movlb	3	; select bank3
 16943  0F5D  00A7               	movwf	(_cont_pecas+3)^(0+384)
 16944  0F5E  0140               	movlb	0	; select bank0
 16945  0F5F  082E               	movf	?_carrega_EEPROM32+2,w
 16946  0F60  0143               	movlb	3	; select bank3
 16947  0F61  00A6               	movwf	(_cont_pecas+2)^(0+384)
 16948  0F62  0140               	movlb	0	; select bank0
 16949  0F63  082D               	movf	?_carrega_EEPROM32+1,w
 16950  0F64  0143               	movlb	3	; select bank3
 16951  0F65  00A5               	movwf	(_cont_pecas+1)^(0+384)
 16952  0F66  0140               	movlb	0	; select bank0
 16953  0F67  082C               	movf	?_carrega_EEPROM32,w
 16954  0F68  0143               	movlb	3	; select bank3
 16955  0F69  00A4               	movwf	_cont_pecas^(0+384)
 16956                           
 16957                           ;func.c: 2752: n_pecas = carrega_EEPROM32(5);
 16958  0F6A  3005               	movlw	5
 16959  0F6B  31CE  2654  318A   	fcall	_carrega_EEPROM32
 16960  0F6E  0140               	movlb	0	; select bank0
 16961  0F6F  082F               	movf	?_carrega_EEPROM32+3,w
 16962  0F70  0143               	movlb	3	; select bank3
 16963  0F71  00A3               	movwf	(_n_pecas+3)^(0+384)
 16964  0F72  0140               	movlb	0	; select bank0
 16965  0F73  082E               	movf	?_carrega_EEPROM32+2,w
 16966  0F74  0143               	movlb	3	; select bank3
 16967  0F75  00A2               	movwf	(_n_pecas+2)^(0+384)
 16968  0F76  0140               	movlb	0	; select bank0
 16969  0F77  082D               	movf	?_carrega_EEPROM32+1,w
 16970  0F78  0143               	movlb	3	; select bank3
 16971  0F79  00A1               	movwf	(_n_pecas+1)^(0+384)
 16972  0F7A  0140               	movlb	0	; select bank0
 16973  0F7B  082C               	movf	?_carrega_EEPROM32,w
 16974  0F7C  0143               	movlb	3	; select bank3
 16975  0F7D  00A0               	movwf	_n_pecas^(0+384)
 16976                           
 16977                           ;func.c: 2753: n_pecas_l = carrega_EEPROM32(1);
 16978  0F7E  3001               	movlw	1
 16979  0F7F  31CE  2654  318A   	fcall	_carrega_EEPROM32
 16980  0F82  0140               	movlb	0	; select bank0
 16981  0F83  082F               	movf	?_carrega_EEPROM32+3,w
 16982  0F84  0144               	movlb	4	; select bank4
 16983  0F85  00B3               	movwf	(_n_pecas_l+3)^(0+512)
 16984  0F86  0140               	movlb	0	; select bank0
 16985  0F87  082E               	movf	?_carrega_EEPROM32+2,w
 16986  0F88  0144               	movlb	4	; select bank4
 16987  0F89  00B2               	movwf	(_n_pecas_l+2)^(0+512)
 16988  0F8A  0140               	movlb	0	; select bank0
 16989  0F8B  082D               	movf	?_carrega_EEPROM32+1,w
 16990  0F8C  0144               	movlb	4	; select bank4
 16991  0F8D  00B1               	movwf	(_n_pecas_l+1)^(0+512)
 16992  0F8E  0140               	movlb	0	; select bank0
 16993  0F8F  082C               	movf	?_carrega_EEPROM32,w
 16994  0F90  0144               	movlb	4	; select bank4
 16995  0F91  00B0               	movwf	_n_pecas_l^(0+512)
 16996                           
 16997                           ;func.c: 2754: t100ms_solda = carrega_EEPROM32(220);
 16998  0F92  30DC               	movlw	220
 16999  0F93  31CE  2654  318A   	fcall	_carrega_EEPROM32
 17000  0F96  0140               	movlb	0	; select bank0
 17001  0F97  082F               	movf	?_carrega_EEPROM32+3,w
 17002  0F98  0144               	movlb	4	; select bank4
 17003  0F99  00AF               	movwf	(_t100ms_solda+3)^(0+512)
 17004  0F9A  0140               	movlb	0	; select bank0
 17005  0F9B  082E               	movf	?_carrega_EEPROM32+2,w
 17006  0F9C  0144               	movlb	4	; select bank4
 17007  0F9D  00AE               	movwf	(_t100ms_solda+2)^(0+512)
 17008  0F9E  0140               	movlb	0	; select bank0
 17009  0F9F  082D               	movf	?_carrega_EEPROM32+1,w
 17010  0FA0  0144               	movlb	4	; select bank4
 17011  0FA1  00AD               	movwf	(_t100ms_solda+1)^(0+512)
 17012  0FA2  0140               	movlb	0	; select bank0
 17013  0FA3  082C               	movf	?_carrega_EEPROM32,w
 17014  0FA4  0144               	movlb	4	; select bank4
 17015  0FA5  00AC               	movwf	_t100ms_solda^(0+512)
 17016                           
 17017                           ;func.c: 2756: k_temp = (float)(((int)carrega_EEPROM(240)))/100;
 17018  0FA6  3000               	movlw	0
 17019  0FA7  0141               	movlb	1	; select bank1
 17020  0FA8  00AA               	movwf	___ftdiv@f2^(0+128)
 17021  0FA9  30C8               	movlw	200
 17022  0FAA  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 17023  0FAB  3042               	movlw	66
 17024  0FAC  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 17025  0FAD  30F0               	movlw	240
 17026  0FAE  3198  2001  318A   	fcall	_carrega_EEPROM
 17027  0FB1  0140               	movlb	0	; select bank0
 17028  0FB2  082D               	movf	?_carrega_EEPROM+1,w
 17029  0FB3  00B4               	movwf	___awtoft@c+1
 17030  0FB4  082C               	movf	?_carrega_EEPROM,w
 17031  0FB5  00B3               	movwf	___awtoft@c
 17032  0FB6  31D2  222F  318A   	fcall	___awtoft
 17033  0FB9  0140               	movlb	0	; select bank0
 17034  0FBA  0833               	movf	?___awtoft,w
 17035  0FBB  0141               	movlb	1	; select bank1
 17036  0FBC  00AD               	movwf	___ftdiv@f1^(0+128)
 17037  0FBD  0140               	movlb	0	; select bank0
 17038  0FBE  0834               	movf	?___awtoft+1,w
 17039  0FBF  0141               	movlb	1	; select bank1
 17040  0FC0  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 17041  0FC1  0140               	movlb	0	; select bank0
 17042  0FC2  0835               	movf	?___awtoft+2,w
 17043  0FC3  0141               	movlb	1	; select bank1
 17044  0FC4  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 17045  0FC5  31BA  2243  318A   	fcall	___ftdiv
 17046  0FC8  0141               	movlb	1	; select bank1
 17047  0FC9  082A               	movf	?___ftdiv^(0+128),w
 17048  0FCA  0145               	movlb	5	; select bank5
 17049  0FCB  00CC               	movwf	_k_temp^(0+640)
 17050  0FCC  0141               	movlb	1	; select bank1
 17051  0FCD  082B               	movf	(?___ftdiv+1)^(0+128),w
 17052  0FCE  0145               	movlb	5	; select bank5
 17053  0FCF  00CD               	movwf	(_k_temp+1)^(0+640)
 17054  0FD0  0141               	movlb	1	; select bank1
 17055  0FD1  082C               	movf	(?___ftdiv+2)^(0+128),w
 17056  0FD2  0145               	movlb	5	; select bank5
 17057  0FD3  00CE               	movwf	(_k_temp+2)^(0+640)
 17058                           
 17059                           ;func.c: 2758: switch(b1){
 17060  0FD4  2FF3               	goto	l17332
 17061  0FD5                     l2018:	
 17062                           ;func.c: 2759: case 18:
 17063                           
 17064                           
 17065                           ;func.c: 2760: ciclador = 1;
 17066  0FD5  0143               	movlb	3	; select bank3
 17067  0FD6  01E1               	clrf	_ciclador^(0+384)
 17068  0FD7  0AE1               	incf	_ciclador^(0+384),f
 17069                           
 17070                           ;func.c: 2761: bip_tecla();
 17071  0FD8  31D2  2251  318A   	fcall	_bip_tecla
 17072                           
 17073                           ;func.c: 2762: bip_tecla();
 17074  0FDB  31D2  2251  318A   	fcall	_bip_tecla
 17075                           
 17076                           ;func.c: 2763: bip_tecla();
 17077  0FDE  31D2  2251         	fcall	_bip_tecla
 17078                           
 17079                           ;func.c: 2764: break;
 17080  0FE0  0008               	return
 17081  0FE1                     l17320:	
 17082                           ;func.c: 2765: case 33:
 17083                           
 17084                           
 17085                           ;func.c: 2766: selectModo();
 17086  0FE1  31B5  258D         	fcall	_selectModo
 17087                           
 17088                           ;func.c: 2767: break;
 17089  0FE3  0008               	return
 17090  0FE4                     l17322:	
 17091                           ;func.c: 2768: case 36:
 17092                           
 17093                           
 17094                           ;func.c: 2769: ciclador = 2;
 17095  0FE4  3002               	movlw	2
 17096  0FE5  0141               	movlb	1	; select bank1
 17097  0FE6  00D7               	movwf	??_ini_ee_tempos^(0+128)
 17098  0FE7  0857               	movf	??_ini_ee_tempos^(0+128),w
 17099  0FE8  0143               	movlb	3	; select bank3
 17100  0FE9  00E1               	movwf	_ciclador^(0+384)
 17101                           
 17102                           ;func.c: 2770: bip_tecla();
 17103  0FEA  31D2  2251  318A   	fcall	_bip_tecla
 17104                           
 17105                           ;func.c: 2771: bip_tecla();
 17106  0FED  31D2  2251  318A   	fcall	_bip_tecla
 17107                           
 17108                           ;func.c: 2772: bip_tecla();
 17109  0FF0  31D2  2251         	fcall	_bip_tecla
 17110                           
 17111                           ;func.c: 2774: }
 17112                           
 17113                           ;func.c: 2773: break;
 17114  0FF2  0008               	return
 17115  0FF3                     l17332:	
 17116  0FF3  0142               	movlb	2	; select bank2
 17117  0FF4  082C               	movf	ini_ee_tempos@b1^(0+256),w
 17118                           
 17119                           ; Switch size 1, requested type "space"
 17120                           ; Number of cases is 3, Range of values is 18 to 36
 17121                           ; switch strategies available:
 17122                           ; Name         Instructions Cycles
 17123                           ; simple_byte           10     6 (average)
 17124                           ; direct_byte           47     9 (fixed)
 17125                           ; jumptable            263     9 (fixed)
 17126                           ;	Chosen strategy is simple_byte
 17127  0FF5  3A12               	xorlw	18	; case 18
 17128  0FF6  1903               	skipnz
 17129  0FF7  2FD5               	goto	l2018
 17130  0FF8  3A33               	xorlw	51	; case 33
 17131  0FF9  1903               	skipnz
 17132  0FFA  2FE1               	goto	l17320
 17133  0FFB  3A05               	xorlw	5	; case 36
 17134  0FFC  1903               	skipnz
 17135  0FFD  2FE4               	goto	l17322
 17136  0FFE  2FFF               	goto	l2022
 17137  0FFF                     l2022:	
 17138  0FFF  0008               	return
 17139  1000                     __end_of_ini_ee_tempos:	
 17140                           
 17141                           	psect	swtext2
 17142  61F5                     __pswtext2:	
 17143  61F5                     S18604:	
 17144  61F5  318A  2A8D         	ljmp	l17258
 17145  61F7  318A  2A8D         	ljmp	l17258
 17146  61F9  318A  2A92         	ljmp	l17260
 17147  61FB  318A  2A92         	ljmp	l17260
 17148  61FD  318A  2A97         	ljmp	l17262
 17149                           
 17150                           	psect	text18
 17151  358D                     __ptext18:	
 17152 ;; *************** function _selectModo *****************
 17153 ;; Defined at:
 17154 ;;		line 2602 in file "func.c"
 17155 ;; Parameters:    Size  Location     Type
 17156 ;;		None
 17157 ;; Auto vars:     Size  Location     Type
 17158 ;;  s               8   38[BANK0 ] PTR unsigned char [4]
 17159 ;;		 -> modo_contByPulse_str(34), modo_contnuo_str(34), modo_rapido_str(34), modo_normal_str(34), 
 17160 ;;  b               1   46[BANK0 ] unsigned char 
 17161 ;;  loop            1   37[BANK0 ] unsigned char 
 17162 ;; Return value:  Size  Location     Type
 17163 ;;                  1    wreg      void 
 17164 ;; Registers used:
 17165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17166 ;; Tracked objects:
 17167 ;;		On entry : 0/0
 17168 ;;		On exit  : 0/0
 17169 ;;		Unchanged: 0/0
 17170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17172 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17173 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17174 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17175 ;;Total ram usage:       16 bytes
 17176 ;; Hardware stack levels used:    1
 17177 ;; Hardware stack levels required when called:    7
 17178 ;; This function calls:
 17179 ;;		_Lcd_Clear
 17180 ;;		___wmul
 17181 ;;		_eeprom_write
 17182 ;;		_escreve_LCD
 17183 ;;		_liberar_tecla
 17184 ;;		_teclado
 17185 ;; This function is called by:
 17186 ;;		_ini_ee_tempos
 17187 ;; This function uses a non-reentrant model
 17188 ;;
 17189                           
 17190                           
 17191                           ;psect for function _selectModo
 17192  358D                     _selectModo:	
 17193                           
 17194                           ;func.c: 2603: char loop = 1;
 17195                           
 17196                           ;incstack = 0
 17197                           ; Regs used in _selectModo: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17198  358D  0140               	movlb	0	; select bank0
 17199  358E  01C5               	clrf	selectModo@loop
 17200  358F  0AC5               	incf	selectModo@loop,f
 17201                           
 17202                           ;func.c: 2604: char b;
 17203                           ;func.c: 2605: char * s[4];
 17204                           ;func.c: 2607: s[0] = modo_normal_str[idioma];
 17205  3590  0143               	movlb	3	; select bank3
 17206  3591  085A               	movf	_idioma^(0+384),w
 17207  3592  0140               	movlb	0	; select bank0
 17208  3593  00BF               	movwf	??_selectModo
 17209  3594  01C0               	clrf	??_selectModo+1
 17210  3595  083F               	movf	??_selectModo,w
 17211  3596  00AB               	movwf	___wmul@multiplier
 17212  3597  0840               	movf	??_selectModo+1,w
 17213  3598  00AC               	movwf	___wmul@multiplier+1
 17214  3599  3011               	movlw	17
 17215  359A  00AD               	movwf	___wmul@multiplicand
 17216  359B  3000               	movlw	0
 17217  359C  00AE               	movwf	___wmul@multiplicand+1
 17218  359D  31D0  20FE  31B5   	fcall	___wmul
 17219  35A0  3024               	movlw	low (_modo_normal_str| (0+32768))
 17220  35A1  0140               	movlb	0	; select bank0
 17221  35A2  00C1               	movwf	??_selectModo+2
 17222  35A3  30DF               	movlw	high (_modo_normal_str| (0+32768))
 17223  35A4  00C2               	movwf	??_selectModo+3
 17224  35A5  082B               	movf	?___wmul,w
 17225  35A6  0741               	addwf	??_selectModo+2,w
 17226  35A7  00C3               	movwf	??_selectModo+4
 17227  35A8  082C               	movf	?___wmul+1,w
 17228  35A9  3D42               	addwfc	??_selectModo+3,w
 17229  35AA  00C4               	movwf	??_selectModo+5
 17230  35AB  0843               	movf	??_selectModo+4,w
 17231  35AC  00C6               	movwf	selectModo@s
 17232  35AD  0844               	movf	??_selectModo+5,w
 17233  35AE  00C7               	movwf	selectModo@s+1
 17234                           
 17235                           ;func.c: 2608: s[1] = modo_rapido_str[idioma];
 17236  35AF  0143               	movlb	3	; select bank3
 17237  35B0  085A               	movf	_idioma^(0+384),w
 17238  35B1  0140               	movlb	0	; select bank0
 17239  35B2  00BF               	movwf	??_selectModo
 17240  35B3  01C0               	clrf	??_selectModo+1
 17241  35B4  083F               	movf	??_selectModo,w
 17242  35B5  00AB               	movwf	___wmul@multiplier
 17243  35B6  0840               	movf	??_selectModo+1,w
 17244  35B7  00AC               	movwf	___wmul@multiplier+1
 17245  35B8  3011               	movlw	17
 17246  35B9  00AD               	movwf	___wmul@multiplicand
 17247  35BA  3000               	movlw	0
 17248  35BB  00AE               	movwf	___wmul@multiplicand+1
 17249  35BC  31D0  20FE  31B5   	fcall	___wmul
 17250  35BF  3002               	movlw	low (_modo_rapido_str| (0+32768))
 17251  35C0  0140               	movlb	0	; select bank0
 17252  35C1  00C1               	movwf	??_selectModo+2
 17253  35C2  30DF               	movlw	high (_modo_rapido_str| (0+32768))
 17254  35C3  00C2               	movwf	??_selectModo+3
 17255  35C4  082B               	movf	?___wmul,w
 17256  35C5  0741               	addwf	??_selectModo+2,w
 17257  35C6  00C3               	movwf	??_selectModo+4
 17258  35C7  082C               	movf	?___wmul+1,w
 17259  35C8  3D42               	addwfc	??_selectModo+3,w
 17260  35C9  00C4               	movwf	??_selectModo+5
 17261  35CA  0843               	movf	??_selectModo+4,w
 17262  35CB  00C8               	movwf	low ((selectModo@s| 0+2))
 17263  35CC  0844               	movf	??_selectModo+5,w
 17264  35CD  00C9               	movwf	(low ((selectModo@s| 0+2))+1)
 17265                           
 17266                           ;func.c: 2609: s[2] = modo_contnuo_str[idioma];
 17267  35CE  0143               	movlb	3	; select bank3
 17268  35CF  085A               	movf	_idioma^(0+384),w
 17269  35D0  0140               	movlb	0	; select bank0
 17270  35D1  00BF               	movwf	??_selectModo
 17271  35D2  01C0               	clrf	??_selectModo+1
 17272  35D3  083F               	movf	??_selectModo,w
 17273  35D4  00AB               	movwf	___wmul@multiplier
 17274  35D5  0840               	movf	??_selectModo+1,w
 17275  35D6  00AC               	movwf	___wmul@multiplier+1
 17276  35D7  3011               	movlw	17
 17277  35D8  00AD               	movwf	___wmul@multiplicand
 17278  35D9  3000               	movlw	0
 17279  35DA  00AE               	movwf	___wmul@multiplicand+1
 17280  35DB  31D0  20FE  31B5   	fcall	___wmul
 17281  35DE  30E0               	movlw	low (_modo_contnuo_str| (0+32768))
 17282  35DF  0140               	movlb	0	; select bank0
 17283  35E0  00C1               	movwf	??_selectModo+2
 17284  35E1  30DE               	movlw	high (_modo_contnuo_str| (0+32768))
 17285  35E2  00C2               	movwf	??_selectModo+3
 17286  35E3  082B               	movf	?___wmul,w
 17287  35E4  0741               	addwf	??_selectModo+2,w
 17288  35E5  00C3               	movwf	??_selectModo+4
 17289  35E6  082C               	movf	?___wmul+1,w
 17290  35E7  3D42               	addwfc	??_selectModo+3,w
 17291  35E8  00C4               	movwf	??_selectModo+5
 17292  35E9  0843               	movf	??_selectModo+4,w
 17293  35EA  00CA               	movwf	low ((selectModo@s| 0+4))
 17294  35EB  0844               	movf	??_selectModo+5,w
 17295  35EC  00CB               	movwf	(low ((selectModo@s| 0+4))+1)
 17296                           
 17297                           ;func.c: 2610: s[3] = modo_contByPulse_str[idioma];
 17298  35ED  0143               	movlb	3	; select bank3
 17299  35EE  085A               	movf	_idioma^(0+384),w
 17300  35EF  0140               	movlb	0	; select bank0
 17301  35F0  00BF               	movwf	??_selectModo
 17302  35F1  01C0               	clrf	??_selectModo+1
 17303  35F2  083F               	movf	??_selectModo,w
 17304  35F3  00AB               	movwf	___wmul@multiplier
 17305  35F4  0840               	movf	??_selectModo+1,w
 17306  35F5  00AC               	movwf	___wmul@multiplier+1
 17307  35F6  3011               	movlw	17
 17308  35F7  00AD               	movwf	___wmul@multiplicand
 17309  35F8  3000               	movlw	0
 17310  35F9  00AE               	movwf	___wmul@multiplicand+1
 17311  35FA  31D0  20FE  31B5   	fcall	___wmul
 17312  35FD  30BE               	movlw	low (_modo_contByPulse_str| (0+32768))
 17313  35FE  0140               	movlb	0	; select bank0
 17314  35FF  00C1               	movwf	??_selectModo+2
 17315  3600  30DE               	movlw	high (_modo_contByPulse_str| (0+32768))
 17316  3601  00C2               	movwf	??_selectModo+3
 17317  3602  082B               	movf	?___wmul,w
 17318  3603  0741               	addwf	??_selectModo+2,w
 17319  3604  00C3               	movwf	??_selectModo+4
 17320  3605  082C               	movf	?___wmul+1,w
 17321  3606  3D42               	addwfc	??_selectModo+3,w
 17322  3607  00C4               	movwf	??_selectModo+5
 17323  3608  0843               	movf	??_selectModo+4,w
 17324  3609  00CC               	movwf	low ((selectModo@s| 0+6))
 17325  360A  0844               	movf	??_selectModo+5,w
 17326  360B  00CD               	movwf	(low ((selectModo@s| 0+6))+1)
 17327                           
 17328                           ;func.c: 2612: Lcd_Clear();
 17329  360C  31E1  21DF  31B5   	fcall	_Lcd_Clear
 17330                           
 17331                           ;func.c: 2613: escreve_LCD(1,1,modo_op_str[idioma]);
 17332  360F  0140               	movlb	0	; select bank0
 17333  3610  01B5               	clrf	escreve_LCD@coluna
 17334  3611  0AB5               	incf	escreve_LCD@coluna,f
 17335  3612  0143               	movlb	3	; select bank3
 17336  3613  085A               	movf	_idioma^(0+384),w
 17337  3614  0140               	movlb	0	; select bank0
 17338  3615  00BF               	movwf	??_selectModo
 17339  3616  01C0               	clrf	??_selectModo+1
 17340  3617  083F               	movf	??_selectModo,w
 17341  3618  00AB               	movwf	___wmul@multiplier
 17342  3619  0840               	movf	??_selectModo+1,w
 17343  361A  00AC               	movwf	___wmul@multiplier+1
 17344  361B  3011               	movlw	17
 17345  361C  00AD               	movwf	___wmul@multiplicand
 17346  361D  3000               	movlw	0
 17347  361E  00AE               	movwf	___wmul@multiplicand+1
 17348  361F  31D0  20FE  31B5   	fcall	___wmul
 17349  3622  3046               	movlw	low (_modo_op_str| (0+32768))
 17350  3623  0140               	movlb	0	; select bank0
 17351  3624  00C1               	movwf	??_selectModo+2
 17352  3625  30DF               	movlw	high (_modo_op_str| (0+32768))
 17353  3626  00C2               	movwf	??_selectModo+3
 17354  3627  082B               	movf	?___wmul,w
 17355  3628  0741               	addwf	??_selectModo+2,w
 17356  3629  00B6               	movwf	escreve_LCD@str
 17357  362A  082C               	movf	?___wmul+1,w
 17358  362B  3D42               	addwfc	??_selectModo+3,w
 17359  362C  00B7               	movwf	escreve_LCD@str+1
 17360  362D  3001               	movlw	1
 17361  362E  31E7  27C1  31B5   	fcall	_escreve_LCD
 17362                           
 17363                           ;func.c: 2614: escreve_LCD(2,1,s[modo]);
 17364  3631  0140               	movlb	0	; select bank0
 17365  3632  01B5               	clrf	escreve_LCD@coluna
 17366  3633  0AB5               	incf	escreve_LCD@coluna,f
 17367  3634  0143               	movlb	3	; select bank3
 17368  3635  355C               	lslf	_modo^(0+384),w
 17369  3636  3E46               	addlw	(low (selectModo@s| 0))& (0+255)
 17370  3637  0086               	movwf	6
 17371  3638  0187               	clrf	7
 17372  3639  3F40               	moviw [0]fsr1
 17373  363A  0140               	movlb	0	; select bank0
 17374  363B  00B6               	movwf	escreve_LCD@str
 17375  363C  3F41               	moviw [1]fsr1
 17376  363D  00B7               	movwf	escreve_LCD@str+1
 17377  363E  3002               	movlw	2
 17378  363F  31E7  27C1  31B5   	fcall	_escreve_LCD
 17379  3642                     l17044:	
 17380                           ;func.c: 2616: while(loop){
 17381                           
 17382  3642  0140               	movlb	0	; select bank0
 17383  3643  0845               	movf	selectModo@loop,w
 17384  3644  1903               	btfsc	3,2
 17385  3645  2EA8               	goto	l17046
 17386                           
 17387                           ;func.c: 2617: b = teclado();
 17388  3646  31C2  22CC  31B5   	fcall	_teclado
 17389  3649  0140               	movlb	0	; select bank0
 17390  364A  00BF               	movwf	??_selectModo
 17391  364B  083F               	movf	??_selectModo,w
 17392  364C  00CE               	movwf	selectModo@b
 17393                           
 17394                           ;func.c: 2618: switch(b){
 17395  364D  2E8F               	goto	l17038
 17396  364E                     l17018:	
 17397                           ;func.c: 2619: case 17:
 17398                           
 17399                           
 17400                           ;func.c: 2620: if(modo == NORMAL)
 17401  364E  0143               	movlb	3	; select bank3
 17402  364F  085C               	movf	_modo^(0+384),w
 17403  3650  1D03               	btfss	3,2
 17404  3651  2E59               	goto	l17022
 17405                           
 17406                           ;func.c: 2621: modo = TAMANHO_MODO;
 17407  3652  3003               	movlw	3
 17408  3653  0140               	movlb	0	; select bank0
 17409  3654  00BF               	movwf	??_selectModo
 17410  3655  083F               	movf	??_selectModo,w
 17411  3656  0143               	movlb	3	; select bank3
 17412  3657  00DC               	movwf	_modo^(0+384)
 17413  3658  2E5B               	goto	l17024
 17414  3659                     l17022:	
 17415                           
 17416                           ;func.c: 2622: else modo--;
 17417  3659  3001               	movlw	1
 17418  365A  02DC               	subwf	_modo^(0+384),f
 17419  365B                     l17024:	
 17420                           
 17421                           ;func.c: 2623: escreve_LCD(2,1,s[modo]);
 17422  365B  0140               	movlb	0	; select bank0
 17423  365C  01B5               	clrf	escreve_LCD@coluna
 17424  365D  0AB5               	incf	escreve_LCD@coluna,f
 17425  365E  0143               	movlb	3	; select bank3
 17426  365F  355C               	lslf	_modo^(0+384),w
 17427  3660  3E46               	addlw	(low (selectModo@s| 0))& (0+255)
 17428  3661  0086               	movwf	6
 17429  3662  0187               	clrf	7
 17430  3663  3F40               	moviw [0]fsr1
 17431  3664  0140               	movlb	0	; select bank0
 17432  3665  00B6               	movwf	escreve_LCD@str
 17433  3666  3F41               	moviw [1]fsr1
 17434  3667  00B7               	movwf	escreve_LCD@str+1
 17435  3668  3002               	movlw	2
 17436  3669  31E7  27C1  31B5   	fcall	_escreve_LCD
 17437                           
 17438                           ;func.c: 2624: break;
 17439  366C  2E9A               	goto	l17040
 17440  366D                     l17026:	
 17441                           ;func.c: 2625: case 20:
 17442                           
 17443                           
 17444                           ;func.c: 2626: if(modo == TAMANHO_MODO)
 17445  366D  3003               	movlw	3
 17446  366E  0143               	movlb	3	; select bank3
 17447  366F  065C               	xorwf	_modo^(0+384),w
 17448  3670  1D03               	btfss	3,2
 17449  3671  2E74               	goto	l17030
 17450                           
 17451                           ;func.c: 2627: modo = NORMAL;
 17452  3672  01DC               	clrf	_modo^(0+384)
 17453  3673  2E7A               	goto	l17032
 17454  3674                     l17030:	
 17455                           
 17456                           ;func.c: 2628: else modo++;
 17457  3674  3001               	movlw	1
 17458  3675  0140               	movlb	0	; select bank0
 17459  3676  00BF               	movwf	??_selectModo
 17460  3677  083F               	movf	??_selectModo,w
 17461  3678  0143               	movlb	3	; select bank3
 17462  3679  07DC               	addwf	_modo^(0+384),f
 17463  367A                     l17032:	
 17464                           
 17465                           ;func.c: 2629: escreve_LCD(2,1,s[modo]);
 17466  367A  0140               	movlb	0	; select bank0
 17467  367B  01B5               	clrf	escreve_LCD@coluna
 17468  367C  0AB5               	incf	escreve_LCD@coluna,f
 17469  367D  0143               	movlb	3	; select bank3
 17470  367E  355C               	lslf	_modo^(0+384),w
 17471  367F  3E46               	addlw	(low (selectModo@s| 0))& (0+255)
 17472  3680  0086               	movwf	6
 17473  3681  0187               	clrf	7
 17474  3682  3F40               	moviw [0]fsr1
 17475  3683  0140               	movlb	0	; select bank0
 17476  3684  00B6               	movwf	escreve_LCD@str
 17477  3685  3F41               	moviw [1]fsr1
 17478  3686  00B7               	movwf	escreve_LCD@str+1
 17479  3687  3002               	movlw	2
 17480  3688  31E7  27C1  31B5   	fcall	_escreve_LCD
 17481                           
 17482                           ;func.c: 2630: break;
 17483  368B  2E9A               	goto	l17040
 17484  368C                     l17034:	
 17485                           ;func.c: 2631: case 18:
 17486                           
 17487                           
 17488                           ;func.c: 2632: loop = 0;
 17489  368C  0140               	movlb	0	; select bank0
 17490  368D  01C5               	clrf	selectModo@loop
 17491                           
 17492                           ;func.c: 2636: }
 17493                           
 17494                           ;func.c: 2635: break;
 17495                           
 17496                           ;func.c: 2634: default:
 17497                           
 17498                           ;func.c: 2633: break;
 17499  368E  2E9A               	goto	l17040
 17500  368F                     l17038:	
 17501  368F  084E               	movf	selectModo@b,w
 17502                           
 17503                           ; Switch size 1, requested type "space"
 17504                           ; Number of cases is 3, Range of values is 17 to 20
 17505                           ; switch strategies available:
 17506                           ; Name         Instructions Cycles
 17507                           ; simple_byte           10     6 (average)
 17508                           ; direct_byte           17     9 (fixed)
 17509                           ; jumptable            263     9 (fixed)
 17510                           ;	Chosen strategy is simple_byte
 17511  3690  3A11               	xorlw	17	; case 17
 17512  3691  1903               	skipnz
 17513  3692  2E4E               	goto	l17018
 17514  3693  3A03               	xorlw	3	; case 18
 17515  3694  1903               	skipnz
 17516  3695  2E8C               	goto	l17034
 17517  3696  3A06               	xorlw	6	; case 20
 17518  3697  1903               	skipnz
 17519  3698  2E6D               	goto	l17026
 17520  3699  2E9A               	goto	l17040
 17521  369A                     l17040:	
 17522                           
 17523                           ;func.c: 2637: if(b > 8)
 17524  369A  3009               	movlw	9
 17525  369B  0140               	movlb	0	; select bank0
 17526  369C  024E               	subwf	selectModo@b,w
 17527  369D  1C03               	skipc
 17528  369E  2E42               	goto	l17044
 17529                           
 17530                           ;func.c: 2638: liberar_tecla(b,100);
 17531  369F  3064               	movlw	100
 17532  36A0  00B3               	movwf	liberar_tecla@t
 17533  36A1  3000               	movlw	0
 17534  36A2  00B4               	movwf	liberar_tecla@t+1
 17535  36A3  084E               	movf	selectModo@b,w
 17536  36A4  31D7  2735  31B5   	fcall	_liberar_tecla
 17537  36A7  2E42               	goto	l17044
 17538  36A8                     l17046:	
 17539                           
 17540                           ;func.c: 2639: }
 17541                           ;func.c: 2640: eeprom_write(196,modo);
 17542  36A8  0143               	movlb	3	; select bank3
 17543  36A9  085C               	movf	_modo^(0+384),w
 17544  36AA  0140               	movlb	0	; select bank0
 17545  36AB  00BF               	movwf	??_selectModo
 17546  36AC  083F               	movf	??_selectModo,w
 17547  36AD  00AB               	movwf	eeprom_write@value
 17548  36AE  30C4               	movlw	196
 17549  36AF  31D2  2299  31B5   	fcall	_eeprom_write
 17550                           
 17551                           ;func.c: 2641: LATBbits.LATB7 = 1;
 17552  36B2  0140               	movlb	0	; select bank0
 17553  36B3  1797               	bsf	23,7	;volatile
 17554                           
 17555                           ;func.c: 2642: _delay((unsigned long)((500)*(20000000/4000.0)));
 17556  36B4  300D               	movlw	13
 17557  36B5  0140               	movlb	0	; select bank0
 17558  36B6  00C0               	movwf	??_selectModo+1
 17559  36B7  30AF               	movlw	175
 17560  36B8  00BF               	movwf	??_selectModo
 17561  36B9  30B6               	movlw	182
 17562  36BA                     u20707:	
 17563  36BA  0B89               	decfsz	9,f
 17564  36BB  2EBA               	goto	u20707
 17565  36BC  0BBF               	decfsz	??_selectModo,f
 17566  36BD  2EBA               	goto	u20707
 17567  36BE  0BC0               	decfsz	??_selectModo+1,f
 17568  36BF  2EBA               	goto	u20707
 17569  36C0  0000               	nop
 17570                           
 17571                           ;func.c: 2643: LATBbits.LATB7 = 0;
 17572  36C1  0140               	movlb	0	; select bank0
 17573  36C2  1397               	bcf	23,7	;volatile
 17574  36C3  0008               	return
 17575  36C4                     __end_of_selectModo:	
 17576                           
 17577                           	psect	text19
 17578  550D                     __ptext19:	
 17579 ;; *************** function _salva_EEPROM *****************
 17580 ;; Defined at:
 17581 ;;		line 328 in file "func.c"
 17582 ;; Parameters:    Size  Location     Type
 17583 ;;  valor           2   14[BANK0 ] unsigned int 
 17584 ;;  address         1   16[BANK0 ] unsigned char 
 17585 ;; Auto vars:     Size  Location     Type
 17586 ;;		None
 17587 ;; Return value:  Size  Location     Type
 17588 ;;                  1    wreg      void 
 17589 ;; Registers used:
 17590 ;;		wreg, status,2, status,0, pclath, cstack
 17591 ;; Tracked objects:
 17592 ;;		On entry : 0/0
 17593 ;;		On exit  : 0/0
 17594 ;;		Unchanged: 0/0
 17595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17596 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17598 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17599 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17600 ;;Total ram usage:        5 bytes
 17601 ;; Hardware stack levels used:    1
 17602 ;; Hardware stack levels required when called:    4
 17603 ;; This function calls:
 17604 ;;		_eeprom_write
 17605 ;; This function is called by:
 17606 ;;		_telas
 17607 ;;		_teste_US
 17608 ;;		_ini_ee_tempos
 17609 ;;		_rotina_tela
 17610 ;; This function uses a non-reentrant model
 17611 ;;
 17612                           
 17613                           
 17614                           ;psect for function _salva_EEPROM
 17615  550D                     _salva_EEPROM:	
 17616                           
 17617                           ;func.c: 329: ee.int0 = valor;
 17618                           
 17619                           ;incstack = 0
 17620                           ; Regs used in _salva_EEPROM: [wreg+status,2+status,0+pclath+cstack]
 17621  550D  0140               	movlb	0	; select bank0
 17622  550E  082F               	movf	salva_EEPROM@valor+1,w
 17623  550F  0143               	movlb	3	; select bank3
 17624  5510  00A9               	movwf	(_ee+1)^(0+384)	;volatile
 17625  5511  0140               	movlb	0	; select bank0
 17626  5512  082E               	movf	salva_EEPROM@valor,w
 17627  5513  0143               	movlb	3	; select bank3
 17628  5514  00A8               	movwf	_ee^(0+384)	;volatile
 17629                           
 17630                           ;func.c: 330: eeprom_write(address,ee.byte0);
 17631  5515  0828               	movf	_ee^(0+384),w	;volatile
 17632  5516  0140               	movlb	0	; select bank0
 17633  5517  00B1               	movwf	??_salva_EEPROM
 17634  5518  0831               	movf	??_salva_EEPROM,w
 17635  5519  00AB               	movwf	eeprom_write@value
 17636  551A  0830               	movf	salva_EEPROM@address,w
 17637  551B  31D2  2299  31D5   	fcall	_eeprom_write
 17638                           
 17639                           ;func.c: 331: _delay((unsigned long)((1)*(20000000/4000.0)));
 17640  551E  3007               	movlw	7
 17641  551F  0140               	movlb	0	; select bank0
 17642  5520  00B1               	movwf	??_salva_EEPROM
 17643  5521  307D               	movlw	125
 17644  5522                     u20717:	
 17645  5522  0B89               	decfsz	9,f
 17646  5523  2D22               	goto	u20717
 17647  5524  0BB1               	decfsz	??_salva_EEPROM,f
 17648  5525  2D22               	goto	u20717
 17649                           
 17650                           ;func.c: 332: eeprom_write(++address,ee.byte1);
 17651  5526  0143               	movlb	3	; select bank3
 17652  5527  0829               	movf	(_ee^(0+384)+1),w	;volatile
 17653  5528  0140               	movlb	0	; select bank0
 17654  5529  00B1               	movwf	??_salva_EEPROM
 17655  552A  0831               	movf	??_salva_EEPROM,w
 17656  552B  00AB               	movwf	eeprom_write@value
 17657  552C  3001               	movlw	1
 17658  552D  00B2               	movwf	??_salva_EEPROM+1
 17659  552E  0832               	movf	??_salva_EEPROM+1,w
 17660  552F  07B0               	addwf	salva_EEPROM@address,f
 17661  5530  0830               	movf	salva_EEPROM@address,w
 17662  5531  31D2  2299  31D5   	fcall	_eeprom_write
 17663                           
 17664                           ;func.c: 333: _delay((unsigned long)((1)*(20000000/4000.0)));
 17665  5534  3007               	movlw	7
 17666  5535  0140               	movlb	0	; select bank0
 17667  5536  00B1               	movwf	??_salva_EEPROM
 17668  5537  307D               	movlw	125
 17669  5538                     u20727:	
 17670  5538  0B89               	decfsz	9,f
 17671  5539  2D38               	goto	u20727
 17672  553A  0BB1               	decfsz	??_salva_EEPROM,f
 17673  553B  2D38               	goto	u20727
 17674  553C  0008               	return
 17675  553D                     __end_of_salva_EEPROM:	
 17676                           
 17677                           	psect	text20
 17678  38DC                     __ptext20:	
 17679 ;; *************** function _get_temp *****************
 17680 ;; Defined at:
 17681 ;;		line 2568 in file "func.c"
 17682 ;; Parameters:    Size  Location     Type
 17683 ;;  K               3   26[BANK1 ] float 
 17684 ;; Auto vars:     Size  Location     Type
 17685 ;;  i               1   37[BANK1 ] unsigned char 
 17686 ;;  adc             3   38[BANK1 ] float 
 17687 ;;  adc_c           3   34[BANK1 ] float 
 17688 ;; Return value:  Size  Location     Type
 17689 ;;                  3   26[BANK1 ] float 
 17690 ;; Registers used:
 17691 ;;		wreg, status,2, status,0, pclath, cstack
 17692 ;; Tracked objects:
 17693 ;;		On entry : 0/0
 17694 ;;		On exit  : 0/0
 17695 ;;		Unchanged: 0/0
 17696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17697 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17698 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17699 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17700 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17701 ;;Total ram usage:       15 bytes
 17702 ;; Hardware stack levels used:    1
 17703 ;; Hardware stack levels required when called:    5
 17704 ;; This function calls:
 17705 ;;		___awtoft
 17706 ;;		___ftadd
 17707 ;;		___ftdiv
 17708 ;; This function is called by:
 17709 ;;		_ini_ee_tempos
 17710 ;; This function uses a non-reentrant model
 17711 ;;
 17712                           
 17713                           
 17714                           ;psect for function _get_temp
 17715  38DC                     _get_temp:	
 17716                           
 17717                           ;func.c: 2569: float adc = 0;
 17718                           
 17719                           ;incstack = 0
 17720                           ; Regs used in _get_temp: [wreg+status,2+status,0+pclath+cstack]
 17721  38DC  3000               	movlw	0
 17722  38DD  0141               	movlb	1	; select bank1
 17723  38DE  00C6               	movwf	get_temp@adc^(0+128)
 17724  38DF  3000               	movlw	0
 17725  38E0  00C7               	movwf	(get_temp@adc+1)^(0+128)
 17726  38E1  3000               	movlw	0
 17727  38E2  00C8               	movwf	(get_temp@adc+2)^(0+128)
 17728                           
 17729                           ;func.c: 2570: float adc_c = 0;
 17730  38E3  3000               	movlw	0
 17731  38E4  00C2               	movwf	get_temp@adc_c^(0+128)
 17732  38E5  3000               	movlw	0
 17733  38E6  00C3               	movwf	(get_temp@adc_c+1)^(0+128)
 17734  38E7  3000               	movlw	0
 17735  38E8  00C4               	movwf	(get_temp@adc_c+2)^(0+128)
 17736                           
 17737                           ;func.c: 2571: ADCON0bits.ADON = 1;
 17738  38E9  1793               	bsf	19,7	;volatile
 17739                           
 17740                           ;func.c: 2572: ADCON0bits.ADCONT = 0;
 17741  38EA  1313               	bcf	19,6	;volatile
 17742                           
 17743                           ;func.c: 2573: for(char i = 0;i<10;i++){
 17744  38EB  01C5               	clrf	get_temp@i^(0+128)
 17745  38EC  300A               	movlw	10
 17746  38ED  0245               	subwf	get_temp@i^(0+128),w
 17747  38EE  1803               	btfsc	3,0
 17748  38EF  294D               	goto	l17002
 17749  38F0                     l16992:	
 17750                           
 17751                           ;func.c: 2574: ADPCH = 0x3C;
 17752  38F0  303C               	movlw	60
 17753  38F1  009E               	movwf	30	;volatile
 17754                           
 17755                           ;func.c: 2575: _delay((unsigned long)((500)*(20000000/4000000.0)));
 17756  38F2  3004               	movlw	4
 17757  38F3  0141               	movlb	1	; select bank1
 17758  38F4  00BD               	movwf	??_get_temp^(0+128)
 17759  38F5  303D               	movlw	61
 17760  38F6                     u20737:	
 17761  38F6  0B89               	decfsz	9,f
 17762  38F7  28F6               	goto	u20737
 17763  38F8  0BBD               	decfsz	??_get_temp^(0+128),f
 17764  38F9  28F6               	goto	u20737
 17765  38FA  3200               	nop2
 17766                           
 17767                           ;func.c: 2576: ADPCH = 0x3D;
 17768  38FB  303D               	movlw	61
 17769  38FC  0141               	movlb	1	; select bank1
 17770  38FD  009E               	movwf	30	;volatile
 17771                           
 17772                           ;func.c: 2577: _delay((unsigned long)((500)*(20000000/4000000.0)));
 17773  38FE  3004               	movlw	4
 17774  38FF  0141               	movlb	1	; select bank1
 17775  3900  00BD               	movwf	??_get_temp^(0+128)
 17776  3901  303D               	movlw	61
 17777  3902                     u20747:	
 17778  3902  0B89               	decfsz	9,f
 17779  3903  2902               	goto	u20747
 17780  3904  0BBD               	decfsz	??_get_temp^(0+128),f
 17781  3905  2902               	goto	u20747
 17782  3906  3200               	nop2
 17783                           
 17784                           ;func.c: 2578: ADCON0bits.ADGO = 1;
 17785  3907  0141               	movlb	1	; select bank1
 17786  3908  1413               	bsf	19,0	;volatile
 17787  3909                     l1980:	
 17788                           ;func.c: 2579: while (ADCON0bits.ADGO){asm("clrwdt");}
 17789                           
 17790  3909  0141               	movlb	1	; select bank1
 17791  390A  1C13               	btfss	19,0	;volatile
 17792  390B  290E               	goto	l16996
 17793  390C  0064               	clrwdt	;# 
 17794  390D  2909               	goto	l1980
 17795  390E                     l16996:	
 17796                           
 17797                           ;func.c: 2580: adc += (float)((ADRESH << 8) + ADRESL);
 17798  390E  080C               	movf	12,w	;volatile
 17799  390F  00BD               	movwf	??_get_temp^(0+128)
 17800  3910  01BE               	clrf	(??_get_temp^(0+128)+1)
 17801  3911  080D               	movf	13,w	;volatile
 17802  3912  00BF               	movwf	(??_get_temp+2)^(0+128)
 17803  3913  01C0               	clrf	((??_get_temp+2)^(0+128)+1)
 17804  3914  083F               	movf	(??_get_temp+2)^(0+128),w
 17805  3915  00C0               	movwf	((??_get_temp+2)^(0+128)+1)
 17806  3916  01BF               	clrf	(??_get_temp+2)^(0+128)
 17807  3917  083D               	movf	??_get_temp^(0+128),w
 17808  3918  073F               	addwf	(??_get_temp+2)^(0+128),w
 17809  3919  0140               	movlb	0	; select bank0
 17810  391A  00B3               	movwf	___awtoft@c
 17811  391B  0141               	movlb	1	; select bank1
 17812  391C  083E               	movf	(??_get_temp+1)^(0+128),w
 17813  391D  3D40               	addwfc	(??_get_temp+3)^(0+128),w
 17814  391E  0140               	movlb	0	; select bank0
 17815  391F  00B4               	movwf	___awtoft@c+1
 17816  3920  31D2  222F  31B8   	fcall	___awtoft
 17817  3923  0140               	movlb	0	; select bank0
 17818  3924  0833               	movf	?___awtoft,w
 17819  3925  00BB               	movwf	___ftadd@f1
 17820  3926  0834               	movf	?___awtoft+1,w
 17821  3927  00BC               	movwf	___ftadd@f1+1
 17822  3928  0835               	movf	?___awtoft+2,w
 17823  3929  00BD               	movwf	___ftadd@f1+2
 17824  392A  0141               	movlb	1	; select bank1
 17825  392B  0846               	movf	get_temp@adc^(0+128),w
 17826  392C  0140               	movlb	0	; select bank0
 17827  392D  00BE               	movwf	___ftadd@f2
 17828  392E  0141               	movlb	1	; select bank1
 17829  392F  0847               	movf	(get_temp@adc+1)^(0+128),w
 17830  3930  0140               	movlb	0	; select bank0
 17831  3931  00BF               	movwf	___ftadd@f2+1
 17832  3932  0141               	movlb	1	; select bank1
 17833  3933  0848               	movf	(get_temp@adc+2)^(0+128),w
 17834  3934  0140               	movlb	0	; select bank0
 17835  3935  00C0               	movwf	___ftadd@f2+2
 17836  3936  31B0  2027  31B8   	fcall	___ftadd
 17837  3939  0140               	movlb	0	; select bank0
 17838  393A  083B               	movf	?___ftadd,w
 17839  393B  0141               	movlb	1	; select bank1
 17840  393C  00C6               	movwf	get_temp@adc^(0+128)
 17841  393D  0140               	movlb	0	; select bank0
 17842  393E  083C               	movf	?___ftadd+1,w
 17843  393F  0141               	movlb	1	; select bank1
 17844  3940  00C7               	movwf	(get_temp@adc+1)^(0+128)
 17845  3941  0140               	movlb	0	; select bank0
 17846  3942  083D               	movf	?___ftadd+2,w
 17847  3943  0141               	movlb	1	; select bank1
 17848  3944  00C8               	movwf	(get_temp@adc+2)^(0+128)
 17849  3945  3001               	movlw	1
 17850  3946  00BD               	movwf	??_get_temp^(0+128)
 17851  3947  083D               	movf	??_get_temp^(0+128),w
 17852  3948  07C5               	addwf	get_temp@i^(0+128),f
 17853  3949  300A               	movlw	10
 17854  394A  0245               	subwf	get_temp@i^(0+128),w
 17855  394B  1C03               	skipc
 17856  394C  28F0               	goto	l16992
 17857  394D                     l17002:	
 17858                           
 17859                           ;func.c: 2581: }
 17860                           ;func.c: 2582: adc/=10;
 17861  394D  3000               	movlw	0
 17862  394E  00AA               	movwf	___ftdiv@f2^(0+128)
 17863  394F  3020               	movlw	32
 17864  3950  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 17865  3951  3041               	movlw	65
 17866  3952  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 17867  3953  0846               	movf	get_temp@adc^(0+128),w
 17868  3954  00AD               	movwf	___ftdiv@f1^(0+128)
 17869  3955  0847               	movf	(get_temp@adc+1)^(0+128),w
 17870  3956  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 17871  3957  0848               	movf	(get_temp@adc+2)^(0+128),w
 17872  3958  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 17873  3959  31BA  2243  31B8   	fcall	___ftdiv
 17874  395C  0141               	movlb	1	; select bank1
 17875  395D  082A               	movf	?___ftdiv^(0+128),w
 17876  395E  00C6               	movwf	get_temp@adc^(0+128)
 17877  395F  082B               	movf	(?___ftdiv+1)^(0+128),w
 17878  3960  00C7               	movwf	(get_temp@adc+1)^(0+128)
 17879  3961  082C               	movf	(?___ftdiv+2)^(0+128),w
 17880  3962  00C8               	movwf	(get_temp@adc+2)^(0+128)
 17881                           
 17882                           ;func.c: 2583: adc_c = adc + K;
 17883  3963  083A               	movf	get_temp@K^(0+128),w
 17884  3964  0140               	movlb	0	; select bank0
 17885  3965  00BB               	movwf	___ftadd@f1
 17886  3966  0141               	movlb	1	; select bank1
 17887  3967  083B               	movf	(get_temp@K+1)^(0+128),w
 17888  3968  0140               	movlb	0	; select bank0
 17889  3969  00BC               	movwf	___ftadd@f1+1
 17890  396A  0141               	movlb	1	; select bank1
 17891  396B  083C               	movf	(get_temp@K+2)^(0+128),w
 17892  396C  0140               	movlb	0	; select bank0
 17893  396D  00BD               	movwf	___ftadd@f1+2
 17894  396E  0141               	movlb	1	; select bank1
 17895  396F  0846               	movf	get_temp@adc^(0+128),w
 17896  3970  0140               	movlb	0	; select bank0
 17897  3971  00BE               	movwf	___ftadd@f2
 17898  3972  0141               	movlb	1	; select bank1
 17899  3973  0847               	movf	(get_temp@adc+1)^(0+128),w
 17900  3974  0140               	movlb	0	; select bank0
 17901  3975  00BF               	movwf	___ftadd@f2+1
 17902  3976  0141               	movlb	1	; select bank1
 17903  3977  0848               	movf	(get_temp@adc+2)^(0+128),w
 17904  3978  0140               	movlb	0	; select bank0
 17905  3979  00C0               	movwf	___ftadd@f2+2
 17906  397A  31B0  2027         	fcall	___ftadd
 17907  397C  0140               	movlb	0	; select bank0
 17908  397D  083B               	movf	?___ftadd,w
 17909  397E  0141               	movlb	1	; select bank1
 17910  397F  00C2               	movwf	get_temp@adc_c^(0+128)
 17911  3980  0140               	movlb	0	; select bank0
 17912  3981  083C               	movf	?___ftadd+1,w
 17913  3982  0141               	movlb	1	; select bank1
 17914  3983  00C3               	movwf	(get_temp@adc_c+1)^(0+128)
 17915  3984  0140               	movlb	0	; select bank0
 17916  3985  083D               	movf	?___ftadd+2,w
 17917  3986  0141               	movlb	1	; select bank1
 17918  3987  00C4               	movwf	(get_temp@adc_c+2)^(0+128)
 17919                           
 17920                           ;func.c: 2588: return (adc_c);
 17921  3988  0842               	movf	get_temp@adc_c^(0+128),w
 17922  3989  00BA               	movwf	?_get_temp^(0+128)
 17923  398A  0843               	movf	(get_temp@adc_c+1)^(0+128),w
 17924  398B  00BB               	movwf	(?_get_temp+1)^(0+128)
 17925  398C  0844               	movf	(get_temp@adc_c+2)^(0+128),w
 17926  398D  00BC               	movwf	(?_get_temp+2)^(0+128)
 17927  398E  0008               	return
 17928  398F                     __end_of_get_temp:	
 17929                           
 17930                           	psect	text21
 17931  1801                     __ptext21:	
 17932 ;; *************** function _carrega_EEPROM *****************
 17933 ;; Defined at:
 17934 ;;		line 336 in file "func.c"
 17935 ;; Parameters:    Size  Location     Type
 17936 ;;  address         1    wreg     unsigned char 
 17937 ;; Auto vars:     Size  Location     Type
 17938 ;;  address         1   16[BANK0 ] unsigned char 
 17939 ;; Return value:  Size  Location     Type
 17940 ;;                  2   12[BANK0 ] unsigned int 
 17941 ;; Registers used:
 17942 ;;		wreg, status,2, status,0, pclath, cstack
 17943 ;; Tracked objects:
 17944 ;;		On entry : 0/0
 17945 ;;		On exit  : 0/0
 17946 ;;		Unchanged: 0/0
 17947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 17948 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17950 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17951 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 17952 ;;Total ram usage:        5 bytes
 17953 ;; Hardware stack levels used:    1
 17954 ;; Hardware stack levels required when called:    4
 17955 ;; This function calls:
 17956 ;;		_eeprom_read
 17957 ;; This function is called by:
 17958 ;;		_telas
 17959 ;;		_ini_ee_tempos
 17960 ;; This function uses a non-reentrant model
 17961 ;;
 17962                           
 17963                           
 17964                           ;psect for function _carrega_EEPROM
 17965  1801                     _carrega_EEPROM:	
 17966                           
 17967                           ;incstack = 0
 17968                           ; Regs used in _carrega_EEPROM: [wreg+status,2+status,0+pclath+cstack]
 17969                           ;carrega_EEPROM@address stored from wreg
 17970  1801  0140               	movlb	0	; select bank0
 17971  1802  00B0               	movwf	carrega_EEPROM@address
 17972                           
 17973                           ;func.c: 337: ee.byte0 = eeprom_read(address);
 17974  1803  0830               	movf	carrega_EEPROM@address,w
 17975  1804  31E1  2112  3198   	fcall	_eeprom_read
 17976  1807  0140               	movlb	0	; select bank0
 17977  1808  00AE               	movwf	??_carrega_EEPROM
 17978  1809  082E               	movf	??_carrega_EEPROM,w
 17979  180A  0143               	movlb	3	; select bank3
 17980  180B  00A8               	movwf	_ee^(0+384)	;volatile
 17981                           
 17982                           ;func.c: 338: _delay((unsigned long)((1)*(20000000/4000.0)));
 17983  180C  3007               	movlw	7
 17984  180D  0140               	movlb	0	; select bank0
 17985  180E  00AE               	movwf	??_carrega_EEPROM
 17986  180F  307D               	movlw	125
 17987  1810                     u20757:	
 17988  1810  0B89               	decfsz	9,f
 17989  1811  2810               	goto	u20757
 17990  1812  0BAE               	decfsz	??_carrega_EEPROM,f
 17991  1813  2810               	goto	u20757
 17992                           
 17993                           ;func.c: 339: ee.byte1 = eeprom_read(++address);
 17994  1814  3001               	movlw	1
 17995  1815  0140               	movlb	0	; select bank0
 17996  1816  00AE               	movwf	??_carrega_EEPROM
 17997  1817  082E               	movf	??_carrega_EEPROM,w
 17998  1818  07B0               	addwf	carrega_EEPROM@address,f
 17999  1819  0830               	movf	carrega_EEPROM@address,w
 18000  181A  31E1  2112  3198   	fcall	_eeprom_read
 18001  181D  0140               	movlb	0	; select bank0
 18002  181E  00AF               	movwf	??_carrega_EEPROM+1
 18003  181F  082F               	movf	??_carrega_EEPROM+1,w
 18004  1820  0143               	movlb	3	; select bank3
 18005  1821  00A9               	movwf	(_ee^(0+384)+1)	;volatile
 18006                           
 18007                           ;func.c: 340: _delay((unsigned long)((1)*(20000000/4000.0)));
 18008  1822  3007               	movlw	7
 18009  1823  0140               	movlb	0	; select bank0
 18010  1824  00AE               	movwf	??_carrega_EEPROM
 18011  1825  307D               	movlw	125
 18012  1826                     u20767:	
 18013  1826  0B89               	decfsz	9,f
 18014  1827  2826               	goto	u20767
 18015  1828  0BAE               	decfsz	??_carrega_EEPROM,f
 18016  1829  2826               	goto	u20767
 18017                           
 18018                           ;func.c: 341: return ee.int0;
 18019  182A  0143               	movlb	3	; select bank3
 18020  182B  0829               	movf	(_ee+1)^(0+384),w	;volatile
 18021  182C  0140               	movlb	0	; select bank0
 18022  182D  00AD               	movwf	?_carrega_EEPROM+1
 18023  182E  0143               	movlb	3	; select bank3
 18024  182F  0828               	movf	_ee^(0+384),w	;volatile
 18025  1830  0140               	movlb	0	; select bank0
 18026  1831  00AC               	movwf	?_carrega_EEPROM
 18027  1832  0008               	return
 18028  1833                     __end_of_carrega_EEPROM:	
 18029                           
 18030                           	psect	text22
 18031  4000                     __ptext22:	
 18032 ;; *************** function _Lcd_White_Center_String *****************
 18033 ;; Defined at:
 18034 ;;		line 123 in file "lcd.c"
 18035 ;; Parameters:    Size  Location     Type
 18036 ;;  linha           1    wreg     unsigned char 
 18037 ;;  a               2   21[BANK0 ] PTR const unsigned char 
 18038 ;;		 -> STR_29(12), modelo_str(40), STR_2(9), STR_1(9), 
 18039 ;; Auto vars:     Size  Location     Type
 18040 ;;  linha           1   26[BANK0 ] unsigned char 
 18041 ;;  i               2   28[BANK0 ] int 
 18042 ;;  size            1   30[BANK0 ] unsigned char 
 18043 ;;  coluna          1   27[BANK0 ] unsigned char 
 18044 ;; Return value:  Size  Location     Type
 18045 ;;                  1    wreg      void 
 18046 ;; Registers used:
 18047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 18048 ;; Tracked objects:
 18049 ;;		On entry : 0/0
 18050 ;;		On exit  : 0/0
 18051 ;;		Unchanged: 0/0
 18052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18053 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18054 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18055 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18056 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18057 ;;Total ram usage:       10 bytes
 18058 ;; Hardware stack levels used:    1
 18059 ;; Hardware stack levels required when called:    6
 18060 ;; This function calls:
 18061 ;;		_Lcd_Set_Cursor
 18062 ;;		_Lcd_Write_Char
 18063 ;;		___awdiv
 18064 ;;		_strlen
 18065 ;; This function is called by:
 18066 ;;		_main
 18067 ;;		_ini_ee_tempos
 18068 ;; This function uses a non-reentrant model
 18069 ;;
 18070                           
 18071                           
 18072                           ;psect for function _Lcd_White_Center_String
 18073  4000                     _Lcd_White_Center_String:	
 18074                           
 18075                           ;incstack = 0
 18076                           ; Regs used in _Lcd_White_Center_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 18077                           ;Lcd_White_Center_String@linha stored from wreg
 18078  4000  0140               	movlb	0	; select bank0
 18079  4001  00BA               	movwf	Lcd_White_Center_String@linha
 18080                           
 18081                           ;lcd.c: 124: LATBbits.LATB6=0;
 18082  4002  1317               	bcf	23,6	;volatile
 18083                           
 18084                           ;lcd.c: 125: char size,coluna;
 18085                           ;lcd.c: 126: size = strlen(a);
 18086  4003  0836               	movf	Lcd_White_Center_String@a+1,w
 18087  4004  00AC               	movwf	strlen@s+1
 18088  4005  0835               	movf	Lcd_White_Center_String@a,w
 18089  4006  00AB               	movwf	strlen@s
 18090  4007  31D1  21AF  31C0   	fcall	_strlen
 18091  400A  0140               	movlb	0	; select bank0
 18092  400B  082B               	movf	?_strlen,w
 18093  400C  00B7               	movwf	??_Lcd_White_Center_String
 18094  400D  0837               	movf	??_Lcd_White_Center_String,w
 18095  400E  00BE               	movwf	Lcd_White_Center_String@size
 18096                           
 18097                           ;lcd.c: 127: if(size>16){size=16;}
 18098  400F  3011               	movlw	17
 18099  4010  023E               	subwf	Lcd_White_Center_String@size,w
 18100  4011  1C03               	skipc
 18101  4012  2817               	goto	l16012
 18102  4013  3010               	movlw	16
 18103  4014  00B7               	movwf	??_Lcd_White_Center_String
 18104  4015  0837               	movf	??_Lcd_White_Center_String,w
 18105  4016  00BE               	movwf	Lcd_White_Center_String@size
 18106  4017                     l16012:	
 18107                           
 18108                           ;lcd.c: 128: coluna = ((16-size)/2)+1;
 18109  4017  3002               	movlw	2
 18110  4018  00AB               	movwf	___awdiv@divisor
 18111  4019  3000               	movlw	0
 18112  401A  00AC               	movwf	___awdiv@divisor+1
 18113  401B  083E               	movf	Lcd_White_Center_String@size,w
 18114  401C  00B7               	movwf	??_Lcd_White_Center_String
 18115  401D  01B8               	clrf	??_Lcd_White_Center_String+1
 18116  401E  09B7               	comf	??_Lcd_White_Center_String,f
 18117  401F  09B8               	comf	??_Lcd_White_Center_String+1,f
 18118  4020  0AB7               	incf	??_Lcd_White_Center_String,f
 18119  4021  1903               	skipnz
 18120  4022  0AB8               	incf	??_Lcd_White_Center_String+1,f
 18121  4023  0837               	movf	??_Lcd_White_Center_String,w
 18122  4024  3E10               	addlw	16
 18123  4025  00AD               	movwf	___awdiv@dividend
 18124  4026  3000               	movlw	0
 18125  4027  3D38               	addwfc	??_Lcd_White_Center_String+1,w
 18126  4028  00AE               	movwf	___awdiv@dividend+1
 18127  4029  31CB  231C  31C0   	fcall	___awdiv
 18128  402C  0140               	movlb	0	; select bank0
 18129  402D  082B               	movf	?___awdiv,w
 18130  402E  3E01               	addlw	1
 18131  402F  00B9               	movwf	??_Lcd_White_Center_String+2
 18132  4030  0839               	movf	??_Lcd_White_Center_String+2,w
 18133  4031  00BB               	movwf	Lcd_White_Center_String@coluna
 18134                           
 18135                           ;lcd.c: 129: Lcd_Set_Cursor(linha,coluna);
 18136  4032  083B               	movf	Lcd_White_Center_String@coluna,w
 18137  4033  00B7               	movwf	??_Lcd_White_Center_String
 18138  4034  0837               	movf	??_Lcd_White_Center_String,w
 18139  4035  00AE               	movwf	Lcd_Set_Cursor@b
 18140  4036  083A               	movf	Lcd_White_Center_String@linha,w
 18141  4037  31D5  25D8  31C0   	fcall	_Lcd_Set_Cursor
 18142                           
 18143                           ;lcd.c: 130: int i;
 18144                           ;lcd.c: 131: for(i=0;a[i]!='\0';i++)
 18145  403A  0140               	movlb	0	; select bank0
 18146  403B  01BC               	clrf	Lcd_White_Center_String@i
 18147  403C  01BD               	clrf	Lcd_White_Center_String@i+1
 18148  403D                     l16022:	
 18149  403D  0835               	movf	Lcd_White_Center_String@a,w
 18150  403E  073C               	addwf	Lcd_White_Center_String@i,w
 18151  403F  0084               	movwf	4
 18152  4040  0836               	movf	Lcd_White_Center_String@a+1,w
 18153  4041  3D3D               	addwfc	Lcd_White_Center_String@i+1,w
 18154  4042  0085               	movwf	5
 18155  4043  0012               	moviw fsr0++
 18156  4044  1903               	btfsc	3,2
 18157  4045  2856               	goto	l2264
 18158                           
 18159                           ;lcd.c: 132: Lcd_Write_Char(a[i]);
 18160  4046  0835               	movf	Lcd_White_Center_String@a,w
 18161  4047  073C               	addwf	Lcd_White_Center_String@i,w
 18162  4048  0084               	movwf	4
 18163  4049  0836               	movf	Lcd_White_Center_String@a+1,w
 18164  404A  3D3D               	addwfc	Lcd_White_Center_String@i+1,w
 18165  404B  0085               	movwf	5
 18166  404C  0800               	movf	0,w	;code access
 18167  404D  31D4  2482  31C0   	fcall	_Lcd_Write_Char
 18168  4050  3001               	movlw	1
 18169  4051  0140               	movlb	0	; select bank0
 18170  4052  07BC               	addwf	Lcd_White_Center_String@i,f
 18171  4053  3000               	movlw	0
 18172  4054  3DBD               	addwfc	Lcd_White_Center_String@i+1,f
 18173  4055  283D               	goto	l16022
 18174  4056                     l2264:	
 18175                           
 18176                           ;lcd.c: 133: LATBbits.LATB6=1;
 18177  4056  1717               	bsf	23,6	;volatile
 18178  4057  0008               	return
 18179  4058                     __end_of_Lcd_White_Center_String:	
 18180                           
 18181                           	psect	text23
 18182  51AF                     __ptext23:	
 18183 ;; *************** function _strlen *****************
 18184 ;; Defined at:
 18185 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 18186 ;; Parameters:    Size  Location     Type
 18187 ;;  s               2   11[BANK0 ] PTR const unsigned char 
 18188 ;;		 -> STR_29(12), modelo_str(40), STR_2(9), STR_1(9), 
 18189 ;; Auto vars:     Size  Location     Type
 18190 ;;  cp              2   15[BANK0 ] PTR const unsigned char 
 18191 ;;		 -> STR_29(12), modelo_str(40), STR_2(9), STR_1(9), 
 18192 ;; Return value:  Size  Location     Type
 18193 ;;                  2   11[BANK0 ] unsigned int 
 18194 ;; Registers used:
 18195 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 18196 ;; Tracked objects:
 18197 ;;		On entry : 0/0
 18198 ;;		On exit  : 0/0
 18199 ;;		Unchanged: 0/0
 18200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18201 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18202 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18203 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18204 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18205 ;;Total ram usage:        6 bytes
 18206 ;; Hardware stack levels used:    1
 18207 ;; Hardware stack levels required when called:    3
 18208 ;; This function calls:
 18209 ;;		Nothing
 18210 ;; This function is called by:
 18211 ;;		_Lcd_White_Center_String
 18212 ;; This function uses a non-reentrant model
 18213 ;;
 18214                           
 18215                           
 18216                           ;psect for function _strlen
 18217  51AF                     _strlen:	
 18218                           
 18219                           ;incstack = 0
 18220                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 18221  51AF  0140               	movlb	0	; select bank0
 18222  51B0  082C               	movf	strlen@s+1,w
 18223  51B1  00B0               	movwf	strlen@cp+1
 18224  51B2  082B               	movf	strlen@s,w
 18225  51B3  00AF               	movwf	strlen@cp
 18226  51B4                     l15788:	
 18227  51B4  082F               	movf	strlen@cp,w
 18228  51B5  0084               	movwf	4
 18229  51B6  0830               	movf	strlen@cp+1,w
 18230  51B7  0085               	movwf	5
 18231  51B8  0012               	moviw fsr0++
 18232  51B9  1903               	btfsc	3,2
 18233  51BA  29C0               	goto	l15790
 18234  51BB  3001               	movlw	1
 18235  51BC  07AF               	addwf	strlen@cp,f
 18236  51BD  3000               	movlw	0
 18237  51BE  3DB0               	addwfc	strlen@cp+1,f
 18238  51BF  29B4               	goto	l15788
 18239  51C0                     l15790:	
 18240  51C0  092B               	comf	strlen@s,w
 18241  51C1  00AD               	movwf	??_strlen
 18242  51C2  092C               	comf	strlen@s+1,w
 18243  51C3  00AE               	movwf	??_strlen+1
 18244  51C4  0AAD               	incf	??_strlen,f
 18245  51C5  1903               	skipnz
 18246  51C6  0AAE               	incf	??_strlen+1,f
 18247  51C7  082F               	movf	strlen@cp,w
 18248  51C8  072D               	addwf	??_strlen,w
 18249  51C9  00AB               	movwf	?_strlen
 18250  51CA  0830               	movf	strlen@cp+1,w
 18251  51CB  3D2E               	addwfc	??_strlen+1,w
 18252  51CC  00AC               	movwf	?_strlen+1
 18253  51CD  0008               	return
 18254  51CE                     __end_of_strlen:	
 18255                           
 18256                           	psect	text24
 18257  4B1C                     __ptext24:	
 18258 ;; *************** function ___awdiv *****************
 18259 ;; Defined at:
 18260 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 18261 ;; Parameters:    Size  Location     Type
 18262 ;;  divisor         2   11[BANK0 ] int 
 18263 ;;  dividend        2   13[BANK0 ] int 
 18264 ;; Auto vars:     Size  Location     Type
 18265 ;;  quotient        2   18[BANK0 ] int 
 18266 ;;  sign            1   17[BANK0 ] unsigned char 
 18267 ;;  counter         1   16[BANK0 ] unsigned char 
 18268 ;; Return value:  Size  Location     Type
 18269 ;;                  2   11[BANK0 ] int 
 18270 ;; Registers used:
 18271 ;;		wreg, status,2, status,0
 18272 ;; Tracked objects:
 18273 ;;		On entry : 0/0
 18274 ;;		On exit  : 0/0
 18275 ;;		Unchanged: 0/0
 18276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18278 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18279 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18280 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18281 ;;Total ram usage:        9 bytes
 18282 ;; Hardware stack levels used:    1
 18283 ;; Hardware stack levels required when called:    3
 18284 ;; This function calls:
 18285 ;;		Nothing
 18286 ;; This function is called by:
 18287 ;;		_Lcd_White_Center_String
 18288 ;; This function uses a non-reentrant model
 18289 ;;
 18290                           
 18291                           
 18292                           ;psect for function ___awdiv
 18293  4B1C                     ___awdiv:	
 18294                           
 18295                           ;incstack = 0
 18296                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 18297  4B1C  0140               	movlb	0	; select bank0
 18298  4B1D  01B1               	clrf	___awdiv@sign
 18299  4B1E  1FAC               	btfss	___awdiv@divisor+1,7
 18300  4B1F  2B27               	goto	l15834
 18301  4B20  09AB               	comf	___awdiv@divisor,f
 18302  4B21  09AC               	comf	___awdiv@divisor+1,f
 18303  4B22  0AAB               	incf	___awdiv@divisor,f
 18304  4B23  1903               	skipnz
 18305  4B24  0AAC               	incf	___awdiv@divisor+1,f
 18306  4B25  01B1               	clrf	___awdiv@sign
 18307  4B26  0AB1               	incf	___awdiv@sign,f
 18308  4B27                     l15834:	
 18309  4B27  1FAE               	btfss	___awdiv@dividend+1,7
 18310  4B28  2B32               	goto	l15840
 18311  4B29  09AD               	comf	___awdiv@dividend,f
 18312  4B2A  09AE               	comf	___awdiv@dividend+1,f
 18313  4B2B  0AAD               	incf	___awdiv@dividend,f
 18314  4B2C  1903               	skipnz
 18315  4B2D  0AAE               	incf	___awdiv@dividend+1,f
 18316  4B2E  3001               	movlw	1
 18317  4B2F  00AF               	movwf	??___awdiv
 18318  4B30  082F               	movf	??___awdiv,w
 18319  4B31  06B1               	xorwf	___awdiv@sign,f
 18320  4B32                     l15840:	
 18321  4B32  01B2               	clrf	___awdiv@quotient
 18322  4B33  01B3               	clrf	___awdiv@quotient+1
 18323  4B34  082B               	movf	___awdiv@divisor,w
 18324  4B35  042C               	iorwf	___awdiv@divisor+1,w
 18325  4B36  1903               	btfsc	3,2
 18326  4B37  2B61               	goto	l15862
 18327  4B38  01B0               	clrf	___awdiv@counter
 18328  4B39  0AB0               	incf	___awdiv@counter,f
 18329  4B3A                     l15850:	
 18330  4B3A  1BAC               	btfsc	___awdiv@divisor+1,7
 18331  4B3B  2B46               	goto	l15852
 18332  4B3C  3001               	movlw	1
 18333  4B3D                     u17695:	
 18334  4B3D  35AB               	lslf	___awdiv@divisor,f
 18335  4B3E  0DAC               	rlf	___awdiv@divisor+1,f
 18336  4B3F  0B89               	decfsz	9,f
 18337  4B40  2B3D               	goto	u17695
 18338  4B41  3001               	movlw	1
 18339  4B42  00AF               	movwf	??___awdiv
 18340  4B43  082F               	movf	??___awdiv,w
 18341  4B44  07B0               	addwf	___awdiv@counter,f
 18342  4B45  2B3A               	goto	l15850
 18343  4B46                     l15852:	
 18344  4B46  3001               	movlw	1
 18345  4B47                     u17715:	
 18346  4B47  35B2               	lslf	___awdiv@quotient,f
 18347  4B48  0DB3               	rlf	___awdiv@quotient+1,f
 18348  4B49  0B89               	decfsz	9,f
 18349  4B4A  2B47               	goto	u17715
 18350  4B4B  082C               	movf	___awdiv@divisor+1,w
 18351  4B4C  022E               	subwf	___awdiv@dividend+1,w
 18352  4B4D  1D03               	skipz
 18353  4B4E  2B51               	goto	u17725
 18354  4B4F  082B               	movf	___awdiv@divisor,w
 18355  4B50  022D               	subwf	___awdiv@dividend,w
 18356  4B51                     u17725:	
 18357  4B51  1C03               	skipc
 18358  4B52  2B58               	goto	l15858
 18359  4B53  082B               	movf	___awdiv@divisor,w
 18360  4B54  02AD               	subwf	___awdiv@dividend,f
 18361  4B55  082C               	movf	___awdiv@divisor+1,w
 18362  4B56  3BAE               	subwfb	___awdiv@dividend+1,f
 18363  4B57  1432               	bsf	___awdiv@quotient,0
 18364  4B58                     l15858:	
 18365  4B58  3001               	movlw	1
 18366  4B59                     u17735:	
 18367  4B59  36AC               	lsrf	___awdiv@divisor+1,f
 18368  4B5A  0CAB               	rrf	___awdiv@divisor,f
 18369  4B5B  0B89               	decfsz	9,f
 18370  4B5C  2B59               	goto	u17735
 18371  4B5D  3001               	movlw	1
 18372  4B5E  02B0               	subwf	___awdiv@counter,f
 18373  4B5F  1D03               	btfss	3,2
 18374  4B60  2B46               	goto	l15852
 18375  4B61                     l15862:	
 18376  4B61  0831               	movf	___awdiv@sign,w
 18377  4B62  1903               	btfsc	3,2
 18378  4B63  2B69               	goto	l15866
 18379  4B64  09B2               	comf	___awdiv@quotient,f
 18380  4B65  09B3               	comf	___awdiv@quotient+1,f
 18381  4B66  0AB2               	incf	___awdiv@quotient,f
 18382  4B67  1903               	skipnz
 18383  4B68  0AB3               	incf	___awdiv@quotient+1,f
 18384  4B69                     l15866:	
 18385  4B69  0833               	movf	___awdiv@quotient+1,w
 18386  4B6A  00AC               	movwf	?___awdiv+1
 18387  4B6B  0832               	movf	___awdiv@quotient,w
 18388  4B6C  00AB               	movwf	?___awdiv
 18389  4B6D  0008               	return
 18390  4B6E                     __end_of___awdiv:	
 18391                           
 18392                           	psect	text25
 18393  1462                     __ptext25:	
 18394 ;; *************** function _ini_GERADOR *****************
 18395 ;; Defined at:
 18396 ;;		line 260 in file "func.c"
 18397 ;; Parameters:    Size  Location     Type
 18398 ;;  f               2   24[BANK2 ] unsigned int 
 18399 ;;  p               2   26[BANK2 ] unsigned int 
 18400 ;;  c               2   28[BANK2 ] unsigned int 
 18401 ;;  v               2   30[BANK2 ] unsigned int 
 18402 ;; Auto vars:     Size  Location     Type
 18403 ;;  i               1   50[BANK8 ] unsigned char 
 18404 ;;  i               1   37[BANK8 ] unsigned char 
 18405 ;;  i               1   36[BANK8 ] unsigned char 
 18406 ;;  Pot_3Vref       3   44[BANK8 ] float 
 18407 ;;  Xc2             3   41[BANK8 ] float 
 18408 ;;  Xc1             3   38[BANK8 ] float 
 18409 ;;  Xc1Xc2          3   33[BANK8 ] float 
 18410 ;;  IT_3Vref        3    6[BANK8 ] float 
 18411 ;;  ang             3    3[BANK8 ] float 
 18412 ;;  Pot_real        3    0[BANK8 ] float 
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  1    wreg      void 
 18415 ;; Registers used:
 18416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 18422 ;;      Params:         0       0       0       8       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18423 ;;      Locals:         0       0       0       0       0       0       0       0       0      51       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18424 ;;      Temps:          0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18425 ;;      Totals:         0       0       0      12       0       0       0       0       0      51       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 18426 ;;Total ram usage:       63 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:    8
 18429 ;; This function calls:
 18430 ;;		_XC
 18431 ;;		___ftadd
 18432 ;;		___ftdiv
 18433 ;;		___ftmul
 18434 ;;		___fttol
 18435 ;;		___lwtoft
 18436 ;;		___wmul
 18437 ;;		_atan
 18438 ;;		_cos
 18439 ;;		_pow
 18440 ;;		_round
 18441 ;;		_sqrt
 18442 ;; This function is called by:
 18443 ;;		_main
 18444 ;; This function uses a non-reentrant model
 18445 ;;
 18446                           
 18447                           
 18448                           ;psect for function _ini_GERADOR
 18449  1462                     _ini_GERADOR:	
 18450                           
 18451                           ;func.c: 262: for(char i = 1;i<=ENTRADA_MAX;i++){
 18452                           
 18453                           ;incstack = 0
 18454                           ; Regs used in _ini_GERADOR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18455  1462  0148               	movlb	8	; select bank8
 18456  1463  01C4               	clrf	ini_GERADOR@i^(0+1024)
 18457  1464  0AC4               	incf	ini_GERADOR@i^(0+1024),f
 18458  1465  3006               	movlw	6
 18459  1466  0244               	subwf	ini_GERADOR@i^(0+1024),w
 18460  1467  1803               	btfsc	3,0
 18461  1468  2C73               	goto	l1206
 18462  1469                     l17394:	
 18463  1469  3001               	movlw	1
 18464  146A  0142               	movlb	2	; select bank2
 18465  146B  00C0               	movwf	??_ini_GERADOR^(0+256)
 18466  146C  0840               	movf	??_ini_GERADOR^(0+256),w
 18467  146D  0148               	movlb	8	; select bank8
 18468  146E  07C4               	addwf	ini_GERADOR@i^(0+1024),f
 18469  146F  3006               	movlw	6
 18470  1470  0244               	subwf	ini_GERADOR@i^(0+1024),w
 18471  1471  1C03               	skipc
 18472  1472  2C69               	goto	l17394
 18473  1473                     l1206:	
 18474                           
 18475                           ;func.c: 265: }
 18476                           ;func.c: 267: for(char i = 1;i<=SAIDA_MAX;i++){
 18477  1473  01C5               	clrf	ini_GERADOR@i_2420^(0+1024)
 18478  1474  0AC5               	incf	ini_GERADOR@i_2420^(0+1024),f
 18479  1475  3005               	movlw	5
 18480  1476  0245               	subwf	ini_GERADOR@i_2420^(0+1024),w
 18481  1477  1803               	btfsc	3,0
 18482  1478  2C83               	goto	l17406
 18483  1479                     l17402:	
 18484  1479  3001               	movlw	1
 18485  147A  0142               	movlb	2	; select bank2
 18486  147B  00C0               	movwf	??_ini_GERADOR^(0+256)
 18487  147C  0840               	movf	??_ini_GERADOR^(0+256),w
 18488  147D  0148               	movlb	8	; select bank8
 18489  147E  07C5               	addwf	ini_GERADOR@i_2420^(0+1024),f
 18490  147F  3005               	movlw	5
 18491  1480  0245               	subwf	ini_GERADOR@i_2420^(0+1024),w
 18492  1481  1C03               	skipc
 18493  1482  2C79               	goto	l17402
 18494  1483                     l17406:	
 18495                           
 18496                           ;func.c: 270: }
 18497                           ;func.c: 271: for(char i = 0; i<10; i++){
 18498  1483  01D2               	clrf	ini_GERADOR@i_2421^(0+1024)
 18499  1484  300A               	movlw	10
 18500  1485  0252               	subwf	ini_GERADOR@i_2421^(0+1024),w
 18501  1486  1803               	btfsc	3,0
 18502  1487  2CA7               	goto	l17418
 18503  1488                     l17412:	
 18504                           
 18505                           ;func.c: 272: freq_atual_arr[i] = freq_gerador;
 18506  1488  0852               	movf	ini_GERADOR@i_2421^(0+1024),w
 18507  1489  0142               	movlb	2	; select bank2
 18508  148A  00C0               	movwf	??_ini_GERADOR^(0+256)
 18509  148B  01C1               	clrf	(??_ini_GERADOR^(0+256)+1)
 18510  148C  35C0               	lslf	??_ini_GERADOR^(0+256),f
 18511  148D  0DC1               	rlf	(??_ini_GERADOR^(0+256)+1),f
 18512  148E  3028               	movlw	40
 18513  148F  00C2               	movwf	(??_ini_GERADOR+2)^(0+256)
 18514  1490  302F               	movlw	47
 18515  1491  00C3               	movwf	((??_ini_GERADOR+2)^(0+256)+1)
 18516  1492  0840               	movf	??_ini_GERADOR^(0+256),w
 18517  1493  0742               	addwf	(??_ini_GERADOR+2)^(0+256),w
 18518  1494  0086               	movwf	6
 18519  1495  0841               	movf	(??_ini_GERADOR+1)^(0+256),w
 18520  1496  3D43               	addwfc	(??_ini_GERADOR+3)^(0+256),w
 18521  1497  0087               	movwf	7
 18522  1498  0144               	movlb	4	; select bank4
 18523  1499  0844               	movf	_freq_gerador^(0+512),w
 18524  149A  3FC0               	movwi [0]fsr1
 18525  149B  0845               	movf	(_freq_gerador+1)^(0+512),w
 18526  149C  3FC1               	movwi [1]fsr1
 18527  149D  3001               	movlw	1
 18528  149E  0142               	movlb	2	; select bank2
 18529  149F  00C0               	movwf	??_ini_GERADOR^(0+256)
 18530  14A0  0840               	movf	??_ini_GERADOR^(0+256),w
 18531  14A1  0148               	movlb	8	; select bank8
 18532  14A2  07D2               	addwf	ini_GERADOR@i_2421^(0+1024),f
 18533  14A3  300A               	movlw	10
 18534  14A4  0252               	subwf	ini_GERADOR@i_2421^(0+1024),w
 18535  14A5  1C03               	skipc
 18536  14A6  2C88               	goto	l17412
 18537  14A7                     l17418:	
 18538                           
 18539                           ;func.c: 273: }
 18540                           ;func.c: 275: freq_gerador = f;
 18541  14A7  0142               	movlb	2	; select bank2
 18542  14A8  0839               	movf	(ini_GERADOR@f+1)^(0+256),w
 18543  14A9  0144               	movlb	4	; select bank4
 18544  14AA  00C5               	movwf	(_freq_gerador+1)^(0+512)
 18545  14AB  0142               	movlb	2	; select bank2
 18546  14AC  0838               	movf	ini_GERADOR@f^(0+256),w
 18547  14AD  0144               	movlb	4	; select bank4
 18548  14AE  00C4               	movwf	_freq_gerador^(0+512)
 18549                           
 18550                           ;func.c: 281: freq_atual = freq_inicial;
 18551  14AF  0143               	movlb	3	; select bank3
 18552  14B0  0837               	movf	(_freq_inicial+1)^(0+384),w
 18553  14B1  00B5               	movwf	(_freq_atual+1)^(0+384)
 18554  14B2  0836               	movf	_freq_inicial^(0+384),w
 18555  14B3  00B4               	movwf	_freq_atual^(0+384)
 18556                           
 18557                           ;func.c: 284: limite_24 = f + 600;
 18558  14B4  0142               	movlb	2	; select bank2
 18559  14B5  0838               	movf	ini_GERADOR@f^(0+256),w
 18560  14B6  3E58               	addlw	88
 18561  14B7  0144               	movlb	4	; select bank4
 18562  14B8  00C2               	movwf	_limite_24^(0+512)
 18563  14B9  3002               	movlw	2
 18564  14BA  0142               	movlb	2	; select bank2
 18565  14BB  3D39               	addwfc	(ini_GERADOR@f+1)^(0+256),w
 18566  14BC  0144               	movlb	4	; select bank4
 18567  14BD  00C3               	movwf	(_limite_24+1)^(0+512)
 18568                           
 18569                           ;func.c: 285: limite_22 = f + 500;
 18570  14BE  0142               	movlb	2	; select bank2
 18571  14BF  0838               	movf	ini_GERADOR@f^(0+256),w
 18572  14C0  3EF4               	addlw	244
 18573  14C1  0144               	movlb	4	; select bank4
 18574  14C2  00BE               	movwf	_limite_22^(0+512)
 18575  14C3  3001               	movlw	1
 18576  14C4  0142               	movlb	2	; select bank2
 18577  14C5  3D39               	addwfc	(ini_GERADOR@f+1)^(0+256),w
 18578  14C6  0144               	movlb	4	; select bank4
 18579  14C7  00BF               	movwf	(_limite_22+1)^(0+512)
 18580                           
 18581                           ;func.c: 286: limite_17 = f - 200;
 18582  14C8  0142               	movlb	2	; select bank2
 18583  14C9  0838               	movf	ini_GERADOR@f^(0+256),w
 18584  14CA  3E38               	addlw	56
 18585  14CB  0144               	movlb	4	; select bank4
 18586  14CC  00BC               	movwf	_limite_17^(0+512)
 18587  14CD  30FF               	movlw	255
 18588  14CE  0142               	movlb	2	; select bank2
 18589  14CF  3D39               	addwfc	(ini_GERADOR@f+1)^(0+256),w
 18590  14D0  0144               	movlb	4	; select bank4
 18591  14D1  00BD               	movwf	(_limite_17+1)^(0+512)
 18592                           
 18593                           ;func.c: 287: limite_16 = f - 250;
 18594  14D2  0142               	movlb	2	; select bank2
 18595  14D3  0838               	movf	ini_GERADOR@f^(0+256),w
 18596  14D4  3E06               	addlw	6
 18597  14D5  0144               	movlb	4	; select bank4
 18598  14D6  00C0               	movwf	_limite_16^(0+512)
 18599  14D7  30FF               	movlw	255
 18600  14D8  0142               	movlb	2	; select bank2
 18601  14D9  3D39               	addwfc	(ini_GERADOR@f+1)^(0+256),w
 18602  14DA  0144               	movlb	4	; select bank4
 18603  14DB  00C1               	movwf	(_limite_16+1)^(0+512)
 18604                           
 18605                           ;func.c: 289: potencia = (unsigned int)round((p*1.2)/100);
 18606  14DC  0142               	movlb	2	; select bank2
 18607  14DD  083B               	movf	(ini_GERADOR@p+1)^(0+256),w
 18608  14DE  0140               	movlb	0	; select bank0
 18609  14DF  00B4               	movwf	___lwtoft@c+1
 18610  14E0  0142               	movlb	2	; select bank2
 18611  14E1  083A               	movf	ini_GERADOR@p^(0+256),w
 18612  14E2  0140               	movlb	0	; select bank0
 18613  14E3  00B3               	movwf	___lwtoft@c
 18614  14E4  31E7  27EB  3194   	fcall	___lwtoft
 18615  14E7  0140               	movlb	0	; select bank0
 18616  14E8  0833               	movf	?___lwtoft,w
 18617  14E9  00CB               	movwf	___ftmul@f2
 18618  14EA  0834               	movf	?___lwtoft+1,w
 18619  14EB  00CC               	movwf	___ftmul@f2+1
 18620  14EC  0835               	movf	?___lwtoft+2,w
 18621  14ED  00CD               	movwf	___ftmul@f2+2
 18622  14EE  309A               	movlw	154
 18623  14EF  00C8               	movwf	___ftmul@f1
 18624  14F0  3099               	movlw	153
 18625  14F1  00C9               	movwf	___ftmul@f1+1
 18626  14F2  303F               	movlw	63
 18627  14F3  00CA               	movwf	___ftmul@f1+2
 18628  14F4  31B9  218F  3194   	fcall	___ftmul
 18629  14F7  0140               	movlb	0	; select bank0
 18630  14F8  0848               	movf	?___ftmul,w
 18631  14F9  0141               	movlb	1	; select bank1
 18632  14FA  00AD               	movwf	___ftdiv@f1^(0+128)
 18633  14FB  0140               	movlb	0	; select bank0
 18634  14FC  0849               	movf	?___ftmul+1,w
 18635  14FD  0141               	movlb	1	; select bank1
 18636  14FE  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 18637  14FF  0140               	movlb	0	; select bank0
 18638  1500  084A               	movf	?___ftmul+2,w
 18639  1501  0141               	movlb	1	; select bank1
 18640  1502  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 18641  1503  3000               	movlw	0
 18642  1504  00AA               	movwf	___ftdiv@f2^(0+128)
 18643  1505  30C8               	movlw	200
 18644  1506  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 18645  1507  3042               	movlw	66
 18646  1508  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 18647  1509  31BA  2243  3194   	fcall	___ftdiv
 18648  150C  0141               	movlb	1	; select bank1
 18649  150D  082A               	movf	?___ftdiv^(0+128),w
 18650  150E  00D3               	movwf	round@x^(0+128)
 18651  150F  082B               	movf	(?___ftdiv+1)^(0+128),w
 18652  1510  00D4               	movwf	(round@x+1)^(0+128)
 18653  1511  082C               	movf	(?___ftdiv+2)^(0+128),w
 18654  1512  00D5               	movwf	(round@x+2)^(0+128)
 18655  1513  3187  278A  3194   	fcall	_round
 18656  1516  0141               	movlb	1	; select bank1
 18657  1517  0853               	movf	?_round^(0+128),w
 18658  1518  0148               	movlb	8	; select bank8
 18659  1519  00CF               	movwf	_ini_GERADOR$4252^(0+1024)
 18660  151A  0141               	movlb	1	; select bank1
 18661  151B  0854               	movf	(?_round+1)^(0+128),w
 18662  151C  0148               	movlb	8	; select bank8
 18663  151D  00D0               	movwf	(_ini_GERADOR$4252+1)^(0+1024)
 18664  151E  0141               	movlb	1	; select bank1
 18665  151F  0855               	movf	(?_round+2)^(0+128),w
 18666  1520  0148               	movlb	8	; select bank8
 18667  1521  00D1               	movwf	(_ini_GERADOR$4252+2)^(0+1024)
 18668                           
 18669                           ;func.c: 289: potencia = (unsigned int)round((p*1.2)/100);
 18670  1522  084F               	movf	_ini_GERADOR$4252^(0+1024),w
 18671  1523  0141               	movlb	1	; select bank1
 18672  1524  00BA               	movwf	___fttol@f1^(0+128)
 18673  1525  0148               	movlb	8	; select bank8
 18674  1526  0850               	movf	(_ini_GERADOR$4252+1)^(0+1024),w
 18675  1527  0141               	movlb	1	; select bank1
 18676  1528  00BB               	movwf	(___fttol@f1+1)^(0+128)
 18677  1529  0148               	movlb	8	; select bank8
 18678  152A  0851               	movf	(_ini_GERADOR$4252+2)^(0+1024),w
 18679  152B  0141               	movlb	1	; select bank1
 18680  152C  00BC               	movwf	(___fttol@f1+2)^(0+128)
 18681  152D  31C3  2352  3194   	fcall	___fttol
 18682  1530  0141               	movlb	1	; select bank1
 18683  1531  083B               	movf	(?___fttol+1)^(0+128),w
 18684  1532  0144               	movlb	4	; select bank4
 18685  1533  00CB               	movwf	(_potencia+1)^(0+512)
 18686  1534  0141               	movlb	1	; select bank1
 18687  1535  083A               	movf	?___fttol^(0+128),w
 18688  1536  0144               	movlb	4	; select bank4
 18689  1537  00CA               	movwf	_potencia^(0+512)
 18690                           
 18691                           ;func.c: 290: float Xc1 = XC(f,c);
 18692  1538  0142               	movlb	2	; select bank2
 18693  1539  0839               	movf	(ini_GERADOR@f+1)^(0+256),w
 18694  153A  0141               	movlb	1	; select bank1
 18695  153B  00BB               	movwf	(XC@f+1)^(0+128)
 18696  153C  0142               	movlb	2	; select bank2
 18697  153D  0838               	movf	ini_GERADOR@f^(0+256),w
 18698  153E  0141               	movlb	1	; select bank1
 18699  153F  00BA               	movwf	XC@f^(0+128)
 18700  1540  0142               	movlb	2	; select bank2
 18701  1541  083D               	movf	(ini_GERADOR@c+1)^(0+256),w
 18702  1542  0141               	movlb	1	; select bank1
 18703  1543  00BD               	movwf	(XC@nF+1)^(0+128)
 18704  1544  0142               	movlb	2	; select bank2
 18705  1545  083C               	movf	ini_GERADOR@c^(0+256),w
 18706  1546  0141               	movlb	1	; select bank1
 18707  1547  00BC               	movwf	XC@nF^(0+128)
 18708  1548  31C2  224A  3194   	fcall	_XC
 18709  154B  0141               	movlb	1	; select bank1
 18710  154C  083A               	movf	?_XC^(0+128),w
 18711  154D  0148               	movlb	8	; select bank8
 18712  154E  00C6               	movwf	ini_GERADOR@Xc1^(0+1024)
 18713  154F  0141               	movlb	1	; select bank1
 18714  1550  083B               	movf	(?_XC+1)^(0+128),w
 18715  1551  0148               	movlb	8	; select bank8
 18716  1552  00C7               	movwf	(ini_GERADOR@Xc1+1)^(0+1024)
 18717  1553  0141               	movlb	1	; select bank1
 18718  1554  083C               	movf	(?_XC+2)^(0+128),w
 18719  1555  0148               	movlb	8	; select bank8
 18720  1556  00C8               	movwf	(ini_GERADOR@Xc1+2)^(0+1024)
 18721                           
 18722                           ;func.c: 291: float Xc2 = XC(f,22);
 18723  1557  0142               	movlb	2	; select bank2
 18724  1558  0839               	movf	(ini_GERADOR@f+1)^(0+256),w
 18725  1559  0141               	movlb	1	; select bank1
 18726  155A  00BB               	movwf	(XC@f+1)^(0+128)
 18727  155B  0142               	movlb	2	; select bank2
 18728  155C  0838               	movf	ini_GERADOR@f^(0+256),w
 18729  155D  0141               	movlb	1	; select bank1
 18730  155E  00BA               	movwf	XC@f^(0+128)
 18731  155F  3016               	movlw	22
 18732  1560  00BC               	movwf	XC@nF^(0+128)
 18733  1561  3000               	movlw	0
 18734  1562  00BD               	movwf	(XC@nF^(0+128)+1)
 18735  1563  31C2  224A  3194   	fcall	_XC
 18736  1566  0141               	movlb	1	; select bank1
 18737  1567  083A               	movf	?_XC^(0+128),w
 18738  1568  0148               	movlb	8	; select bank8
 18739  1569  00C9               	movwf	ini_GERADOR@Xc2^(0+1024)
 18740  156A  0141               	movlb	1	; select bank1
 18741  156B  083B               	movf	(?_XC+1)^(0+128),w
 18742  156C  0148               	movlb	8	; select bank8
 18743  156D  00CA               	movwf	(ini_GERADOR@Xc2+1)^(0+1024)
 18744  156E  0141               	movlb	1	; select bank1
 18745  156F  083C               	movf	(?_XC+2)^(0+128),w
 18746  1570  0148               	movlb	8	; select bank8
 18747  1571  00CB               	movwf	(ini_GERADOR@Xc2+2)^(0+1024)
 18748                           
 18749                           ;func.c: 292: float Xc1Xc2 = Xc1*Xc2;
 18750  1572  0849               	movf	ini_GERADOR@Xc2^(0+1024),w
 18751  1573  0140               	movlb	0	; select bank0
 18752  1574  00C8               	movwf	___ftmul@f1
 18753  1575  0148               	movlb	8	; select bank8
 18754  1576  084A               	movf	(ini_GERADOR@Xc2+1)^(0+1024),w
 18755  1577  0140               	movlb	0	; select bank0
 18756  1578  00C9               	movwf	___ftmul@f1+1
 18757  1579  0148               	movlb	8	; select bank8
 18758  157A  084B               	movf	(ini_GERADOR@Xc2+2)^(0+1024),w
 18759  157B  0140               	movlb	0	; select bank0
 18760  157C  00CA               	movwf	___ftmul@f1+2
 18761  157D  0148               	movlb	8	; select bank8
 18762  157E  0846               	movf	ini_GERADOR@Xc1^(0+1024),w
 18763  157F  0140               	movlb	0	; select bank0
 18764  1580  00CB               	movwf	___ftmul@f2
 18765  1581  0148               	movlb	8	; select bank8
 18766  1582  0847               	movf	(ini_GERADOR@Xc1+1)^(0+1024),w
 18767  1583  0140               	movlb	0	; select bank0
 18768  1584  00CC               	movwf	___ftmul@f2+1
 18769  1585  0148               	movlb	8	; select bank8
 18770  1586  0848               	movf	(ini_GERADOR@Xc1+2)^(0+1024),w
 18771  1587  0140               	movlb	0	; select bank0
 18772  1588  00CD               	movwf	___ftmul@f2+2
 18773  1589  31B9  218F  3194   	fcall	___ftmul
 18774  158C  0140               	movlb	0	; select bank0
 18775  158D  0848               	movf	?___ftmul,w
 18776  158E  0148               	movlb	8	; select bank8
 18777  158F  00C1               	movwf	ini_GERADOR@Xc1Xc2^(0+1024)
 18778  1590  0140               	movlb	0	; select bank0
 18779  1591  0849               	movf	?___ftmul+1,w
 18780  1592  0148               	movlb	8	; select bank8
 18781  1593  00C2               	movwf	(ini_GERADOR@Xc1Xc2+1)^(0+1024)
 18782  1594  0140               	movlb	0	; select bank0
 18783  1595  084A               	movf	?___ftmul+2,w
 18784  1596  0148               	movlb	8	; select bank8
 18785  1597  00C3               	movwf	(ini_GERADOR@Xc1Xc2+2)^(0+1024)
 18786                           
 18787                           ;func.c: 293: float ang = atan(560/(Xc1+Xc2));
 18788  1598  0849               	movf	ini_GERADOR@Xc2^(0+1024),w
 18789  1599  0140               	movlb	0	; select bank0
 18790  159A  00BB               	movwf	___ftadd@f1
 18791  159B  0148               	movlb	8	; select bank8
 18792  159C  084A               	movf	(ini_GERADOR@Xc2+1)^(0+1024),w
 18793  159D  0140               	movlb	0	; select bank0
 18794  159E  00BC               	movwf	___ftadd@f1+1
 18795  159F  0148               	movlb	8	; select bank8
 18796  15A0  084B               	movf	(ini_GERADOR@Xc2+2)^(0+1024),w
 18797  15A1  0140               	movlb	0	; select bank0
 18798  15A2  00BD               	movwf	___ftadd@f1+2
 18799  15A3  0148               	movlb	8	; select bank8
 18800  15A4  0846               	movf	ini_GERADOR@Xc1^(0+1024),w
 18801  15A5  0140               	movlb	0	; select bank0
 18802  15A6  00BE               	movwf	___ftadd@f2
 18803  15A7  0148               	movlb	8	; select bank8
 18804  15A8  0847               	movf	(ini_GERADOR@Xc1+1)^(0+1024),w
 18805  15A9  0140               	movlb	0	; select bank0
 18806  15AA  00BF               	movwf	___ftadd@f2+1
 18807  15AB  0148               	movlb	8	; select bank8
 18808  15AC  0848               	movf	(ini_GERADOR@Xc1+2)^(0+1024),w
 18809  15AD  0140               	movlb	0	; select bank0
 18810  15AE  00C0               	movwf	___ftadd@f2+2
 18811  15AF  31B0  2027  3194   	fcall	___ftadd
 18812  15B2  0140               	movlb	0	; select bank0
 18813  15B3  083B               	movf	?___ftadd,w
 18814  15B4  0141               	movlb	1	; select bank1
 18815  15B5  00AA               	movwf	___ftdiv@f2^(0+128)
 18816  15B6  0140               	movlb	0	; select bank0
 18817  15B7  083C               	movf	?___ftadd+1,w
 18818  15B8  0141               	movlb	1	; select bank1
 18819  15B9  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 18820  15BA  0140               	movlb	0	; select bank0
 18821  15BB  083D               	movf	?___ftadd+2,w
 18822  15BC  0141               	movlb	1	; select bank1
 18823  15BD  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 18824  15BE  3000               	movlw	0
 18825  15BF  00AD               	movwf	___ftdiv@f1^(0+128)
 18826  15C0  300C               	movlw	12
 18827  15C1  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 18828  15C2  3044               	movlw	68
 18829  15C3  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 18830  15C4  31BA  2243  3194   	fcall	___ftdiv
 18831  15C7  0141               	movlb	1	; select bank1
 18832  15C8  082A               	movf	?___ftdiv^(0+128),w
 18833  15C9  0148               	movlb	8	; select bank8
 18834  15CA  00A9               	movwf	_ini_GERADOR$4253^(0+1024)
 18835  15CB  0141               	movlb	1	; select bank1
 18836  15CC  082B               	movf	(?___ftdiv+1)^(0+128),w
 18837  15CD  0148               	movlb	8	; select bank8
 18838  15CE  00AA               	movwf	(_ini_GERADOR$4253+1)^(0+1024)
 18839  15CF  0141               	movlb	1	; select bank1
 18840  15D0  082C               	movf	(?___ftdiv+2)^(0+128),w
 18841  15D1  0148               	movlb	8	; select bank8
 18842  15D2  00AB               	movwf	(_ini_GERADOR$4253+2)^(0+1024)
 18843                           
 18844                           ;func.c: 293: float ang = atan(560/(Xc1+Xc2));
 18845  15D3  0829               	movf	_ini_GERADOR$4253^(0+1024),w
 18846  15D4  0141               	movlb	1	; select bank1
 18847  15D5  00D6               	movwf	atan@f^(0+128)
 18848  15D6  0148               	movlb	8	; select bank8
 18849  15D7  082A               	movf	(_ini_GERADOR$4253+1)^(0+1024),w
 18850  15D8  0141               	movlb	1	; select bank1
 18851  15D9  00D7               	movwf	(atan@f+1)^(0+128)
 18852  15DA  0148               	movlb	8	; select bank8
 18853  15DB  082B               	movf	(_ini_GERADOR$4253+2)^(0+1024),w
 18854  15DC  0141               	movlb	1	; select bank1
 18855  15DD  00D8               	movwf	(atan@f+2)^(0+128)
 18856  15DE  31A8  20AC  3194   	fcall	_atan
 18857  15E1  0141               	movlb	1	; select bank1
 18858  15E2  0856               	movf	?_atan^(0+128),w
 18859  15E3  0148               	movlb	8	; select bank8
 18860  15E4  00A3               	movwf	ini_GERADOR@ang^(0+1024)
 18861  15E5  0141               	movlb	1	; select bank1
 18862  15E6  0857               	movf	(?_atan+1)^(0+128),w
 18863  15E7  0148               	movlb	8	; select bank8
 18864  15E8  00A4               	movwf	(ini_GERADOR@ang+1)^(0+1024)
 18865  15E9  0141               	movlb	1	; select bank1
 18866  15EA  0858               	movf	(?_atan+2)^(0+128),w
 18867  15EB  0148               	movlb	8	; select bank8
 18868  15EC  00A5               	movwf	(ini_GERADOR@ang+2)^(0+1024)
 18869                           
 18870                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 18871  15ED  0841               	movf	ini_GERADOR@Xc1Xc2^(0+1024),w
 18872  15EE  0141               	movlb	1	; select bank1
 18873  15EF  00AA               	movwf	___ftdiv@f2^(0+128)
 18874  15F0  0148               	movlb	8	; select bank8
 18875  15F1  0842               	movf	(ini_GERADOR@Xc1Xc2+1)^(0+1024),w
 18876  15F2  0141               	movlb	1	; select bank1
 18877  15F3  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 18878  15F4  0148               	movlb	8	; select bank8
 18879  15F5  0843               	movf	(ini_GERADOR@Xc1Xc2+2)^(0+1024),w
 18880  15F6  0141               	movlb	1	; select bank1
 18881  15F7  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 18882  15F8  0148               	movlb	8	; select bank8
 18883  15F9  0849               	movf	ini_GERADOR@Xc2^(0+1024),w
 18884  15FA  0140               	movlb	0	; select bank0
 18885  15FB  00BB               	movwf	___ftadd@f1
 18886  15FC  0148               	movlb	8	; select bank8
 18887  15FD  084A               	movf	(ini_GERADOR@Xc2+1)^(0+1024),w
 18888  15FE  0140               	movlb	0	; select bank0
 18889  15FF  00BC               	movwf	___ftadd@f1+1
 18890  1600  0148               	movlb	8	; select bank8
 18891  1601  084B               	movf	(ini_GERADOR@Xc2+2)^(0+1024),w
 18892  1602  0140               	movlb	0	; select bank0
 18893  1603  00BD               	movwf	___ftadd@f1+2
 18894  1604  0148               	movlb	8	; select bank8
 18895  1605  0846               	movf	ini_GERADOR@Xc1^(0+1024),w
 18896  1606  0140               	movlb	0	; select bank0
 18897  1607  00BE               	movwf	___ftadd@f2
 18898  1608  0148               	movlb	8	; select bank8
 18899  1609  0847               	movf	(ini_GERADOR@Xc1+1)^(0+1024),w
 18900  160A  0140               	movlb	0	; select bank0
 18901  160B  00BF               	movwf	___ftadd@f2+1
 18902  160C  0148               	movlb	8	; select bank8
 18903  160D  0848               	movf	(ini_GERADOR@Xc1+2)^(0+1024),w
 18904  160E  0140               	movlb	0	; select bank0
 18905  160F  00C0               	movwf	___ftadd@f2+2
 18906  1610  31B0  2027  3194   	fcall	___ftadd
 18907  1613  0140               	movlb	0	; select bank0
 18908  1614  083B               	movf	?___ftadd,w
 18909  1615  0141               	movlb	1	; select bank1
 18910  1616  00AD               	movwf	___ftdiv@f1^(0+128)
 18911  1617  0140               	movlb	0	; select bank0
 18912  1618  083C               	movf	?___ftadd+1,w
 18913  1619  0141               	movlb	1	; select bank1
 18914  161A  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 18915  161B  0140               	movlb	0	; select bank0
 18916  161C  083D               	movf	?___ftadd+2,w
 18917  161D  0141               	movlb	1	; select bank1
 18918  161E  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 18919  161F  31BA  2243  3194   	fcall	___ftdiv
 18920  1622  0141               	movlb	1	; select bank1
 18921  1623  082A               	movf	?___ftdiv^(0+128),w
 18922  1624  0148               	movlb	8	; select bank8
 18923  1625  00AC               	movwf	_ini_GERADOR$4254^(0+1024)
 18924  1626  0141               	movlb	1	; select bank1
 18925  1627  082B               	movf	(?___ftdiv+1)^(0+128),w
 18926  1628  0148               	movlb	8	; select bank8
 18927  1629  00AD               	movwf	(_ini_GERADOR$4254+1)^(0+1024)
 18928  162A  0141               	movlb	1	; select bank1
 18929  162B  082C               	movf	(?___ftdiv+2)^(0+128),w
 18930  162C  0148               	movlb	8	; select bank8
 18931  162D  00AE               	movwf	(_ini_GERADOR$4254+2)^(0+1024)
 18932                           
 18933                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 18934  162E  0841               	movf	ini_GERADOR@Xc1Xc2^(0+1024),w
 18935  162F  0141               	movlb	1	; select bank1
 18936  1630  00AA               	movwf	___ftdiv@f2^(0+128)
 18937  1631  0148               	movlb	8	; select bank8
 18938  1632  0842               	movf	(ini_GERADOR@Xc1Xc2+1)^(0+1024),w
 18939  1633  0141               	movlb	1	; select bank1
 18940  1634  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 18941  1635  0148               	movlb	8	; select bank8
 18942  1636  0843               	movf	(ini_GERADOR@Xc1Xc2+2)^(0+1024),w
 18943  1637  0141               	movlb	1	; select bank1
 18944  1638  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 18945  1639  3000               	movlw	0
 18946  163A  00AD               	movwf	___ftdiv@f1^(0+128)
 18947  163B  300C               	movlw	12
 18948  163C  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 18949  163D  3044               	movlw	68
 18950  163E  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 18951  163F  31BA  2243  3194   	fcall	___ftdiv
 18952  1642  0141               	movlb	1	; select bank1
 18953  1643  082A               	movf	?___ftdiv^(0+128),w
 18954  1644  0148               	movlb	8	; select bank8
 18955  1645  00AF               	movwf	_ini_GERADOR$4255^(0+1024)
 18956  1646  0141               	movlb	1	; select bank1
 18957  1647  082B               	movf	(?___ftdiv+1)^(0+128),w
 18958  1648  0148               	movlb	8	; select bank8
 18959  1649  00B0               	movwf	(_ini_GERADOR$4255+1)^(0+1024)
 18960  164A  0141               	movlb	1	; select bank1
 18961  164B  082C               	movf	(?___ftdiv+2)^(0+128),w
 18962  164C  0148               	movlb	8	; select bank8
 18963  164D  00B1               	movwf	(_ini_GERADOR$4255+2)^(0+1024)
 18964                           
 18965                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 18966  164E  3000               	movlw	0
 18967  164F  0141               	movlb	1	; select bank1
 18968  1650  00E3               	movwf	pow@y^(0+128)
 18969  1651  3000               	movlw	0
 18970  1652  00E4               	movwf	(pow@y+1)^(0+128)
 18971  1653  3040               	movlw	64
 18972  1654  00E5               	movwf	(pow@y+2)^(0+128)
 18973  1655  0148               	movlb	8	; select bank8
 18974  1656  082C               	movf	_ini_GERADOR$4254^(0+1024),w
 18975  1657  0141               	movlb	1	; select bank1
 18976  1658  00E0               	movwf	pow@x^(0+128)
 18977  1659  0148               	movlb	8	; select bank8
 18978  165A  082D               	movf	(_ini_GERADOR$4254+1)^(0+1024),w
 18979  165B  0141               	movlb	1	; select bank1
 18980  165C  00E1               	movwf	(pow@x+1)^(0+128)
 18981  165D  0148               	movlb	8	; select bank8
 18982  165E  082E               	movf	(_ini_GERADOR$4254+2)^(0+1024),w
 18983  165F  0141               	movlb	1	; select bank1
 18984  1660  00E2               	movwf	(pow@x+2)^(0+128)
 18985  1661  31B2  2232  3194   	fcall	_pow
 18986  1664  0141               	movlb	1	; select bank1
 18987  1665  0860               	movf	?_pow^(0+128),w
 18988  1666  0148               	movlb	8	; select bank8
 18989  1667  00B2               	movwf	_ini_GERADOR$4256^(0+1024)
 18990  1668  0141               	movlb	1	; select bank1
 18991  1669  0861               	movf	(?_pow+1)^(0+128),w
 18992  166A  0148               	movlb	8	; select bank8
 18993  166B  00B3               	movwf	(_ini_GERADOR$4256+1)^(0+1024)
 18994  166C  0141               	movlb	1	; select bank1
 18995  166D  0862               	movf	(?_pow+2)^(0+128),w
 18996  166E  0148               	movlb	8	; select bank8
 18997  166F  00B4               	movwf	(_ini_GERADOR$4256+2)^(0+1024)
 18998                           
 18999                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 19000  1670  3000               	movlw	0
 19001  1671  0141               	movlb	1	; select bank1
 19002  1672  00E3               	movwf	pow@y^(0+128)
 19003  1673  3000               	movlw	0
 19004  1674  00E4               	movwf	(pow@y+1)^(0+128)
 19005  1675  3040               	movlw	64
 19006  1676  00E5               	movwf	(pow@y+2)^(0+128)
 19007  1677  0148               	movlb	8	; select bank8
 19008  1678  082F               	movf	_ini_GERADOR$4255^(0+1024),w
 19009  1679  0141               	movlb	1	; select bank1
 19010  167A  00E0               	movwf	pow@x^(0+128)
 19011  167B  0148               	movlb	8	; select bank8
 19012  167C  0830               	movf	(_ini_GERADOR$4255+1)^(0+1024),w
 19013  167D  0141               	movlb	1	; select bank1
 19014  167E  00E1               	movwf	(pow@x+1)^(0+128)
 19015  167F  0148               	movlb	8	; select bank8
 19016  1680  0831               	movf	(_ini_GERADOR$4255+2)^(0+1024),w
 19017  1681  0141               	movlb	1	; select bank1
 19018  1682  00E2               	movwf	(pow@x+2)^(0+128)
 19019  1683  31B2  2232  3194   	fcall	_pow
 19020  1686  0141               	movlb	1	; select bank1
 19021  1687  0860               	movf	?_pow^(0+128),w
 19022  1688  0148               	movlb	8	; select bank8
 19023  1689  00B5               	movwf	_ini_GERADOR$4257^(0+1024)
 19024  168A  0141               	movlb	1	; select bank1
 19025  168B  0861               	movf	(?_pow+1)^(0+128),w
 19026  168C  0148               	movlb	8	; select bank8
 19027  168D  00B6               	movwf	(_ini_GERADOR$4257+1)^(0+1024)
 19028  168E  0141               	movlb	1	; select bank1
 19029  168F  0862               	movf	(?_pow+2)^(0+128),w
 19030  1690  0148               	movlb	8	; select bank8
 19031  1691  00B7               	movwf	(_ini_GERADOR$4257+2)^(0+1024)
 19032                           
 19033                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 19034  1692  0832               	movf	_ini_GERADOR$4256^(0+1024),w
 19035  1693  0140               	movlb	0	; select bank0
 19036  1694  00BB               	movwf	___ftadd@f1
 19037  1695  0148               	movlb	8	; select bank8
 19038  1696  0833               	movf	(_ini_GERADOR$4256+1)^(0+1024),w
 19039  1697  0140               	movlb	0	; select bank0
 19040  1698  00BC               	movwf	___ftadd@f1+1
 19041  1699  0148               	movlb	8	; select bank8
 19042  169A  0834               	movf	(_ini_GERADOR$4256+2)^(0+1024),w
 19043  169B  0140               	movlb	0	; select bank0
 19044  169C  00BD               	movwf	___ftadd@f1+2
 19045  169D  0148               	movlb	8	; select bank8
 19046  169E  0835               	movf	_ini_GERADOR$4257^(0+1024),w
 19047  169F  0140               	movlb	0	; select bank0
 19048  16A0  00BE               	movwf	___ftadd@f2
 19049  16A1  0148               	movlb	8	; select bank8
 19050  16A2  0836               	movf	(_ini_GERADOR$4257+1)^(0+1024),w
 19051  16A3  0140               	movlb	0	; select bank0
 19052  16A4  00BF               	movwf	___ftadd@f2+1
 19053  16A5  0148               	movlb	8	; select bank8
 19054  16A6  0837               	movf	(_ini_GERADOR$4257+2)^(0+1024),w
 19055  16A7  0140               	movlb	0	; select bank0
 19056  16A8  00C0               	movwf	___ftadd@f2+2
 19057  16A9  31B0  2027  3194   	fcall	___ftadd
 19058  16AC  0140               	movlb	0	; select bank0
 19059  16AD  083B               	movf	?___ftadd,w
 19060  16AE  0148               	movlb	8	; select bank8
 19061  16AF  00B8               	movwf	_ini_GERADOR$4258^(0+1024)
 19062  16B0  0140               	movlb	0	; select bank0
 19063  16B1  083C               	movf	?___ftadd+1,w
 19064  16B2  0148               	movlb	8	; select bank8
 19065  16B3  00B9               	movwf	(_ini_GERADOR$4258+1)^(0+1024)
 19066  16B4  0140               	movlb	0	; select bank0
 19067  16B5  083D               	movf	?___ftadd+2,w
 19068  16B6  0148               	movlb	8	; select bank8
 19069  16B7  00BA               	movwf	(_ini_GERADOR$4258+2)^(0+1024)
 19070                           
 19071                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 19072  16B8  0838               	movf	_ini_GERADOR$4258^(0+1024),w
 19073  16B9  0141               	movlb	1	; select bank1
 19074  16BA  00E7               	movwf	sqrt@a^(0+128)
 19075  16BB  0148               	movlb	8	; select bank8
 19076  16BC  0839               	movf	(_ini_GERADOR$4258+1)^(0+1024),w
 19077  16BD  0141               	movlb	1	; select bank1
 19078  16BE  00E8               	movwf	(sqrt@a+1)^(0+128)
 19079  16BF  0148               	movlb	8	; select bank8
 19080  16C0  083A               	movf	(_ini_GERADOR$4258+2)^(0+1024),w
 19081  16C1  0141               	movlb	1	; select bank1
 19082  16C2  00E9               	movwf	(sqrt@a+2)^(0+128)
 19083  16C3  3198  2033  3194   	fcall	_sqrt
 19084  16C6  0141               	movlb	1	; select bank1
 19085  16C7  0867               	movf	?_sqrt^(0+128),w
 19086  16C8  0148               	movlb	8	; select bank8
 19087  16C9  00BB               	movwf	_ini_GERADOR$4259^(0+1024)
 19088  16CA  0141               	movlb	1	; select bank1
 19089  16CB  0868               	movf	(?_sqrt+1)^(0+128),w
 19090  16CC  0148               	movlb	8	; select bank8
 19091  16CD  00BC               	movwf	(_ini_GERADOR$4259+1)^(0+1024)
 19092  16CE  0141               	movlb	1	; select bank1
 19093  16CF  0869               	movf	(?_sqrt+2)^(0+128),w
 19094  16D0  0148               	movlb	8	; select bank8
 19095  16D1  00BD               	movwf	(_ini_GERADOR$4259+2)^(0+1024)
 19096                           
 19097                           ;func.c: 295: float IT_3Vref = (5.55*3)*sqrt(pow(560/Xc1Xc2,2)+ pow((Xc1+Xc2)/Xc1Xc2,2))
      +                          ;
 19098  16D2  3033               	movlw	51
 19099  16D3  0140               	movlb	0	; select bank0
 19100  16D4  00C8               	movwf	___ftmul@f1
 19101  16D5  3085               	movlw	133
 19102  16D6  00C9               	movwf	___ftmul@f1+1
 19103  16D7  3041               	movlw	65
 19104  16D8  00CA               	movwf	___ftmul@f1+2
 19105  16D9  0148               	movlb	8	; select bank8
 19106  16DA  083B               	movf	_ini_GERADOR$4259^(0+1024),w
 19107  16DB  0140               	movlb	0	; select bank0
 19108  16DC  00CB               	movwf	___ftmul@f2
 19109  16DD  0148               	movlb	8	; select bank8
 19110  16DE  083C               	movf	(_ini_GERADOR$4259+1)^(0+1024),w
 19111  16DF  0140               	movlb	0	; select bank0
 19112  16E0  00CC               	movwf	___ftmul@f2+1
 19113  16E1  0148               	movlb	8	; select bank8
 19114  16E2  083D               	movf	(_ini_GERADOR$4259+2)^(0+1024),w
 19115  16E3  0140               	movlb	0	; select bank0
 19116  16E4  00CD               	movwf	___ftmul@f2+2
 19117  16E5  31B9  218F  3194   	fcall	___ftmul
 19118  16E8  0140               	movlb	0	; select bank0
 19119  16E9  0848               	movf	?___ftmul,w
 19120  16EA  0148               	movlb	8	; select bank8
 19121  16EB  00A6               	movwf	ini_GERADOR@IT_3Vref^(0+1024)
 19122  16EC  0140               	movlb	0	; select bank0
 19123  16ED  0849               	movf	?___ftmul+1,w
 19124  16EE  0148               	movlb	8	; select bank8
 19125  16EF  00A7               	movwf	(ini_GERADOR@IT_3Vref+1)^(0+1024)
 19126  16F0  0140               	movlb	0	; select bank0
 19127  16F1  084A               	movf	?___ftmul+2,w
 19128  16F2  0148               	movlb	8	; select bank8
 19129  16F3  00A8               	movwf	(ini_GERADOR@IT_3Vref+2)^(0+1024)
 19130                           
 19131                           ;func.c: 296: float Pot_3Vref = IT_3Vref*v;
 19132  16F4  0826               	movf	ini_GERADOR@IT_3Vref^(0+1024),w
 19133  16F5  0140               	movlb	0	; select bank0
 19134  16F6  00C8               	movwf	___ftmul@f1
 19135  16F7  0148               	movlb	8	; select bank8
 19136  16F8  0827               	movf	(ini_GERADOR@IT_3Vref+1)^(0+1024),w
 19137  16F9  0140               	movlb	0	; select bank0
 19138  16FA  00C9               	movwf	___ftmul@f1+1
 19139  16FB  0148               	movlb	8	; select bank8
 19140  16FC  0828               	movf	(ini_GERADOR@IT_3Vref+2)^(0+1024),w
 19141  16FD  0140               	movlb	0	; select bank0
 19142  16FE  00CA               	movwf	___ftmul@f1+2
 19143  16FF  0142               	movlb	2	; select bank2
 19144  1700  083F               	movf	(ini_GERADOR@v+1)^(0+256),w
 19145  1701  0140               	movlb	0	; select bank0
 19146  1702  00B4               	movwf	___lwtoft@c+1
 19147  1703  0142               	movlb	2	; select bank2
 19148  1704  083E               	movf	ini_GERADOR@v^(0+256),w
 19149  1705  0140               	movlb	0	; select bank0
 19150  1706  00B3               	movwf	___lwtoft@c
 19151  1707  31E7  27EB  3194   	fcall	___lwtoft
 19152  170A  0140               	movlb	0	; select bank0
 19153  170B  0833               	movf	?___lwtoft,w
 19154  170C  00CB               	movwf	___ftmul@f2
 19155  170D  0834               	movf	?___lwtoft+1,w
 19156  170E  00CC               	movwf	___ftmul@f2+1
 19157  170F  0835               	movf	?___lwtoft+2,w
 19158  1710  00CD               	movwf	___ftmul@f2+2
 19159  1711  31B9  218F  3194   	fcall	___ftmul
 19160  1714  0140               	movlb	0	; select bank0
 19161  1715  0848               	movf	?___ftmul,w
 19162  1716  0148               	movlb	8	; select bank8
 19163  1717  00CC               	movwf	ini_GERADOR@Pot_3Vref^(0+1024)
 19164  1718  0140               	movlb	0	; select bank0
 19165  1719  0849               	movf	?___ftmul+1,w
 19166  171A  0148               	movlb	8	; select bank8
 19167  171B  00CD               	movwf	(ini_GERADOR@Pot_3Vref+1)^(0+1024)
 19168  171C  0140               	movlb	0	; select bank0
 19169  171D  084A               	movf	?___ftmul+2,w
 19170  171E  0148               	movlb	8	; select bank8
 19171  171F  00CE               	movwf	(ini_GERADOR@Pot_3Vref+2)^(0+1024)
 19172                           
 19173                           ;func.c: 297: float Pot_real = Pot_3Vref*cos(ang);
 19174  1720  0823               	movf	ini_GERADOR@ang^(0+1024),w
 19175  1721  0141               	movlb	1	; select bank1
 19176  1722  00E3               	movwf	cos@f^(0+128)
 19177  1723  0148               	movlb	8	; select bank8
 19178  1724  0824               	movf	(ini_GERADOR@ang+1)^(0+1024),w
 19179  1725  0141               	movlb	1	; select bank1
 19180  1726  00E4               	movwf	(cos@f+1)^(0+128)
 19181  1727  0148               	movlb	8	; select bank8
 19182  1728  0825               	movf	(ini_GERADOR@ang+2)^(0+1024),w
 19183  1729  0141               	movlb	1	; select bank1
 19184  172A  00E5               	movwf	(cos@f+2)^(0+128)
 19185  172B  31A0  2001  3194   	fcall	_cos
 19186  172E  0141               	movlb	1	; select bank1
 19187  172F  0863               	movf	?_cos^(0+128),w
 19188  1730  0148               	movlb	8	; select bank8
 19189  1731  00BE               	movwf	_ini_GERADOR$4260^(0+1024)
 19190  1732  0141               	movlb	1	; select bank1
 19191  1733  0864               	movf	(?_cos+1)^(0+128),w
 19192  1734  0148               	movlb	8	; select bank8
 19193  1735  00BF               	movwf	(_ini_GERADOR$4260+1)^(0+1024)
 19194  1736  0141               	movlb	1	; select bank1
 19195  1737  0865               	movf	(?_cos+2)^(0+128),w
 19196  1738  0148               	movlb	8	; select bank8
 19197  1739  00C0               	movwf	(_ini_GERADOR$4260+2)^(0+1024)
 19198                           
 19199                           ;func.c: 297: float Pot_real = Pot_3Vref*cos(ang);
 19200  173A  084C               	movf	ini_GERADOR@Pot_3Vref^(0+1024),w
 19201  173B  0140               	movlb	0	; select bank0
 19202  173C  00C8               	movwf	___ftmul@f1
 19203  173D  0148               	movlb	8	; select bank8
 19204  173E  084D               	movf	(ini_GERADOR@Pot_3Vref+1)^(0+1024),w
 19205  173F  0140               	movlb	0	; select bank0
 19206  1740  00C9               	movwf	___ftmul@f1+1
 19207  1741  0148               	movlb	8	; select bank8
 19208  1742  084E               	movf	(ini_GERADOR@Pot_3Vref+2)^(0+1024),w
 19209  1743  0140               	movlb	0	; select bank0
 19210  1744  00CA               	movwf	___ftmul@f1+2
 19211  1745  0148               	movlb	8	; select bank8
 19212  1746  083E               	movf	_ini_GERADOR$4260^(0+1024),w
 19213  1747  0140               	movlb	0	; select bank0
 19214  1748  00CB               	movwf	___ftmul@f2
 19215  1749  0148               	movlb	8	; select bank8
 19216  174A  083F               	movf	(_ini_GERADOR$4260+1)^(0+1024),w
 19217  174B  0140               	movlb	0	; select bank0
 19218  174C  00CC               	movwf	___ftmul@f2+1
 19219  174D  0148               	movlb	8	; select bank8
 19220  174E  0840               	movf	(_ini_GERADOR$4260+2)^(0+1024),w
 19221  174F  0140               	movlb	0	; select bank0
 19222  1750  00CD               	movwf	___ftmul@f2+2
 19223  1751  31B9  218F  3194   	fcall	___ftmul
 19224  1754  0140               	movlb	0	; select bank0
 19225  1755  0848               	movf	?___ftmul,w
 19226  1756  0148               	movlb	8	; select bank8
 19227  1757  00A0               	movwf	ini_GERADOR@Pot_real^(0+1024)
 19228  1758  0140               	movlb	0	; select bank0
 19229  1759  0849               	movf	?___ftmul+1,w
 19230  175A  0148               	movlb	8	; select bank8
 19231  175B  00A1               	movwf	(ini_GERADOR@Pot_real+1)^(0+1024)
 19232  175C  0140               	movlb	0	; select bank0
 19233  175D  084A               	movf	?___ftmul+2,w
 19234  175E  0148               	movlb	8	; select bank8
 19235  175F  00A2               	movwf	(ini_GERADOR@Pot_real+2)^(0+1024)
 19236                           
 19237                           ;func.c: 298: mod_pot = (unsigned int)round(p*10/Pot_3Vref);
 19238  1760  300A               	movlw	10
 19239  1761  0140               	movlb	0	; select bank0
 19240  1762  00AD               	movwf	___wmul@multiplicand
 19241  1763  3000               	movlw	0
 19242  1764  00AE               	movwf	___wmul@multiplicand+1
 19243  1765  0142               	movlb	2	; select bank2
 19244  1766  083B               	movf	(ini_GERADOR@p+1)^(0+256),w
 19245  1767  0140               	movlb	0	; select bank0
 19246  1768  00AC               	movwf	___wmul@multiplier+1
 19247  1769  0142               	movlb	2	; select bank2
 19248  176A  083A               	movf	ini_GERADOR@p^(0+256),w
 19249  176B  0140               	movlb	0	; select bank0
 19250  176C  00AB               	movwf	___wmul@multiplier
 19251  176D  31D0  20FE  3194   	fcall	___wmul
 19252  1770  0140               	movlb	0	; select bank0
 19253  1771  082C               	movf	?___wmul+1,w
 19254  1772  00B4               	movwf	___lwtoft@c+1
 19255  1773  082B               	movf	?___wmul,w
 19256  1774  00B3               	movwf	___lwtoft@c
 19257  1775  31E7  27EB  3194   	fcall	___lwtoft
 19258  1778  0140               	movlb	0	; select bank0
 19259  1779  0833               	movf	?___lwtoft,w
 19260  177A  0141               	movlb	1	; select bank1
 19261  177B  00AD               	movwf	___ftdiv@f1^(0+128)
 19262  177C  0140               	movlb	0	; select bank0
 19263  177D  0834               	movf	?___lwtoft+1,w
 19264  177E  0141               	movlb	1	; select bank1
 19265  177F  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 19266  1780  0140               	movlb	0	; select bank0
 19267  1781  0835               	movf	?___lwtoft+2,w
 19268  1782  0141               	movlb	1	; select bank1
 19269  1783  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 19270  1784  0148               	movlb	8	; select bank8
 19271  1785  084C               	movf	ini_GERADOR@Pot_3Vref^(0+1024),w
 19272  1786  0141               	movlb	1	; select bank1
 19273  1787  00AA               	movwf	___ftdiv@f2^(0+128)
 19274  1788  0148               	movlb	8	; select bank8
 19275  1789  084D               	movf	(ini_GERADOR@Pot_3Vref+1)^(0+1024),w
 19276  178A  0141               	movlb	1	; select bank1
 19277  178B  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 19278  178C  0148               	movlb	8	; select bank8
 19279  178D  084E               	movf	(ini_GERADOR@Pot_3Vref+2)^(0+1024),w
 19280  178E  0141               	movlb	1	; select bank1
 19281  178F  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 19282  1790  31BA  2243  3194   	fcall	___ftdiv
 19283  1793  0141               	movlb	1	; select bank1
 19284  1794  082A               	movf	?___ftdiv^(0+128),w
 19285  1795  00D3               	movwf	round@x^(0+128)
 19286  1796  082B               	movf	(?___ftdiv+1)^(0+128),w
 19287  1797  00D4               	movwf	(round@x+1)^(0+128)
 19288  1798  082C               	movf	(?___ftdiv+2)^(0+128),w
 19289  1799  00D5               	movwf	(round@x+2)^(0+128)
 19290  179A  3187  278A  3194   	fcall	_round
 19291  179D  0141               	movlb	1	; select bank1
 19292  179E  0853               	movf	?_round^(0+128),w
 19293  179F  0148               	movlb	8	; select bank8
 19294  17A0  00CF               	movwf	_ini_GERADOR$4252^(0+1024)
 19295  17A1  0141               	movlb	1	; select bank1
 19296  17A2  0854               	movf	(?_round+1)^(0+128),w
 19297  17A3  0148               	movlb	8	; select bank8
 19298  17A4  00D0               	movwf	(_ini_GERADOR$4252+1)^(0+1024)
 19299  17A5  0141               	movlb	1	; select bank1
 19300  17A6  0855               	movf	(?_round+2)^(0+128),w
 19301  17A7  0148               	movlb	8	; select bank8
 19302  17A8  00D1               	movwf	(_ini_GERADOR$4252+2)^(0+1024)
 19303                           
 19304                           ;func.c: 298: mod_pot = (unsigned int)round(p*10/Pot_3Vref);
 19305  17A9  084F               	movf	_ini_GERADOR$4252^(0+1024),w
 19306  17AA  0141               	movlb	1	; select bank1
 19307  17AB  00BA               	movwf	___fttol@f1^(0+128)
 19308  17AC  0148               	movlb	8	; select bank8
 19309  17AD  0850               	movf	(_ini_GERADOR$4252+1)^(0+1024),w
 19310  17AE  0141               	movlb	1	; select bank1
 19311  17AF  00BB               	movwf	(___fttol@f1+1)^(0+128)
 19312  17B0  0148               	movlb	8	; select bank8
 19313  17B1  0851               	movf	(_ini_GERADOR$4252+2)^(0+1024),w
 19314  17B2  0141               	movlb	1	; select bank1
 19315  17B3  00BC               	movwf	(___fttol@f1+2)^(0+128)
 19316  17B4  31C3  2352  3194   	fcall	___fttol
 19317  17B7  0141               	movlb	1	; select bank1
 19318  17B8  083B               	movf	(?___fttol+1)^(0+128),w
 19319  17B9  0144               	movlb	4	; select bank4
 19320  17BA  00C7               	movwf	(_mod_pot+1)^(0+512)
 19321  17BB  0141               	movlb	1	; select bank1
 19322  17BC  083A               	movf	?___fttol^(0+128),w
 19323  17BD  0144               	movlb	4	; select bank4
 19324  17BE  00C6               	movwf	_mod_pot^(0+512)
 19325                           
 19326                           ;func.c: 299: ret_pot = (unsigned int)round(Pot_3Vref/100);
 19327  17BF  0148               	movlb	8	; select bank8
 19328  17C0  084C               	movf	ini_GERADOR@Pot_3Vref^(0+1024),w
 19329  17C1  0141               	movlb	1	; select bank1
 19330  17C2  00AD               	movwf	___ftdiv@f1^(0+128)
 19331  17C3  0148               	movlb	8	; select bank8
 19332  17C4  084D               	movf	(ini_GERADOR@Pot_3Vref+1)^(0+1024),w
 19333  17C5  0141               	movlb	1	; select bank1
 19334  17C6  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 19335  17C7  0148               	movlb	8	; select bank8
 19336  17C8  084E               	movf	(ini_GERADOR@Pot_3Vref+2)^(0+1024),w
 19337  17C9  0141               	movlb	1	; select bank1
 19338  17CA  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 19339  17CB  3000               	movlw	0
 19340  17CC  00AA               	movwf	___ftdiv@f2^(0+128)
 19341  17CD  30C8               	movlw	200
 19342  17CE  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 19343  17CF  3042               	movlw	66
 19344  17D0  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 19345  17D1  31BA  2243  3194   	fcall	___ftdiv
 19346  17D4  0141               	movlb	1	; select bank1
 19347  17D5  082A               	movf	?___ftdiv^(0+128),w
 19348  17D6  00D3               	movwf	round@x^(0+128)
 19349  17D7  082B               	movf	(?___ftdiv+1)^(0+128),w
 19350  17D8  00D4               	movwf	(round@x+1)^(0+128)
 19351  17D9  082C               	movf	(?___ftdiv+2)^(0+128),w
 19352  17DA  00D5               	movwf	(round@x+2)^(0+128)
 19353  17DB  3187  278A  3194   	fcall	_round
 19354  17DE  0141               	movlb	1	; select bank1
 19355  17DF  0853               	movf	?_round^(0+128),w
 19356  17E0  0148               	movlb	8	; select bank8
 19357  17E1  00CF               	movwf	_ini_GERADOR$4252^(0+1024)
 19358  17E2  0141               	movlb	1	; select bank1
 19359  17E3  0854               	movf	(?_round+1)^(0+128),w
 19360  17E4  0148               	movlb	8	; select bank8
 19361  17E5  00D0               	movwf	(_ini_GERADOR$4252+1)^(0+1024)
 19362  17E6  0141               	movlb	1	; select bank1
 19363  17E7  0855               	movf	(?_round+2)^(0+128),w
 19364  17E8  0148               	movlb	8	; select bank8
 19365  17E9  00D1               	movwf	(_ini_GERADOR$4252+2)^(0+1024)
 19366                           
 19367                           ;func.c: 299: ret_pot = (unsigned int)round(Pot_3Vref/100);
 19368  17EA  084F               	movf	_ini_GERADOR$4252^(0+1024),w
 19369  17EB  0141               	movlb	1	; select bank1
 19370  17EC  00BA               	movwf	___fttol@f1^(0+128)
 19371  17ED  0148               	movlb	8	; select bank8
 19372  17EE  0850               	movf	(_ini_GERADOR$4252+1)^(0+1024),w
 19373  17EF  0141               	movlb	1	; select bank1
 19374  17F0  00BB               	movwf	(___fttol@f1+1)^(0+128)
 19375  17F1  0148               	movlb	8	; select bank8
 19376  17F2  0851               	movf	(_ini_GERADOR$4252+2)^(0+1024),w
 19377  17F3  0141               	movlb	1	; select bank1
 19378  17F4  00BC               	movwf	(___fttol@f1+2)^(0+128)
 19379  17F5  31C3  2352         	fcall	___fttol
 19380  17F7  0141               	movlb	1	; select bank1
 19381  17F8  083B               	movf	(?___fttol+1)^(0+128),w
 19382  17F9  0144               	movlb	4	; select bank4
 19383  17FA  00C9               	movwf	(_ret_pot+1)^(0+512)
 19384  17FB  0141               	movlb	1	; select bank1
 19385  17FC  083A               	movf	?___fttol^(0+128),w
 19386  17FD  0144               	movlb	4	; select bank4
 19387  17FE  00C8               	movwf	_ret_pot^(0+512)
 19388  17FF  0008               	return
 19389  1800                     __end_of_ini_GERADOR:	
 19390                           
 19391                           	psect	text26
 19392  1833                     __ptext26:	
 19393 ;; *************** function _sqrt *****************
 19394 ;; Defined at:
 19395 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 19396 ;; Parameters:    Size  Location     Type
 19397 ;;  a               3   71[BANK1 ] void 
 19398 ;; Auto vars:     Size  Location     Type
 19399 ;;  x               3   21[BANK2 ] void 
 19400 ;;  q               3   18[BANK2 ] void 
 19401 ;;  z               3   14[BANK2 ] void 
 19402 ;;  og              3   11[BANK2 ] void 
 19403 ;;  i               1   17[BANK2 ] unsigned char 
 19404 ;; Return value:  Size  Location     Type
 19405 ;;                  3   71[BANK1 ] unsigned char 
 19406 ;; Registers used:
 19407 ;;		wreg, status,2, status,0, pclath, cstack
 19408 ;; Tracked objects:
 19409 ;;		On entry : 0/0
 19410 ;;		On exit  : 0/0
 19411 ;;		Unchanged: 0/0
 19412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19413 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19414 ;;      Locals:         0       0       0      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19415 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19416 ;;      Totals:         0       0       6      13       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19417 ;;Total ram usage:       19 bytes
 19418 ;; Hardware stack levels used:    1
 19419 ;; Hardware stack levels required when called:    6
 19420 ;; This function calls:
 19421 ;;		___ftge
 19422 ;;		___ftmul
 19423 ;;		___ftsub
 19424 ;; This function is called by:
 19425 ;;		_ini_GERADOR
 19426 ;; This function uses a non-reentrant model
 19427 ;;
 19428                           
 19429                           
 19430                           ;psect for function _sqrt
 19431  1833                     _sqrt:	
 19432                           
 19433                           ;incstack = 0
 19434                           ; Regs used in _sqrt: [wreg+status,2+status,0+pclath+cstack]
 19435  1833  3000               	movlw	0
 19436  1834  0140               	movlb	0	; select bank0
 19437  1835  00AB               	movwf	___ftge@ff1
 19438  1836  3000               	movlw	0
 19439  1837  00AC               	movwf	___ftge@ff1+1
 19440  1838  3000               	movlw	0
 19441  1839  00AD               	movwf	___ftge@ff1+2
 19442  183A  0141               	movlb	1	; select bank1
 19443  183B  0867               	movf	sqrt@a^(0+128),w
 19444  183C  0140               	movlb	0	; select bank0
 19445  183D  00AE               	movwf	___ftge@ff2
 19446  183E  0141               	movlb	1	; select bank1
 19447  183F  0868               	movf	(sqrt@a+1)^(0+128),w
 19448  1840  0140               	movlb	0	; select bank0
 19449  1841  00AF               	movwf	___ftge@ff2+1
 19450  1842  0141               	movlb	1	; select bank1
 19451  1843  0869               	movf	(sqrt@a+2)^(0+128),w
 19452  1844  0140               	movlb	0	; select bank0
 19453  1845  00B0               	movwf	___ftge@ff2+2
 19454  1846  31D6  2680  3198   	fcall	___ftge
 19455  1849  1C03               	btfss	3,0
 19456  184A  286F               	goto	l16750
 19457  184B  0141               	movlb	1	; select bank1
 19458  184C  0867               	movf	sqrt@a^(0+128),w
 19459  184D  0140               	movlb	0	; select bank0
 19460  184E  00AB               	movwf	___ftge@ff1
 19461  184F  0141               	movlb	1	; select bank1
 19462  1850  0868               	movf	(sqrt@a+1)^(0+128),w
 19463  1851  0140               	movlb	0	; select bank0
 19464  1852  00AC               	movwf	___ftge@ff1+1
 19465  1853  0141               	movlb	1	; select bank1
 19466  1854  0869               	movf	(sqrt@a+2)^(0+128),w
 19467  1855  0140               	movlb	0	; select bank0
 19468  1856  00AD               	movwf	___ftge@ff1+2
 19469  1857  3000               	movlw	0
 19470  1858  00AE               	movwf	___ftge@ff2
 19471  1859  3000               	movlw	0
 19472  185A  00AF               	movwf	___ftge@ff2+1
 19473  185B  3000               	movlw	0
 19474  185C  00B0               	movwf	___ftge@ff2+2
 19475  185D  31D6  2680  3198   	fcall	___ftge
 19476  1860  1803               	btfsc	3,0
 19477  1861  2867               	goto	l3269
 19478  1862  3021               	movlw	33
 19479  1863  0145               	movlb	5	; select bank5
 19480  1864  00CF               	movwf	_errno^(0+640)
 19481  1865  3000               	movlw	0
 19482  1866  00D0               	movwf	(_errno^(0+640)+1)
 19483  1867                     l3269:	
 19484  1867  3000               	movlw	0
 19485  1868  0141               	movlb	1	; select bank1
 19486  1869  00E7               	movwf	?_sqrt^(0+128)
 19487  186A  3000               	movlw	0
 19488  186B  00E8               	movwf	(?_sqrt+1)^(0+128)
 19489  186C  3000               	movlw	0
 19490  186D  00E9               	movwf	(?_sqrt+2)^(0+128)
 19491  186E  0008               	return
 19492  186F                     l16750:	
 19493  186F  0141               	movlb	1	; select bank1
 19494  1870  0867               	movf	sqrt@a^(0+128),w
 19495  1871  0142               	movlb	2	; select bank2
 19496  1872  00AE               	movwf	sqrt@z^(0+256)
 19497  1873  0141               	movlb	1	; select bank1
 19498  1874  0868               	movf	(sqrt@a+1)^(0+128),w
 19499  1875  0142               	movlb	2	; select bank2
 19500  1876  00AF               	movwf	(sqrt@z+1)^(0+256)
 19501  1877  0141               	movlb	1	; select bank1
 19502  1878  0869               	movf	(sqrt@a+2)^(0+128),w
 19503  1879  0142               	movlb	2	; select bank2
 19504  187A  00B0               	movwf	(sqrt@z+2)^(0+256)
 19505  187B  0141               	movlb	1	; select bank1
 19506  187C  0967               	comf	sqrt@a^(0+128),w
 19507  187D  00EA               	movwf	??_sqrt^(0+128)
 19508  187E  0968               	comf	(sqrt@a+1)^(0+128),w
 19509  187F  00EB               	movwf	(??_sqrt^(0+128)+1)
 19510  1880  0969               	comf	(sqrt@a+2)^(0+128),w
 19511  1881  00EC               	movwf	(??_sqrt^(0+128)+2)
 19512  1882  0AEA               	incf	??_sqrt^(0+128),f
 19513  1883  1903               	skipnz
 19514  1884  0AEB               	incf	(??_sqrt^(0+128)+1),f
 19515  1885  1903               	skipnz
 19516  1886  0AEC               	incf	(??_sqrt^(0+128)+2),f
 19517  1887  30C8               	movlw	200
 19518  1888  076A               	addwf	??_sqrt^(0+128),w
 19519  1889  0142               	movlb	2	; select bank2
 19520  188A  00B5               	movwf	sqrt@x^(0+256)
 19521  188B  306E               	movlw	110
 19522  188C  0141               	movlb	1	; select bank1
 19523  188D  3D6B               	addwfc	(??_sqrt+1)^(0+128),w
 19524  188E  0142               	movlb	2	; select bank2
 19525  188F  00B6               	movwf	(sqrt@x+1)^(0+256)
 19526  1890  30BE               	movlw	190
 19527  1891  0141               	movlb	1	; select bank1
 19528  1892  3D6C               	addwfc	(??_sqrt+2)^(0+128),w
 19529  1893  0142               	movlb	2	; select bank2
 19530  1894  00B7               	movwf	(sqrt@x+2)^(0+256)
 19531  1895  3001               	movlw	1
 19532  1896                     u19195:	
 19533  1896  36B7               	lsrf	(sqrt@x+2)^(0+256),f
 19534  1897  0CB6               	rrf	(sqrt@x+1)^(0+256),f
 19535  1898  0CB5               	rrf	sqrt@x^(0+256),f
 19536  1899  0B89               	decfsz	9,f
 19537  189A  2896               	goto	u19195
 19538  189B  3000               	movlw	0
 19539  189C  0141               	movlb	1	; select bank1
 19540  189D  00EA               	movwf	??_sqrt^(0+128)
 19541  189E  3080               	movlw	128
 19542  189F  00EB               	movwf	(??_sqrt^(0+128)+1)
 19543  18A0  3000               	movlw	0
 19544  18A1  00EC               	movwf	(??_sqrt^(0+128)+2)
 19545  18A2  086A               	movf	??_sqrt^(0+128),w
 19546  18A3  0142               	movlb	2	; select bank2
 19547  18A4  02AE               	subwf	sqrt@z^(0+256),f
 19548  18A5  0141               	movlb	1	; select bank1
 19549  18A6  086B               	movf	(??_sqrt+1)^(0+128),w
 19550  18A7  0142               	movlb	2	; select bank2
 19551  18A8  3BAF               	subwfb	(sqrt@z+1)^(0+256),f
 19552  18A9  0141               	movlb	1	; select bank1
 19553  18AA  086C               	movf	(??_sqrt+2)^(0+128),w
 19554  18AB  0142               	movlb	2	; select bank2
 19555  18AC  3BB0               	subwfb	(sqrt@z+2)^(0+256),f
 19556  18AD  3004               	movlw	4
 19557  18AE  0141               	movlb	1	; select bank1
 19558  18AF  00EA               	movwf	??_sqrt^(0+128)
 19559  18B0  086A               	movf	??_sqrt^(0+128),w
 19560  18B1  0142               	movlb	2	; select bank2
 19561  18B2  00B1               	movwf	sqrt@i^(0+256)
 19562  18B3                     l3271:	
 19563  18B3  0835               	movf	sqrt@x^(0+256),w
 19564  18B4  00AB               	movwf	sqrt@og^(0+256)
 19565  18B5  0836               	movf	(sqrt@x+1)^(0+256),w
 19566  18B6  00AC               	movwf	(sqrt@og+1)^(0+256)
 19567  18B7  0837               	movf	(sqrt@x+2)^(0+256),w
 19568  18B8  00AD               	movwf	(sqrt@og+2)^(0+256)
 19569  18B9  082E               	movf	sqrt@z^(0+256),w
 19570  18BA  0140               	movlb	0	; select bank0
 19571  18BB  00C8               	movwf	___ftmul@f1
 19572  18BC  0142               	movlb	2	; select bank2
 19573  18BD  082F               	movf	(sqrt@z+1)^(0+256),w
 19574  18BE  0140               	movlb	0	; select bank0
 19575  18BF  00C9               	movwf	___ftmul@f1+1
 19576  18C0  0142               	movlb	2	; select bank2
 19577  18C1  0830               	movf	(sqrt@z+2)^(0+256),w
 19578  18C2  0140               	movlb	0	; select bank0
 19579  18C3  00CA               	movwf	___ftmul@f1+2
 19580  18C4  0142               	movlb	2	; select bank2
 19581  18C5  0835               	movf	sqrt@x^(0+256),w
 19582  18C6  0140               	movlb	0	; select bank0
 19583  18C7  00CB               	movwf	___ftmul@f2
 19584  18C8  0142               	movlb	2	; select bank2
 19585  18C9  0836               	movf	(sqrt@x+1)^(0+256),w
 19586  18CA  0140               	movlb	0	; select bank0
 19587  18CB  00CC               	movwf	___ftmul@f2+1
 19588  18CC  0142               	movlb	2	; select bank2
 19589  18CD  0837               	movf	(sqrt@x+2)^(0+256),w
 19590  18CE  0140               	movlb	0	; select bank0
 19591  18CF  00CD               	movwf	___ftmul@f2+2
 19592  18D0  31B9  218F  3198   	fcall	___ftmul
 19593  18D3  0140               	movlb	0	; select bank0
 19594  18D4  0848               	movf	?___ftmul,w
 19595  18D5  0142               	movlb	2	; select bank2
 19596  18D6  00B2               	movwf	sqrt@q^(0+256)
 19597  18D7  0140               	movlb	0	; select bank0
 19598  18D8  0849               	movf	?___ftmul+1,w
 19599  18D9  0142               	movlb	2	; select bank2
 19600  18DA  00B3               	movwf	(sqrt@q+1)^(0+256)
 19601  18DB  0140               	movlb	0	; select bank0
 19602  18DC  084A               	movf	?___ftmul+2,w
 19603  18DD  0142               	movlb	2	; select bank2
 19604  18DE  00B4               	movwf	(sqrt@q+2)^(0+256)
 19605  18DF  0835               	movf	sqrt@x^(0+256),w
 19606  18E0  0140               	movlb	0	; select bank0
 19607  18E1  00C8               	movwf	___ftmul@f1
 19608  18E2  0142               	movlb	2	; select bank2
 19609  18E3  0836               	movf	(sqrt@x+1)^(0+256),w
 19610  18E4  0140               	movlb	0	; select bank0
 19611  18E5  00C9               	movwf	___ftmul@f1+1
 19612  18E6  0142               	movlb	2	; select bank2
 19613  18E7  0837               	movf	(sqrt@x+2)^(0+256),w
 19614  18E8  0140               	movlb	0	; select bank0
 19615  18E9  00CA               	movwf	___ftmul@f1+2
 19616  18EA  0142               	movlb	2	; select bank2
 19617  18EB  0832               	movf	sqrt@q^(0+256),w
 19618  18EC  0140               	movlb	0	; select bank0
 19619  18ED  00CB               	movwf	___ftmul@f2
 19620  18EE  0142               	movlb	2	; select bank2
 19621  18EF  0833               	movf	(sqrt@q+1)^(0+256),w
 19622  18F0  0140               	movlb	0	; select bank0
 19623  18F1  00CC               	movwf	___ftmul@f2+1
 19624  18F2  0142               	movlb	2	; select bank2
 19625  18F3  0834               	movf	(sqrt@q+2)^(0+256),w
 19626  18F4  0140               	movlb	0	; select bank0
 19627  18F5  00CD               	movwf	___ftmul@f2+2
 19628  18F6  31B9  218F  3198   	fcall	___ftmul
 19629  18F9  0140               	movlb	0	; select bank0
 19630  18FA  0848               	movf	?___ftmul,w
 19631  18FB  0142               	movlb	2	; select bank2
 19632  18FC  00B2               	movwf	sqrt@q^(0+256)
 19633  18FD  0140               	movlb	0	; select bank0
 19634  18FE  0849               	movf	?___ftmul+1,w
 19635  18FF  0142               	movlb	2	; select bank2
 19636  1900  00B3               	movwf	(sqrt@q+1)^(0+256)
 19637  1901  0140               	movlb	0	; select bank0
 19638  1902  084A               	movf	?___ftmul+2,w
 19639  1903  0142               	movlb	2	; select bank2
 19640  1904  00B4               	movwf	(sqrt@q+2)^(0+256)
 19641  1905  0835               	movf	sqrt@x^(0+256),w
 19642  1906  0140               	movlb	0	; select bank0
 19643  1907  00C8               	movwf	___ftmul@f1
 19644  1908  0142               	movlb	2	; select bank2
 19645  1909  0836               	movf	(sqrt@x+1)^(0+256),w
 19646  190A  0140               	movlb	0	; select bank0
 19647  190B  00C9               	movwf	___ftmul@f1+1
 19648  190C  0142               	movlb	2	; select bank2
 19649  190D  0837               	movf	(sqrt@x+2)^(0+256),w
 19650  190E  0140               	movlb	0	; select bank0
 19651  190F  00CA               	movwf	___ftmul@f1+2
 19652  1910  0142               	movlb	2	; select bank2
 19653  1911  0832               	movf	sqrt@q^(0+256),w
 19654  1912  0140               	movlb	0	; select bank0
 19655  1913  00CB               	movwf	___ftmul@f2
 19656  1914  0142               	movlb	2	; select bank2
 19657  1915  0833               	movf	(sqrt@q+1)^(0+256),w
 19658  1916  0140               	movlb	0	; select bank0
 19659  1917  00CC               	movwf	___ftmul@f2+1
 19660  1918  0142               	movlb	2	; select bank2
 19661  1919  0834               	movf	(sqrt@q+2)^(0+256),w
 19662  191A  0140               	movlb	0	; select bank0
 19663  191B  00CD               	movwf	___ftmul@f2+2
 19664  191C  31B9  218F  3198   	fcall	___ftmul
 19665  191F  0140               	movlb	0	; select bank0
 19666  1920  0848               	movf	?___ftmul,w
 19667  1921  0142               	movlb	2	; select bank2
 19668  1922  00B2               	movwf	sqrt@q^(0+256)
 19669  1923  0140               	movlb	0	; select bank0
 19670  1924  0849               	movf	?___ftmul+1,w
 19671  1925  0142               	movlb	2	; select bank2
 19672  1926  00B3               	movwf	(sqrt@q+1)^(0+256)
 19673  1927  0140               	movlb	0	; select bank0
 19674  1928  084A               	movf	?___ftmul+2,w
 19675  1929  0142               	movlb	2	; select bank2
 19676  192A  00B4               	movwf	(sqrt@q+2)^(0+256)
 19677  192B  3000               	movlw	0
 19678  192C  0140               	movlb	0	; select bank0
 19679  192D  00C8               	movwf	___ftmul@f1
 19680  192E  30C0               	movlw	192
 19681  192F  00C9               	movwf	___ftmul@f1+1
 19682  1930  303F               	movlw	63
 19683  1931  00CA               	movwf	___ftmul@f1+2
 19684  1932  0142               	movlb	2	; select bank2
 19685  1933  0835               	movf	sqrt@x^(0+256),w
 19686  1934  0140               	movlb	0	; select bank0
 19687  1935  00CB               	movwf	___ftmul@f2
 19688  1936  0142               	movlb	2	; select bank2
 19689  1937  0836               	movf	(sqrt@x+1)^(0+256),w
 19690  1938  0140               	movlb	0	; select bank0
 19691  1939  00CC               	movwf	___ftmul@f2+1
 19692  193A  0142               	movlb	2	; select bank2
 19693  193B  0837               	movf	(sqrt@x+2)^(0+256),w
 19694  193C  0140               	movlb	0	; select bank0
 19695  193D  00CD               	movwf	___ftmul@f2+2
 19696  193E  31B9  218F  3198   	fcall	___ftmul
 19697  1941  0140               	movlb	0	; select bank0
 19698  1942  0848               	movf	?___ftmul,w
 19699  1943  0142               	movlb	2	; select bank2
 19700  1944  00B5               	movwf	sqrt@x^(0+256)
 19701  1945  0140               	movlb	0	; select bank0
 19702  1946  0849               	movf	?___ftmul+1,w
 19703  1947  0142               	movlb	2	; select bank2
 19704  1948  00B6               	movwf	(sqrt@x+1)^(0+256)
 19705  1949  0140               	movlb	0	; select bank0
 19706  194A  084A               	movf	?___ftmul+2,w
 19707  194B  0142               	movlb	2	; select bank2
 19708  194C  00B7               	movwf	(sqrt@x+2)^(0+256)
 19709  194D  0832               	movf	sqrt@q^(0+256),w
 19710  194E  0141               	movlb	1	; select bank1
 19711  194F  00D0               	movwf	___ftsub@f2^(0+128)
 19712  1950  0142               	movlb	2	; select bank2
 19713  1951  0833               	movf	(sqrt@q+1)^(0+256),w
 19714  1952  0141               	movlb	1	; select bank1
 19715  1953  00D1               	movwf	(___ftsub@f2+1)^(0+128)
 19716  1954  0142               	movlb	2	; select bank2
 19717  1955  0834               	movf	(sqrt@q+2)^(0+256),w
 19718  1956  0141               	movlb	1	; select bank1
 19719  1957  00D2               	movwf	(___ftsub@f2+2)^(0+128)
 19720  1958  0142               	movlb	2	; select bank2
 19721  1959  0835               	movf	sqrt@x^(0+256),w
 19722  195A  0141               	movlb	1	; select bank1
 19723  195B  00D3               	movwf	___ftsub@f1^(0+128)
 19724  195C  0142               	movlb	2	; select bank2
 19725  195D  0836               	movf	(sqrt@x+1)^(0+256),w
 19726  195E  0141               	movlb	1	; select bank1
 19727  195F  00D4               	movwf	(___ftsub@f1+1)^(0+128)
 19728  1960  0142               	movlb	2	; select bank2
 19729  1961  0837               	movf	(sqrt@x+2)^(0+256),w
 19730  1962  0141               	movlb	1	; select bank1
 19731  1963  00D5               	movwf	(___ftsub@f1+2)^(0+128)
 19732  1964  31D4  24B0  3198   	fcall	___ftsub
 19733  1967  0141               	movlb	1	; select bank1
 19734  1968  0850               	movf	?___ftsub^(0+128),w
 19735  1969  0142               	movlb	2	; select bank2
 19736  196A  00B5               	movwf	sqrt@x^(0+256)
 19737  196B  0141               	movlb	1	; select bank1
 19738  196C  0851               	movf	(?___ftsub+1)^(0+128),w
 19739  196D  0142               	movlb	2	; select bank2
 19740  196E  00B6               	movwf	(sqrt@x+1)^(0+256)
 19741  196F  0141               	movlb	1	; select bank1
 19742  1970  0852               	movf	(?___ftsub+2)^(0+128),w
 19743  1971  0142               	movlb	2	; select bank2
 19744  1972  00B7               	movwf	(sqrt@x+2)^(0+256)
 19745  1973  3001               	movlw	1
 19746  1974  02B1               	subwf	sqrt@i^(0+256),f
 19747  1975  1D03               	btfss	3,2
 19748  1976  28B3               	goto	l3271
 19749  1977  0141               	movlb	1	; select bank1
 19750  1978  0867               	movf	sqrt@a^(0+128),w
 19751  1979  0140               	movlb	0	; select bank0
 19752  197A  00C8               	movwf	___ftmul@f1
 19753  197B  0141               	movlb	1	; select bank1
 19754  197C  0868               	movf	(sqrt@a+1)^(0+128),w
 19755  197D  0140               	movlb	0	; select bank0
 19756  197E  00C9               	movwf	___ftmul@f1+1
 19757  197F  0141               	movlb	1	; select bank1
 19758  1980  0869               	movf	(sqrt@a+2)^(0+128),w
 19759  1981  0140               	movlb	0	; select bank0
 19760  1982  00CA               	movwf	___ftmul@f1+2
 19761  1983  0142               	movlb	2	; select bank2
 19762  1984  0835               	movf	sqrt@x^(0+256),w
 19763  1985  0140               	movlb	0	; select bank0
 19764  1986  00CB               	movwf	___ftmul@f2
 19765  1987  0142               	movlb	2	; select bank2
 19766  1988  0836               	movf	(sqrt@x+1)^(0+256),w
 19767  1989  0140               	movlb	0	; select bank0
 19768  198A  00CC               	movwf	___ftmul@f2+1
 19769  198B  0142               	movlb	2	; select bank2
 19770  198C  0837               	movf	(sqrt@x+2)^(0+256),w
 19771  198D  0140               	movlb	0	; select bank0
 19772  198E  00CD               	movwf	___ftmul@f2+2
 19773  198F  31B9  218F         	fcall	___ftmul
 19774  1991  0140               	movlb	0	; select bank0
 19775  1992  0848               	movf	?___ftmul,w
 19776  1993  0141               	movlb	1	; select bank1
 19777  1994  00E7               	movwf	?_sqrt^(0+128)
 19778  1995  0140               	movlb	0	; select bank0
 19779  1996  0849               	movf	?___ftmul+1,w
 19780  1997  0141               	movlb	1	; select bank1
 19781  1998  00E8               	movwf	(?_sqrt+1)^(0+128)
 19782  1999  0140               	movlb	0	; select bank0
 19783  199A  084A               	movf	?___ftmul+2,w
 19784  199B  0141               	movlb	1	; select bank1
 19785  199C  00E9               	movwf	(?_sqrt+2)^(0+128)
 19786  199D  0008               	return
 19787  199E                     __end_of_sqrt:	
 19788                           
 19789                           	psect	text27
 19790  078A                     __ptext27:	
 19791 ;; *************** function _round *****************
 19792 ;; Defined at:
 19793 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\round.c"
 19794 ;; Parameters:    Size  Location     Type
 19795 ;;  x               3   51[BANK1 ] unsigned char 
 19796 ;; Auto vars:     Size  Location     Type
 19797 ;;  f               3   54[BANK1 ] unsigned char 
 19798 ;; Return value:  Size  Location     Type
 19799 ;;                  3   51[BANK1 ] unsigned char 
 19800 ;; Registers used:
 19801 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19802 ;; Tracked objects:
 19803 ;;		On entry : 0/0
 19804 ;;		On exit  : 0/0
 19805 ;;		Unchanged: 0/0
 19806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19807 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19808 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19810 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19811 ;;Total ram usage:        6 bytes
 19812 ;; Hardware stack levels used:    1
 19813 ;; Hardware stack levels required when called:    6
 19814 ;; This function calls:
 19815 ;;		___ftadd
 19816 ;;		___ftneg
 19817 ;;		_trunc
 19818 ;; This function is called by:
 19819 ;;		_ini_GERADOR
 19820 ;;		_conv_temp
 19821 ;; This function uses a non-reentrant model
 19822 ;;
 19823                           
 19824                           
 19825                           ;psect for function _round
 19826  078A                     _round:	
 19827                           
 19828                           ;incstack = 0
 19829                           ; Regs used in _round: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19830  078A  0141               	movlb	1	; select bank1
 19831  078B  0853               	movf	round@x^(0+128),w
 19832  078C  0140               	movlb	0	; select bank0
 19833  078D  00BB               	movwf	___ftadd@f1
 19834  078E  0141               	movlb	1	; select bank1
 19835  078F  0854               	movf	(round@x+1)^(0+128),w
 19836  0790  0140               	movlb	0	; select bank0
 19837  0791  00BC               	movwf	___ftadd@f1+1
 19838  0792  0141               	movlb	1	; select bank1
 19839  0793  0855               	movf	(round@x+2)^(0+128),w
 19840  0794  0140               	movlb	0	; select bank0
 19841  0795  00BD               	movwf	___ftadd@f1+2
 19842  0796  0141               	movlb	1	; select bank1
 19843  0797  0853               	movf	round@x^(0+128),w
 19844  0798  00C8               	movwf	trunc@x^(0+128)
 19845  0799  0854               	movf	(round@x+1)^(0+128),w
 19846  079A  00C9               	movwf	(trunc@x+1)^(0+128)
 19847  079B  0855               	movf	(round@x+2)^(0+128),w
 19848  079C  00CA               	movwf	(trunc@x+2)^(0+128)
 19849  079D  31CA  22CA  3187   	fcall	_trunc
 19850  07A0  0141               	movlb	1	; select bank1
 19851  07A1  0848               	movf	?_trunc^(0+128),w
 19852  07A2  00D0               	movwf	___ftneg@f1^(0+128)
 19853  07A3  0849               	movf	(?_trunc+1)^(0+128),w
 19854  07A4  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 19855  07A5  084A               	movf	(?_trunc+2)^(0+128),w
 19856  07A6  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 19857  07A7  31E2  2209  3187   	fcall	___ftneg
 19858  07AA  0141               	movlb	1	; select bank1
 19859  07AB  0850               	movf	?___ftneg^(0+128),w
 19860  07AC  0140               	movlb	0	; select bank0
 19861  07AD  00BE               	movwf	___ftadd@f2
 19862  07AE  0141               	movlb	1	; select bank1
 19863  07AF  0851               	movf	(?___ftneg+1)^(0+128),w
 19864  07B0  0140               	movlb	0	; select bank0
 19865  07B1  00BF               	movwf	___ftadd@f2+1
 19866  07B2  0141               	movlb	1	; select bank1
 19867  07B3  0852               	movf	(?___ftneg+2)^(0+128),w
 19868  07B4  0140               	movlb	0	; select bank0
 19869  07B5  00C0               	movwf	___ftadd@f2+2
 19870  07B6  31B0  2027  3187   	fcall	___ftadd
 19871  07B9  0140               	movlb	0	; select bank0
 19872  07BA  083B               	movf	?___ftadd,w
 19873  07BB  0141               	movlb	1	; select bank1
 19874  07BC  00D6               	movwf	round@f^(0+128)
 19875  07BD  0140               	movlb	0	; select bank0
 19876  07BE  083C               	movf	?___ftadd+1,w
 19877  07BF  0141               	movlb	1	; select bank1
 19878  07C0  00D7               	movwf	(round@f+1)^(0+128)
 19879  07C1  0140               	movlb	0	; select bank0
 19880  07C2  083D               	movf	?___ftadd+2,w
 19881  07C3  0141               	movlb	1	; select bank1
 19882  07C4  00D8               	movwf	(round@f+2)^(0+128)
 19883  07C5  0856               	movf	round@f^(0+128),w
 19884  07C6  0140               	movlb	0	; select bank0
 19885  07C7  00BB               	movwf	___ftadd@f1
 19886  07C8  0141               	movlb	1	; select bank1
 19887  07C9  0857               	movf	(round@f+1)^(0+128),w
 19888  07CA  0140               	movlb	0	; select bank0
 19889  07CB  00BC               	movwf	___ftadd@f1+1
 19890  07CC  0141               	movlb	1	; select bank1
 19891  07CD  0858               	movf	(round@f+2)^(0+128),w
 19892  07CE  0140               	movlb	0	; select bank0
 19893  07CF  00BD               	movwf	___ftadd@f1+2
 19894  07D0  0141               	movlb	1	; select bank1
 19895  07D1  0853               	movf	round@x^(0+128),w
 19896  07D2  0140               	movlb	0	; select bank0
 19897  07D3  00BE               	movwf	___ftadd@f2
 19898  07D4  0141               	movlb	1	; select bank1
 19899  07D5  0854               	movf	(round@x+1)^(0+128),w
 19900  07D6  0140               	movlb	0	; select bank0
 19901  07D7  00BF               	movwf	___ftadd@f2+1
 19902  07D8  0141               	movlb	1	; select bank1
 19903  07D9  0855               	movf	(round@x+2)^(0+128),w
 19904  07DA  0140               	movlb	0	; select bank0
 19905  07DB  00C0               	movwf	___ftadd@f2+2
 19906  07DC  31B0  2027  3187   	fcall	___ftadd
 19907  07DF  0140               	movlb	0	; select bank0
 19908  07E0  083B               	movf	?___ftadd,w
 19909  07E1  0141               	movlb	1	; select bank1
 19910  07E2  00D3               	movwf	round@x^(0+128)
 19911  07E3  0140               	movlb	0	; select bank0
 19912  07E4  083C               	movf	?___ftadd+1,w
 19913  07E5  0141               	movlb	1	; select bank1
 19914  07E6  00D4               	movwf	(round@x+1)^(0+128)
 19915  07E7  0140               	movlb	0	; select bank0
 19916  07E8  083D               	movf	?___ftadd+2,w
 19917  07E9  0141               	movlb	1	; select bank1
 19918  07EA  00D5               	movwf	(round@x+2)^(0+128)
 19919  07EB  0853               	movf	round@x^(0+128),w
 19920  07EC  00C8               	movwf	trunc@x^(0+128)
 19921  07ED  0854               	movf	(round@x+1)^(0+128),w
 19922  07EE  00C9               	movwf	(trunc@x+1)^(0+128)
 19923  07EF  0855               	movf	(round@x+2)^(0+128),w
 19924  07F0  00CA               	movwf	(trunc@x+2)^(0+128)
 19925  07F1  31CA  22CA         	fcall	_trunc
 19926  07F3  0141               	movlb	1	; select bank1
 19927  07F4  0848               	movf	?_trunc^(0+128),w
 19928  07F5  00D3               	movwf	?_round^(0+128)
 19929  07F6  0849               	movf	(?_trunc+1)^(0+128),w
 19930  07F7  00D4               	movwf	(?_round+1)^(0+128)
 19931  07F8  084A               	movf	(?_trunc+2)^(0+128),w
 19932  07F9  00D5               	movwf	(?_round+2)^(0+128)
 19933  07FA  0008               	return
 19934  07FB                     __end_of_round:	
 19935                           
 19936                           	psect	text28
 19937  4ACA                     __ptext28:	
 19938 ;; *************** function _trunc *****************
 19939 ;; Defined at:
 19940 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\trunc.c"
 19941 ;; Parameters:    Size  Location     Type
 19942 ;;  x               3   40[BANK1 ] unsigned char 
 19943 ;; Auto vars:     Size  Location     Type
 19944 ;;  i               3   43[BANK1 ] unsigned char 
 19945 ;;  expon           2   46[BANK1 ] int 
 19946 ;; Return value:  Size  Location     Type
 19947 ;;                  3   40[BANK1 ] int 
 19948 ;; Registers used:
 19949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19950 ;; Tracked objects:
 19951 ;;		On entry : 0/0
 19952 ;;		On exit  : 0/0
 19953 ;;		Unchanged: 0/0
 19954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 19955 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19956 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19957 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19958 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 19959 ;;Total ram usage:        9 bytes
 19960 ;; Hardware stack levels used:    1
 19961 ;; Hardware stack levels required when called:    5
 19962 ;; This function calls:
 19963 ;;		___altoft
 19964 ;;		___fttol
 19965 ;;		_frexp
 19966 ;; This function is called by:
 19967 ;;		_round
 19968 ;; This function uses a non-reentrant model
 19969 ;;
 19970                           
 19971                           
 19972                           ;psect for function _trunc
 19973  4ACA                     _trunc:	
 19974                           
 19975                           ;incstack = 0
 19976                           ; Regs used in _trunc: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19977  4ACA  0141               	movlb	1	; select bank1
 19978  4ACB  0848               	movf	trunc@x^(0+128),w
 19979  4ACC  0140               	movlb	0	; select bank0
 19980  4ACD  00AB               	movwf	frexp@value
 19981  4ACE  0141               	movlb	1	; select bank1
 19982  4ACF  0849               	movf	(trunc@x+1)^(0+128),w
 19983  4AD0  0140               	movlb	0	; select bank0
 19984  4AD1  00AC               	movwf	frexp@value+1
 19985  4AD2  0141               	movlb	1	; select bank1
 19986  4AD3  084A               	movf	(trunc@x+2)^(0+128),w
 19987  4AD4  0140               	movlb	0	; select bank0
 19988  4AD5  00AD               	movwf	frexp@value+2
 19989  4AD6  30CE               	movlw	(low (trunc@expon| 0))& (0+255)
 19990  4AD7  00D8               	movwf	??_trunc
 19991  4AD8  0858               	movf	??_trunc,w
 19992  4AD9  00AE               	movwf	frexp@eptr
 19993  4ADA  31D6  26BC  31CA   	fcall	_frexp
 19994  4ADD  0141               	movlb	1	; select bank1
 19995  4ADE  1FCF               	btfss	(trunc@expon+1)^(0+128),7
 19996  4ADF  2AE7               	goto	l15994
 19997  4AE0  3000               	movlw	0
 19998  4AE1  00C8               	movwf	?_trunc^(0+128)
 19999  4AE2  3000               	movlw	0
 20000  4AE3  00C9               	movwf	(?_trunc+1)^(0+128)
 20001  4AE4  3000               	movlw	0
 20002  4AE5  00CA               	movwf	(?_trunc+2)^(0+128)
 20003  4AE6  0008               	return
 20004  4AE7                     l15994:	
 20005  4AE7  3000               	movlw	0
 20006  4AE8  024F               	subwf	(trunc@expon+1)^(0+128),w
 20007  4AE9  3015               	movlw	21
 20008  4AEA  1903               	skipnz
 20009  4AEB  024E               	subwf	trunc@expon^(0+128),w
 20010  4AEC  1803               	btfsc	3,0
 20011  4AED  0008               	return
 20012  4AEE  0848               	movf	trunc@x^(0+128),w
 20013  4AEF  00BA               	movwf	___fttol@f1^(0+128)
 20014  4AF0  0849               	movf	(trunc@x+1)^(0+128),w
 20015  4AF1  00BB               	movwf	(___fttol@f1+1)^(0+128)
 20016  4AF2  084A               	movf	(trunc@x+2)^(0+128),w
 20017  4AF3  00BC               	movwf	(___fttol@f1+2)^(0+128)
 20018  4AF4  31C3  2352  31CA   	fcall	___fttol
 20019  4AF7  0141               	movlb	1	; select bank1
 20020  4AF8  083D               	movf	(?___fttol+3)^(0+128),w
 20021  4AF9  0140               	movlb	0	; select bank0
 20022  4AFA  00B6               	movwf	___altoft@c+3
 20023  4AFB  0141               	movlb	1	; select bank1
 20024  4AFC  083C               	movf	(?___fttol+2)^(0+128),w
 20025  4AFD  0140               	movlb	0	; select bank0
 20026  4AFE  00B5               	movwf	___altoft@c+2
 20027  4AFF  0141               	movlb	1	; select bank1
 20028  4B00  083B               	movf	(?___fttol+1)^(0+128),w
 20029  4B01  0140               	movlb	0	; select bank0
 20030  4B02  00B4               	movwf	___altoft@c+1
 20031  4B03  0141               	movlb	1	; select bank1
 20032  4B04  083A               	movf	?___fttol^(0+128),w
 20033  4B05  0140               	movlb	0	; select bank0
 20034  4B06  00B3               	movwf	___altoft@c
 20035  4B07  31D6  26F8         	fcall	___altoft
 20036  4B09  0140               	movlb	0	; select bank0
 20037  4B0A  0833               	movf	?___altoft,w
 20038  4B0B  0141               	movlb	1	; select bank1
 20039  4B0C  00CB               	movwf	trunc@i^(0+128)
 20040  4B0D  0140               	movlb	0	; select bank0
 20041  4B0E  0834               	movf	?___altoft+1,w
 20042  4B0F  0141               	movlb	1	; select bank1
 20043  4B10  00CC               	movwf	(trunc@i+1)^(0+128)
 20044  4B11  0140               	movlb	0	; select bank0
 20045  4B12  0835               	movf	?___altoft+2,w
 20046  4B13  0141               	movlb	1	; select bank1
 20047  4B14  00CD               	movwf	(trunc@i+2)^(0+128)
 20048  4B15  084B               	movf	trunc@i^(0+128),w
 20049  4B16  00C8               	movwf	?_trunc^(0+128)
 20050  4B17  084C               	movf	(trunc@i+1)^(0+128),w
 20051  4B18  00C9               	movwf	(?_trunc+1)^(0+128)
 20052  4B19  084D               	movf	(trunc@i+2)^(0+128),w
 20053  4B1A  00CA               	movwf	(?_trunc+2)^(0+128)
 20054  4B1B  0008               	return
 20055  4B1C                     __end_of_trunc:	
 20056                           
 20057                           	psect	text29
 20058  3232                     __ptext29:	
 20059 ;; *************** function _pow *****************
 20060 ;; Defined at:
 20061 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\pow.c"
 20062 ;; Parameters:    Size  Location     Type
 20063 ;;  x               3   64[BANK1 ] int 
 20064 ;;  y               3   67[BANK1 ] int 
 20065 ;; Auto vars:     Size  Location     Type
 20066 ;;  yi              4    7[BANK2 ] unsigned long 
 20067 ;;  sign            1    6[BANK2 ] unsigned char 
 20068 ;; Return value:  Size  Location     Type
 20069 ;;                  3   64[BANK1 ] unsigned char 
 20070 ;; Registers used:
 20071 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20072 ;; Tracked objects:
 20073 ;;		On entry : 0/0
 20074 ;;		On exit  : 0/0
 20075 ;;		Unchanged: 0/0
 20076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20077 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20078 ;;      Locals:         0       0       0      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20079 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20080 ;;      Totals:         0       0       7      11       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20081 ;;Total ram usage:       18 bytes
 20082 ;; Hardware stack levels used:    1
 20083 ;; Hardware stack levels required when called:    7
 20084 ;; This function calls:
 20085 ;;		___ftge
 20086 ;;		___ftmul
 20087 ;;		___ftneg
 20088 ;;		___fttol
 20089 ;;		___lltoft
 20090 ;;		_exp
 20091 ;;		_log
 20092 ;; This function is called by:
 20093 ;;		_ini_GERADOR
 20094 ;; This function uses a non-reentrant model
 20095 ;;
 20096                           
 20097                           
 20098                           ;psect for function _pow
 20099  3232                     _pow:	
 20100                           
 20101                           ;incstack = 0
 20102                           ; Regs used in _pow: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20103  3232  0142               	movlb	2	; select bank2
 20104  3233  01A6               	clrf	pow@sign^(0+256)
 20105  3234  0141               	movlb	1	; select bank1
 20106  3235  0862               	movf	(pow@x+2)^(0+128),w
 20107  3236  0461               	iorwf	(pow@x+1)^(0+128),w
 20108  3237  0460               	iorwf	pow@x^(0+128),w
 20109  3238  1D03               	skipz
 20110  3239  2A5F               	goto	l16712
 20111  323A  3000               	movlw	0
 20112  323B  0140               	movlb	0	; select bank0
 20113  323C  00AB               	movwf	___ftge@ff1
 20114  323D  3000               	movlw	0
 20115  323E  00AC               	movwf	___ftge@ff1+1
 20116  323F  3000               	movlw	0
 20117  3240  00AD               	movwf	___ftge@ff1+2
 20118  3241  0141               	movlb	1	; select bank1
 20119  3242  0863               	movf	pow@y^(0+128),w
 20120  3243  0140               	movlb	0	; select bank0
 20121  3244  00AE               	movwf	___ftge@ff2
 20122  3245  0141               	movlb	1	; select bank1
 20123  3246  0864               	movf	(pow@y+1)^(0+128),w
 20124  3247  0140               	movlb	0	; select bank0
 20125  3248  00AF               	movwf	___ftge@ff2+1
 20126  3249  0141               	movlb	1	; select bank1
 20127  324A  0865               	movf	(pow@y+2)^(0+128),w
 20128  324B  0140               	movlb	0	; select bank0
 20129  324C  00B0               	movwf	___ftge@ff2+2
 20130  324D  31D6  2680  31B2   	fcall	___ftge
 20131  3250  1C03               	btfss	3,0
 20132  3251  2A57               	goto	l3238
 20133  3252  3021               	movlw	33
 20134  3253  0145               	movlb	5	; select bank5
 20135  3254  00CF               	movwf	_errno^(0+640)
 20136  3255  3000               	movlw	0
 20137  3256  00D0               	movwf	(_errno^(0+640)+1)
 20138  3257                     l3238:	
 20139  3257  3000               	movlw	0
 20140  3258  0141               	movlb	1	; select bank1
 20141  3259  00E0               	movwf	?_pow^(0+128)
 20142  325A  3000               	movlw	0
 20143  325B  00E1               	movwf	(?_pow+1)^(0+128)
 20144  325C  3000               	movlw	0
 20145  325D  00E2               	movwf	(?_pow+2)^(0+128)
 20146  325E  0008               	return
 20147  325F                     l16712:	
 20148  325F  0865               	movf	(pow@y+2)^(0+128),w
 20149  3260  0464               	iorwf	(pow@y+1)^(0+128),w
 20150  3261  0463               	iorwf	pow@y^(0+128),w
 20151  3262  1D03               	skipz
 20152  3263  2A6B               	goto	l16718
 20153  3264  3000               	movlw	0
 20154  3265  00E0               	movwf	?_pow^(0+128)
 20155  3266  3080               	movlw	128
 20156  3267  00E1               	movwf	(?_pow+1)^(0+128)
 20157  3268  303F               	movlw	63
 20158  3269  00E2               	movwf	(?_pow+2)^(0+128)
 20159  326A  0008               	return
 20160  326B                     l16718:	
 20161  326B  0860               	movf	pow@x^(0+128),w
 20162  326C  0140               	movlb	0	; select bank0
 20163  326D  00AB               	movwf	___ftge@ff1
 20164  326E  0141               	movlb	1	; select bank1
 20165  326F  0861               	movf	(pow@x+1)^(0+128),w
 20166  3270  0140               	movlb	0	; select bank0
 20167  3271  00AC               	movwf	___ftge@ff1+1
 20168  3272  0141               	movlb	1	; select bank1
 20169  3273  0862               	movf	(pow@x+2)^(0+128),w
 20170  3274  0140               	movlb	0	; select bank0
 20171  3275  00AD               	movwf	___ftge@ff1+2
 20172  3276  3000               	movlw	0
 20173  3277  00AE               	movwf	___ftge@ff2
 20174  3278  3000               	movlw	0
 20175  3279  00AF               	movwf	___ftge@ff2+1
 20176  327A  3000               	movlw	0
 20177  327B  00B0               	movwf	___ftge@ff2+2
 20178  327C  31D6  2680  31B2   	fcall	___ftge
 20179  327F  1803               	btfsc	3,0
 20180  3280  2AE5               	goto	l16730
 20181  3281  0141               	movlb	1	; select bank1
 20182  3282  0863               	movf	pow@y^(0+128),w
 20183  3283  00BA               	movwf	___fttol@f1^(0+128)
 20184  3284  0864               	movf	(pow@y+1)^(0+128),w
 20185  3285  00BB               	movwf	(___fttol@f1+1)^(0+128)
 20186  3286  0865               	movf	(pow@y+2)^(0+128),w
 20187  3287  00BC               	movwf	(___fttol@f1+2)^(0+128)
 20188  3288  31C3  2352  31B2   	fcall	___fttol
 20189  328B  0141               	movlb	1	; select bank1
 20190  328C  083D               	movf	(?___fttol+3)^(0+128),w
 20191  328D  0142               	movlb	2	; select bank2
 20192  328E  00AA               	movwf	(pow@yi+3)^(0+256)
 20193  328F  0141               	movlb	1	; select bank1
 20194  3290  083C               	movf	(?___fttol+2)^(0+128),w
 20195  3291  0142               	movlb	2	; select bank2
 20196  3292  00A9               	movwf	(pow@yi+2)^(0+256)
 20197  3293  0141               	movlb	1	; select bank1
 20198  3294  083B               	movf	(?___fttol+1)^(0+128),w
 20199  3295  0142               	movlb	2	; select bank2
 20200  3296  00A8               	movwf	(pow@yi+1)^(0+256)
 20201  3297  0141               	movlb	1	; select bank1
 20202  3298  083A               	movf	?___fttol^(0+128),w
 20203  3299  0142               	movlb	2	; select bank2
 20204  329A  00A7               	movwf	pow@yi^(0+256)
 20205  329B  082A               	movf	(pow@yi+3)^(0+256),w
 20206  329C  0140               	movlb	0	; select bank0
 20207  329D  00B6               	movwf	___lltoft@c+3
 20208  329E  0142               	movlb	2	; select bank2
 20209  329F  0829               	movf	(pow@yi+2)^(0+256),w
 20210  32A0  0140               	movlb	0	; select bank0
 20211  32A1  00B5               	movwf	___lltoft@c+2
 20212  32A2  0142               	movlb	2	; select bank2
 20213  32A3  0828               	movf	(pow@yi+1)^(0+256),w
 20214  32A4  0140               	movlb	0	; select bank0
 20215  32A5  00B4               	movwf	___lltoft@c+1
 20216  32A6  0142               	movlb	2	; select bank2
 20217  32A7  0827               	movf	pow@yi^(0+256),w
 20218  32A8  0140               	movlb	0	; select bank0
 20219  32A9  00B3               	movwf	___lltoft@c
 20220  32AA  31B8  2001  31B2   	fcall	___lltoft
 20221  32AD  0141               	movlb	1	; select bank1
 20222  32AE  0865               	movf	(pow@y+2)^(0+128),w
 20223  32AF  0140               	movlb	0	; select bank0
 20224  32B0  0635               	xorwf	?___lltoft+2,w
 20225  32B1  1D03               	skipz
 20226  32B2  2ABD               	goto	u19155
 20227  32B3  0141               	movlb	1	; select bank1
 20228  32B4  0864               	movf	(pow@y+1)^(0+128),w
 20229  32B5  0140               	movlb	0	; select bank0
 20230  32B6  0634               	xorwf	?___lltoft+1,w
 20231  32B7  1D03               	skipz
 20232  32B8  2ABD               	goto	u19155
 20233  32B9  0141               	movlb	1	; select bank1
 20234  32BA  0863               	movf	pow@y^(0+128),w
 20235  32BB  0140               	movlb	0	; select bank0
 20236  32BC  0633               	xorwf	?___lltoft,w
 20237  32BD                     u19155:	
 20238  32BD  1903               	skipnz
 20239  32BE  2ACC               	goto	l16726
 20240  32BF  3021               	movlw	33
 20241  32C0  0145               	movlb	5	; select bank5
 20242  32C1  00CF               	movwf	_errno^(0+640)
 20243  32C2  3000               	movlw	0
 20244  32C3  00D0               	movwf	(_errno^(0+640)+1)
 20245  32C4  3000               	movlw	0
 20246  32C5  0141               	movlb	1	; select bank1
 20247  32C6  00E0               	movwf	?_pow^(0+128)
 20248  32C7  3000               	movlw	0
 20249  32C8  00E1               	movwf	(?_pow+1)^(0+128)
 20250  32C9  3000               	movlw	0
 20251  32CA  00E2               	movwf	(?_pow+2)^(0+128)
 20252  32CB  0008               	return
 20253  32CC                     l16726:	
 20254  32CC  0142               	movlb	2	; select bank2
 20255  32CD  0827               	movf	pow@yi^(0+256),w
 20256  32CE  3901               	andlw	1
 20257  32CF  0141               	movlb	1	; select bank1
 20258  32D0  00E6               	movwf	??_pow^(0+128)
 20259  32D1  0866               	movf	??_pow^(0+128),w
 20260  32D2  0142               	movlb	2	; select bank2
 20261  32D3  00A6               	movwf	pow@sign^(0+256)
 20262  32D4  0141               	movlb	1	; select bank1
 20263  32D5  0860               	movf	pow@x^(0+128),w
 20264  32D6  00D0               	movwf	___ftneg@f1^(0+128)
 20265  32D7  0861               	movf	(pow@x+1)^(0+128),w
 20266  32D8  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 20267  32D9  0862               	movf	(pow@x+2)^(0+128),w
 20268  32DA  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 20269  32DB  31E2  2209  31B2   	fcall	___ftneg
 20270  32DE  0141               	movlb	1	; select bank1
 20271  32DF  0850               	movf	?___ftneg^(0+128),w
 20272  32E0  00E0               	movwf	pow@x^(0+128)
 20273  32E1  0851               	movf	(?___ftneg+1)^(0+128),w
 20274  32E2  00E1               	movwf	(pow@x+1)^(0+128)
 20275  32E3  0852               	movf	(?___ftneg+2)^(0+128),w
 20276  32E4  00E2               	movwf	(pow@x+2)^(0+128)
 20277  32E5                     l16730:	
 20278  32E5  0141               	movlb	1	; select bank1
 20279  32E6  0860               	movf	pow@x^(0+128),w
 20280  32E7  00AA               	movwf	log@x^(0+128)
 20281  32E8  0861               	movf	(pow@x+1)^(0+128),w
 20282  32E9  00AB               	movwf	(log@x+1)^(0+128)
 20283  32EA  0862               	movf	(pow@x+2)^(0+128),w
 20284  32EB  00AC               	movwf	(log@x+2)^(0+128)
 20285  32EC  3190  2003  31B2   	fcall	_log
 20286  32EF  0141               	movlb	1	; select bank1
 20287  32F0  082A               	movf	?_log^(0+128),w
 20288  32F1  0142               	movlb	2	; select bank2
 20289  32F2  00A0               	movwf	_pow$4272^(0+256)
 20290  32F3  0141               	movlb	1	; select bank1
 20291  32F4  082B               	movf	(?_log+1)^(0+128),w
 20292  32F5  0142               	movlb	2	; select bank2
 20293  32F6  00A1               	movwf	(_pow$4272+1)^(0+256)
 20294  32F7  0141               	movlb	1	; select bank1
 20295  32F8  082C               	movf	(?_log+2)^(0+128),w
 20296  32F9  0142               	movlb	2	; select bank2
 20297  32FA  00A2               	movwf	(_pow$4272+2)^(0+256)
 20298  32FB  0141               	movlb	1	; select bank1
 20299  32FC  0863               	movf	pow@y^(0+128),w
 20300  32FD  0140               	movlb	0	; select bank0
 20301  32FE  00C8               	movwf	___ftmul@f1
 20302  32FF  0141               	movlb	1	; select bank1
 20303  3300  0864               	movf	(pow@y+1)^(0+128),w
 20304  3301  0140               	movlb	0	; select bank0
 20305  3302  00C9               	movwf	___ftmul@f1+1
 20306  3303  0141               	movlb	1	; select bank1
 20307  3304  0865               	movf	(pow@y+2)^(0+128),w
 20308  3305  0140               	movlb	0	; select bank0
 20309  3306  00CA               	movwf	___ftmul@f1+2
 20310  3307  0142               	movlb	2	; select bank2
 20311  3308  0820               	movf	_pow$4272^(0+256),w
 20312  3309  0140               	movlb	0	; select bank0
 20313  330A  00CB               	movwf	___ftmul@f2
 20314  330B  0142               	movlb	2	; select bank2
 20315  330C  0821               	movf	(_pow$4272+1)^(0+256),w
 20316  330D  0140               	movlb	0	; select bank0
 20317  330E  00CC               	movwf	___ftmul@f2+1
 20318  330F  0142               	movlb	2	; select bank2
 20319  3310  0822               	movf	(_pow$4272+2)^(0+256),w
 20320  3311  0140               	movlb	0	; select bank0
 20321  3312  00CD               	movwf	___ftmul@f2+2
 20322  3313  31B9  218F  31B2   	fcall	___ftmul
 20323  3316  0140               	movlb	0	; select bank0
 20324  3317  0848               	movf	?___ftmul,w
 20325  3318  0142               	movlb	2	; select bank2
 20326  3319  00A3               	movwf	_pow$4273^(0+256)
 20327  331A  0140               	movlb	0	; select bank0
 20328  331B  0849               	movf	?___ftmul+1,w
 20329  331C  0142               	movlb	2	; select bank2
 20330  331D  00A4               	movwf	(_pow$4273+1)^(0+256)
 20331  331E  0140               	movlb	0	; select bank0
 20332  331F  084A               	movf	?___ftmul+2,w
 20333  3320  0142               	movlb	2	; select bank2
 20334  3321  00A5               	movwf	(_pow$4273+2)^(0+256)
 20335  3322  0823               	movf	_pow$4273^(0+256),w
 20336  3323  0141               	movlb	1	; select bank1
 20337  3324  00D6               	movwf	exp@x^(0+128)
 20338  3325  0142               	movlb	2	; select bank2
 20339  3326  0824               	movf	(_pow$4273+1)^(0+256),w
 20340  3327  0141               	movlb	1	; select bank1
 20341  3328  00D7               	movwf	(exp@x+1)^(0+128)
 20342  3329  0142               	movlb	2	; select bank2
 20343  332A  0825               	movf	(_pow$4273+2)^(0+256),w
 20344  332B  0141               	movlb	1	; select bank1
 20345  332C  00D8               	movwf	(exp@x+2)^(0+128)
 20346  332D  31B6  26C4  31B2   	fcall	_exp
 20347  3330  0141               	movlb	1	; select bank1
 20348  3331  0856               	movf	?_exp^(0+128),w
 20349  3332  00E0               	movwf	pow@x^(0+128)
 20350  3333  0857               	movf	(?_exp+1)^(0+128),w
 20351  3334  00E1               	movwf	(pow@x+1)^(0+128)
 20352  3335  0858               	movf	(?_exp+2)^(0+128),w
 20353  3336  00E2               	movwf	(pow@x+2)^(0+128)
 20354  3337  0142               	movlb	2	; select bank2
 20355  3338  0826               	movf	pow@sign^(0+256),w
 20356  3339  1903               	btfsc	3,2
 20357  333A  0008               	return
 20358  333B  0141               	movlb	1	; select bank1
 20359  333C  0860               	movf	pow@x^(0+128),w
 20360  333D  00D0               	movwf	___ftneg@f1^(0+128)
 20361  333E  0861               	movf	(pow@x+1)^(0+128),w
 20362  333F  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 20363  3340  0862               	movf	(pow@x+2)^(0+128),w
 20364  3341  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 20365  3342  31E2  2209         	fcall	___ftneg
 20366  3344  0141               	movlb	1	; select bank1
 20367  3345  0850               	movf	?___ftneg^(0+128),w
 20368  3346  00E0               	movwf	?_pow^(0+128)
 20369  3347  0851               	movf	(?___ftneg+1)^(0+128),w
 20370  3348  00E1               	movwf	(?_pow+1)^(0+128)
 20371  3349  0852               	movf	(?___ftneg+2)^(0+128),w
 20372  334A  00E2               	movwf	(?_pow+2)^(0+128)
 20373  334B  0008               	return
 20374  334C                     __end_of_pow:	
 20375                           
 20376                           	psect	text30
 20377  1003                     __ptext30:	
 20378 ;; *************** function _log *****************
 20379 ;; Defined at:
 20380 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\log.c"
 20381 ;; Parameters:    Size  Location     Type
 20382 ;;  x               3   10[BANK1 ] unsigned char 
 20383 ;; Auto vars:     Size  Location     Type
 20384 ;;  exponent        2   13[BANK1 ] int 
 20385 ;; Return value:  Size  Location     Type
 20386 ;;                  3   10[BANK1 ] int 
 20387 ;; Registers used:
 20388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20389 ;; Tracked objects:
 20390 ;;		On entry : 0/0
 20391 ;;		On exit  : 0/0
 20392 ;;		Unchanged: 0/0
 20393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20394 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20395 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20396 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20397 ;;      Totals:         0       1       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20398 ;;Total ram usage:        6 bytes
 20399 ;; Hardware stack levels used:    1
 20400 ;; Hardware stack levels required when called:    6
 20401 ;; This function calls:
 20402 ;;		___awtoft
 20403 ;;		___ftadd
 20404 ;;		___ftge
 20405 ;;		___ftmul
 20406 ;;		_eval_poly
 20407 ;;		_frexp
 20408 ;; This function is called by:
 20409 ;;		_pow
 20410 ;; This function uses a non-reentrant model
 20411 ;;
 20412                           
 20413                           
 20414                           ;psect for function _log
 20415  1003                     _log:	
 20416                           
 20417                           ;incstack = 0
 20418                           ; Regs used in _log: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20419  1003  0141               	movlb	1	; select bank1
 20420  1004  082A               	movf	log@x^(0+128),w
 20421  1005  0140               	movlb	0	; select bank0
 20422  1006  00AB               	movwf	___ftge@ff1
 20423  1007  0141               	movlb	1	; select bank1
 20424  1008  082B               	movf	(log@x+1)^(0+128),w
 20425  1009  0140               	movlb	0	; select bank0
 20426  100A  00AC               	movwf	___ftge@ff1+1
 20427  100B  0141               	movlb	1	; select bank1
 20428  100C  082C               	movf	(log@x+2)^(0+128),w
 20429  100D  0140               	movlb	0	; select bank0
 20430  100E  00AD               	movwf	___ftge@ff1+2
 20431  100F  3000               	movlw	0
 20432  1010  00AE               	movwf	___ftge@ff2
 20433  1011  3000               	movlw	0
 20434  1012  00AF               	movwf	___ftge@ff2+1
 20435  1013  3000               	movlw	0
 20436  1014  00B0               	movwf	___ftge@ff2+2
 20437  1015  31D6  2680  3190   	fcall	___ftge
 20438  1018  1803               	btfsc	3,0
 20439  1019  2827               	goto	l15924
 20440  101A  3021               	movlw	33
 20441  101B  0145               	movlb	5	; select bank5
 20442  101C  00CF               	movwf	_errno^(0+640)
 20443  101D  3000               	movlw	0
 20444  101E  00D0               	movwf	(_errno^(0+640)+1)
 20445  101F  3000               	movlw	0
 20446  1020  0141               	movlb	1	; select bank1
 20447  1021  00AA               	movwf	?_log^(0+128)
 20448  1022  3000               	movlw	0
 20449  1023  00AB               	movwf	(?_log+1)^(0+128)
 20450  1024  3000               	movlw	0
 20451  1025  00AC               	movwf	(?_log+2)^(0+128)
 20452  1026  0008               	return
 20453  1027                     l15924:	
 20454  1027  0141               	movlb	1	; select bank1
 20455  1028  082C               	movf	(log@x+2)^(0+128),w
 20456  1029  042B               	iorwf	(log@x+1)^(0+128),w
 20457  102A  042A               	iorwf	log@x^(0+128),w
 20458  102B  1D03               	skipz
 20459  102C  283A               	goto	l15930
 20460  102D  3022               	movlw	34
 20461  102E  0145               	movlb	5	; select bank5
 20462  102F  00CF               	movwf	_errno^(0+640)
 20463  1030  3000               	movlw	0
 20464  1031  00D0               	movwf	(_errno^(0+640)+1)
 20465  1032  3000               	movlw	0
 20466  1033  0141               	movlb	1	; select bank1
 20467  1034  00AA               	movwf	?_log^(0+128)
 20468  1035  3000               	movlw	0
 20469  1036  00AB               	movwf	(?_log+1)^(0+128)
 20470  1037  3000               	movlw	0
 20471  1038  00AC               	movwf	(?_log+2)^(0+128)
 20472  1039  0008               	return
 20473  103A                     l15930:	
 20474  103A  3000               	movlw	0
 20475  103B  0140               	movlb	0	; select bank0
 20476  103C  00BB               	movwf	___ftadd@f1
 20477  103D  3080               	movlw	128
 20478  103E  00BC               	movwf	___ftadd@f1+1
 20479  103F  30BF               	movlw	191
 20480  1040  00BD               	movwf	___ftadd@f1+2
 20481  1041  3000               	movlw	0
 20482  1042  00C8               	movwf	___ftmul@f1
 20483  1043  3000               	movlw	0
 20484  1044  00C9               	movwf	___ftmul@f1+1
 20485  1045  3040               	movlw	64
 20486  1046  00CA               	movwf	___ftmul@f1+2
 20487  1047  30AD               	movlw	(low (log@exponent| 0))& (0+255)
 20488  1048  00D8               	movwf	??_log
 20489  1049  0858               	movf	??_log,w
 20490  104A  00AE               	movwf	frexp@eptr
 20491  104B  0141               	movlb	1	; select bank1
 20492  104C  082A               	movf	log@x^(0+128),w
 20493  104D  0140               	movlb	0	; select bank0
 20494  104E  00AB               	movwf	frexp@value
 20495  104F  0141               	movlb	1	; select bank1
 20496  1050  082B               	movf	(log@x+1)^(0+128),w
 20497  1051  0140               	movlb	0	; select bank0
 20498  1052  00AC               	movwf	frexp@value+1
 20499  1053  0141               	movlb	1	; select bank1
 20500  1054  082C               	movf	(log@x+2)^(0+128),w
 20501  1055  0140               	movlb	0	; select bank0
 20502  1056  00AD               	movwf	frexp@value+2
 20503  1057  31D6  26BC  3190   	fcall	_frexp
 20504  105A  0140               	movlb	0	; select bank0
 20505  105B  082B               	movf	?_frexp,w
 20506  105C  00CB               	movwf	___ftmul@f2
 20507  105D  082C               	movf	?_frexp+1,w
 20508  105E  00CC               	movwf	___ftmul@f2+1
 20509  105F  082D               	movf	?_frexp+2,w
 20510  1060  00CD               	movwf	___ftmul@f2+2
 20511  1061  31B9  218F  3190   	fcall	___ftmul
 20512  1064  0140               	movlb	0	; select bank0
 20513  1065  0848               	movf	?___ftmul,w
 20514  1066  00BE               	movwf	___ftadd@f2
 20515  1067  0849               	movf	?___ftmul+1,w
 20516  1068  00BF               	movwf	___ftadd@f2+1
 20517  1069  084A               	movf	?___ftmul+2,w
 20518  106A  00C0               	movwf	___ftadd@f2+2
 20519  106B  31B0  2027  3190   	fcall	___ftadd
 20520  106E  0140               	movlb	0	; select bank0
 20521  106F  083B               	movf	?___ftadd,w
 20522  1070  0141               	movlb	1	; select bank1
 20523  1071  00AA               	movwf	log@x^(0+128)
 20524  1072  0140               	movlb	0	; select bank0
 20525  1073  083C               	movf	?___ftadd+1,w
 20526  1074  0141               	movlb	1	; select bank1
 20527  1075  00AB               	movwf	(log@x+1)^(0+128)
 20528  1076  0140               	movlb	0	; select bank0
 20529  1077  083D               	movf	?___ftadd+2,w
 20530  1078  0141               	movlb	1	; select bank1
 20531  1079  00AC               	movwf	(log@x+2)^(0+128)
 20532  107A  30FF               	movlw	255
 20533  107B  07AD               	addwf	log@exponent^(0+128),f
 20534  107C  30FF               	movlw	255
 20535  107D  3DAE               	addwfc	(log@exponent+1)^(0+128),f
 20536  107E  082A               	movf	log@x^(0+128),w
 20537  107F  00A0               	movwf	eval_poly@x^(0+128)
 20538  1080  082B               	movf	(log@x+1)^(0+128),w
 20539  1081  00A1               	movwf	(eval_poly@x+1)^(0+128)
 20540  1082  082C               	movf	(log@x+2)^(0+128),w
 20541  1083  00A2               	movwf	(eval_poly@x+2)^(0+128)
 20542  1084  30B8               	movlw	low (log@coeff| (0+32768))
 20543  1085  00A3               	movwf	eval_poly@d^(0+128)
 20544  1086  30E0               	movlw	high (log@coeff| (0+32768))
 20545  1087  00A4               	movwf	(eval_poly@d^(0+128)+1)
 20546  1088  3008               	movlw	8
 20547  1089  00A5               	movwf	eval_poly@n^(0+128)
 20548  108A  3000               	movlw	0
 20549  108B  00A6               	movwf	(eval_poly@n^(0+128)+1)
 20550  108C  31C1  214B  3190   	fcall	_eval_poly
 20551  108F  0141               	movlb	1	; select bank1
 20552  1090  0820               	movf	?_eval_poly^(0+128),w
 20553  1091  00AA               	movwf	log@x^(0+128)
 20554  1092  0821               	movf	(?_eval_poly+1)^(0+128),w
 20555  1093  00AB               	movwf	(log@x+1)^(0+128)
 20556  1094  0822               	movf	(?_eval_poly+2)^(0+128),w
 20557  1095  00AC               	movwf	(log@x+2)^(0+128)
 20558  1096  082A               	movf	log@x^(0+128),w
 20559  1097  0140               	movlb	0	; select bank0
 20560  1098  00BB               	movwf	___ftadd@f1
 20561  1099  0141               	movlb	1	; select bank1
 20562  109A  082B               	movf	(log@x+1)^(0+128),w
 20563  109B  0140               	movlb	0	; select bank0
 20564  109C  00BC               	movwf	___ftadd@f1+1
 20565  109D  0141               	movlb	1	; select bank1
 20566  109E  082C               	movf	(log@x+2)^(0+128),w
 20567  109F  0140               	movlb	0	; select bank0
 20568  10A0  00BD               	movwf	___ftadd@f1+2
 20569  10A1  3072               	movlw	114
 20570  10A2  00C8               	movwf	___ftmul@f1
 20571  10A3  3031               	movlw	49
 20572  10A4  00C9               	movwf	___ftmul@f1+1
 20573  10A5  303F               	movlw	63
 20574  10A6  00CA               	movwf	___ftmul@f1+2
 20575  10A7  0141               	movlb	1	; select bank1
 20576  10A8  082E               	movf	(log@exponent+1)^(0+128),w
 20577  10A9  0140               	movlb	0	; select bank0
 20578  10AA  00B4               	movwf	___awtoft@c+1
 20579  10AB  0141               	movlb	1	; select bank1
 20580  10AC  082D               	movf	log@exponent^(0+128),w
 20581  10AD  0140               	movlb	0	; select bank0
 20582  10AE  00B3               	movwf	___awtoft@c
 20583  10AF  31D2  222F  3190   	fcall	___awtoft
 20584  10B2  0140               	movlb	0	; select bank0
 20585  10B3  0833               	movf	?___awtoft,w
 20586  10B4  00CB               	movwf	___ftmul@f2
 20587  10B5  0834               	movf	?___awtoft+1,w
 20588  10B6  00CC               	movwf	___ftmul@f2+1
 20589  10B7  0835               	movf	?___awtoft+2,w
 20590  10B8  00CD               	movwf	___ftmul@f2+2
 20591  10B9  31B9  218F  3190   	fcall	___ftmul
 20592  10BC  0140               	movlb	0	; select bank0
 20593  10BD  0848               	movf	?___ftmul,w
 20594  10BE  00BE               	movwf	___ftadd@f2
 20595  10BF  0849               	movf	?___ftmul+1,w
 20596  10C0  00BF               	movwf	___ftadd@f2+1
 20597  10C1  084A               	movf	?___ftmul+2,w
 20598  10C2  00C0               	movwf	___ftadd@f2+2
 20599  10C3  31B0  2027         	fcall	___ftadd
 20600  10C5  0140               	movlb	0	; select bank0
 20601  10C6  083B               	movf	?___ftadd,w
 20602  10C7  0141               	movlb	1	; select bank1
 20603  10C8  00AA               	movwf	?_log^(0+128)
 20604  10C9  0140               	movlb	0	; select bank0
 20605  10CA  083C               	movf	?___ftadd+1,w
 20606  10CB  0141               	movlb	1	; select bank1
 20607  10CC  00AB               	movwf	(?_log+1)^(0+128)
 20608  10CD  0140               	movlb	0	; select bank0
 20609  10CE  083D               	movf	?___ftadd+2,w
 20610  10CF  0141               	movlb	1	; select bank1
 20611  10D0  00AC               	movwf	(?_log+2)^(0+128)
 20612  10D1  0008               	return
 20613  10D2                     __end_of_log:	
 20614                           
 20615                           	psect	text31
 20616  36C4                     __ptext31:	
 20617 ;; *************** function _exp *****************
 20618 ;; Defined at:
 20619 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\exp.c"
 20620 ;; Parameters:    Size  Location     Type
 20621 ;;  x               3   54[BANK1 ] int 
 20622 ;; Auto vars:     Size  Location     Type
 20623 ;;  exponent        2   61[BANK1 ] int 
 20624 ;;  sign            1   63[BANK1 ] unsigned char 
 20625 ;; Return value:  Size  Location     Type
 20626 ;;                  3   54[BANK1 ] unsigned char 
 20627 ;; Registers used:
 20628 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 20629 ;; Tracked objects:
 20630 ;;		On entry : 0/0
 20631 ;;		On exit  : 0/0
 20632 ;;		Unchanged: 0/0
 20633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20634 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20635 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20636 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20637 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20638 ;;Total ram usage:       10 bytes
 20639 ;; Hardware stack levels used:    1
 20640 ;; Hardware stack levels required when called:    6
 20641 ;; This function calls:
 20642 ;;		___awtoft
 20643 ;;		___ftdiv
 20644 ;;		___ftge
 20645 ;;		___ftmul
 20646 ;;		___ftneg
 20647 ;;		___ftsub
 20648 ;;		___fttol
 20649 ;;		_eval_poly
 20650 ;;		_floor
 20651 ;;		_ldexp
 20652 ;; This function is called by:
 20653 ;;		_pow
 20654 ;; This function uses a non-reentrant model
 20655 ;;
 20656                           
 20657                           
 20658                           ;psect for function _exp
 20659  36C4                     _exp:	
 20660                           
 20661                           ;incstack = 0
 20662                           ; Regs used in _exp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 20663  36C4  0141               	movlb	1	; select bank1
 20664  36C5  0858               	movf	(exp@x+2)^(0+128),w
 20665  36C6  0457               	iorwf	(exp@x+1)^(0+128),w
 20666  36C7  0456               	iorwf	exp@x^(0+128),w
 20667  36C8  1D03               	skipz
 20668  36C9  2ED1               	goto	l15946
 20669  36CA  3000               	movlw	0
 20670  36CB  00D6               	movwf	?_exp^(0+128)
 20671  36CC  3080               	movlw	128
 20672  36CD  00D7               	movwf	(?_exp+1)^(0+128)
 20673  36CE  303F               	movlw	63
 20674  36CF  00D8               	movwf	(?_exp+2)^(0+128)
 20675  36D0  0008               	return
 20676  36D1                     l15946:	
 20677  36D1  3072               	movlw	114
 20678  36D2  0140               	movlb	0	; select bank0
 20679  36D3  00AB               	movwf	___ftge@ff1
 20680  36D4  3031               	movlw	49
 20681  36D5  00AC               	movwf	___ftge@ff1+1
 20682  36D6  3044               	movlw	68
 20683  36D7  00AD               	movwf	___ftge@ff1+2
 20684  36D8  0141               	movlb	1	; select bank1
 20685  36D9  0856               	movf	exp@x^(0+128),w
 20686  36DA  0140               	movlb	0	; select bank0
 20687  36DB  00AE               	movwf	___ftge@ff2
 20688  36DC  0141               	movlb	1	; select bank1
 20689  36DD  0857               	movf	(exp@x+1)^(0+128),w
 20690  36DE  0140               	movlb	0	; select bank0
 20691  36DF  00AF               	movwf	___ftge@ff2+1
 20692  36E0  0141               	movlb	1	; select bank1
 20693  36E1  0858               	movf	(exp@x+2)^(0+128),w
 20694  36E2  0140               	movlb	0	; select bank0
 20695  36E3  00B0               	movwf	___ftge@ff2+2
 20696  36E4  31D6  2680  31B6   	fcall	___ftge
 20697  36E7  1803               	btfsc	3,0
 20698  36E8  2EF6               	goto	l15952
 20699  36E9  3022               	movlw	34
 20700  36EA  0145               	movlb	5	; select bank5
 20701  36EB  00CF               	movwf	_errno^(0+640)
 20702  36EC  3000               	movlw	0
 20703  36ED  00D0               	movwf	(_errno^(0+640)+1)
 20704  36EE  30FF               	movlw	255
 20705  36EF  0141               	movlb	1	; select bank1
 20706  36F0  00D6               	movwf	?_exp^(0+128)
 20707  36F1  307F               	movlw	127
 20708  36F2  00D7               	movwf	(?_exp+1)^(0+128)
 20709  36F3  307F               	movlw	127
 20710  36F4  00D8               	movwf	(?_exp+2)^(0+128)
 20711  36F5  0008               	return
 20712  36F6                     l15952:	
 20713  36F6  0141               	movlb	1	; select bank1
 20714  36F7  0856               	movf	exp@x^(0+128),w
 20715  36F8  0140               	movlb	0	; select bank0
 20716  36F9  00AB               	movwf	___ftge@ff1
 20717  36FA  0141               	movlb	1	; select bank1
 20718  36FB  0857               	movf	(exp@x+1)^(0+128),w
 20719  36FC  0140               	movlb	0	; select bank0
 20720  36FD  00AC               	movwf	___ftge@ff1+1
 20721  36FE  0141               	movlb	1	; select bank1
 20722  36FF  0858               	movf	(exp@x+2)^(0+128),w
 20723  3700  0140               	movlb	0	; select bank0
 20724  3701  00AD               	movwf	___ftge@ff1+2
 20725  3702  3049               	movlw	73
 20726  3703  00AE               	movwf	___ftge@ff2
 20727  3704  303A               	movlw	58
 20728  3705  00AF               	movwf	___ftge@ff2+1
 20729  3706  30C4               	movlw	196
 20730  3707  00B0               	movwf	___ftge@ff2+2
 20731  3708  31D6  2680  31B6   	fcall	___ftge
 20732  370B  1803               	btfsc	3,0
 20733  370C  2F1A               	goto	l15958
 20734  370D  3022               	movlw	34
 20735  370E  0145               	movlb	5	; select bank5
 20736  370F  00CF               	movwf	_errno^(0+640)
 20737  3710  3000               	movlw	0
 20738  3711  00D0               	movwf	(_errno^(0+640)+1)
 20739  3712  3000               	movlw	0
 20740  3713  0141               	movlb	1	; select bank1
 20741  3714  00D6               	movwf	?_exp^(0+128)
 20742  3715  3000               	movlw	0
 20743  3716  00D7               	movwf	(?_exp+1)^(0+128)
 20744  3717  3000               	movlw	0
 20745  3718  00D8               	movwf	(?_exp+2)^(0+128)
 20746  3719  0008               	return
 20747  371A                     l15958:	
 20748  371A  0141               	movlb	1	; select bank1
 20749  371B  0856               	movf	exp@x^(0+128),w
 20750  371C  0140               	movlb	0	; select bank0
 20751  371D  00AB               	movwf	___ftge@ff1
 20752  371E  0141               	movlb	1	; select bank1
 20753  371F  0857               	movf	(exp@x+1)^(0+128),w
 20754  3720  0140               	movlb	0	; select bank0
 20755  3721  00AC               	movwf	___ftge@ff1+1
 20756  3722  0141               	movlb	1	; select bank1
 20757  3723  0858               	movf	(exp@x+2)^(0+128),w
 20758  3724  0140               	movlb	0	; select bank0
 20759  3725  00AD               	movwf	___ftge@ff1+2
 20760  3726  3000               	movlw	0
 20761  3727  00AE               	movwf	___ftge@ff2
 20762  3728  3000               	movlw	0
 20763  3729  00AF               	movwf	___ftge@ff2+1
 20764  372A  3000               	movlw	0
 20765  372B  00B0               	movwf	___ftge@ff2+2
 20766  372C  31D6  2680  31B6   	fcall	___ftge
 20767  372F  1803               	btfsc	3,0
 20768  3730  2F33               	goto	u17890
 20769  3731  3001               	movlw	1
 20770  3732  2F34               	goto	u17900
 20771  3733                     u17890:	
 20772  3733  3000               	movlw	0
 20773  3734                     u17900:	
 20774  3734  0141               	movlb	1	; select bank1
 20775  3735  00D9               	movwf	??_exp^(0+128)
 20776  3736  0859               	movf	??_exp^(0+128),w
 20777  3737  00DF               	movwf	exp@sign^(0+128)
 20778  3738  085F               	movf	exp@sign^(0+128),w
 20779  3739  1903               	btfsc	3,2
 20780  373A  2F4B               	goto	l15964
 20781  373B  0856               	movf	exp@x^(0+128),w
 20782  373C  00D0               	movwf	___ftneg@f1^(0+128)
 20783  373D  0857               	movf	(exp@x+1)^(0+128),w
 20784  373E  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 20785  373F  0858               	movf	(exp@x+2)^(0+128),w
 20786  3740  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 20787  3741  31E2  2209  31B6   	fcall	___ftneg
 20788  3744  0141               	movlb	1	; select bank1
 20789  3745  0850               	movf	?___ftneg^(0+128),w
 20790  3746  00D6               	movwf	exp@x^(0+128)
 20791  3747  0851               	movf	(?___ftneg+1)^(0+128),w
 20792  3748  00D7               	movwf	(exp@x+1)^(0+128)
 20793  3749  0852               	movf	(?___ftneg+2)^(0+128),w
 20794  374A  00D8               	movwf	(exp@x+2)^(0+128)
 20795  374B                     l15964:	
 20796  374B  30AA               	movlw	170
 20797  374C  0140               	movlb	0	; select bank0
 20798  374D  00C8               	movwf	___ftmul@f1
 20799  374E  30B8               	movlw	184
 20800  374F  00C9               	movwf	___ftmul@f1+1
 20801  3750  303F               	movlw	63
 20802  3751  00CA               	movwf	___ftmul@f1+2
 20803  3752  0141               	movlb	1	; select bank1
 20804  3753  0856               	movf	exp@x^(0+128),w
 20805  3754  0140               	movlb	0	; select bank0
 20806  3755  00CB               	movwf	___ftmul@f2
 20807  3756  0141               	movlb	1	; select bank1
 20808  3757  0857               	movf	(exp@x+1)^(0+128),w
 20809  3758  0140               	movlb	0	; select bank0
 20810  3759  00CC               	movwf	___ftmul@f2+1
 20811  375A  0141               	movlb	1	; select bank1
 20812  375B  0858               	movf	(exp@x+2)^(0+128),w
 20813  375C  0140               	movlb	0	; select bank0
 20814  375D  00CD               	movwf	___ftmul@f2+2
 20815  375E  31B9  218F  31B6   	fcall	___ftmul
 20816  3761  0140               	movlb	0	; select bank0
 20817  3762  0848               	movf	?___ftmul,w
 20818  3763  0141               	movlb	1	; select bank1
 20819  3764  00D6               	movwf	exp@x^(0+128)
 20820  3765  0140               	movlb	0	; select bank0
 20821  3766  0849               	movf	?___ftmul+1,w
 20822  3767  0141               	movlb	1	; select bank1
 20823  3768  00D7               	movwf	(exp@x+1)^(0+128)
 20824  3769  0140               	movlb	0	; select bank0
 20825  376A  084A               	movf	?___ftmul+2,w
 20826  376B  0141               	movlb	1	; select bank1
 20827  376C  00D8               	movwf	(exp@x+2)^(0+128)
 20828  376D  0856               	movf	exp@x^(0+128),w
 20829  376E  00C8               	movwf	floor@x^(0+128)
 20830  376F  0857               	movf	(exp@x+1)^(0+128),w
 20831  3770  00C9               	movwf	(floor@x+1)^(0+128)
 20832  3771  0858               	movf	(exp@x+2)^(0+128),w
 20833  3772  00CA               	movwf	(floor@x+2)^(0+128)
 20834  3773  31B8  202B  31B6   	fcall	_floor
 20835  3776  0141               	movlb	1	; select bank1
 20836  3777  0848               	movf	?_floor^(0+128),w
 20837  3778  00DA               	movwf	_exp$4275^(0+128)
 20838  3779  0849               	movf	(?_floor+1)^(0+128),w
 20839  377A  00DB               	movwf	(_exp$4275+1)^(0+128)
 20840  377B  084A               	movf	(?_floor+2)^(0+128),w
 20841  377C  00DC               	movwf	(_exp$4275+2)^(0+128)
 20842  377D  085A               	movf	_exp$4275^(0+128),w
 20843  377E  00BA               	movwf	___fttol@f1^(0+128)
 20844  377F  085B               	movf	(_exp$4275+1)^(0+128),w
 20845  3780  00BB               	movwf	(___fttol@f1+1)^(0+128)
 20846  3781  085C               	movf	(_exp$4275+2)^(0+128),w
 20847  3782  00BC               	movwf	(___fttol@f1+2)^(0+128)
 20848  3783  31C3  2352  31B6   	fcall	___fttol
 20849  3786  0141               	movlb	1	; select bank1
 20850  3787  083B               	movf	(?___fttol+1)^(0+128),w
 20851  3788  00DE               	movwf	(exp@exponent+1)^(0+128)
 20852  3789  083A               	movf	?___fttol^(0+128),w
 20853  378A  00DD               	movwf	exp@exponent^(0+128)
 20854  378B  085E               	movf	(exp@exponent+1)^(0+128),w
 20855  378C  0140               	movlb	0	; select bank0
 20856  378D  00B4               	movwf	___awtoft@c+1
 20857  378E  0141               	movlb	1	; select bank1
 20858  378F  085D               	movf	exp@exponent^(0+128),w
 20859  3790  0140               	movlb	0	; select bank0
 20860  3791  00B3               	movwf	___awtoft@c
 20861  3792  31D2  222F  31B6   	fcall	___awtoft
 20862  3795  0140               	movlb	0	; select bank0
 20863  3796  0833               	movf	?___awtoft,w
 20864  3797  0141               	movlb	1	; select bank1
 20865  3798  00D0               	movwf	___ftsub@f2^(0+128)
 20866  3799  0140               	movlb	0	; select bank0
 20867  379A  0834               	movf	?___awtoft+1,w
 20868  379B  0141               	movlb	1	; select bank1
 20869  379C  00D1               	movwf	(___ftsub@f2+1)^(0+128)
 20870  379D  0140               	movlb	0	; select bank0
 20871  379E  0835               	movf	?___awtoft+2,w
 20872  379F  0141               	movlb	1	; select bank1
 20873  37A0  00D2               	movwf	(___ftsub@f2+2)^(0+128)
 20874  37A1  0856               	movf	exp@x^(0+128),w
 20875  37A2  00D3               	movwf	___ftsub@f1^(0+128)
 20876  37A3  0857               	movf	(exp@x+1)^(0+128),w
 20877  37A4  00D4               	movwf	(___ftsub@f1+1)^(0+128)
 20878  37A5  0858               	movf	(exp@x+2)^(0+128),w
 20879  37A6  00D5               	movwf	(___ftsub@f1+2)^(0+128)
 20880  37A7  31D4  24B0  31B6   	fcall	___ftsub
 20881  37AA  0141               	movlb	1	; select bank1
 20882  37AB  0850               	movf	?___ftsub^(0+128),w
 20883  37AC  00D6               	movwf	exp@x^(0+128)
 20884  37AD  0851               	movf	(?___ftsub+1)^(0+128),w
 20885  37AE  00D7               	movwf	(exp@x+1)^(0+128)
 20886  37AF  0852               	movf	(?___ftsub+2)^(0+128),w
 20887  37B0  00D8               	movwf	(exp@x+2)^(0+128)
 20888  37B1  0856               	movf	exp@x^(0+128),w
 20889  37B2  00A0               	movwf	eval_poly@x^(0+128)
 20890  37B3  0857               	movf	(exp@x+1)^(0+128),w
 20891  37B4  00A1               	movwf	(eval_poly@x+1)^(0+128)
 20892  37B5  0858               	movf	(exp@x+2)^(0+128),w
 20893  37B6  00A2               	movwf	(eval_poly@x+2)^(0+128)
 20894  37B7  309A               	movlw	low (exp@coeff| (0+32768))
 20895  37B8  00A3               	movwf	eval_poly@d^(0+128)
 20896  37B9  30E0               	movlw	high (exp@coeff| (0+32768))
 20897  37BA  00A4               	movwf	(eval_poly@d^(0+128)+1)
 20898  37BB  3009               	movlw	9
 20899  37BC  00A5               	movwf	eval_poly@n^(0+128)
 20900  37BD  3000               	movlw	0
 20901  37BE  00A6               	movwf	(eval_poly@n^(0+128)+1)
 20902  37BF  31C1  214B  31B6   	fcall	_eval_poly
 20903  37C2  0141               	movlb	1	; select bank1
 20904  37C3  0820               	movf	?_eval_poly^(0+128),w
 20905  37C4  00AA               	movwf	ldexp@value^(0+128)
 20906  37C5  0821               	movf	(?_eval_poly+1)^(0+128),w
 20907  37C6  00AB               	movwf	(ldexp@value+1)^(0+128)
 20908  37C7  0822               	movf	(?_eval_poly+2)^(0+128),w
 20909  37C8  00AC               	movwf	(ldexp@value+2)^(0+128)
 20910  37C9  085E               	movf	(exp@exponent+1)^(0+128),w
 20911  37CA  00AE               	movwf	(ldexp@newexp+1)^(0+128)
 20912  37CB  085D               	movf	exp@exponent^(0+128),w
 20913  37CC  00AD               	movwf	ldexp@newexp^(0+128)
 20914  37CD  31C4  24F3  31B6   	fcall	_ldexp
 20915  37D0  0141               	movlb	1	; select bank1
 20916  37D1  082A               	movf	?_ldexp^(0+128),w
 20917  37D2  00D6               	movwf	exp@x^(0+128)
 20918  37D3  082B               	movf	(?_ldexp+1)^(0+128),w
 20919  37D4  00D7               	movwf	(exp@x+1)^(0+128)
 20920  37D5  082C               	movf	(?_ldexp+2)^(0+128),w
 20921  37D6  00D8               	movwf	(exp@x+2)^(0+128)
 20922  37D7  085F               	movf	exp@sign^(0+128),w
 20923  37D8  1903               	btfsc	3,2
 20924  37D9  0008               	return
 20925  37DA  0A56               	incf	exp@x^(0+128),w
 20926  37DB  307F               	movlw	127
 20927  37DC  1903               	skipnz
 20928  37DD  0657               	xorwf	(exp@x+1)^(0+128),w
 20929  37DE  307F               	movlw	127
 20930  37DF  1903               	skipnz
 20931  37E0  0658               	xorwf	(exp@x+2)^(0+128),w
 20932  37E1  1D03               	btfss	3,2
 20933  37E2  2FEA               	goto	l15982
 20934  37E3  3000               	movlw	0
 20935  37E4  00D6               	movwf	?_exp^(0+128)
 20936  37E5  3000               	movlw	0
 20937  37E6  00D7               	movwf	(?_exp+1)^(0+128)
 20938  37E7  3000               	movlw	0
 20939  37E8  00D8               	movwf	(?_exp+2)^(0+128)
 20940  37E9  0008               	return
 20941  37EA                     l15982:	
 20942  37EA  0856               	movf	exp@x^(0+128),w
 20943  37EB  00AA               	movwf	___ftdiv@f2^(0+128)
 20944  37EC  0857               	movf	(exp@x+1)^(0+128),w
 20945  37ED  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 20946  37EE  0858               	movf	(exp@x+2)^(0+128),w
 20947  37EF  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 20948  37F0  3000               	movlw	0
 20949  37F1  00AD               	movwf	___ftdiv@f1^(0+128)
 20950  37F2  3080               	movlw	128
 20951  37F3  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 20952  37F4  303F               	movlw	63
 20953  37F5  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 20954  37F6  31BA  2243         	fcall	___ftdiv
 20955  37F8  0141               	movlb	1	; select bank1
 20956  37F9  082A               	movf	?___ftdiv^(0+128),w
 20957  37FA  00D6               	movwf	?_exp^(0+128)
 20958  37FB  082B               	movf	(?___ftdiv+1)^(0+128),w
 20959  37FC  00D7               	movwf	(?_exp+1)^(0+128)
 20960  37FD  082C               	movf	(?___ftdiv+2)^(0+128),w
 20961  37FE  00D8               	movwf	(?_exp+2)^(0+128)
 20962  37FF  0008               	return
 20963  3800                     __end_of_exp:	
 20964                           
 20965                           	psect	text32
 20966  44F3                     __ptext32:	
 20967 ;; *************** function _ldexp *****************
 20968 ;; Defined at:
 20969 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 20970 ;; Parameters:    Size  Location     Type
 20971 ;;  value           3   10[BANK1 ] unsigned char 
 20972 ;;  newexp          2   13[BANK1 ] int 
 20973 ;; Auto vars:     Size  Location     Type
 20974 ;;		None
 20975 ;; Return value:  Size  Location     Type
 20976 ;;                  3   10[BANK1 ] int 
 20977 ;; Registers used:
 20978 ;;		wreg, status,2, status,0, pclath, cstack
 20979 ;; Tracked objects:
 20980 ;;		On entry : 0/0
 20981 ;;		On exit  : 0/0
 20982 ;;		Unchanged: 0/0
 20983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 20984 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20986 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20987 ;;      Totals:         0       2       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 20988 ;;Total ram usage:        7 bytes
 20989 ;; Hardware stack levels used:    1
 20990 ;; Hardware stack levels required when called:    4
 20991 ;; This function calls:
 20992 ;;		___ftge
 20993 ;; This function is called by:
 20994 ;;		_exp
 20995 ;; This function uses a non-reentrant model
 20996 ;;
 20997                           
 20998                           
 20999                           ;psect for function _ldexp
 21000  44F3                     _ldexp:	
 21001                           
 21002                           ;incstack = 0
 21003                           ; Regs used in _ldexp: [wreg+status,2+status,0+pclath+cstack]
 21004  44F3  0141               	movlb	1	; select bank1
 21005  44F4  082C               	movf	(ldexp@value+2)^(0+128),w
 21006  44F5  042B               	iorwf	(ldexp@value+1)^(0+128),w
 21007  44F6  042A               	iorwf	ldexp@value^(0+128),w
 21008  44F7  1D03               	skipz
 21009  44F8  2D00               	goto	l15476
 21010  44F9  3000               	movlw	0
 21011  44FA  00AA               	movwf	?_ldexp^(0+128)
 21012  44FB  3000               	movlw	0
 21013  44FC  00AB               	movwf	(?_ldexp+1)^(0+128)
 21014  44FD  3000               	movlw	0
 21015  44FE  00AC               	movwf	(?_ldexp+2)^(0+128)
 21016  44FF  0008               	return
 21017  4500                     l15476:	
 21018  4500  082C               	movf	(ldexp@value^(0+128)+2),w
 21019  4501  397F               	andlw	127
 21020  4502  0140               	movlb	0	; select bank0
 21021  4503  00D8               	movwf	??_ldexp
 21022  4504  01D9               	clrf	??_ldexp+1
 21023  4505  35D8               	lslf	??_ldexp,f
 21024  4506  0DD9               	rlf	??_ldexp+1,f
 21025  4507  0858               	movf	??_ldexp,w
 21026  4508  0141               	movlb	1	; select bank1
 21027  4509  07AD               	addwf	ldexp@newexp^(0+128),f
 21028  450A  0140               	movlb	0	; select bank0
 21029  450B  0859               	movf	??_ldexp+1,w
 21030  450C  0141               	movlb	1	; select bank1
 21031  450D  3DAE               	addwfc	(ldexp@newexp+1)^(0+128),f
 21032  450E  0D2B               	rlf	(ldexp@value^(0+128)+1),w
 21033  450F  0D2B               	rlf	(ldexp@value^(0+128)+1),w
 21034  4510  3901               	andlw	1
 21035  4511  0140               	movlb	0	; select bank0
 21036  4512  00D8               	movwf	??_ldexp
 21037  4513  01D9               	clrf	??_ldexp+1
 21038  4514  0858               	movf	??_ldexp,w
 21039  4515  0141               	movlb	1	; select bank1
 21040  4516  07AD               	addwf	ldexp@newexp^(0+128),f
 21041  4517  0140               	movlb	0	; select bank0
 21042  4518  0859               	movf	??_ldexp+1,w
 21043  4519  0141               	movlb	1	; select bank1
 21044  451A  3DAE               	addwfc	(ldexp@newexp+1)^(0+128),f
 21045  451B  1FAE               	btfss	(ldexp@newexp+1)^(0+128),7
 21046  451C  2D2A               	goto	l15486
 21047  451D  3022               	movlw	34
 21048  451E  0145               	movlb	5	; select bank5
 21049  451F  00CF               	movwf	_errno^(0+640)
 21050  4520  3000               	movlw	0
 21051  4521  00D0               	movwf	(_errno^(0+640)+1)
 21052  4522  3000               	movlw	0
 21053  4523  0141               	movlb	1	; select bank1
 21054  4524  00AA               	movwf	?_ldexp^(0+128)
 21055  4525  3000               	movlw	0
 21056  4526  00AB               	movwf	(?_ldexp+1)^(0+128)
 21057  4527  3000               	movlw	0
 21058  4528  00AC               	movwf	(?_ldexp+2)^(0+128)
 21059  4529  0008               	return
 21060  452A                     l15486:	
 21061  452A  082E               	movf	(ldexp@newexp+1)^(0+128),w
 21062  452B  3A80               	xorlw	128
 21063  452C  0140               	movlb	0	; select bank0
 21064  452D  00D8               	movwf	??_ldexp
 21065  452E  3081               	movlw	129
 21066  452F  0258               	subwf	??_ldexp,w
 21067  4530  1D03               	skipz
 21068  4531  2D35               	goto	u17045
 21069  4532  3000               	movlw	0
 21070  4533  0141               	movlb	1	; select bank1
 21071  4534  022D               	subwf	ldexp@newexp^(0+128),w
 21072  4535                     u17045:	
 21073  4535  1C03               	skipc
 21074  4536  2D63               	goto	l15502
 21075  4537  3022               	movlw	34
 21076  4538  0145               	movlb	5	; select bank5
 21077  4539  00CF               	movwf	_errno^(0+640)
 21078  453A  3000               	movlw	0
 21079  453B  00D0               	movwf	(_errno^(0+640)+1)
 21080  453C  0141               	movlb	1	; select bank1
 21081  453D  082A               	movf	ldexp@value^(0+128),w
 21082  453E  0140               	movlb	0	; select bank0
 21083  453F  00AB               	movwf	___ftge@ff1
 21084  4540  0141               	movlb	1	; select bank1
 21085  4541  082B               	movf	(ldexp@value+1)^(0+128),w
 21086  4542  0140               	movlb	0	; select bank0
 21087  4543  00AC               	movwf	___ftge@ff1+1
 21088  4544  0141               	movlb	1	; select bank1
 21089  4545  082C               	movf	(ldexp@value+2)^(0+128),w
 21090  4546  0140               	movlb	0	; select bank0
 21091  4547  00AD               	movwf	___ftge@ff1+2
 21092  4548  3000               	movlw	0
 21093  4549  00AE               	movwf	___ftge@ff2
 21094  454A  3000               	movlw	0
 21095  454B  00AF               	movwf	___ftge@ff2+1
 21096  454C  3000               	movlw	0
 21097  454D  00B0               	movwf	___ftge@ff2+2
 21098  454E  31D6  2680  31C4   	fcall	___ftge
 21099  4551  1803               	btfsc	3,0
 21100  4552  2D5B               	goto	l15498
 21101  4553  30FF               	movlw	255
 21102  4554  0141               	movlb	1	; select bank1
 21103  4555  00AA               	movwf	?_ldexp^(0+128)
 21104  4556  307F               	movlw	127
 21105  4557  00AB               	movwf	(?_ldexp+1)^(0+128)
 21106  4558  30FF               	movlw	255
 21107  4559  00AC               	movwf	(?_ldexp+2)^(0+128)
 21108  455A  0008               	return
 21109  455B                     l15498:	
 21110  455B  30FF               	movlw	255
 21111  455C  0141               	movlb	1	; select bank1
 21112  455D  00AA               	movwf	?_ldexp^(0+128)
 21113  455E  307F               	movlw	127
 21114  455F  00AB               	movwf	(?_ldexp+1)^(0+128)
 21115  4560  307F               	movlw	127
 21116  4561  00AC               	movwf	(?_ldexp+2)^(0+128)
 21117  4562  0008               	return
 21118  4563                     l15502:	
 21119  4563  0141               	movlb	1	; select bank1
 21120  4564  082E               	movf	(ldexp@newexp+1)^(0+128),w
 21121  4565  0140               	movlb	0	; select bank0
 21122  4566  00D9               	movwf	??_ldexp+1
 21123  4567  0141               	movlb	1	; select bank1
 21124  4568  082D               	movf	ldexp@newexp^(0+128),w
 21125  4569  0140               	movlb	0	; select bank0
 21126  456A  00D8               	movwf	??_ldexp
 21127  456B  0D59               	rlf	??_ldexp+1,w
 21128  456C  0CD9               	rrf	??_ldexp+1,f
 21129  456D  0CD8               	rrf	??_ldexp,f
 21130  456E  0141               	movlb	1	; select bank1
 21131  456F  082C               	movf	(ldexp@value^(0+128)+2),w
 21132  4570  0140               	movlb	0	; select bank0
 21133  4571  0658               	xorwf	??_ldexp,w
 21134  4572  3980               	andlw	-128
 21135  4573  0658               	xorwf	??_ldexp,w
 21136  4574  0141               	movlb	1	; select bank1
 21137  4575  00AC               	movwf	(ldexp@value^(0+128)+2)
 21138  4576  082D               	movf	ldexp@newexp^(0+128),w
 21139  4577  3901               	andlw	1
 21140  4578  0140               	movlb	0	; select bank0
 21141  4579  00D8               	movwf	??_ldexp
 21142  457A  0CD8               	rrf	??_ldexp,f
 21143  457B  0CD8               	rrf	??_ldexp,f
 21144  457C  0141               	movlb	1	; select bank1
 21145  457D  082B               	movf	(ldexp@value^(0+128)+1),w
 21146  457E  0140               	movlb	0	; select bank0
 21147  457F  0658               	xorwf	??_ldexp,w
 21148  4580  397F               	andlw	-129
 21149  4581  0658               	xorwf	??_ldexp,w
 21150  4582  0141               	movlb	1	; select bank1
 21151  4583  00AB               	movwf	(ldexp@value^(0+128)+1)
 21152  4584  0008               	return
 21153  4585                     __end_of_ldexp:	
 21154                           
 21155                           	psect	text33
 21156  522F                     __ptext33:	
 21157 ;; *************** function ___awtoft *****************
 21158 ;; Defined at:
 21159 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 21160 ;; Parameters:    Size  Location     Type
 21161 ;;  c               2   19[BANK0 ] int 
 21162 ;; Auto vars:     Size  Location     Type
 21163 ;;  sign            1   24[BANK0 ] unsigned char 
 21164 ;; Return value:  Size  Location     Type
 21165 ;;                  3   19[BANK0 ] float 
 21166 ;; Registers used:
 21167 ;;		wreg, status,2, status,0, pclath, cstack
 21168 ;; Tracked objects:
 21169 ;;		On entry : 0/0
 21170 ;;		On exit  : 0/0
 21171 ;;		Unchanged: 0/0
 21172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21173 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21175 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21176 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21177 ;;Total ram usage:        6 bytes
 21178 ;; Hardware stack levels used:    1
 21179 ;; Hardware stack levels required when called:    4
 21180 ;; This function calls:
 21181 ;;		___ftpack
 21182 ;; This function is called by:
 21183 ;;		_get_temp
 21184 ;;		_ini_ee_tempos
 21185 ;;		_exp
 21186 ;;		_log
 21187 ;; This function uses a non-reentrant model
 21188 ;;
 21189                           
 21190                           
 21191                           ;psect for function ___awtoft
 21192  522F                     ___awtoft:	
 21193                           
 21194                           ;incstack = 0
 21195                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
 21196  522F  0140               	movlb	0	; select bank0
 21197  5230  01B8               	clrf	___awtoft@sign
 21198  5231  1FB4               	btfss	___awtoft@c+1,7
 21199  5232  2A3A               	goto	l15380
 21200  5233  09B3               	comf	___awtoft@c,f
 21201  5234  09B4               	comf	___awtoft@c+1,f
 21202  5235  0AB3               	incf	___awtoft@c,f
 21203  5236  1903               	skipnz
 21204  5237  0AB4               	incf	___awtoft@c+1,f
 21205  5238  01B8               	clrf	___awtoft@sign
 21206  5239  0AB8               	incf	___awtoft@sign,f
 21207  523A                     l15380:	
 21208  523A  0833               	movf	___awtoft@c,w
 21209  523B  00AB               	movwf	___ftpack@arg
 21210  523C  0834               	movf	___awtoft@c+1,w
 21211  523D  00AC               	movwf	___ftpack@arg+1
 21212  523E  01AD               	clrf	___ftpack@arg+2
 21213  523F  308E               	movlw	142
 21214  5240  00B6               	movwf	??___awtoft
 21215  5241  0836               	movf	??___awtoft,w
 21216  5242  00AE               	movwf	___ftpack@exp
 21217  5243  0838               	movf	___awtoft@sign,w
 21218  5244  00B7               	movwf	??___awtoft+1
 21219  5245  0837               	movf	??___awtoft+1,w
 21220  5246  00AF               	movwf	___ftpack@sign
 21221  5247  31CD  25EF         	fcall	___ftpack
 21222  5249  0140               	movlb	0	; select bank0
 21223  524A  082B               	movf	?___ftpack,w
 21224  524B  00B3               	movwf	?___awtoft
 21225  524C  082C               	movf	?___ftpack+1,w
 21226  524D  00B4               	movwf	?___awtoft+1
 21227  524E  082D               	movf	?___ftpack+2,w
 21228  524F  00B5               	movwf	?___awtoft+2
 21229  5250  0008               	return
 21230  5251                     __end_of___awtoft:	
 21231                           
 21232                           	psect	text34
 21233  3801                     __ptext34:	
 21234 ;; *************** function ___lltoft *****************
 21235 ;; Defined at:
 21236 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 21237 ;; Parameters:    Size  Location     Type
 21238 ;;  c               4   19[BANK0 ] unsigned long 
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;  exp             1   24[BANK0 ] unsigned char 
 21241 ;; Return value:  Size  Location     Type
 21242 ;;                  3   19[BANK0 ] float 
 21243 ;; Registers used:
 21244 ;;		wreg, status,2, status,0, pclath, cstack
 21245 ;; Tracked objects:
 21246 ;;		On entry : 0/0
 21247 ;;		On exit  : 0/0
 21248 ;;		Unchanged: 0/0
 21249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21250 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21251 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21252 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21253 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21254 ;;Total ram usage:        6 bytes
 21255 ;; Hardware stack levels used:    1
 21256 ;; Hardware stack levels required when called:    4
 21257 ;; This function calls:
 21258 ;;		___ftpack
 21259 ;; This function is called by:
 21260 ;;		_pow
 21261 ;; This function uses a non-reentrant model
 21262 ;;
 21263                           
 21264                           
 21265                           ;psect for function ___lltoft
 21266  3801                     ___lltoft:	
 21267                           
 21268                           ;incstack = 0
 21269                           ; Regs used in ___lltoft: [wreg+status,2+status,0+pclath+cstack]
 21270  3801  308E               	movlw	142
 21271  3802  0140               	movlb	0	; select bank0
 21272  3803  00B7               	movwf	??___lltoft
 21273  3804  0837               	movf	??___lltoft,w
 21274  3805  00B8               	movwf	___lltoft@exp
 21275  3806                     l15908:	
 21276  3806  30FF               	movlw	255
 21277  3807  0536               	andwf	___lltoft@c+3,w
 21278  3808  1903               	btfsc	3,2
 21279  3809  2816               	goto	l15910
 21280  380A  3001               	movlw	1
 21281  380B                     u17825:	
 21282  380B  36B6               	lsrf	___lltoft@c+3,f
 21283  380C  0CB5               	rrf	___lltoft@c+2,f
 21284  380D  0CB4               	rrf	___lltoft@c+1,f
 21285  380E  0CB3               	rrf	___lltoft@c,f
 21286  380F  0B89               	decfsz	9,f
 21287  3810  280B               	goto	u17825
 21288  3811  3001               	movlw	1
 21289  3812  00B7               	movwf	??___lltoft
 21290  3813  0837               	movf	??___lltoft,w
 21291  3814  07B8               	addwf	___lltoft@exp,f
 21292  3815  2806               	goto	l15908
 21293  3816                     l15910:	
 21294  3816  0833               	movf	___lltoft@c,w
 21295  3817  00AB               	movwf	___ftpack@arg
 21296  3818  0834               	movf	___lltoft@c+1,w
 21297  3819  00AC               	movwf	___ftpack@arg+1
 21298  381A  0835               	movf	___lltoft@c+2,w
 21299  381B  00AD               	movwf	___ftpack@arg+2
 21300  381C  0838               	movf	___lltoft@exp,w
 21301  381D  00B7               	movwf	??___lltoft
 21302  381E  0837               	movf	??___lltoft,w
 21303  381F  00AE               	movwf	___ftpack@exp
 21304  3820  01AF               	clrf	___ftpack@sign
 21305  3821  31CD  25EF         	fcall	___ftpack
 21306  3823  0140               	movlb	0	; select bank0
 21307  3824  082B               	movf	?___ftpack,w
 21308  3825  00B3               	movwf	?___lltoft
 21309  3826  082C               	movf	?___ftpack+1,w
 21310  3827  00B4               	movwf	?___lltoft+1
 21311  3828  082D               	movf	?___ftpack+2,w
 21312  3829  00B5               	movwf	?___lltoft+2
 21313  382A  0008               	return
 21314  382B                     __end_of___lltoft:	
 21315                           
 21316                           	psect	text35
 21317  2001                     __ptext35:	
 21318 ;; *************** function _cos *****************
 21319 ;; Defined at:
 21320 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\cos.c"
 21321 ;; Parameters:    Size  Location     Type
 21322 ;;  f               3   67[BANK1 ] float 
 21323 ;; Auto vars:     Size  Location     Type
 21324 ;;		None
 21325 ;; Return value:  Size  Location     Type
 21326 ;;                  3   67[BANK1 ] float 
 21327 ;; Registers used:
 21328 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21329 ;; Tracked objects:
 21330 ;;		On entry : 0/0
 21331 ;;		On exit  : 0/0
 21332 ;;		Unchanged: 0/0
 21333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21334 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21335 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21337 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21338 ;;Total ram usage:        6 bytes
 21339 ;; Hardware stack levels used:    1
 21340 ;; Hardware stack levels required when called:    7
 21341 ;; This function calls:
 21342 ;;		___ftadd
 21343 ;;		___ftge
 21344 ;;		_sin
 21345 ;; This function is called by:
 21346 ;;		_ini_GERADOR
 21347 ;; This function uses a non-reentrant model
 21348 ;;
 21349                           
 21350                           
 21351                           ;psect for function _cos
 21352  2001                     _cos:	
 21353                           
 21354                           ;incstack = 0
 21355                           ; Regs used in _cos: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21356  2001  3010               	movlw	16
 21357  2002  0140               	movlb	0	; select bank0
 21358  2003  00AB               	movwf	___ftge@ff1
 21359  2004  3049               	movlw	73
 21360  2005  00AC               	movwf	___ftge@ff1+1
 21361  2006  3040               	movlw	64
 21362  2007  00AD               	movwf	___ftge@ff1+2
 21363  2008  0141               	movlb	1	; select bank1
 21364  2009  0863               	movf	cos@f^(0+128),w
 21365  200A  0140               	movlb	0	; select bank0
 21366  200B  00AE               	movwf	___ftge@ff2
 21367  200C  0141               	movlb	1	; select bank1
 21368  200D  0864               	movf	(cos@f+1)^(0+128),w
 21369  200E  0140               	movlb	0	; select bank0
 21370  200F  00AF               	movwf	___ftge@ff2+1
 21371  2010  0141               	movlb	1	; select bank1
 21372  2011  0865               	movf	(cos@f+2)^(0+128),w
 21373  2012  0140               	movlb	0	; select bank0
 21374  2013  00B0               	movwf	___ftge@ff2+2
 21375  2014  31D6  2680  31A0   	fcall	___ftge
 21376  2017  1803               	btfsc	3,0
 21377  2018  284B               	goto	l16780
 21378  2019  30CC               	movlw	204
 21379  201A  0140               	movlb	0	; select bank0
 21380  201B  00BB               	movwf	___ftadd@f1
 21381  201C  3096               	movlw	150
 21382  201D  00BC               	movwf	___ftadd@f1+1
 21383  201E  30C0               	movlw	192
 21384  201F  00BD               	movwf	___ftadd@f1+2
 21385  2020  0141               	movlb	1	; select bank1
 21386  2021  0863               	movf	cos@f^(0+128),w
 21387  2022  0140               	movlb	0	; select bank0
 21388  2023  00BE               	movwf	___ftadd@f2
 21389  2024  0141               	movlb	1	; select bank1
 21390  2025  0864               	movf	(cos@f+1)^(0+128),w
 21391  2026  0140               	movlb	0	; select bank0
 21392  2027  00BF               	movwf	___ftadd@f2+1
 21393  2028  0141               	movlb	1	; select bank1
 21394  2029  0865               	movf	(cos@f+2)^(0+128),w
 21395  202A  0140               	movlb	0	; select bank0
 21396  202B  00C0               	movwf	___ftadd@f2+2
 21397  202C  31B0  2027  31A0   	fcall	___ftadd
 21398  202F  0140               	movlb	0	; select bank0
 21399  2030  083B               	movf	?___ftadd,w
 21400  2031  0141               	movlb	1	; select bank1
 21401  2032  00E6               	movwf	_cos$4271^(0+128)
 21402  2033  0140               	movlb	0	; select bank0
 21403  2034  083C               	movf	?___ftadd+1,w
 21404  2035  0141               	movlb	1	; select bank1
 21405  2036  00E7               	movwf	(_cos$4271+1)^(0+128)
 21406  2037  0140               	movlb	0	; select bank0
 21407  2038  083D               	movf	?___ftadd+2,w
 21408  2039  0141               	movlb	1	; select bank1
 21409  203A  00E8               	movwf	(_cos$4271+2)^(0+128)
 21410  203B  0866               	movf	_cos$4271^(0+128),w
 21411  203C  00D6               	movwf	sin@f^(0+128)
 21412  203D  0867               	movf	(_cos$4271+1)^(0+128),w
 21413  203E  00D7               	movwf	(sin@f+1)^(0+128)
 21414  203F  0868               	movf	(_cos$4271+2)^(0+128),w
 21415  2040  00D8               	movwf	(sin@f+2)^(0+128)
 21416  2041  31AE  2653         	fcall	_sin
 21417  2043  0141               	movlb	1	; select bank1
 21418  2044  0856               	movf	?_sin^(0+128),w
 21419  2045  00E3               	movwf	?_cos^(0+128)
 21420  2046  0857               	movf	(?_sin+1)^(0+128),w
 21421  2047  00E4               	movwf	(?_cos+1)^(0+128)
 21422  2048  0858               	movf	(?_sin+2)^(0+128),w
 21423  2049  00E5               	movwf	(?_cos+2)^(0+128)
 21424  204A  0008               	return
 21425  204B                     l16780:	
 21426  204B  3010               	movlw	16
 21427  204C  0140               	movlb	0	; select bank0
 21428  204D  00BB               	movwf	___ftadd@f1
 21429  204E  30C9               	movlw	201
 21430  204F  00BC               	movwf	___ftadd@f1+1
 21431  2050  303F               	movlw	63
 21432  2051  00BD               	movwf	___ftadd@f1+2
 21433  2052  0141               	movlb	1	; select bank1
 21434  2053  0863               	movf	cos@f^(0+128),w
 21435  2054  0140               	movlb	0	; select bank0
 21436  2055  00BE               	movwf	___ftadd@f2
 21437  2056  0141               	movlb	1	; select bank1
 21438  2057  0864               	movf	(cos@f+1)^(0+128),w
 21439  2058  0140               	movlb	0	; select bank0
 21440  2059  00BF               	movwf	___ftadd@f2+1
 21441  205A  0141               	movlb	1	; select bank1
 21442  205B  0865               	movf	(cos@f+2)^(0+128),w
 21443  205C  0140               	movlb	0	; select bank0
 21444  205D  00C0               	movwf	___ftadd@f2+2
 21445  205E  31B0  2027  31A0   	fcall	___ftadd
 21446  2061  0140               	movlb	0	; select bank0
 21447  2062  083B               	movf	?___ftadd,w
 21448  2063  0141               	movlb	1	; select bank1
 21449  2064  00E6               	movwf	_cos$4271^(0+128)
 21450  2065  0140               	movlb	0	; select bank0
 21451  2066  083C               	movf	?___ftadd+1,w
 21452  2067  0141               	movlb	1	; select bank1
 21453  2068  00E7               	movwf	(_cos$4271+1)^(0+128)
 21454  2069  0140               	movlb	0	; select bank0
 21455  206A  083D               	movf	?___ftadd+2,w
 21456  206B  0141               	movlb	1	; select bank1
 21457  206C  00E8               	movwf	(_cos$4271+2)^(0+128)
 21458  206D  0866               	movf	_cos$4271^(0+128),w
 21459  206E  00D6               	movwf	sin@f^(0+128)
 21460  206F  0867               	movf	(_cos$4271+1)^(0+128),w
 21461  2070  00D7               	movwf	(sin@f+1)^(0+128)
 21462  2071  0868               	movf	(_cos$4271+2)^(0+128),w
 21463  2072  00D8               	movwf	(sin@f+2)^(0+128)
 21464  2073  31AE  2653         	fcall	_sin
 21465  2075  0141               	movlb	1	; select bank1
 21466  2076  0856               	movf	?_sin^(0+128),w
 21467  2077  00E3               	movwf	?_cos^(0+128)
 21468  2078  0857               	movf	(?_sin+1)^(0+128),w
 21469  2079  00E4               	movwf	(?_cos+1)^(0+128)
 21470  207A  0858               	movf	(?_sin+2)^(0+128),w
 21471  207B  00E5               	movwf	(?_cos+2)^(0+128)
 21472  207C  0008               	return
 21473  207D                     __end_of_cos:	
 21474                           
 21475                           	psect	text36
 21476  2E53                     __ptext36:	
 21477 ;; *************** function _sin *****************
 21478 ;; Defined at:
 21479 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 21480 ;; Parameters:    Size  Location     Type
 21481 ;;  f               3   54[BANK1 ] float 
 21482 ;; Auto vars:     Size  Location     Type
 21483 ;;  x2              3   63[BANK1 ] float 
 21484 ;;  y               3   57[BANK1 ] float 
 21485 ;;  sgn             1   66[BANK1 ] unsigned char 
 21486 ;; Return value:  Size  Location     Type
 21487 ;;                  3   54[BANK1 ] unsigned char 
 21488 ;; Registers used:
 21489 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21490 ;; Tracked objects:
 21491 ;;		On entry : 0/0
 21492 ;;		On exit  : 0/0
 21493 ;;		Unchanged: 0/0
 21494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21495 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21496 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21497 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21498 ;;      Totals:         0       1      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21499 ;;Total ram usage:       14 bytes
 21500 ;; Hardware stack levels used:    1
 21501 ;; Hardware stack levels required when called:    6
 21502 ;; This function calls:
 21503 ;;		___ftadd
 21504 ;;		___ftdiv
 21505 ;;		___ftge
 21506 ;;		___ftmul
 21507 ;;		___ftneg
 21508 ;;		___ftsub
 21509 ;;		_eval_poly
 21510 ;;		_floor
 21511 ;; This function is called by:
 21512 ;;		_cos
 21513 ;; This function uses a non-reentrant model
 21514 ;;
 21515                           
 21516                           
 21517                           ;psect for function _sin
 21518  2E53                     _sin:	
 21519                           
 21520                           ;incstack = 0
 21521                           ; Regs used in _sin: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 21522  2E53  0141               	movlb	1	; select bank1
 21523  2E54  01E2               	clrf	sin@sgn^(0+128)
 21524  2E55  0856               	movf	sin@f^(0+128),w
 21525  2E56  0140               	movlb	0	; select bank0
 21526  2E57  00AB               	movwf	___ftge@ff1
 21527  2E58  0141               	movlb	1	; select bank1
 21528  2E59  0857               	movf	(sin@f+1)^(0+128),w
 21529  2E5A  0140               	movlb	0	; select bank0
 21530  2E5B  00AC               	movwf	___ftge@ff1+1
 21531  2E5C  0141               	movlb	1	; select bank1
 21532  2E5D  0858               	movf	(sin@f+2)^(0+128),w
 21533  2E5E  0140               	movlb	0	; select bank0
 21534  2E5F  00AD               	movwf	___ftge@ff1+2
 21535  2E60  3000               	movlw	0
 21536  2E61  00AE               	movwf	___ftge@ff2
 21537  2E62  3000               	movlw	0
 21538  2E63  00AF               	movwf	___ftge@ff2+1
 21539  2E64  3000               	movlw	0
 21540  2E65  00B0               	movwf	___ftge@ff2+2
 21541  2E66  31D6  2680  31AE   	fcall	___ftge
 21542  2E69  1803               	btfsc	3,0
 21543  2E6A  2E7E               	goto	l15878
 21544  2E6B  0141               	movlb	1	; select bank1
 21545  2E6C  0856               	movf	sin@f^(0+128),w
 21546  2E6D  00D0               	movwf	___ftneg@f1^(0+128)
 21547  2E6E  0857               	movf	(sin@f+1)^(0+128),w
 21548  2E6F  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 21549  2E70  0858               	movf	(sin@f+2)^(0+128),w
 21550  2E71  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 21551  2E72  31E2  2209  31AE   	fcall	___ftneg
 21552  2E75  0141               	movlb	1	; select bank1
 21553  2E76  0850               	movf	?___ftneg^(0+128),w
 21554  2E77  00D6               	movwf	sin@f^(0+128)
 21555  2E78  0851               	movf	(?___ftneg+1)^(0+128),w
 21556  2E79  00D7               	movwf	(sin@f+1)^(0+128)
 21557  2E7A  0852               	movf	(?___ftneg+2)^(0+128),w
 21558  2E7B  00D8               	movwf	(sin@f+2)^(0+128)
 21559  2E7C  01E2               	clrf	sin@sgn^(0+128)
 21560  2E7D  0AE2               	incf	sin@sgn^(0+128),f
 21561  2E7E                     l15878:	
 21562  2E7E  30FA               	movlw	250
 21563  2E7F  0140               	movlb	0	; select bank0
 21564  2E80  00C8               	movwf	___ftmul@f1
 21565  2E81  3022               	movlw	34
 21566  2E82  00C9               	movwf	___ftmul@f1+1
 21567  2E83  303E               	movlw	62
 21568  2E84  00CA               	movwf	___ftmul@f1+2
 21569  2E85  0141               	movlb	1	; select bank1
 21570  2E86  0856               	movf	sin@f^(0+128),w
 21571  2E87  0140               	movlb	0	; select bank0
 21572  2E88  00CB               	movwf	___ftmul@f2
 21573  2E89  0141               	movlb	1	; select bank1
 21574  2E8A  0857               	movf	(sin@f+1)^(0+128),w
 21575  2E8B  0140               	movlb	0	; select bank0
 21576  2E8C  00CC               	movwf	___ftmul@f2+1
 21577  2E8D  0141               	movlb	1	; select bank1
 21578  2E8E  0858               	movf	(sin@f+2)^(0+128),w
 21579  2E8F  0140               	movlb	0	; select bank0
 21580  2E90  00CD               	movwf	___ftmul@f2+2
 21581  2E91  31B9  218F  31AE   	fcall	___ftmul
 21582  2E94  0140               	movlb	0	; select bank0
 21583  2E95  0848               	movf	?___ftmul,w
 21584  2E96  0141               	movlb	1	; select bank1
 21585  2E97  00D6               	movwf	sin@f^(0+128)
 21586  2E98  0140               	movlb	0	; select bank0
 21587  2E99  0849               	movf	?___ftmul+1,w
 21588  2E9A  0141               	movlb	1	; select bank1
 21589  2E9B  00D7               	movwf	(sin@f+1)^(0+128)
 21590  2E9C  0140               	movlb	0	; select bank0
 21591  2E9D  084A               	movf	?___ftmul+2,w
 21592  2E9E  0141               	movlb	1	; select bank1
 21593  2E9F  00D8               	movwf	(sin@f+2)^(0+128)
 21594  2EA0  0856               	movf	sin@f^(0+128),w
 21595  2EA1  00C8               	movwf	floor@x^(0+128)
 21596  2EA2  0857               	movf	(sin@f+1)^(0+128),w
 21597  2EA3  00C9               	movwf	(floor@x+1)^(0+128)
 21598  2EA4  0858               	movf	(sin@f+2)^(0+128),w
 21599  2EA5  00CA               	movwf	(floor@x+2)^(0+128)
 21600  2EA6  31B8  202B  31AE   	fcall	_floor
 21601  2EA9  0141               	movlb	1	; select bank1
 21602  2EAA  0848               	movf	?_floor^(0+128),w
 21603  2EAB  00D0               	movwf	___ftsub@f2^(0+128)
 21604  2EAC  0849               	movf	(?_floor+1)^(0+128),w
 21605  2EAD  00D1               	movwf	(___ftsub@f2+1)^(0+128)
 21606  2EAE  084A               	movf	(?_floor+2)^(0+128),w
 21607  2EAF  00D2               	movwf	(___ftsub@f2+2)^(0+128)
 21608  2EB0  0856               	movf	sin@f^(0+128),w
 21609  2EB1  00D3               	movwf	___ftsub@f1^(0+128)
 21610  2EB2  0857               	movf	(sin@f+1)^(0+128),w
 21611  2EB3  00D4               	movwf	(___ftsub@f1+1)^(0+128)
 21612  2EB4  0858               	movf	(sin@f+2)^(0+128),w
 21613  2EB5  00D5               	movwf	(___ftsub@f1+2)^(0+128)
 21614  2EB6  31D4  24B0  31AE   	fcall	___ftsub
 21615  2EB9  0141               	movlb	1	; select bank1
 21616  2EBA  0850               	movf	?___ftsub^(0+128),w
 21617  2EBB  00D6               	movwf	sin@f^(0+128)
 21618  2EBC  0851               	movf	(?___ftsub+1)^(0+128),w
 21619  2EBD  00D7               	movwf	(sin@f+1)^(0+128)
 21620  2EBE  0852               	movf	(?___ftsub+2)^(0+128),w
 21621  2EBF  00D8               	movwf	(sin@f+2)^(0+128)
 21622  2EC0  3000               	movlw	0
 21623  2EC1  0140               	movlb	0	; select bank0
 21624  2EC2  00C8               	movwf	___ftmul@f1
 21625  2EC3  3080               	movlw	128
 21626  2EC4  00C9               	movwf	___ftmul@f1+1
 21627  2EC5  3040               	movlw	64
 21628  2EC6  00CA               	movwf	___ftmul@f1+2
 21629  2EC7  0141               	movlb	1	; select bank1
 21630  2EC8  0856               	movf	sin@f^(0+128),w
 21631  2EC9  0140               	movlb	0	; select bank0
 21632  2ECA  00CB               	movwf	___ftmul@f2
 21633  2ECB  0141               	movlb	1	; select bank1
 21634  2ECC  0857               	movf	(sin@f+1)^(0+128),w
 21635  2ECD  0140               	movlb	0	; select bank0
 21636  2ECE  00CC               	movwf	___ftmul@f2+1
 21637  2ECF  0141               	movlb	1	; select bank1
 21638  2ED0  0858               	movf	(sin@f+2)^(0+128),w
 21639  2ED1  0140               	movlb	0	; select bank0
 21640  2ED2  00CD               	movwf	___ftmul@f2+2
 21641  2ED3  31B9  218F  31AE   	fcall	___ftmul
 21642  2ED6  0140               	movlb	0	; select bank0
 21643  2ED7  0848               	movf	?___ftmul,w
 21644  2ED8  0141               	movlb	1	; select bank1
 21645  2ED9  00D6               	movwf	sin@f^(0+128)
 21646  2EDA  0140               	movlb	0	; select bank0
 21647  2EDB  0849               	movf	?___ftmul+1,w
 21648  2EDC  0141               	movlb	1	; select bank1
 21649  2EDD  00D7               	movwf	(sin@f+1)^(0+128)
 21650  2EDE  0140               	movlb	0	; select bank0
 21651  2EDF  084A               	movf	?___ftmul+2,w
 21652  2EE0  0141               	movlb	1	; select bank1
 21653  2EE1  00D8               	movwf	(sin@f+2)^(0+128)
 21654  2EE2  3000               	movlw	0
 21655  2EE3  0140               	movlb	0	; select bank0
 21656  2EE4  00AB               	movwf	___ftge@ff1
 21657  2EE5  3000               	movlw	0
 21658  2EE6  00AC               	movwf	___ftge@ff1+1
 21659  2EE7  3040               	movlw	64
 21660  2EE8  00AD               	movwf	___ftge@ff1+2
 21661  2EE9  0141               	movlb	1	; select bank1
 21662  2EEA  0856               	movf	sin@f^(0+128),w
 21663  2EEB  0140               	movlb	0	; select bank0
 21664  2EEC  00AE               	movwf	___ftge@ff2
 21665  2EED  0141               	movlb	1	; select bank1
 21666  2EEE  0857               	movf	(sin@f+1)^(0+128),w
 21667  2EEF  0140               	movlb	0	; select bank0
 21668  2EF0  00AF               	movwf	___ftge@ff2+1
 21669  2EF1  0141               	movlb	1	; select bank1
 21670  2EF2  0858               	movf	(sin@f+2)^(0+128),w
 21671  2EF3  0140               	movlb	0	; select bank0
 21672  2EF4  00B0               	movwf	___ftge@ff2+2
 21673  2EF5  31D6  2680  31AE   	fcall	___ftge
 21674  2EF8  1803               	btfsc	3,0
 21675  2EF9  2F1C               	goto	l15890
 21676  2EFA  3000               	movlw	0
 21677  2EFB  0141               	movlb	1	; select bank1
 21678  2EFC  00D0               	movwf	___ftsub@f2^(0+128)
 21679  2EFD  3000               	movlw	0
 21680  2EFE  00D1               	movwf	(___ftsub@f2+1)^(0+128)
 21681  2EFF  3040               	movlw	64
 21682  2F00  00D2               	movwf	(___ftsub@f2+2)^(0+128)
 21683  2F01  0856               	movf	sin@f^(0+128),w
 21684  2F02  00D3               	movwf	___ftsub@f1^(0+128)
 21685  2F03  0857               	movf	(sin@f+1)^(0+128),w
 21686  2F04  00D4               	movwf	(___ftsub@f1+1)^(0+128)
 21687  2F05  0858               	movf	(sin@f+2)^(0+128),w
 21688  2F06  00D5               	movwf	(___ftsub@f1+2)^(0+128)
 21689  2F07  31D4  24B0  31AE   	fcall	___ftsub
 21690  2F0A  0141               	movlb	1	; select bank1
 21691  2F0B  0850               	movf	?___ftsub^(0+128),w
 21692  2F0C  00D6               	movwf	sin@f^(0+128)
 21693  2F0D  0851               	movf	(?___ftsub+1)^(0+128),w
 21694  2F0E  00D7               	movwf	(sin@f+1)^(0+128)
 21695  2F0F  0852               	movf	(?___ftsub+2)^(0+128),w
 21696  2F10  00D8               	movwf	(sin@f+2)^(0+128)
 21697  2F11  0862               	movf	sin@sgn^(0+128),w
 21698  2F12  1D03               	btfss	3,2
 21699  2F13  2F16               	goto	u17780
 21700  2F14  3001               	movlw	1
 21701  2F15  2F17               	goto	u17790
 21702  2F16                     u17780:	
 21703  2F16  3000               	movlw	0
 21704  2F17                     u17790:	
 21705  2F17  0140               	movlb	0	; select bank0
 21706  2F18  00D9               	movwf	??_sin
 21707  2F19  0859               	movf	??_sin,w
 21708  2F1A  0141               	movlb	1	; select bank1
 21709  2F1B  00E2               	movwf	sin@sgn^(0+128)
 21710  2F1C                     l15890:	
 21711  2F1C  3000               	movlw	0
 21712  2F1D  0140               	movlb	0	; select bank0
 21713  2F1E  00AB               	movwf	___ftge@ff1
 21714  2F1F  3080               	movlw	128
 21715  2F20  00AC               	movwf	___ftge@ff1+1
 21716  2F21  303F               	movlw	63
 21717  2F22  00AD               	movwf	___ftge@ff1+2
 21718  2F23  0141               	movlb	1	; select bank1
 21719  2F24  0856               	movf	sin@f^(0+128),w
 21720  2F25  0140               	movlb	0	; select bank0
 21721  2F26  00AE               	movwf	___ftge@ff2
 21722  2F27  0141               	movlb	1	; select bank1
 21723  2F28  0857               	movf	(sin@f+1)^(0+128),w
 21724  2F29  0140               	movlb	0	; select bank0
 21725  2F2A  00AF               	movwf	___ftge@ff2+1
 21726  2F2B  0141               	movlb	1	; select bank1
 21727  2F2C  0858               	movf	(sin@f+2)^(0+128),w
 21728  2F2D  0140               	movlb	0	; select bank0
 21729  2F2E  00B0               	movwf	___ftge@ff2+2
 21730  2F2F  31D6  2680  31AE   	fcall	___ftge
 21731  2F32  1803               	btfsc	3,0
 21732  2F33  2F60               	goto	l3261
 21733  2F34  3000               	movlw	0
 21734  2F35  0140               	movlb	0	; select bank0
 21735  2F36  00BB               	movwf	___ftadd@f1
 21736  2F37  3000               	movlw	0
 21737  2F38  00BC               	movwf	___ftadd@f1+1
 21738  2F39  3040               	movlw	64
 21739  2F3A  00BD               	movwf	___ftadd@f1+2
 21740  2F3B  0141               	movlb	1	; select bank1
 21741  2F3C  0856               	movf	sin@f^(0+128),w
 21742  2F3D  00D0               	movwf	___ftneg@f1^(0+128)
 21743  2F3E  0857               	movf	(sin@f+1)^(0+128),w
 21744  2F3F  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 21745  2F40  0858               	movf	(sin@f+2)^(0+128),w
 21746  2F41  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 21747  2F42  31E2  2209  31AE   	fcall	___ftneg
 21748  2F45  0141               	movlb	1	; select bank1
 21749  2F46  0850               	movf	?___ftneg^(0+128),w
 21750  2F47  0140               	movlb	0	; select bank0
 21751  2F48  00BE               	movwf	___ftadd@f2
 21752  2F49  0141               	movlb	1	; select bank1
 21753  2F4A  0851               	movf	(?___ftneg+1)^(0+128),w
 21754  2F4B  0140               	movlb	0	; select bank0
 21755  2F4C  00BF               	movwf	___ftadd@f2+1
 21756  2F4D  0141               	movlb	1	; select bank1
 21757  2F4E  0852               	movf	(?___ftneg+2)^(0+128),w
 21758  2F4F  0140               	movlb	0	; select bank0
 21759  2F50  00C0               	movwf	___ftadd@f2+2
 21760  2F51  31B0  2027  31AE   	fcall	___ftadd
 21761  2F54  0140               	movlb	0	; select bank0
 21762  2F55  083B               	movf	?___ftadd,w
 21763  2F56  0141               	movlb	1	; select bank1
 21764  2F57  00D6               	movwf	sin@f^(0+128)
 21765  2F58  0140               	movlb	0	; select bank0
 21766  2F59  083C               	movf	?___ftadd+1,w
 21767  2F5A  0141               	movlb	1	; select bank1
 21768  2F5B  00D7               	movwf	(sin@f+1)^(0+128)
 21769  2F5C  0140               	movlb	0	; select bank0
 21770  2F5D  083D               	movf	?___ftadd+2,w
 21771  2F5E  0141               	movlb	1	; select bank1
 21772  2F5F  00D8               	movwf	(sin@f+2)^(0+128)
 21773  2F60                     l3261:	
 21774  2F60  0141               	movlb	1	; select bank1
 21775  2F61  0856               	movf	sin@f^(0+128),w
 21776  2F62  0140               	movlb	0	; select bank0
 21777  2F63  00C8               	movwf	___ftmul@f1
 21778  2F64  0141               	movlb	1	; select bank1
 21779  2F65  0857               	movf	(sin@f+1)^(0+128),w
 21780  2F66  0140               	movlb	0	; select bank0
 21781  2F67  00C9               	movwf	___ftmul@f1+1
 21782  2F68  0141               	movlb	1	; select bank1
 21783  2F69  0858               	movf	(sin@f+2)^(0+128),w
 21784  2F6A  0140               	movlb	0	; select bank0
 21785  2F6B  00CA               	movwf	___ftmul@f1+2
 21786  2F6C  0141               	movlb	1	; select bank1
 21787  2F6D  0856               	movf	sin@f^(0+128),w
 21788  2F6E  0140               	movlb	0	; select bank0
 21789  2F6F  00CB               	movwf	___ftmul@f2
 21790  2F70  0141               	movlb	1	; select bank1
 21791  2F71  0857               	movf	(sin@f+1)^(0+128),w
 21792  2F72  0140               	movlb	0	; select bank0
 21793  2F73  00CC               	movwf	___ftmul@f2+1
 21794  2F74  0141               	movlb	1	; select bank1
 21795  2F75  0858               	movf	(sin@f+2)^(0+128),w
 21796  2F76  0140               	movlb	0	; select bank0
 21797  2F77  00CD               	movwf	___ftmul@f2+2
 21798  2F78  31B9  218F  31AE   	fcall	___ftmul
 21799  2F7B  0140               	movlb	0	; select bank0
 21800  2F7C  0848               	movf	?___ftmul,w
 21801  2F7D  0141               	movlb	1	; select bank1
 21802  2F7E  00DF               	movwf	sin@x2^(0+128)
 21803  2F7F  0140               	movlb	0	; select bank0
 21804  2F80  0849               	movf	?___ftmul+1,w
 21805  2F81  0141               	movlb	1	; select bank1
 21806  2F82  00E0               	movwf	(sin@x2+1)^(0+128)
 21807  2F83  0140               	movlb	0	; select bank0
 21808  2F84  084A               	movf	?___ftmul+2,w
 21809  2F85  0141               	movlb	1	; select bank1
 21810  2F86  00E1               	movwf	(sin@x2+2)^(0+128)
 21811  2F87  085F               	movf	sin@x2^(0+128),w
 21812  2F88  00A0               	movwf	eval_poly@x^(0+128)
 21813  2F89  0860               	movf	(sin@x2+1)^(0+128),w
 21814  2F8A  00A1               	movwf	(eval_poly@x+1)^(0+128)
 21815  2F8B  0861               	movf	(sin@x2+2)^(0+128),w
 21816  2F8C  00A2               	movwf	(eval_poly@x+2)^(0+128)
 21817  2F8D  3093               	movlw	low (sin@coeff_b| (0+32768))
 21818  2F8E  00A3               	movwf	eval_poly@d^(0+128)
 21819  2F8F  30E8               	movlw	high (sin@coeff_b| (0+32768))
 21820  2F90  00A4               	movwf	(eval_poly@d^(0+128)+1)
 21821  2F91  3003               	movlw	3
 21822  2F92  00A5               	movwf	eval_poly@n^(0+128)
 21823  2F93  3000               	movlw	0
 21824  2F94  00A6               	movwf	(eval_poly@n^(0+128)+1)
 21825  2F95  31C1  214B  31AE   	fcall	_eval_poly
 21826  2F98  0141               	movlb	1	; select bank1
 21827  2F99  0820               	movf	?_eval_poly^(0+128),w
 21828  2F9A  00D9               	movwf	sin@y^(0+128)
 21829  2F9B  0821               	movf	(?_eval_poly+1)^(0+128),w
 21830  2F9C  00DA               	movwf	(sin@y+1)^(0+128)
 21831  2F9D  0822               	movf	(?_eval_poly+2)^(0+128),w
 21832  2F9E  00DB               	movwf	(sin@y+2)^(0+128)
 21833  2F9F  3004               	movlw	4
 21834  2FA0  00A5               	movwf	eval_poly@n^(0+128)
 21835  2FA1  3000               	movlw	0
 21836  2FA2  00A6               	movwf	(eval_poly@n^(0+128)+1)
 21837  2FA3  3023               	movlw	low (sin@coeff_a| (0+32768))
 21838  2FA4  00A3               	movwf	eval_poly@d^(0+128)
 21839  2FA5  30E8               	movlw	high (sin@coeff_a| (0+32768))
 21840  2FA6  00A4               	movwf	(eval_poly@d^(0+128)+1)
 21841  2FA7  085F               	movf	sin@x2^(0+128),w
 21842  2FA8  00A0               	movwf	eval_poly@x^(0+128)
 21843  2FA9  0860               	movf	(sin@x2+1)^(0+128),w
 21844  2FAA  00A1               	movwf	(eval_poly@x+1)^(0+128)
 21845  2FAB  0861               	movf	(sin@x2+2)^(0+128),w
 21846  2FAC  00A2               	movwf	(eval_poly@x+2)^(0+128)
 21847  2FAD  31C1  214B  31AE   	fcall	_eval_poly
 21848  2FB0  0141               	movlb	1	; select bank1
 21849  2FB1  0820               	movf	?_eval_poly^(0+128),w
 21850  2FB2  00AD               	movwf	___ftdiv@f1^(0+128)
 21851  2FB3  0821               	movf	(?_eval_poly+1)^(0+128),w
 21852  2FB4  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 21853  2FB5  0822               	movf	(?_eval_poly+2)^(0+128),w
 21854  2FB6  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 21855  2FB7  0859               	movf	sin@y^(0+128),w
 21856  2FB8  00AA               	movwf	___ftdiv@f2^(0+128)
 21857  2FB9  085A               	movf	(sin@y+1)^(0+128),w
 21858  2FBA  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 21859  2FBB  085B               	movf	(sin@y+2)^(0+128),w
 21860  2FBC  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 21861  2FBD  31BA  2243  31AE   	fcall	___ftdiv
 21862  2FC0  0141               	movlb	1	; select bank1
 21863  2FC1  082A               	movf	?___ftdiv^(0+128),w
 21864  2FC2  00DC               	movwf	_sin$4274^(0+128)
 21865  2FC3  082B               	movf	(?___ftdiv+1)^(0+128),w
 21866  2FC4  00DD               	movwf	(_sin$4274+1)^(0+128)
 21867  2FC5  082C               	movf	(?___ftdiv+2)^(0+128),w
 21868  2FC6  00DE               	movwf	(_sin$4274+2)^(0+128)
 21869  2FC7  085C               	movf	_sin$4274^(0+128),w
 21870  2FC8  0140               	movlb	0	; select bank0
 21871  2FC9  00C8               	movwf	___ftmul@f1
 21872  2FCA  0141               	movlb	1	; select bank1
 21873  2FCB  085D               	movf	(_sin$4274+1)^(0+128),w
 21874  2FCC  0140               	movlb	0	; select bank0
 21875  2FCD  00C9               	movwf	___ftmul@f1+1
 21876  2FCE  0141               	movlb	1	; select bank1
 21877  2FCF  085E               	movf	(_sin$4274+2)^(0+128),w
 21878  2FD0  0140               	movlb	0	; select bank0
 21879  2FD1  00CA               	movwf	___ftmul@f1+2
 21880  2FD2  0141               	movlb	1	; select bank1
 21881  2FD3  0856               	movf	sin@f^(0+128),w
 21882  2FD4  0140               	movlb	0	; select bank0
 21883  2FD5  00CB               	movwf	___ftmul@f2
 21884  2FD6  0141               	movlb	1	; select bank1
 21885  2FD7  0857               	movf	(sin@f+1)^(0+128),w
 21886  2FD8  0140               	movlb	0	; select bank0
 21887  2FD9  00CC               	movwf	___ftmul@f2+1
 21888  2FDA  0141               	movlb	1	; select bank1
 21889  2FDB  0858               	movf	(sin@f+2)^(0+128),w
 21890  2FDC  0140               	movlb	0	; select bank0
 21891  2FDD  00CD               	movwf	___ftmul@f2+2
 21892  2FDE  31B9  218F  31AE   	fcall	___ftmul
 21893  2FE1  0140               	movlb	0	; select bank0
 21894  2FE2  0848               	movf	?___ftmul,w
 21895  2FE3  0141               	movlb	1	; select bank1
 21896  2FE4  00D6               	movwf	sin@f^(0+128)
 21897  2FE5  0140               	movlb	0	; select bank0
 21898  2FE6  0849               	movf	?___ftmul+1,w
 21899  2FE7  0141               	movlb	1	; select bank1
 21900  2FE8  00D7               	movwf	(sin@f+1)^(0+128)
 21901  2FE9  0140               	movlb	0	; select bank0
 21902  2FEA  084A               	movf	?___ftmul+2,w
 21903  2FEB  0141               	movlb	1	; select bank1
 21904  2FEC  00D8               	movwf	(sin@f+2)^(0+128)
 21905  2FED  0862               	movf	sin@sgn^(0+128),w
 21906  2FEE  1903               	btfsc	3,2
 21907  2FEF  0008               	return
 21908  2FF0  0856               	movf	sin@f^(0+128),w
 21909  2FF1  00D0               	movwf	___ftneg@f1^(0+128)
 21910  2FF2  0857               	movf	(sin@f+1)^(0+128),w
 21911  2FF3  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 21912  2FF4  0858               	movf	(sin@f+2)^(0+128),w
 21913  2FF5  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 21914  2FF6  31E2  2209         	fcall	___ftneg
 21915  2FF8  0141               	movlb	1	; select bank1
 21916  2FF9  0850               	movf	?___ftneg^(0+128),w
 21917  2FFA  00D6               	movwf	?_sin^(0+128)
 21918  2FFB  0851               	movf	(?___ftneg+1)^(0+128),w
 21919  2FFC  00D7               	movwf	(?_sin+1)^(0+128)
 21920  2FFD  0852               	movf	(?___ftneg+2)^(0+128),w
 21921  2FFE  00D8               	movwf	(?_sin+2)^(0+128)
 21922  2FFF  0008               	return
 21923  3000                     __end_of_sin:	
 21924                           
 21925                           	psect	text37
 21926  382B                     __ptext37:	
 21927 ;; *************** function _floor *****************
 21928 ;; Defined at:
 21929 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 21930 ;; Parameters:    Size  Location     Type
 21931 ;;  x               3   40[BANK1 ] unsigned char 
 21932 ;; Auto vars:     Size  Location     Type
 21933 ;;  i               3   43[BANK1 ] unsigned char 
 21934 ;;  expon           2   46[BANK1 ] int 
 21935 ;; Return value:  Size  Location     Type
 21936 ;;                  3   40[BANK1 ] int 
 21937 ;; Registers used:
 21938 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 21939 ;; Tracked objects:
 21940 ;;		On entry : 0/0
 21941 ;;		On exit  : 0/0
 21942 ;;		Unchanged: 0/0
 21943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 21944 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21945 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21946 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21947 ;;      Totals:         0       1       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 21948 ;;Total ram usage:        9 bytes
 21949 ;; Hardware stack levels used:    1
 21950 ;; Hardware stack levels required when called:    5
 21951 ;; This function calls:
 21952 ;;		___altoft
 21953 ;;		___ftadd
 21954 ;;		___ftge
 21955 ;;		___fttol
 21956 ;;		_frexp
 21957 ;; This function is called by:
 21958 ;;		_sin
 21959 ;;		_exp
 21960 ;; This function uses a non-reentrant model
 21961 ;;
 21962                           
 21963                           
 21964                           ;psect for function _floor
 21965  382B                     _floor:	
 21966                           
 21967                           ;incstack = 0
 21968                           ; Regs used in _floor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 21969  382B  0141               	movlb	1	; select bank1
 21970  382C  0848               	movf	floor@x^(0+128),w
 21971  382D  0140               	movlb	0	; select bank0
 21972  382E  00AB               	movwf	frexp@value
 21973  382F  0141               	movlb	1	; select bank1
 21974  3830  0849               	movf	(floor@x+1)^(0+128),w
 21975  3831  0140               	movlb	0	; select bank0
 21976  3832  00AC               	movwf	frexp@value+1
 21977  3833  0141               	movlb	1	; select bank1
 21978  3834  084A               	movf	(floor@x+2)^(0+128),w
 21979  3835  0140               	movlb	0	; select bank0
 21980  3836  00AD               	movwf	frexp@value+2
 21981  3837  30CE               	movlw	(low (floor@expon| 0))& (0+255)
 21982  3838  00D8               	movwf	??_floor
 21983  3839  0858               	movf	??_floor,w
 21984  383A  00AE               	movwf	frexp@eptr
 21985  383B  31D6  26BC  31B8   	fcall	_frexp
 21986  383E  0141               	movlb	1	; select bank1
 21987  383F  1FCF               	btfss	(floor@expon+1)^(0+128),7
 21988  3840  2867               	goto	l15456
 21989  3841  0848               	movf	floor@x^(0+128),w
 21990  3842  0140               	movlb	0	; select bank0
 21991  3843  00AB               	movwf	___ftge@ff1
 21992  3844  0141               	movlb	1	; select bank1
 21993  3845  0849               	movf	(floor@x+1)^(0+128),w
 21994  3846  0140               	movlb	0	; select bank0
 21995  3847  00AC               	movwf	___ftge@ff1+1
 21996  3848  0141               	movlb	1	; select bank1
 21997  3849  084A               	movf	(floor@x+2)^(0+128),w
 21998  384A  0140               	movlb	0	; select bank0
 21999  384B  00AD               	movwf	___ftge@ff1+2
 22000  384C  3000               	movlw	0
 22001  384D  00AE               	movwf	___ftge@ff2
 22002  384E  3000               	movlw	0
 22003  384F  00AF               	movwf	___ftge@ff2+1
 22004  3850  3000               	movlw	0
 22005  3851  00B0               	movwf	___ftge@ff2+2
 22006  3852  31D6  2680  31B8   	fcall	___ftge
 22007  3855  1803               	btfsc	3,0
 22008  3856  285F               	goto	l15452
 22009  3857  3000               	movlw	0
 22010  3858  0141               	movlb	1	; select bank1
 22011  3859  00C8               	movwf	?_floor^(0+128)
 22012  385A  3080               	movlw	128
 22013  385B  00C9               	movwf	(?_floor+1)^(0+128)
 22014  385C  30BF               	movlw	191
 22015  385D  00CA               	movwf	(?_floor+2)^(0+128)
 22016  385E  0008               	return
 22017  385F                     l15452:	
 22018  385F  3000               	movlw	0
 22019  3860  0141               	movlb	1	; select bank1
 22020  3861  00C8               	movwf	?_floor^(0+128)
 22021  3862  3000               	movlw	0
 22022  3863  00C9               	movwf	(?_floor+1)^(0+128)
 22023  3864  3000               	movlw	0
 22024  3865  00CA               	movwf	(?_floor+2)^(0+128)
 22025  3866  0008               	return
 22026  3867                     l15456:	
 22027  3867  3000               	movlw	0
 22028  3868  024F               	subwf	(floor@expon+1)^(0+128),w
 22029  3869  3015               	movlw	21
 22030  386A  1903               	skipnz
 22031  386B  024E               	subwf	floor@expon^(0+128),w
 22032  386C  1803               	btfsc	3,0
 22033  386D  0008               	return
 22034  386E  0848               	movf	floor@x^(0+128),w
 22035  386F  00BA               	movwf	___fttol@f1^(0+128)
 22036  3870  0849               	movf	(floor@x+1)^(0+128),w
 22037  3871  00BB               	movwf	(___fttol@f1+1)^(0+128)
 22038  3872  084A               	movf	(floor@x+2)^(0+128),w
 22039  3873  00BC               	movwf	(___fttol@f1+2)^(0+128)
 22040  3874  31C3  2352  31B8   	fcall	___fttol
 22041  3877  0141               	movlb	1	; select bank1
 22042  3878  083D               	movf	(?___fttol+3)^(0+128),w
 22043  3879  0140               	movlb	0	; select bank0
 22044  387A  00B6               	movwf	___altoft@c+3
 22045  387B  0141               	movlb	1	; select bank1
 22046  387C  083C               	movf	(?___fttol+2)^(0+128),w
 22047  387D  0140               	movlb	0	; select bank0
 22048  387E  00B5               	movwf	___altoft@c+2
 22049  387F  0141               	movlb	1	; select bank1
 22050  3880  083B               	movf	(?___fttol+1)^(0+128),w
 22051  3881  0140               	movlb	0	; select bank0
 22052  3882  00B4               	movwf	___altoft@c+1
 22053  3883  0141               	movlb	1	; select bank1
 22054  3884  083A               	movf	?___fttol^(0+128),w
 22055  3885  0140               	movlb	0	; select bank0
 22056  3886  00B3               	movwf	___altoft@c
 22057  3887  31D6  26F8  31B8   	fcall	___altoft
 22058  388A  0140               	movlb	0	; select bank0
 22059  388B  0833               	movf	?___altoft,w
 22060  388C  0141               	movlb	1	; select bank1
 22061  388D  00CB               	movwf	floor@i^(0+128)
 22062  388E  0140               	movlb	0	; select bank0
 22063  388F  0834               	movf	?___altoft+1,w
 22064  3890  0141               	movlb	1	; select bank1
 22065  3891  00CC               	movwf	(floor@i+1)^(0+128)
 22066  3892  0140               	movlb	0	; select bank0
 22067  3893  0835               	movf	?___altoft+2,w
 22068  3894  0141               	movlb	1	; select bank1
 22069  3895  00CD               	movwf	(floor@i+2)^(0+128)
 22070  3896  0848               	movf	floor@x^(0+128),w
 22071  3897  0140               	movlb	0	; select bank0
 22072  3898  00AB               	movwf	___ftge@ff1
 22073  3899  0141               	movlb	1	; select bank1
 22074  389A  0849               	movf	(floor@x+1)^(0+128),w
 22075  389B  0140               	movlb	0	; select bank0
 22076  389C  00AC               	movwf	___ftge@ff1+1
 22077  389D  0141               	movlb	1	; select bank1
 22078  389E  084A               	movf	(floor@x+2)^(0+128),w
 22079  389F  0140               	movlb	0	; select bank0
 22080  38A0  00AD               	movwf	___ftge@ff1+2
 22081  38A1  0141               	movlb	1	; select bank1
 22082  38A2  084B               	movf	floor@i^(0+128),w
 22083  38A3  0140               	movlb	0	; select bank0
 22084  38A4  00AE               	movwf	___ftge@ff2
 22085  38A5  0141               	movlb	1	; select bank1
 22086  38A6  084C               	movf	(floor@i+1)^(0+128),w
 22087  38A7  0140               	movlb	0	; select bank0
 22088  38A8  00AF               	movwf	___ftge@ff2+1
 22089  38A9  0141               	movlb	1	; select bank1
 22090  38AA  084D               	movf	(floor@i+2)^(0+128),w
 22091  38AB  0140               	movlb	0	; select bank0
 22092  38AC  00B0               	movwf	___ftge@ff2+2
 22093  38AD  31D6  2680  31B8   	fcall	___ftge
 22094  38B0  1803               	btfsc	3,0
 22095  38B1  28D4               	goto	l15466
 22096  38B2  3000               	movlw	0
 22097  38B3  0140               	movlb	0	; select bank0
 22098  38B4  00BB               	movwf	___ftadd@f1
 22099  38B5  3080               	movlw	128
 22100  38B6  00BC               	movwf	___ftadd@f1+1
 22101  38B7  30BF               	movlw	191
 22102  38B8  00BD               	movwf	___ftadd@f1+2
 22103  38B9  0141               	movlb	1	; select bank1
 22104  38BA  084B               	movf	floor@i^(0+128),w
 22105  38BB  0140               	movlb	0	; select bank0
 22106  38BC  00BE               	movwf	___ftadd@f2
 22107  38BD  0141               	movlb	1	; select bank1
 22108  38BE  084C               	movf	(floor@i+1)^(0+128),w
 22109  38BF  0140               	movlb	0	; select bank0
 22110  38C0  00BF               	movwf	___ftadd@f2+1
 22111  38C1  0141               	movlb	1	; select bank1
 22112  38C2  084D               	movf	(floor@i+2)^(0+128),w
 22113  38C3  0140               	movlb	0	; select bank0
 22114  38C4  00C0               	movwf	___ftadd@f2+2
 22115  38C5  31B0  2027         	fcall	___ftadd
 22116  38C7  0140               	movlb	0	; select bank0
 22117  38C8  083B               	movf	?___ftadd,w
 22118  38C9  0141               	movlb	1	; select bank1
 22119  38CA  00C8               	movwf	?_floor^(0+128)
 22120  38CB  0140               	movlb	0	; select bank0
 22121  38CC  083C               	movf	?___ftadd+1,w
 22122  38CD  0141               	movlb	1	; select bank1
 22123  38CE  00C9               	movwf	(?_floor+1)^(0+128)
 22124  38CF  0140               	movlb	0	; select bank0
 22125  38D0  083D               	movf	?___ftadd+2,w
 22126  38D1  0141               	movlb	1	; select bank1
 22127  38D2  00CA               	movwf	(?_floor+2)^(0+128)
 22128  38D3  0008               	return
 22129  38D4                     l15466:	
 22130  38D4  0141               	movlb	1	; select bank1
 22131  38D5  084B               	movf	floor@i^(0+128),w
 22132  38D6  00C8               	movwf	?_floor^(0+128)
 22133  38D7  084C               	movf	(floor@i+1)^(0+128),w
 22134  38D8  00C9               	movwf	(?_floor+1)^(0+128)
 22135  38D9  084D               	movf	(floor@i+2)^(0+128),w
 22136  38DA  00CA               	movwf	(?_floor+2)^(0+128)
 22137  38DB  0008               	return
 22138  38DC                     __end_of_floor:	
 22139                           
 22140                           	psect	text38
 22141  56BC                     __ptext38:	
 22142 ;; *************** function _frexp *****************
 22143 ;; Defined at:
 22144 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 22145 ;; Parameters:    Size  Location     Type
 22146 ;;  value           3   11[BANK0 ] int 
 22147 ;;  eptr            1   14[BANK0 ] PTR int 
 22148 ;;		 -> log@exponent(2), floor@expon(2), trunc@expon(2), 
 22149 ;; Auto vars:     Size  Location     Type
 22150 ;;		None
 22151 ;; Return value:  Size  Location     Type
 22152 ;;                  3   11[BANK0 ] PTR int 
 22153 ;; Registers used:
 22154 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 22155 ;; Tracked objects:
 22156 ;;		On entry : 0/0
 22157 ;;		On exit  : 0/0
 22158 ;;		Unchanged: 0/0
 22159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22160 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22162 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22163 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22164 ;;Total ram usage:        6 bytes
 22165 ;; Hardware stack levels used:    1
 22166 ;; Hardware stack levels required when called:    3
 22167 ;; This function calls:
 22168 ;;		Nothing
 22169 ;; This function is called by:
 22170 ;;		_trunc
 22171 ;;		_floor
 22172 ;;		_log
 22173 ;; This function uses a non-reentrant model
 22174 ;;
 22175                           
 22176                           
 22177                           ;psect for function _frexp
 22178  56BC                     _frexp:	
 22179                           
 22180                           ;incstack = 0
 22181                           ; Regs used in _frexp: [wreg+fsr1l+fsr1h+status,2+status,0]
 22182  56BC  0140               	movlb	0	; select bank0
 22183  56BD  082D               	movf	frexp@value+2,w
 22184  56BE  042C               	iorwf	frexp@value+1,w
 22185  56BF  042B               	iorwf	frexp@value,w
 22186  56C0  1D03               	skipz
 22187  56C1  2ECF               	goto	l14868
 22188  56C2  082E               	movf	frexp@eptr,w
 22189  56C3  0086               	movwf	6
 22190  56C4  0187               	clrf	7
 22191  56C5  3000               	movlw	0
 22192  56C6  3FC0               	movwi [0]fsr1
 22193  56C7  3FC1               	movwi [1]fsr1
 22194  56C8  3000               	movlw	0
 22195  56C9  00AB               	movwf	?_frexp
 22196  56CA  3000               	movlw	0
 22197  56CB  00AC               	movwf	?_frexp+1
 22198  56CC  3000               	movlw	0
 22199  56CD  00AD               	movwf	?_frexp+2
 22200  56CE  0008               	return
 22201  56CF                     l14868:	
 22202  56CF  082D               	movf	frexp@value+2,w
 22203  56D0  397F               	andlw	127
 22204  56D1  00AF               	movwf	??_frexp
 22205  56D2  01B0               	clrf	??_frexp+1
 22206  56D3  35AF               	lslf	??_frexp,f
 22207  56D4  0DB0               	rlf	??_frexp+1,f
 22208  56D5  082E               	movf	frexp@eptr,w
 22209  56D6  0086               	movwf	6
 22210  56D7  0187               	clrf	7
 22211  56D8  082F               	movf	??_frexp,w
 22212  56D9  3FC0               	movwi [0]fsr1
 22213  56DA  0830               	movf	??_frexp+1,w
 22214  56DB  3FC1               	movwi [1]fsr1
 22215  56DC  0D2C               	rlf	frexp@value+1,w
 22216  56DD  0D2C               	rlf	frexp@value+1,w
 22217  56DE  3901               	andlw	1
 22218  56DF  00AF               	movwf	??_frexp
 22219  56E0  01B0               	clrf	??_frexp+1
 22220  56E1  082E               	movf	frexp@eptr,w
 22221  56E2  0086               	movwf	6
 22222  56E3  0187               	clrf	7
 22223  56E4  082F               	movf	??_frexp,w
 22224  56E5  0481               	iorwf	1,f
 22225  56E6  3141               	addfsr 1,1
 22226  56E7  0830               	movf	??_frexp+1,w
 22227  56E8  0481               	iorwf	1,f
 22228  56E9  082E               	movf	frexp@eptr,w
 22229  56EA  0086               	movwf	6
 22230  56EB  0187               	clrf	7
 22231  56EC  3082               	movlw	130
 22232  56ED  0781               	addwf	1,f
 22233  56EE  3141               	addfsr 1,1
 22234  56EF  30FF               	movlw	255
 22235  56F0  3D81               	addwfc	1,f
 22236  56F1  317F               	addfsr 1,-1
 22237  56F2  082D               	movf	frexp@value+2,w
 22238  56F3  3980               	andlw	-128
 22239  56F4  383F               	iorlw	63
 22240  56F5  00AD               	movwf	frexp@value+2
 22241  56F6  13AC               	bcf	frexp@value+1,7
 22242  56F7  0008               	return
 22243  56F8                     __end_of_frexp:	
 22244                           
 22245                           	psect	text39
 22246  4352                     __ptext39:	
 22247 ;; *************** function ___fttol *****************
 22248 ;; Defined at:
 22249 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 22250 ;; Parameters:    Size  Location     Type
 22251 ;;  f1              3   26[BANK1 ] float 
 22252 ;; Auto vars:     Size  Location     Type
 22253 ;;  lval            4   35[BANK1 ] unsigned long 
 22254 ;;  exp1            1   39[BANK1 ] unsigned char 
 22255 ;;  sign1           1   34[BANK1 ] unsigned char 
 22256 ;; Return value:  Size  Location     Type
 22257 ;;                  4   26[BANK1 ] long 
 22258 ;; Registers used:
 22259 ;;		wreg, status,2, status,0
 22260 ;; Tracked objects:
 22261 ;;		On entry : 0/0
 22262 ;;		On exit  : 0/0
 22263 ;;		Unchanged: 0/0
 22264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22265 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22266 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22267 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22268 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22269 ;;Total ram usage:       14 bytes
 22270 ;; Hardware stack levels used:    1
 22271 ;; Hardware stack levels required when called:    3
 22272 ;; This function calls:
 22273 ;;		Nothing
 22274 ;; This function is called by:
 22275 ;;		_ini_GERADOR
 22276 ;;		_ini_ee_tempos
 22277 ;;		_pow
 22278 ;;		_trunc
 22279 ;;		_exp
 22280 ;;		_floor
 22281 ;;		_conv_temp
 22282 ;; This function uses a non-reentrant model
 22283 ;;
 22284                           
 22285                           
 22286                           ;psect for function ___fttol
 22287  4352                     ___fttol:	
 22288                           
 22289                           ;incstack = 0
 22290                           ; Regs used in ___fttol: [wreg+status,2+status,0]
 22291  4352  0141               	movlb	1	; select bank1
 22292  4353  083A               	movf	___fttol@f1^(0+128),w
 22293  4354  00BE               	movwf	??___fttol^(0+128)
 22294  4355  083B               	movf	(___fttol@f1+1)^(0+128),w
 22295  4356  00BF               	movwf	(??___fttol^(0+128)+1)
 22296  4357  083C               	movf	(___fttol@f1+2)^(0+128),w
 22297  4358  00C0               	movwf	(??___fttol^(0+128)+2)
 22298  4359  1003               	clrc
 22299  435A  0D3F               	rlf	(??___fttol^(0+128)+1),w
 22300  435B  0D40               	rlf	(??___fttol^(0+128)+2),w
 22301  435C  00C1               	movwf	(??___fttol+3)^(0+128)
 22302  435D  0841               	movf	(??___fttol+3)^(0+128),w
 22303  435E  00C7               	movwf	___fttol@exp1^(0+128)
 22304  435F  0847               	movf	___fttol@exp1^(0+128),w
 22305  4360  1D03               	btfss	3,2
 22306  4361  2B6B               	goto	l14776
 22307  4362  3000               	movlw	0
 22308  4363  00BD               	movwf	(?___fttol+3)^(0+128)
 22309  4364  3000               	movlw	0
 22310  4365  00BC               	movwf	(?___fttol+2)^(0+128)
 22311  4366  3000               	movlw	0
 22312  4367  00BB               	movwf	(?___fttol+1)^(0+128)
 22313  4368  3000               	movlw	0
 22314  4369  00BA               	movwf	?___fttol^(0+128)
 22315  436A  0008               	return
 22316  436B                     l14776:	
 22317  436B  083A               	movf	___fttol@f1^(0+128),w
 22318  436C  00BE               	movwf	??___fttol^(0+128)
 22319  436D  083B               	movf	(___fttol@f1+1)^(0+128),w
 22320  436E  00BF               	movwf	(??___fttol^(0+128)+1)
 22321  436F  083C               	movf	(___fttol@f1+2)^(0+128),w
 22322  4370  00C0               	movwf	(??___fttol^(0+128)+2)
 22323  4371  3017               	movlw	23
 22324  4372                     u15915:	
 22325  4372  36C0               	lsrf	(??___fttol^(0+128)+2),f
 22326  4373  0CBF               	rrf	(??___fttol^(0+128)+1),f
 22327  4374  0CBE               	rrf	??___fttol^(0+128),f
 22328  4375  0B89               	decfsz	9,f
 22329  4376  2B72               	goto	u15915
 22330  4377  083E               	movf	??___fttol^(0+128),w
 22331  4378  00C1               	movwf	(??___fttol+3)^(0+128)
 22332  4379  0841               	movf	(??___fttol+3)^(0+128),w
 22333  437A  00C2               	movwf	___fttol@sign1^(0+128)
 22334  437B  17BB               	bsf	(___fttol@f1^(0+128)+1),7
 22335  437C  30FF               	movlw	255
 22336  437D  05BA               	andwf	___fttol@f1^(0+128),f
 22337  437E  30FF               	movlw	255
 22338  437F  05BB               	andwf	(___fttol@f1+1)^(0+128),f
 22339  4380  3000               	movlw	0
 22340  4381  05BC               	andwf	(___fttol@f1+2)^(0+128),f
 22341  4382  083A               	movf	___fttol@f1^(0+128),w
 22342  4383  00C3               	movwf	___fttol@lval^(0+128)
 22343  4384  083B               	movf	(___fttol@f1+1)^(0+128),w
 22344  4385  00C4               	movwf	(___fttol@lval^(0+128)+1)
 22345  4386  083C               	movf	(___fttol@f1+2)^(0+128),w
 22346  4387  00C5               	movwf	(___fttol@lval^(0+128)+2)
 22347  4388  01C6               	clrf	(___fttol@lval^(0+128)+3)
 22348  4389  308E               	movlw	142
 22349  438A  02C7               	subwf	___fttol@exp1^(0+128),f
 22350  438B  1FC7               	btfss	___fttol@exp1^(0+128),7
 22351  438C  2BA9               	goto	l14796
 22352  438D  0847               	movf	___fttol@exp1^(0+128),w
 22353  438E  3A80               	xorlw	128
 22354  438F  3E8F               	addlw	143
 22355  4390  1803               	skipnc
 22356  4391  2B9B               	goto	l14794
 22357  4392  3000               	movlw	0
 22358  4393  00BD               	movwf	(?___fttol+3)^(0+128)
 22359  4394  3000               	movlw	0
 22360  4395  00BC               	movwf	(?___fttol+2)^(0+128)
 22361  4396  3000               	movlw	0
 22362  4397  00BB               	movwf	(?___fttol+1)^(0+128)
 22363  4398  3000               	movlw	0
 22364  4399  00BA               	movwf	?___fttol^(0+128)
 22365  439A  0008               	return
 22366  439B                     l14794:	
 22367  439B  3001               	movlw	1
 22368  439C                     u15945:	
 22369  439C  36C6               	lsrf	(___fttol@lval+3)^(0+128),f
 22370  439D  0CC5               	rrf	(___fttol@lval+2)^(0+128),f
 22371  439E  0CC4               	rrf	(___fttol@lval+1)^(0+128),f
 22372  439F  0CC3               	rrf	___fttol@lval^(0+128),f
 22373  43A0  0B89               	decfsz	9,f
 22374  43A1  2B9C               	goto	u15945
 22375  43A2  3001               	movlw	1
 22376  43A3  00BE               	movwf	??___fttol^(0+128)
 22377  43A4  083E               	movf	??___fttol^(0+128),w
 22378  43A5  07C7               	addwf	___fttol@exp1^(0+128),f
 22379  43A6  1903               	btfsc	3,2
 22380  43A7  2BC2               	goto	l14804
 22381  43A8  2B9B               	goto	l14794
 22382  43A9                     l14796:	
 22383  43A9  3018               	movlw	24
 22384  43AA  0247               	subwf	___fttol@exp1^(0+128),w
 22385  43AB  1C03               	skipc
 22386  43AC  2BBF               	goto	l3098
 22387  43AD  3000               	movlw	0
 22388  43AE  00BD               	movwf	(?___fttol+3)^(0+128)
 22389  43AF  3000               	movlw	0
 22390  43B0  00BC               	movwf	(?___fttol+2)^(0+128)
 22391  43B1  3000               	movlw	0
 22392  43B2  00BB               	movwf	(?___fttol+1)^(0+128)
 22393  43B3  3000               	movlw	0
 22394  43B4  00BA               	movwf	?___fttol^(0+128)
 22395  43B5  0008               	return
 22396  43B6                     l14802:	
 22397  43B6  3001               	movlw	1
 22398  43B7                     u15975:	
 22399  43B7  35C3               	lslf	___fttol@lval^(0+128),f
 22400  43B8  0DC4               	rlf	(___fttol@lval+1)^(0+128),f
 22401  43B9  0DC5               	rlf	(___fttol@lval+2)^(0+128),f
 22402  43BA  0DC6               	rlf	(___fttol@lval+3)^(0+128),f
 22403  43BB  0B89               	decfsz	9,f
 22404  43BC  2BB7               	goto	u15975
 22405  43BD  3001               	movlw	1
 22406  43BE  02C7               	subwf	___fttol@exp1^(0+128),f
 22407  43BF                     l3098:	
 22408  43BF  0847               	movf	___fttol@exp1^(0+128),w
 22409  43C0  1D03               	btfss	3,2
 22410  43C1  2BB6               	goto	l14802
 22411  43C2                     l14804:	
 22412  43C2  0842               	movf	___fttol@sign1^(0+128),w
 22413  43C3  1903               	btfsc	3,2
 22414  43C4  2BD0               	goto	l14808
 22415  43C5  09C3               	comf	___fttol@lval^(0+128),f
 22416  43C6  09C4               	comf	(___fttol@lval+1)^(0+128),f
 22417  43C7  09C5               	comf	(___fttol@lval+2)^(0+128),f
 22418  43C8  09C6               	comf	(___fttol@lval+3)^(0+128),f
 22419  43C9  0AC3               	incf	___fttol@lval^(0+128),f
 22420  43CA  1903               	skipnz
 22421  43CB  0AC4               	incf	(___fttol@lval+1)^(0+128),f
 22422  43CC  1903               	skipnz
 22423  43CD  0AC5               	incf	(___fttol@lval+2)^(0+128),f
 22424  43CE  1903               	skipnz
 22425  43CF  0AC6               	incf	(___fttol@lval+3)^(0+128),f
 22426  43D0                     l14808:	
 22427  43D0  0846               	movf	(___fttol@lval+3)^(0+128),w
 22428  43D1  00BD               	movwf	(?___fttol+3)^(0+128)
 22429  43D2  0845               	movf	(___fttol@lval+2)^(0+128),w
 22430  43D3  00BC               	movwf	(?___fttol+2)^(0+128)
 22431  43D4  0844               	movf	(___fttol@lval+1)^(0+128),w
 22432  43D5  00BB               	movwf	(?___fttol+1)^(0+128)
 22433  43D6  0843               	movf	___fttol@lval^(0+128),w
 22434  43D7  00BA               	movwf	?___fttol^(0+128)
 22435  43D8  0008               	return
 22436  43D9                     __end_of___fttol:	
 22437                           
 22438                           	psect	text40
 22439  56F8                     __ptext40:	
 22440 ;; *************** function ___altoft *****************
 22441 ;; Defined at:
 22442 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 22443 ;; Parameters:    Size  Location     Type
 22444 ;;  c               4   19[BANK0 ] long 
 22445 ;; Auto vars:     Size  Location     Type
 22446 ;;  sign            1   26[BANK0 ] unsigned char 
 22447 ;;  exp             1   25[BANK0 ] unsigned char 
 22448 ;; Return value:  Size  Location     Type
 22449 ;;                  3   19[BANK0 ] float 
 22450 ;; Registers used:
 22451 ;;		wreg, status,2, status,0, pclath, cstack
 22452 ;; Tracked objects:
 22453 ;;		On entry : 0/0
 22454 ;;		On exit  : 0/0
 22455 ;;		Unchanged: 0/0
 22456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22457 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22458 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22459 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22460 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22461 ;;Total ram usage:        8 bytes
 22462 ;; Hardware stack levels used:    1
 22463 ;; Hardware stack levels required when called:    4
 22464 ;; This function calls:
 22465 ;;		___ftpack
 22466 ;; This function is called by:
 22467 ;;		_trunc
 22468 ;;		_floor
 22469 ;; This function uses a non-reentrant model
 22470 ;;
 22471                           
 22472                           
 22473                           ;psect for function ___altoft
 22474  56F8                     ___altoft:	
 22475                           
 22476                           ;incstack = 0
 22477                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
 22478  56F8  0140               	movlb	0	; select bank0
 22479  56F9  01BA               	clrf	___altoft@sign
 22480  56FA  308E               	movlw	142
 22481  56FB  00B7               	movwf	??___altoft
 22482  56FC  0837               	movf	??___altoft,w
 22483  56FD  00B9               	movwf	___altoft@exp
 22484  56FE  1FB6               	btfss	___altoft@c+3,7
 22485  56FF  2F0D               	goto	l14624
 22486  5700  09B3               	comf	___altoft@c,f
 22487  5701  09B4               	comf	___altoft@c+1,f
 22488  5702  09B5               	comf	___altoft@c+2,f
 22489  5703  09B6               	comf	___altoft@c+3,f
 22490  5704  0AB3               	incf	___altoft@c,f
 22491  5705  1903               	skipnz
 22492  5706  0AB4               	incf	___altoft@c+1,f
 22493  5707  1903               	skipnz
 22494  5708  0AB5               	incf	___altoft@c+2,f
 22495  5709  1903               	skipnz
 22496  570A  0AB6               	incf	___altoft@c+3,f
 22497  570B  01BA               	clrf	___altoft@sign
 22498  570C  0ABA               	incf	___altoft@sign,f
 22499  570D                     l14624:	
 22500  570D  30FF               	movlw	255
 22501  570E  0536               	andwf	___altoft@c+3,w
 22502  570F  1903               	btfsc	3,2
 22503  5710  2F1D               	goto	l14626
 22504  5711  3001               	movlw	1
 22505  5712                     u15505:	
 22506  5712  36B6               	lsrf	___altoft@c+3,f
 22507  5713  0CB5               	rrf	___altoft@c+2,f
 22508  5714  0CB4               	rrf	___altoft@c+1,f
 22509  5715  0CB3               	rrf	___altoft@c,f
 22510  5716  0B89               	decfsz	9,f
 22511  5717  2F12               	goto	u15505
 22512  5718  3001               	movlw	1
 22513  5719  00B7               	movwf	??___altoft
 22514  571A  0837               	movf	??___altoft,w
 22515  571B  07B9               	addwf	___altoft@exp,f
 22516  571C  2F0D               	goto	l14624
 22517  571D                     l14626:	
 22518  571D  0833               	movf	___altoft@c,w
 22519  571E  00AB               	movwf	___ftpack@arg
 22520  571F  0834               	movf	___altoft@c+1,w
 22521  5720  00AC               	movwf	___ftpack@arg+1
 22522  5721  0835               	movf	___altoft@c+2,w
 22523  5722  00AD               	movwf	___ftpack@arg+2
 22524  5723  0839               	movf	___altoft@exp,w
 22525  5724  00B7               	movwf	??___altoft
 22526  5725  0837               	movf	??___altoft,w
 22527  5726  00AE               	movwf	___ftpack@exp
 22528  5727  083A               	movf	___altoft@sign,w
 22529  5728  00B8               	movwf	??___altoft+1
 22530  5729  0838               	movf	??___altoft+1,w
 22531  572A  00AF               	movwf	___ftpack@sign
 22532  572B  31CD  25EF         	fcall	___ftpack
 22533  572D  0140               	movlb	0	; select bank0
 22534  572E  082B               	movf	?___ftpack,w
 22535  572F  00B3               	movwf	?___altoft
 22536  5730  082C               	movf	?___ftpack+1,w
 22537  5731  00B4               	movwf	?___altoft+1
 22538  5732  082D               	movf	?___ftpack+2,w
 22539  5733  00B5               	movwf	?___altoft+2
 22540  5734  0008               	return
 22541  5735                     __end_of___altoft:	
 22542                           
 22543                           	psect	text41
 22544  54B0                     __ptext41:	
 22545 ;; *************** function ___ftsub *****************
 22546 ;; Defined at:
 22547 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 22548 ;; Parameters:    Size  Location     Type
 22549 ;;  f2              3   48[BANK1 ] float 
 22550 ;;  f1              3   51[BANK1 ] float 
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;		None
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  3   48[BANK1 ] float 
 22555 ;; Registers used:
 22556 ;;		wreg, status,2, status,0, pclath, cstack
 22557 ;; Tracked objects:
 22558 ;;		On entry : 0/0
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22562 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22565 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22566 ;;Total ram usage:        6 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:    5
 22569 ;; This function calls:
 22570 ;;		___ftadd
 22571 ;; This function is called by:
 22572 ;;		_sin
 22573 ;;		_sqrt
 22574 ;;		_exp
 22575 ;; This function uses a non-reentrant model
 22576 ;;
 22577                           
 22578                           
 22579                           ;psect for function ___ftsub
 22580  54B0                     ___ftsub:	
 22581                           
 22582                           ;incstack = 0
 22583                           ; Regs used in ___ftsub: [wreg+status,2+status,0+pclath+cstack]
 22584  54B0  0141               	movlb	1	; select bank1
 22585  54B1  0852               	movf	(___ftsub@f2+2)^(0+128),w
 22586  54B2  0451               	iorwf	(___ftsub@f2+1)^(0+128),w
 22587  54B3  0450               	iorwf	___ftsub@f2^(0+128),w
 22588  54B4  1903               	skipnz
 22589  54B5  2CB8               	goto	l15438
 22590  54B6  3080               	movlw	128
 22591  54B7  06D2               	xorwf	(___ftsub@f2+2)^(0+128),f
 22592  54B8                     l15438:	
 22593  54B8  0853               	movf	___ftsub@f1^(0+128),w
 22594  54B9  0140               	movlb	0	; select bank0
 22595  54BA  00BB               	movwf	___ftadd@f1
 22596  54BB  0141               	movlb	1	; select bank1
 22597  54BC  0854               	movf	(___ftsub@f1+1)^(0+128),w
 22598  54BD  0140               	movlb	0	; select bank0
 22599  54BE  00BC               	movwf	___ftadd@f1+1
 22600  54BF  0141               	movlb	1	; select bank1
 22601  54C0  0855               	movf	(___ftsub@f1+2)^(0+128),w
 22602  54C1  0140               	movlb	0	; select bank0
 22603  54C2  00BD               	movwf	___ftadd@f1+2
 22604  54C3  0141               	movlb	1	; select bank1
 22605  54C4  0850               	movf	___ftsub@f2^(0+128),w
 22606  54C5  0140               	movlb	0	; select bank0
 22607  54C6  00BE               	movwf	___ftadd@f2
 22608  54C7  0141               	movlb	1	; select bank1
 22609  54C8  0851               	movf	(___ftsub@f2+1)^(0+128),w
 22610  54C9  0140               	movlb	0	; select bank0
 22611  54CA  00BF               	movwf	___ftadd@f2+1
 22612  54CB  0141               	movlb	1	; select bank1
 22613  54CC  0852               	movf	(___ftsub@f2+2)^(0+128),w
 22614  54CD  0140               	movlb	0	; select bank0
 22615  54CE  00C0               	movwf	___ftadd@f2+2
 22616  54CF  31B0  2027         	fcall	___ftadd
 22617  54D1  0140               	movlb	0	; select bank0
 22618  54D2  083B               	movf	?___ftadd,w
 22619  54D3  0141               	movlb	1	; select bank1
 22620  54D4  00D0               	movwf	?___ftsub^(0+128)
 22621  54D5  0140               	movlb	0	; select bank0
 22622  54D6  083C               	movf	?___ftadd+1,w
 22623  54D7  0141               	movlb	1	; select bank1
 22624  54D8  00D1               	movwf	(?___ftsub+1)^(0+128)
 22625  54D9  0140               	movlb	0	; select bank0
 22626  54DA  083D               	movf	?___ftadd+2,w
 22627  54DB  0141               	movlb	1	; select bank1
 22628  54DC  00D2               	movwf	(?___ftsub+2)^(0+128)
 22629  54DD  0008               	return
 22630  54DE                     __end_of___ftsub:	
 22631                           
 22632                           	psect	text42
 22633  28AC                     __ptext42:	
 22634 ;; *************** function _atan *****************
 22635 ;; Defined at:
 22636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 22637 ;; Parameters:    Size  Location     Type
 22638 ;;  f               3   54[BANK1 ] float 
 22639 ;; Auto vars:     Size  Location     Type
 22640 ;;  val             3   67[BANK1 ] float 
 22641 ;;  val_squared     3   64[BANK1 ] float 
 22642 ;;  x               3   60[BANK1 ] float 
 22643 ;;  y               3   57[BANK1 ] float 
 22644 ;;  recip           1   63[BANK1 ] unsigned char 
 22645 ;; Return value:  Size  Location     Type
 22646 ;;                  3   54[BANK1 ] unsigned char 
 22647 ;; Registers used:
 22648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 22649 ;; Tracked objects:
 22650 ;;		On entry : 0/0
 22651 ;;		On exit  : 0/0
 22652 ;;		Unchanged: 0/0
 22653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 22654 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22655 ;;      Locals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22656 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22657 ;;      Totals:         0       1      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 22658 ;;Total ram usage:       17 bytes
 22659 ;; Hardware stack levels used:    1
 22660 ;; Hardware stack levels required when called:    6
 22661 ;; This function calls:
 22662 ;;		___ftadd
 22663 ;;		___ftdiv
 22664 ;;		___ftge
 22665 ;;		___ftmul
 22666 ;;		___ftneg
 22667 ;;		_eval_poly
 22668 ;;		_fabs
 22669 ;; This function is called by:
 22670 ;;		_ini_GERADOR
 22671 ;; This function uses a non-reentrant model
 22672 ;;
 22673                           
 22674                           
 22675                           ;psect for function _atan
 22676  28AC                     _atan:	
 22677                           
 22678                           ;incstack = 0
 22679                           ; Regs used in _atan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 22680  28AC  0141               	movlb	1	; select bank1
 22681  28AD  0856               	movf	atan@f^(0+128),w
 22682  28AE  00D3               	movwf	fabs@d^(0+128)
 22683  28AF  0857               	movf	(atan@f+1)^(0+128),w
 22684  28B0  00D4               	movwf	(fabs@d+1)^(0+128)
 22685  28B1  0858               	movf	(atan@f+2)^(0+128),w
 22686  28B2  00D5               	movwf	(fabs@d+2)^(0+128)
 22687  28B3  31D3  2359  31A8   	fcall	_fabs
 22688  28B6  0141               	movlb	1	; select bank1
 22689  28B7  0853               	movf	?_fabs^(0+128),w
 22690  28B8  00E3               	movwf	atan@val^(0+128)
 22691  28B9  0854               	movf	(?_fabs+1)^(0+128),w
 22692  28BA  00E4               	movwf	(atan@val+1)^(0+128)
 22693  28BB  0855               	movf	(?_fabs+2)^(0+128),w
 22694  28BC  00E5               	movwf	(atan@val+2)^(0+128)
 22695  28BD  0865               	movf	(atan@val+2)^(0+128),w
 22696  28BE  0464               	iorwf	(atan@val+1)^(0+128),w
 22697  28BF  0463               	iorwf	atan@val^(0+128),w
 22698  28C0  1D03               	skipz
 22699  28C1  28C9               	goto	l16684
 22700  28C2  3000               	movlw	0
 22701  28C3  00D6               	movwf	?_atan^(0+128)
 22702  28C4  3000               	movlw	0
 22703  28C5  00D7               	movwf	(?_atan+1)^(0+128)
 22704  28C6  3000               	movlw	0
 22705  28C7  00D8               	movwf	(?_atan+2)^(0+128)
 22706  28C8  0008               	return
 22707  28C9                     l16684:	
 22708  28C9  3000               	movlw	0
 22709  28CA  0140               	movlb	0	; select bank0
 22710  28CB  00AB               	movwf	___ftge@ff1
 22711  28CC  3080               	movlw	128
 22712  28CD  00AC               	movwf	___ftge@ff1+1
 22713  28CE  303F               	movlw	63
 22714  28CF  00AD               	movwf	___ftge@ff1+2
 22715  28D0  0141               	movlb	1	; select bank1
 22716  28D1  0863               	movf	atan@val^(0+128),w
 22717  28D2  0140               	movlb	0	; select bank0
 22718  28D3  00AE               	movwf	___ftge@ff2
 22719  28D4  0141               	movlb	1	; select bank1
 22720  28D5  0864               	movf	(atan@val+1)^(0+128),w
 22721  28D6  0140               	movlb	0	; select bank0
 22722  28D7  00AF               	movwf	___ftge@ff2+1
 22723  28D8  0141               	movlb	1	; select bank1
 22724  28D9  0865               	movf	(atan@val+2)^(0+128),w
 22725  28DA  0140               	movlb	0	; select bank0
 22726  28DB  00B0               	movwf	___ftge@ff2+2
 22727  28DC  31D6  2680  31A8   	fcall	___ftge
 22728  28DF  1803               	btfsc	3,0
 22729  28E0  28E3               	goto	u19060
 22730  28E1  3001               	movlw	1
 22731  28E2  28E4               	goto	u19070
 22732  28E3                     u19060:	
 22733  28E3  3000               	movlw	0
 22734  28E4                     u19070:	
 22735  28E4  0140               	movlb	0	; select bank0
 22736  28E5  00D9               	movwf	??_atan
 22737  28E6  0859               	movf	??_atan,w
 22738  28E7  0141               	movlb	1	; select bank1
 22739  28E8  00DF               	movwf	atan@recip^(0+128)
 22740  28E9  085F               	movf	atan@recip^(0+128),w
 22741  28EA  1903               	btfsc	3,2
 22742  28EB  2902               	goto	l2912
 22743  28EC  0863               	movf	atan@val^(0+128),w
 22744  28ED  00AA               	movwf	___ftdiv@f2^(0+128)
 22745  28EE  0864               	movf	(atan@val+1)^(0+128),w
 22746  28EF  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 22747  28F0  0865               	movf	(atan@val+2)^(0+128),w
 22748  28F1  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 22749  28F2  3000               	movlw	0
 22750  28F3  00AD               	movwf	___ftdiv@f1^(0+128)
 22751  28F4  3080               	movlw	128
 22752  28F5  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 22753  28F6  303F               	movlw	63
 22754  28F7  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 22755  28F8  31BA  2243  31A8   	fcall	___ftdiv
 22756  28FB  0141               	movlb	1	; select bank1
 22757  28FC  082A               	movf	?___ftdiv^(0+128),w
 22758  28FD  00E3               	movwf	atan@val^(0+128)
 22759  28FE  082B               	movf	(?___ftdiv+1)^(0+128),w
 22760  28FF  00E4               	movwf	(atan@val+1)^(0+128)
 22761  2900  082C               	movf	(?___ftdiv+2)^(0+128),w
 22762  2901  00E5               	movwf	(atan@val+2)^(0+128)
 22763  2902                     l2912:	
 22764  2902  0863               	movf	atan@val^(0+128),w
 22765  2903  0140               	movlb	0	; select bank0
 22766  2904  00C8               	movwf	___ftmul@f1
 22767  2905  0141               	movlb	1	; select bank1
 22768  2906  0864               	movf	(atan@val+1)^(0+128),w
 22769  2907  0140               	movlb	0	; select bank0
 22770  2908  00C9               	movwf	___ftmul@f1+1
 22771  2909  0141               	movlb	1	; select bank1
 22772  290A  0865               	movf	(atan@val+2)^(0+128),w
 22773  290B  0140               	movlb	0	; select bank0
 22774  290C  00CA               	movwf	___ftmul@f1+2
 22775  290D  0141               	movlb	1	; select bank1
 22776  290E  0863               	movf	atan@val^(0+128),w
 22777  290F  0140               	movlb	0	; select bank0
 22778  2910  00CB               	movwf	___ftmul@f2
 22779  2911  0141               	movlb	1	; select bank1
 22780  2912  0864               	movf	(atan@val+1)^(0+128),w
 22781  2913  0140               	movlb	0	; select bank0
 22782  2914  00CC               	movwf	___ftmul@f2+1
 22783  2915  0141               	movlb	1	; select bank1
 22784  2916  0865               	movf	(atan@val+2)^(0+128),w
 22785  2917  0140               	movlb	0	; select bank0
 22786  2918  00CD               	movwf	___ftmul@f2+2
 22787  2919  31B9  218F  31A8   	fcall	___ftmul
 22788  291C  0140               	movlb	0	; select bank0
 22789  291D  0848               	movf	?___ftmul,w
 22790  291E  0141               	movlb	1	; select bank1
 22791  291F  00E0               	movwf	atan@val_squared^(0+128)
 22792  2920  0140               	movlb	0	; select bank0
 22793  2921  0849               	movf	?___ftmul+1,w
 22794  2922  0141               	movlb	1	; select bank1
 22795  2923  00E1               	movwf	(atan@val_squared+1)^(0+128)
 22796  2924  0140               	movlb	0	; select bank0
 22797  2925  084A               	movf	?___ftmul+2,w
 22798  2926  0141               	movlb	1	; select bank1
 22799  2927  00E2               	movwf	(atan@val_squared+2)^(0+128)
 22800  2928  0860               	movf	atan@val_squared^(0+128),w
 22801  2929  00A0               	movwf	eval_poly@x^(0+128)
 22802  292A  0861               	movf	(atan@val_squared+1)^(0+128),w
 22803  292B  00A1               	movwf	(eval_poly@x+1)^(0+128)
 22804  292C  0862               	movf	(atan@val_squared+2)^(0+128),w
 22805  292D  00A2               	movwf	(eval_poly@x+2)^(0+128)
 22806  292E  3032               	movlw	low (atan@coeff_b| (0+32768))
 22807  292F  00A3               	movwf	eval_poly@d^(0+128)
 22808  2930  30E8               	movlw	high (atan@coeff_b| (0+32768))
 22809  2931  00A4               	movwf	(eval_poly@d^(0+128)+1)
 22810  2932  3004               	movlw	4
 22811  2933  00A5               	movwf	eval_poly@n^(0+128)
 22812  2934  3000               	movlw	0
 22813  2935  00A6               	movwf	(eval_poly@n^(0+128)+1)
 22814  2936  31C1  214B  31A8   	fcall	_eval_poly
 22815  2939  0141               	movlb	1	; select bank1
 22816  293A  0820               	movf	?_eval_poly^(0+128),w
 22817  293B  00D9               	movwf	atan@y^(0+128)
 22818  293C  0821               	movf	(?_eval_poly+1)^(0+128),w
 22819  293D  00DA               	movwf	(atan@y+1)^(0+128)
 22820  293E  0822               	movf	(?_eval_poly+2)^(0+128),w
 22821  293F  00DB               	movwf	(atan@y+2)^(0+128)
 22822  2940  0860               	movf	atan@val_squared^(0+128),w
 22823  2941  00A0               	movwf	eval_poly@x^(0+128)
 22824  2942  0861               	movf	(atan@val_squared+1)^(0+128),w
 22825  2943  00A1               	movwf	(eval_poly@x+1)^(0+128)
 22826  2944  0862               	movf	(atan@val_squared+2)^(0+128),w
 22827  2945  00A2               	movwf	(eval_poly@x+2)^(0+128)
 22828  2946  3000               	movlw	low (atan@coeff_a| (0+32768))
 22829  2947  00A3               	movwf	eval_poly@d^(0+128)
 22830  2948  30E8               	movlw	high (atan@coeff_a| (0+32768))
 22831  2949  00A4               	movwf	(eval_poly@d^(0+128)+1)
 22832  294A  3005               	movlw	5
 22833  294B  00A5               	movwf	eval_poly@n^(0+128)
 22834  294C  3000               	movlw	0
 22835  294D  00A6               	movwf	(eval_poly@n^(0+128)+1)
 22836  294E  31C1  214B  31A8   	fcall	_eval_poly
 22837  2951  0141               	movlb	1	; select bank1
 22838  2952  0820               	movf	?_eval_poly^(0+128),w
 22839  2953  00DC               	movwf	atan@x^(0+128)
 22840  2954  0821               	movf	(?_eval_poly+1)^(0+128),w
 22841  2955  00DD               	movwf	(atan@x+1)^(0+128)
 22842  2956  0822               	movf	(?_eval_poly+2)^(0+128),w
 22843  2957  00DE               	movwf	(atan@x+2)^(0+128)
 22844  2958  085C               	movf	atan@x^(0+128),w
 22845  2959  00AD               	movwf	___ftdiv@f1^(0+128)
 22846  295A  085D               	movf	(atan@x+1)^(0+128),w
 22847  295B  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 22848  295C  085E               	movf	(atan@x+2)^(0+128),w
 22849  295D  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 22850  295E  0859               	movf	atan@y^(0+128),w
 22851  295F  00AA               	movwf	___ftdiv@f2^(0+128)
 22852  2960  085A               	movf	(atan@y+1)^(0+128),w
 22853  2961  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 22854  2962  085B               	movf	(atan@y+2)^(0+128),w
 22855  2963  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 22856  2964  31BA  2243  31A8   	fcall	___ftdiv
 22857  2967  0141               	movlb	1	; select bank1
 22858  2968  082A               	movf	?___ftdiv^(0+128),w
 22859  2969  0140               	movlb	0	; select bank0
 22860  296A  00C8               	movwf	___ftmul@f1
 22861  296B  0141               	movlb	1	; select bank1
 22862  296C  082B               	movf	(?___ftdiv+1)^(0+128),w
 22863  296D  0140               	movlb	0	; select bank0
 22864  296E  00C9               	movwf	___ftmul@f1+1
 22865  296F  0141               	movlb	1	; select bank1
 22866  2970  082C               	movf	(?___ftdiv+2)^(0+128),w
 22867  2971  0140               	movlb	0	; select bank0
 22868  2972  00CA               	movwf	___ftmul@f1+2
 22869  2973  0141               	movlb	1	; select bank1
 22870  2974  0863               	movf	atan@val^(0+128),w
 22871  2975  0140               	movlb	0	; select bank0
 22872  2976  00CB               	movwf	___ftmul@f2
 22873  2977  0141               	movlb	1	; select bank1
 22874  2978  0864               	movf	(atan@val+1)^(0+128),w
 22875  2979  0140               	movlb	0	; select bank0
 22876  297A  00CC               	movwf	___ftmul@f2+1
 22877  297B  0141               	movlb	1	; select bank1
 22878  297C  0865               	movf	(atan@val+2)^(0+128),w
 22879  297D  0140               	movlb	0	; select bank0
 22880  297E  00CD               	movwf	___ftmul@f2+2
 22881  297F  31B9  218F  31A8   	fcall	___ftmul
 22882  2982  0140               	movlb	0	; select bank0
 22883  2983  0848               	movf	?___ftmul,w
 22884  2984  0141               	movlb	1	; select bank1
 22885  2985  00E3               	movwf	atan@val^(0+128)
 22886  2986  0140               	movlb	0	; select bank0
 22887  2987  0849               	movf	?___ftmul+1,w
 22888  2988  0141               	movlb	1	; select bank1
 22889  2989  00E4               	movwf	(atan@val+1)^(0+128)
 22890  298A  0140               	movlb	0	; select bank0
 22891  298B  084A               	movf	?___ftmul+2,w
 22892  298C  0141               	movlb	1	; select bank1
 22893  298D  00E5               	movwf	(atan@val+2)^(0+128)
 22894  298E  085F               	movf	atan@recip^(0+128),w
 22895  298F  1903               	btfsc	3,2
 22896  2990  29BD               	goto	l2913
 22897  2991  3010               	movlw	16
 22898  2992  0140               	movlb	0	; select bank0
 22899  2993  00BB               	movwf	___ftadd@f1
 22900  2994  30C9               	movlw	201
 22901  2995  00BC               	movwf	___ftadd@f1+1
 22902  2996  303F               	movlw	63
 22903  2997  00BD               	movwf	___ftadd@f1+2
 22904  2998  0141               	movlb	1	; select bank1
 22905  2999  0863               	movf	atan@val^(0+128),w
 22906  299A  00D0               	movwf	___ftneg@f1^(0+128)
 22907  299B  0864               	movf	(atan@val+1)^(0+128),w
 22908  299C  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 22909  299D  0865               	movf	(atan@val+2)^(0+128),w
 22910  299E  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 22911  299F  31E2  2209  31A8   	fcall	___ftneg
 22912  29A2  0141               	movlb	1	; select bank1
 22913  29A3  0850               	movf	?___ftneg^(0+128),w
 22914  29A4  0140               	movlb	0	; select bank0
 22915  29A5  00BE               	movwf	___ftadd@f2
 22916  29A6  0141               	movlb	1	; select bank1
 22917  29A7  0851               	movf	(?___ftneg+1)^(0+128),w
 22918  29A8  0140               	movlb	0	; select bank0
 22919  29A9  00BF               	movwf	___ftadd@f2+1
 22920  29AA  0141               	movlb	1	; select bank1
 22921  29AB  0852               	movf	(?___ftneg+2)^(0+128),w
 22922  29AC  0140               	movlb	0	; select bank0
 22923  29AD  00C0               	movwf	___ftadd@f2+2
 22924  29AE  31B0  2027  31A8   	fcall	___ftadd
 22925  29B1  0140               	movlb	0	; select bank0
 22926  29B2  083B               	movf	?___ftadd,w
 22927  29B3  0141               	movlb	1	; select bank1
 22928  29B4  00E3               	movwf	atan@val^(0+128)
 22929  29B5  0140               	movlb	0	; select bank0
 22930  29B6  083C               	movf	?___ftadd+1,w
 22931  29B7  0141               	movlb	1	; select bank1
 22932  29B8  00E4               	movwf	(atan@val+1)^(0+128)
 22933  29B9  0140               	movlb	0	; select bank0
 22934  29BA  083D               	movf	?___ftadd+2,w
 22935  29BB  0141               	movlb	1	; select bank1
 22936  29BC  00E5               	movwf	(atan@val+2)^(0+128)
 22937  29BD                     l2913:	
 22938  29BD  0856               	movf	atan@f^(0+128),w
 22939  29BE  0140               	movlb	0	; select bank0
 22940  29BF  00AB               	movwf	___ftge@ff1
 22941  29C0  0141               	movlb	1	; select bank1
 22942  29C1  0857               	movf	(atan@f+1)^(0+128),w
 22943  29C2  0140               	movlb	0	; select bank0
 22944  29C3  00AC               	movwf	___ftge@ff1+1
 22945  29C4  0141               	movlb	1	; select bank1
 22946  29C5  0858               	movf	(atan@f+2)^(0+128),w
 22947  29C6  0140               	movlb	0	; select bank0
 22948  29C7  00AD               	movwf	___ftge@ff1+2
 22949  29C8  3000               	movlw	0
 22950  29C9  00AE               	movwf	___ftge@ff2
 22951  29CA  3000               	movlw	0
 22952  29CB  00AF               	movwf	___ftge@ff2+1
 22953  29CC  3000               	movlw	0
 22954  29CD  00B0               	movwf	___ftge@ff2+2
 22955  29CE  31D6  2680  31A8   	fcall	___ftge
 22956  29D1  1C03               	btfss	3,0
 22957  29D2  29DB               	goto	l16698
 22958  29D3  0141               	movlb	1	; select bank1
 22959  29D4  0863               	movf	atan@val^(0+128),w
 22960  29D5  00D6               	movwf	?_atan^(0+128)
 22961  29D6  0864               	movf	(atan@val+1)^(0+128),w
 22962  29D7  00D7               	movwf	(?_atan+1)^(0+128)
 22963  29D8  0865               	movf	(atan@val+2)^(0+128),w
 22964  29D9  00D8               	movwf	(?_atan+2)^(0+128)
 22965  29DA  0008               	return
 22966  29DB                     l16698:	
 22967  29DB  0141               	movlb	1	; select bank1
 22968  29DC  0863               	movf	atan@val^(0+128),w
 22969  29DD  00D0               	movwf	___ftneg@f1^(0+128)
 22970  29DE  0864               	movf	(atan@val+1)^(0+128),w
 22971  29DF  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 22972  29E0  0865               	movf	(atan@val+2)^(0+128),w
 22973  29E1  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 22974  29E2  31E2  2209         	fcall	___ftneg
 22975  29E4  0141               	movlb	1	; select bank1
 22976  29E5  0850               	movf	?___ftneg^(0+128),w
 22977  29E6  00D6               	movwf	?_atan^(0+128)
 22978  29E7  0851               	movf	(?___ftneg+1)^(0+128),w
 22979  29E8  00D7               	movwf	(?_atan+1)^(0+128)
 22980  29E9  0852               	movf	(?___ftneg+2)^(0+128),w
 22981  29EA  00D8               	movwf	(?_atan+2)^(0+128)
 22982  29EB  0008               	return
 22983  29EC                     __end_of_atan:	
 22984                           
 22985                           	psect	text43
 22986  5359                     __ptext43:	
 22987 ;; *************** function _fabs *****************
 22988 ;; Defined at:
 22989 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 22990 ;; Parameters:    Size  Location     Type
 22991 ;;  d               3   51[BANK1 ] unsigned char 
 22992 ;; Auto vars:     Size  Location     Type
 22993 ;;		None
 22994 ;; Return value:  Size  Location     Type
 22995 ;;                  3   51[BANK1 ] unsigned char 
 22996 ;; Registers used:
 22997 ;;		wreg, status,2, status,0, pclath, cstack
 22998 ;; Tracked objects:
 22999 ;;		On entry : 0/0
 23000 ;;		On exit  : 0/0
 23001 ;;		Unchanged: 0/0
 23002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23003 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23006 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23007 ;;Total ram usage:        3 bytes
 23008 ;; Hardware stack levels used:    1
 23009 ;; Hardware stack levels required when called:    4
 23010 ;; This function calls:
 23011 ;;		___ftge
 23012 ;;		___ftneg
 23013 ;; This function is called by:
 23014 ;;		_atan
 23015 ;; This function uses a non-reentrant model
 23016 ;;
 23017                           
 23018                           
 23019                           ;psect for function _fabs
 23020  5359                     _fabs:	
 23021                           
 23022                           ;incstack = 0
 23023                           ; Regs used in _fabs: [wreg+status,2+status,0+pclath+cstack]
 23024  5359  0141               	movlb	1	; select bank1
 23025  535A  0853               	movf	fabs@d^(0+128),w
 23026  535B  0140               	movlb	0	; select bank0
 23027  535C  00AB               	movwf	___ftge@ff1
 23028  535D  0141               	movlb	1	; select bank1
 23029  535E  0854               	movf	(fabs@d+1)^(0+128),w
 23030  535F  0140               	movlb	0	; select bank0
 23031  5360  00AC               	movwf	___ftge@ff1+1
 23032  5361  0141               	movlb	1	; select bank1
 23033  5362  0855               	movf	(fabs@d+2)^(0+128),w
 23034  5363  0140               	movlb	0	; select bank0
 23035  5364  00AD               	movwf	___ftge@ff1+2
 23036  5365  3000               	movlw	0
 23037  5366  00AE               	movwf	___ftge@ff2
 23038  5367  3000               	movlw	0
 23039  5368  00AF               	movwf	___ftge@ff2+1
 23040  5369  3000               	movlw	0
 23041  536A  00B0               	movwf	___ftge@ff2+2
 23042  536B  31D6  2680  31D3   	fcall	___ftge
 23043  536E  1803               	btfsc	3,0
 23044  536F  0008               	return
 23045  5370  0141               	movlb	1	; select bank1
 23046  5371  0853               	movf	fabs@d^(0+128),w
 23047  5372  00D0               	movwf	___ftneg@f1^(0+128)
 23048  5373  0854               	movf	(fabs@d+1)^(0+128),w
 23049  5374  00D1               	movwf	(___ftneg@f1+1)^(0+128)
 23050  5375  0855               	movf	(fabs@d+2)^(0+128),w
 23051  5376  00D2               	movwf	(___ftneg@f1+2)^(0+128)
 23052  5377  31E2  2209         	fcall	___ftneg
 23053  5379  0141               	movlb	1	; select bank1
 23054  537A  0850               	movf	?___ftneg^(0+128),w
 23055  537B  00D3               	movwf	?_fabs^(0+128)
 23056  537C  0851               	movf	(?___ftneg+1)^(0+128),w
 23057  537D  00D4               	movwf	(?_fabs+1)^(0+128)
 23058  537E  0852               	movf	(?___ftneg+2)^(0+128),w
 23059  537F  00D5               	movwf	(?_fabs+2)^(0+128)
 23060  5380  0008               	return
 23061  5381                     __end_of_fabs:	
 23062                           
 23063                           	psect	text44
 23064  6209                     __ptext44:	
 23065 ;; *************** function ___ftneg *****************
 23066 ;; Defined at:
 23067 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 23068 ;; Parameters:    Size  Location     Type
 23069 ;;  f1              3   48[BANK1 ] float 
 23070 ;; Auto vars:     Size  Location     Type
 23071 ;;		None
 23072 ;; Return value:  Size  Location     Type
 23073 ;;                  3   48[BANK1 ] float 
 23074 ;; Registers used:
 23075 ;;		wreg
 23076 ;; Tracked objects:
 23077 ;;		On entry : 0/0
 23078 ;;		On exit  : 0/0
 23079 ;;		Unchanged: 0/0
 23080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23081 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23084 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23085 ;;Total ram usage:        3 bytes
 23086 ;; Hardware stack levels used:    1
 23087 ;; Hardware stack levels required when called:    3
 23088 ;; This function calls:
 23089 ;;		Nothing
 23090 ;; This function is called by:
 23091 ;;		_ini_ee_tempos
 23092 ;;		_atan
 23093 ;;		_fabs
 23094 ;;		_pow
 23095 ;;		_round
 23096 ;;		_sin
 23097 ;;		_exp
 23098 ;;		_conv_temp
 23099 ;; This function uses a non-reentrant model
 23100 ;;
 23101                           
 23102                           
 23103                           ;psect for function ___ftneg
 23104  6209                     ___ftneg:	
 23105                           
 23106                           ;incstack = 0
 23107                           ; Regs used in ___ftneg: [wreg]
 23108  6209  0141               	movlb	1	; select bank1
 23109  620A  0852               	movf	(___ftneg@f1+2)^(0+128),w
 23110  620B  0451               	iorwf	(___ftneg@f1+1)^(0+128),w
 23111  620C  0450               	iorwf	___ftneg@f1^(0+128),w
 23112  620D  1903               	skipnz
 23113  620E  0008               	return
 23114  620F  3080               	movlw	128
 23115  6210  06D2               	xorwf	(___ftneg@f1+2)^(0+128),f
 23116  6211  0008               	return
 23117  6212                     __end_of___ftneg:	
 23118                           
 23119                           	psect	text45
 23120  5680                     __ptext45:	
 23121 ;; *************** function ___ftge *****************
 23122 ;; Defined at:
 23123 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 23124 ;; Parameters:    Size  Location     Type
 23125 ;;  ff1             3   11[BANK0 ] float 
 23126 ;;  ff2             3   14[BANK0 ] float 
 23127 ;; Auto vars:     Size  Location     Type
 23128 ;;		None
 23129 ;; Return value:  Size  Location     Type
 23130 ;;		None               void
 23131 ;; Registers used:
 23132 ;;		wreg, status,2, status,0
 23133 ;; Tracked objects:
 23134 ;;		On entry : 0/0
 23135 ;;		On exit  : 0/0
 23136 ;;		Unchanged: 0/0
 23137 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23138 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23140 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23141 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23142 ;;Total ram usage:        9 bytes
 23143 ;; Hardware stack levels used:    1
 23144 ;; Hardware stack levels required when called:    3
 23145 ;; This function calls:
 23146 ;;		Nothing
 23147 ;; This function is called by:
 23148 ;;		_atan
 23149 ;;		_cos
 23150 ;;		_fabs
 23151 ;;		_pow
 23152 ;;		_sin
 23153 ;;		_sqrt
 23154 ;;		_exp
 23155 ;;		_floor
 23156 ;;		_ldexp
 23157 ;;		_log
 23158 ;; This function uses a non-reentrant model
 23159 ;;
 23160                           
 23161                           
 23162                           ;psect for function ___ftge
 23163  5680                     ___ftge:	
 23164                           
 23165                           ;incstack = 0
 23166                           ; Regs used in ___ftge: [wreg+status,2+status,0]
 23167  5680  0140               	movlb	0	; select bank0
 23168  5681  1FAD               	btfss	___ftge@ff1+2,7
 23169  5682  2E97               	goto	l14704
 23170  5683  092B               	comf	___ftge@ff1,w
 23171  5684  00B1               	movwf	??___ftge
 23172  5685  092C               	comf	___ftge@ff1+1,w
 23173  5686  00B2               	movwf	??___ftge+1
 23174  5687  092D               	comf	___ftge@ff1+2,w
 23175  5688  00B3               	movwf	??___ftge+2
 23176  5689  0AB1               	incf	??___ftge,f
 23177  568A  1903               	skipnz
 23178  568B  0AB2               	incf	??___ftge+1,f
 23179  568C  1903               	skipnz
 23180  568D  0AB3               	incf	??___ftge+2,f
 23181  568E  3000               	movlw	0
 23182  568F  0731               	addwf	??___ftge,w
 23183  5690  00AB               	movwf	___ftge@ff1
 23184  5691  3000               	movlw	0
 23185  5692  3D32               	addwfc	??___ftge+1,w
 23186  5693  00AC               	movwf	___ftge@ff1+1
 23187  5694  3080               	movlw	128
 23188  5695  3D33               	addwfc	??___ftge+2,w
 23189  5696  00AD               	movwf	___ftge@ff1+2
 23190  5697                     l14704:	
 23191  5697  1FB0               	btfss	___ftge@ff2+2,7
 23192  5698  2EAD               	goto	l14708
 23193  5699  092E               	comf	___ftge@ff2,w
 23194  569A  00B1               	movwf	??___ftge
 23195  569B  092F               	comf	___ftge@ff2+1,w
 23196  569C  00B2               	movwf	??___ftge+1
 23197  569D  0930               	comf	___ftge@ff2+2,w
 23198  569E  00B3               	movwf	??___ftge+2
 23199  569F  0AB1               	incf	??___ftge,f
 23200  56A0  1903               	skipnz
 23201  56A1  0AB2               	incf	??___ftge+1,f
 23202  56A2  1903               	skipnz
 23203  56A3  0AB3               	incf	??___ftge+2,f
 23204  56A4  3000               	movlw	0
 23205  56A5  0731               	addwf	??___ftge,w
 23206  56A6  00AE               	movwf	___ftge@ff2
 23207  56A7  3000               	movlw	0
 23208  56A8  3D32               	addwfc	??___ftge+1,w
 23209  56A9  00AF               	movwf	___ftge@ff2+1
 23210  56AA  3080               	movlw	128
 23211  56AB  3D33               	addwfc	??___ftge+2,w
 23212  56AC  00B0               	movwf	___ftge@ff2+2
 23213  56AD                     l14708:	
 23214  56AD  3080               	movlw	128
 23215  56AE  06AD               	xorwf	___ftge@ff1+2,f
 23216  56AF  3080               	movlw	128
 23217  56B0  06B0               	xorwf	___ftge@ff2+2,f
 23218  56B1  0830               	movf	___ftge@ff2+2,w
 23219  56B2  022D               	subwf	___ftge@ff1+2,w
 23220  56B3  1D03               	skipz
 23221  56B4  0008               	return
 23222  56B5  082F               	movf	___ftge@ff2+1,w
 23223  56B6  022C               	subwf	___ftge@ff1+1,w
 23224  56B7  1D03               	skipz
 23225  56B8  0008               	return
 23226  56B9  082E               	movf	___ftge@ff2,w
 23227  56BA  022B               	subwf	___ftge@ff1,w
 23228  56BB  0008               	return
 23229  56BC                     __end_of___ftge:	
 23230                           
 23231                           	psect	text46
 23232  414B                     __ptext46:	
 23233 ;; *************** function _eval_poly *****************
 23234 ;; Defined at:
 23235 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 23236 ;; Parameters:    Size  Location     Type
 23237 ;;  x               3    0[BANK1 ] float 
 23238 ;;  d               2    3[BANK1 ] PTR const 
 23239 ;;		 -> log@coeff(27), exp@coeff(30), sin@coeff_a(15), sin@coeff_b(12), 
 23240 ;;		 -> atan@coeff_a(18), atan@coeff_b(15), 
 23241 ;;  n               2    5[BANK1 ] int 
 23242 ;; Auto vars:     Size  Location     Type
 23243 ;;  res             3    7[BANK1 ] int 
 23244 ;; Return value:  Size  Location     Type
 23245 ;;                  3    0[BANK1 ] int 
 23246 ;; Registers used:
 23247 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 23248 ;; Tracked objects:
 23249 ;;		On entry : 0/0
 23250 ;;		On exit  : 0/0
 23251 ;;		Unchanged: 0/0
 23252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23253 ;;      Params:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23254 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23256 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23257 ;;Total ram usage:       10 bytes
 23258 ;; Hardware stack levels used:    1
 23259 ;; Hardware stack levels required when called:    5
 23260 ;; This function calls:
 23261 ;;		___ftadd
 23262 ;;		___ftmul
 23263 ;;		___wmul
 23264 ;; This function is called by:
 23265 ;;		_atan
 23266 ;;		_sin
 23267 ;;		_exp
 23268 ;;		_log
 23269 ;; This function uses a non-reentrant model
 23270 ;;
 23271                           
 23272                           
 23273                           ;psect for function _eval_poly
 23274  414B                     _eval_poly:	
 23275                           
 23276                           ;incstack = 0
 23277                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 23278  414B  0141               	movlb	1	; select bank1
 23279  414C  0826               	movf	(eval_poly@n+1)^(0+128),w
 23280  414D  0140               	movlb	0	; select bank0
 23281  414E  00AC               	movwf	___wmul@multiplier+1
 23282  414F  0141               	movlb	1	; select bank1
 23283  4150  0825               	movf	eval_poly@n^(0+128),w
 23284  4151  0140               	movlb	0	; select bank0
 23285  4152  00AB               	movwf	___wmul@multiplier
 23286  4153  3003               	movlw	3
 23287  4154  00AD               	movwf	___wmul@multiplicand
 23288  4155  3000               	movlw	0
 23289  4156  00AE               	movwf	___wmul@multiplicand+1
 23290  4157  31D0  20FE  31C1   	fcall	___wmul
 23291  415A  0141               	movlb	1	; select bank1
 23292  415B  0823               	movf	eval_poly@d^(0+128),w
 23293  415C  0140               	movlb	0	; select bank0
 23294  415D  072B               	addwf	?___wmul,w
 23295  415E  0084               	movwf	4
 23296  415F  0141               	movlb	1	; select bank1
 23297  4160  0824               	movf	(eval_poly@d+1)^(0+128),w
 23298  4161  0140               	movlb	0	; select bank0
 23299  4162  3D2C               	addwfc	?___wmul+1,w
 23300  4163  0085               	movwf	5
 23301  4164  3F00               	moviw [0]fsr0
 23302  4165  0141               	movlb	1	; select bank1
 23303  4166  00A7               	movwf	eval_poly@res^(0+128)
 23304  4167  3F01               	moviw [1]fsr0
 23305  4168  00A8               	movwf	(eval_poly@res+1)^(0+128)
 23306  4169  3F02               	moviw [2]fsr0
 23307  416A                     L45:	
 23308  416A  00A9               	movwf	(eval_poly@res+2)^(0+128)
 23309  416B  0825               	movf	eval_poly@n^(0+128),w
 23310  416C  0426               	iorwf	(eval_poly@n+1)^(0+128),w
 23311  416D  1903               	btfsc	3,2
 23312  416E  29C2               	goto	l15368
 23313  416F  30FF               	movlw	255
 23314  4170  07A5               	addwf	eval_poly@n^(0+128),f
 23315  4171  30FF               	movlw	255
 23316  4172  3DA6               	addwfc	(eval_poly@n+1)^(0+128),f
 23317  4173  0826               	movf	(eval_poly@n+1)^(0+128),w
 23318  4174  0140               	movlb	0	; select bank0
 23319  4175  00AC               	movwf	___wmul@multiplier+1
 23320  4176  0141               	movlb	1	; select bank1
 23321  4177  0825               	movf	eval_poly@n^(0+128),w
 23322  4178  0140               	movlb	0	; select bank0
 23323  4179  00AB               	movwf	___wmul@multiplier
 23324  417A  3003               	movlw	3
 23325  417B  00AD               	movwf	___wmul@multiplicand
 23326  417C  3000               	movlw	0
 23327  417D  00AE               	movwf	___wmul@multiplicand+1
 23328  417E  31D0  20FE  31C1   	fcall	___wmul
 23329  4181  0141               	movlb	1	; select bank1
 23330  4182  0823               	movf	eval_poly@d^(0+128),w
 23331  4183  0140               	movlb	0	; select bank0
 23332  4184  072B               	addwf	?___wmul,w
 23333  4185  0084               	movwf	4
 23334  4186  0141               	movlb	1	; select bank1
 23335  4187  0824               	movf	(eval_poly@d+1)^(0+128),w
 23336  4188  0140               	movlb	0	; select bank0
 23337  4189  3D2C               	addwfc	?___wmul+1,w
 23338  418A  0085               	movwf	5
 23339  418B  3F00               	moviw [0]fsr0
 23340  418C  00BB               	movwf	___ftadd@f1
 23341  418D  3F01               	moviw [1]fsr0
 23342  418E  00BC               	movwf	___ftadd@f1+1
 23343  418F  3F02               	moviw [2]fsr0
 23344  4190  00BD               	movwf	___ftadd@f1+2
 23345  4191  0141               	movlb	1	; select bank1
 23346  4192  0827               	movf	eval_poly@res^(0+128),w
 23347  4193  0140               	movlb	0	; select bank0
 23348  4194  00C8               	movwf	___ftmul@f1
 23349  4195  0141               	movlb	1	; select bank1
 23350  4196  0828               	movf	(eval_poly@res+1)^(0+128),w
 23351  4197  0140               	movlb	0	; select bank0
 23352  4198  00C9               	movwf	___ftmul@f1+1
 23353  4199  0141               	movlb	1	; select bank1
 23354  419A  0829               	movf	(eval_poly@res+2)^(0+128),w
 23355  419B  0140               	movlb	0	; select bank0
 23356  419C  00CA               	movwf	___ftmul@f1+2
 23357  419D  0141               	movlb	1	; select bank1
 23358  419E  0820               	movf	eval_poly@x^(0+128),w
 23359  419F  0140               	movlb	0	; select bank0
 23360  41A0  00CB               	movwf	___ftmul@f2
 23361  41A1  0141               	movlb	1	; select bank1
 23362  41A2  0821               	movf	(eval_poly@x+1)^(0+128),w
 23363  41A3  0140               	movlb	0	; select bank0
 23364  41A4  00CC               	movwf	___ftmul@f2+1
 23365  41A5  0141               	movlb	1	; select bank1
 23366  41A6  0822               	movf	(eval_poly@x+2)^(0+128),w
 23367  41A7  0140               	movlb	0	; select bank0
 23368  41A8  00CD               	movwf	___ftmul@f2+2
 23369  41A9  31B9  218F  31C1   	fcall	___ftmul
 23370  41AC  0140               	movlb	0	; select bank0
 23371  41AD  0848               	movf	?___ftmul,w
 23372  41AE  00BE               	movwf	___ftadd@f2
 23373  41AF  0849               	movf	?___ftmul+1,w
 23374  41B0  00BF               	movwf	___ftadd@f2+1
 23375  41B1  084A               	movf	?___ftmul+2,w
 23376  41B2  00C0               	movwf	___ftadd@f2+2
 23377  41B3  31B0  2027  31C1   	fcall	___ftadd
 23378  41B6  0140               	movlb	0	; select bank0
 23379  41B7  083B               	movf	?___ftadd,w
 23380  41B8  0141               	movlb	1	; select bank1
 23381  41B9  00A7               	movwf	eval_poly@res^(0+128)
 23382  41BA  0140               	movlb	0	; select bank0
 23383  41BB  083C               	movf	?___ftadd+1,w
 23384  41BC  0141               	movlb	1	; select bank1
 23385  41BD  00A8               	movwf	(eval_poly@res+1)^(0+128)
 23386  41BE  0140               	movlb	0	; select bank0
 23387  41BF  083D               	movf	?___ftadd+2,w
 23388  41C0  0141               	movlb	1	; select bank1
 23389  41C1  296A               	goto	L45
 23390  41C2                     l15368:	
 23391  41C2  0827               	movf	eval_poly@res^(0+128),w
 23392  41C3  00A0               	movwf	?_eval_poly^(0+128)
 23393  41C4  0828               	movf	(eval_poly@res+1)^(0+128),w
 23394  41C5  00A1               	movwf	(?_eval_poly+1)^(0+128)
 23395  41C6  0829               	movf	(eval_poly@res+2)^(0+128),w
 23396  41C7  00A2               	movwf	(?_eval_poly+2)^(0+128)
 23397  41C8  0008               	return
 23398  41C9                     __end_of_eval_poly:	
 23399                           
 23400                           	psect	text47
 23401  3027                     __ptext47:	
 23402 ;; *************** function ___ftadd *****************
 23403 ;; Defined at:
 23404 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 23405 ;; Parameters:    Size  Location     Type
 23406 ;;  f1              3   27[BANK0 ] float 
 23407 ;;  f2              3   30[BANK0 ] float 
 23408 ;; Auto vars:     Size  Location     Type
 23409 ;;  exp1            1   39[BANK0 ] unsigned char 
 23410 ;;  exp2            1   38[BANK0 ] unsigned char 
 23411 ;;  sign            1   37[BANK0 ] unsigned char 
 23412 ;; Return value:  Size  Location     Type
 23413 ;;                  3   27[BANK0 ] float 
 23414 ;; Registers used:
 23415 ;;		wreg, status,2, status,0, pclath, cstack
 23416 ;; Tracked objects:
 23417 ;;		On entry : 0/0
 23418 ;;		On exit  : 0/0
 23419 ;;		Unchanged: 0/0
 23420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23421 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23422 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23423 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23424 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23425 ;;Total ram usage:       13 bytes
 23426 ;; Hardware stack levels used:    1
 23427 ;; Hardware stack levels required when called:    4
 23428 ;; This function calls:
 23429 ;;		___ftpack
 23430 ;; This function is called by:
 23431 ;;		_ini_GERADOR
 23432 ;;		_get_temp
 23433 ;;		_ini_ee_tempos
 23434 ;;		_atan
 23435 ;;		_cos
 23436 ;;		_eval_poly
 23437 ;;		___ftsub
 23438 ;;		_round
 23439 ;;		_sin
 23440 ;;		_floor
 23441 ;;		_log
 23442 ;;		_conv_temp
 23443 ;; This function uses a non-reentrant model
 23444 ;;
 23445                           
 23446                           
 23447                           ;psect for function ___ftadd
 23448  3027                     ___ftadd:	
 23449                           
 23450                           ;incstack = 0
 23451                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
 23452  3027  0140               	movlb	0	; select bank0
 23453  3028  083B               	movf	___ftadd@f1,w
 23454  3029  00C1               	movwf	??___ftadd
 23455  302A  083C               	movf	___ftadd@f1+1,w
 23456  302B  00C2               	movwf	??___ftadd+1
 23457  302C  083D               	movf	___ftadd@f1+2,w
 23458  302D  00C3               	movwf	??___ftadd+2
 23459  302E  1003               	clrc
 23460  302F  0D42               	rlf	??___ftadd+1,w
 23461  3030  0D43               	rlf	??___ftadd+2,w
 23462  3031  00C4               	movwf	??___ftadd+3
 23463  3032  0844               	movf	??___ftadd+3,w
 23464  3033  00C7               	movwf	___ftadd@exp1
 23465  3034  083E               	movf	___ftadd@f2,w
 23466  3035  00C1               	movwf	??___ftadd
 23467  3036  083F               	movf	___ftadd@f2+1,w
 23468  3037  00C2               	movwf	??___ftadd+1
 23469  3038  0840               	movf	___ftadd@f2+2,w
 23470  3039  00C3               	movwf	??___ftadd+2
 23471  303A  1003               	clrc
 23472  303B  0D42               	rlf	??___ftadd+1,w
 23473  303C  0D43               	rlf	??___ftadd+2,w
 23474  303D  00C4               	movwf	??___ftadd+3
 23475  303E  0844               	movf	??___ftadd+3,w
 23476  303F  00C6               	movwf	___ftadd@exp2
 23477  3040  0847               	movf	___ftadd@exp1,w
 23478  3041  1903               	btfsc	3,2
 23479  3042  284F               	goto	l14636
 23480  3043  0846               	movf	___ftadd@exp2,w
 23481  3044  0247               	subwf	___ftadd@exp1,w
 23482  3045  1803               	skipnc
 23483  3046  2856               	goto	l14640
 23484  3047  0347               	decf	___ftadd@exp1,w
 23485  3048  3AFF               	xorlw	255
 23486  3049  0746               	addwf	___ftadd@exp2,w
 23487  304A  00C1               	movwf	??___ftadd
 23488  304B  3019               	movlw	25
 23489  304C  0241               	subwf	??___ftadd,w
 23490  304D  1C03               	skipc
 23491  304E  2856               	goto	l14640
 23492  304F                     l14636:	
 23493  304F  083E               	movf	___ftadd@f2,w
 23494  3050  00BB               	movwf	?___ftadd
 23495  3051  083F               	movf	___ftadd@f2+1,w
 23496  3052  00BC               	movwf	?___ftadd+1
 23497  3053  0840               	movf	___ftadd@f2+2,w
 23498  3054  00BD               	movwf	?___ftadd+2
 23499  3055  0008               	return
 23500  3056                     l14640:	
 23501  3056  0846               	movf	___ftadd@exp2,w
 23502  3057  1903               	btfsc	3,2
 23503  3058  0008               	return
 23504  3059  0847               	movf	___ftadd@exp1,w
 23505  305A  0246               	subwf	___ftadd@exp2,w
 23506  305B  1803               	skipnc
 23507  305C  2865               	goto	l14646
 23508  305D  0346               	decf	___ftadd@exp2,w
 23509  305E  3AFF               	xorlw	255
 23510  305F  0747               	addwf	___ftadd@exp1,w
 23511  3060  00C1               	movwf	??___ftadd
 23512  3061  3019               	movlw	25
 23513  3062  0241               	subwf	??___ftadd,w
 23514  3063  1803               	btfsc	3,0
 23515  3064  0008               	return
 23516  3065                     l14646:	
 23517  3065  3006               	movlw	6
 23518  3066  00C1               	movwf	??___ftadd
 23519  3067  0841               	movf	??___ftadd,w
 23520  3068  00C5               	movwf	___ftadd@sign
 23521  3069  1BBD               	btfsc	___ftadd@f1+2,7
 23522  306A  17C5               	bsf	___ftadd@sign,7
 23523  306B  1BC0               	btfsc	___ftadd@f2+2,7
 23524  306C  1745               	bsf	___ftadd@sign,6
 23525  306D  17BC               	bsf	___ftadd@f1+1,7
 23526  306E  30FF               	movlw	255
 23527  306F  05BB               	andwf	___ftadd@f1,f
 23528  3070  30FF               	movlw	255
 23529  3071  05BC               	andwf	___ftadd@f1+1,f
 23530  3072  3000               	movlw	0
 23531  3073  05BD               	andwf	___ftadd@f1+2,f
 23532  3074  17BF               	bsf	___ftadd@f2+1,7
 23533  3075  30FF               	movlw	255
 23534  3076  05BE               	andwf	___ftadd@f2,f
 23535  3077  30FF               	movlw	255
 23536  3078  05BF               	andwf	___ftadd@f2+1,f
 23537  3079  3000               	movlw	0
 23538  307A  05C0               	andwf	___ftadd@f2+2,f
 23539  307B  0846               	movf	___ftadd@exp2,w
 23540  307C  0247               	subwf	___ftadd@exp1,w
 23541  307D  1803               	skipnc
 23542  307E  28A1               	goto	l14668
 23543  307F                     l14658:	
 23544  307F  3001               	movlw	1
 23545  3080                     u15615:	
 23546  3080  35BE               	lslf	___ftadd@f2,f
 23547  3081  0DBF               	rlf	___ftadd@f2+1,f
 23548  3082  0DC0               	rlf	___ftadd@f2+2,f
 23549  3083  0B89               	decfsz	9,f
 23550  3084  2880               	goto	u15615
 23551  3085  3001               	movlw	1
 23552  3086  02C6               	subwf	___ftadd@exp2,f
 23553  3087  0846               	movf	___ftadd@exp2,w
 23554  3088  0647               	xorwf	___ftadd@exp1,w
 23555  3089  1903               	skipnz
 23556  308A  289C               	goto	l14666
 23557  308B  3001               	movlw	1
 23558  308C  02C5               	subwf	___ftadd@sign,f
 23559  308D  0845               	movf	___ftadd@sign,w
 23560  308E  3907               	andlw	7
 23561  308F  1903               	btfsc	3,2
 23562  3090  289C               	goto	l14666
 23563  3091  287F               	goto	l14658
 23564  3092                     l14664:	
 23565  3092  3001               	movlw	1
 23566  3093                     u15645:	
 23567  3093  36BD               	lsrf	___ftadd@f1+2,f
 23568  3094  0CBC               	rrf	___ftadd@f1+1,f
 23569  3095  0CBB               	rrf	___ftadd@f1,f
 23570  3096  0B89               	decfsz	9,f
 23571  3097  2893               	goto	u15645
 23572  3098  3001               	movlw	1
 23573  3099  00C1               	movwf	??___ftadd
 23574  309A  0841               	movf	??___ftadd,w
 23575  309B  07C7               	addwf	___ftadd@exp1,f
 23576  309C                     l14666:	
 23577  309C  0847               	movf	___ftadd@exp1,w
 23578  309D  0646               	xorwf	___ftadd@exp2,w
 23579  309E  1903               	btfsc	3,2
 23580  309F  28C6               	goto	l3038
 23581  30A0  2892               	goto	l14664
 23582  30A1                     l14668:	
 23583  30A1  0847               	movf	___ftadd@exp1,w
 23584  30A2  0246               	subwf	___ftadd@exp2,w
 23585  30A3  1803               	skipnc
 23586  30A4  28C6               	goto	l3038
 23587  30A5                     l14670:	
 23588  30A5  3001               	movlw	1
 23589  30A6                     u15675:	
 23590  30A6  35BB               	lslf	___ftadd@f1,f
 23591  30A7  0DBC               	rlf	___ftadd@f1+1,f
 23592  30A8  0DBD               	rlf	___ftadd@f1+2,f
 23593  30A9  0B89               	decfsz	9,f
 23594  30AA  28A6               	goto	u15675
 23595  30AB  3001               	movlw	1
 23596  30AC  02C7               	subwf	___ftadd@exp1,f
 23597  30AD  0846               	movf	___ftadd@exp2,w
 23598  30AE  0647               	xorwf	___ftadd@exp1,w
 23599  30AF  1903               	skipnz
 23600  30B0  28C2               	goto	l14678
 23601  30B1  3001               	movlw	1
 23602  30B2  02C5               	subwf	___ftadd@sign,f
 23603  30B3  0845               	movf	___ftadd@sign,w
 23604  30B4  3907               	andlw	7
 23605  30B5  1903               	btfsc	3,2
 23606  30B6  28C2               	goto	l14678
 23607  30B7  28A5               	goto	l14670
 23608  30B8                     l14676:	
 23609  30B8  3001               	movlw	1
 23610  30B9                     u15705:	
 23611  30B9  36C0               	lsrf	___ftadd@f2+2,f
 23612  30BA  0CBF               	rrf	___ftadd@f2+1,f
 23613  30BB  0CBE               	rrf	___ftadd@f2,f
 23614  30BC  0B89               	decfsz	9,f
 23615  30BD  28B9               	goto	u15705
 23616  30BE  3001               	movlw	1
 23617  30BF  00C1               	movwf	??___ftadd
 23618  30C0  0841               	movf	??___ftadd,w
 23619  30C1  07C6               	addwf	___ftadd@exp2,f
 23620  30C2                     l14678:	
 23621  30C2  0847               	movf	___ftadd@exp1,w
 23622  30C3  0646               	xorwf	___ftadd@exp2,w
 23623  30C4  1D03               	skipz
 23624  30C5  28B8               	goto	l14676
 23625  30C6                     l3038:	
 23626  30C6  1FC5               	btfss	___ftadd@sign,7
 23627  30C7  28D8               	goto	l14682
 23628  30C8  30FF               	movlw	255
 23629  30C9  06BB               	xorwf	___ftadd@f1,f
 23630  30CA  30FF               	movlw	255
 23631  30CB  06BC               	xorwf	___ftadd@f1+1,f
 23632  30CC  30FF               	movlw	255
 23633  30CD  06BD               	xorwf	___ftadd@f1+2,f
 23634  30CE  3001               	movlw	1
 23635  30CF  07BB               	addwf	___ftadd@f1,f
 23636  30D0  3000               	movlw	0
 23637  30D1  1803               	skipnc
 23638  30D2  3001               	movlw	1
 23639  30D3  07BC               	addwf	___ftadd@f1+1,f
 23640  30D4  3000               	movlw	0
 23641  30D5  1803               	skipnc
 23642  30D6  3001               	movlw	1
 23643  30D7  07BD               	addwf	___ftadd@f1+2,f
 23644  30D8                     l14682:	
 23645  30D8  1F45               	btfss	___ftadd@sign,6
 23646  30D9  28EA               	goto	l14686
 23647  30DA  30FF               	movlw	255
 23648  30DB  06BE               	xorwf	___ftadd@f2,f
 23649  30DC  30FF               	movlw	255
 23650  30DD  06BF               	xorwf	___ftadd@f2+1,f
 23651  30DE  30FF               	movlw	255
 23652  30DF  06C0               	xorwf	___ftadd@f2+2,f
 23653  30E0  3001               	movlw	1
 23654  30E1  07BE               	addwf	___ftadd@f2,f
 23655  30E2  3000               	movlw	0
 23656  30E3  1803               	skipnc
 23657  30E4  3001               	movlw	1
 23658  30E5  07BF               	addwf	___ftadd@f2+1,f
 23659  30E6  3000               	movlw	0
 23660  30E7  1803               	skipnc
 23661  30E8  3001               	movlw	1
 23662  30E9  07C0               	addwf	___ftadd@f2+2,f
 23663  30EA                     l14686:	
 23664  30EA  01C5               	clrf	___ftadd@sign
 23665  30EB  083B               	movf	___ftadd@f1,w
 23666  30EC  07BE               	addwf	___ftadd@f2,f
 23667  30ED  083C               	movf	___ftadd@f1+1,w
 23668  30EE  3DBF               	addwfc	___ftadd@f2+1,f
 23669  30EF  083D               	movf	___ftadd@f1+2,w
 23670  30F0  3DC0               	addwfc	___ftadd@f2+2,f
 23671  30F1  1FC0               	btfss	___ftadd@f2+2,7
 23672  30F2  2905               	goto	l14696
 23673  30F3  30FF               	movlw	255
 23674  30F4  06BE               	xorwf	___ftadd@f2,f
 23675  30F5  30FF               	movlw	255
 23676  30F6  06BF               	xorwf	___ftadd@f2+1,f
 23677  30F7  30FF               	movlw	255
 23678  30F8  06C0               	xorwf	___ftadd@f2+2,f
 23679  30F9  3001               	movlw	1
 23680  30FA  07BE               	addwf	___ftadd@f2,f
 23681  30FB  3000               	movlw	0
 23682  30FC  1803               	skipnc
 23683  30FD  3001               	movlw	1
 23684  30FE  07BF               	addwf	___ftadd@f2+1,f
 23685  30FF  3000               	movlw	0
 23686  3100  1803               	skipnc
 23687  3101  3001               	movlw	1
 23688  3102  07C0               	addwf	___ftadd@f2+2,f
 23689  3103  01C5               	clrf	___ftadd@sign
 23690  3104  0AC5               	incf	___ftadd@sign,f
 23691  3105                     l14696:	
 23692  3105  083E               	movf	___ftadd@f2,w
 23693  3106  00AB               	movwf	___ftpack@arg
 23694  3107  083F               	movf	___ftadd@f2+1,w
 23695  3108  00AC               	movwf	___ftpack@arg+1
 23696  3109  0840               	movf	___ftadd@f2+2,w
 23697  310A  00AD               	movwf	___ftpack@arg+2
 23698  310B  0847               	movf	___ftadd@exp1,w
 23699  310C  00C1               	movwf	??___ftadd
 23700  310D  0841               	movf	??___ftadd,w
 23701  310E  00AE               	movwf	___ftpack@exp
 23702  310F  0845               	movf	___ftadd@sign,w
 23703  3110  00C2               	movwf	??___ftadd+1
 23704  3111  0842               	movf	??___ftadd+1,w
 23705  3112  00AF               	movwf	___ftpack@sign
 23706  3113  31CD  25EF         	fcall	___ftpack
 23707  3115  0140               	movlb	0	; select bank0
 23708  3116  082B               	movf	?___ftpack,w
 23709  3117  00BB               	movwf	?___ftadd
 23710  3118  082C               	movf	?___ftpack+1,w
 23711  3119  00BC               	movwf	?___ftadd+1
 23712  311A  082D               	movf	?___ftpack+2,w
 23713  311B  00BD               	movwf	?___ftadd+2
 23714  311C  0008               	return
 23715  311D                     __end_of___ftadd:	
 23716                           
 23717                           	psect	text48
 23718  424A                     __ptext48:	
 23719 ;; *************** function _XC *****************
 23720 ;; Defined at:
 23721 ;;		line 316 in file "func.c"
 23722 ;; Parameters:    Size  Location     Type
 23723 ;;  f               2   26[BANK1 ] unsigned int 
 23724 ;;  nF              2   28[BANK1 ] unsigned int 
 23725 ;; Auto vars:     Size  Location     Type
 23726 ;;  freq_l          3   30[BANK1 ] float 
 23727 ;; Return value:  Size  Location     Type
 23728 ;;                  3   26[BANK1 ] float 
 23729 ;; Registers used:
 23730 ;;		wreg, status,2, status,0, pclath, cstack
 23731 ;; Tracked objects:
 23732 ;;		On entry : 0/0
 23733 ;;		On exit  : 0/0
 23734 ;;		Unchanged: 0/0
 23735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23736 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23737 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23739 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23740 ;;Total ram usage:       10 bytes
 23741 ;; Hardware stack levels used:    1
 23742 ;; Hardware stack levels required when called:    5
 23743 ;; This function calls:
 23744 ;;		___ftdiv
 23745 ;;		___ftmul
 23746 ;;		___lwdiv
 23747 ;;		___lwtoft
 23748 ;; This function is called by:
 23749 ;;		_ini_GERADOR
 23750 ;; This function uses a non-reentrant model
 23751 ;;
 23752                           
 23753                           
 23754                           ;psect for function _XC
 23755  424A                     _XC:	
 23756                           
 23757                           ;func.c: 317: float freq_l = f/1000;
 23758                           
 23759                           ;incstack = 0
 23760                           ; Regs used in _XC: [wreg+status,2+status,0+pclath+cstack]
 23761  424A  30E8               	movlw	232
 23762  424B  0140               	movlb	0	; select bank0
 23763  424C  00AB               	movwf	___lwdiv@divisor
 23764  424D  3003               	movlw	3
 23765  424E  00AC               	movwf	___lwdiv@divisor+1
 23766  424F  0141               	movlb	1	; select bank1
 23767  4250  083B               	movf	(XC@f+1)^(0+128),w
 23768  4251  0140               	movlb	0	; select bank0
 23769  4252  00AE               	movwf	___lwdiv@dividend+1
 23770  4253  0141               	movlb	1	; select bank1
 23771  4254  083A               	movf	XC@f^(0+128),w
 23772  4255  0140               	movlb	0	; select bank0
 23773  4256  00AD               	movwf	___lwdiv@dividend
 23774  4257  31D5  25A3  31C2   	fcall	___lwdiv
 23775  425A  0140               	movlb	0	; select bank0
 23776  425B  082C               	movf	?___lwdiv+1,w
 23777  425C  00B4               	movwf	___lwtoft@c+1
 23778  425D  082B               	movf	?___lwdiv,w
 23779  425E  00B3               	movwf	___lwtoft@c
 23780  425F  31E7  27EB  31C2   	fcall	___lwtoft
 23781  4262  0140               	movlb	0	; select bank0
 23782  4263  0833               	movf	?___lwtoft,w
 23783  4264  0141               	movlb	1	; select bank1
 23784  4265  00BE               	movwf	XC@freq_l^(0+128)
 23785  4266  0140               	movlb	0	; select bank0
 23786  4267  0834               	movf	?___lwtoft+1,w
 23787  4268  0141               	movlb	1	; select bank1
 23788  4269  00BF               	movwf	(XC@freq_l+1)^(0+128)
 23789  426A  0140               	movlb	0	; select bank0
 23790  426B  0835               	movf	?___lwtoft+2,w
 23791  426C  0141               	movlb	1	; select bank1
 23792  426D  00C0               	movwf	(XC@freq_l+2)^(0+128)
 23793                           
 23794                           ;func.c: 318: return(1000000/(6.28*freq_l*nF));
 23795  426E  083E               	movf	XC@freq_l^(0+128),w
 23796  426F  0140               	movlb	0	; select bank0
 23797  4270  00C8               	movwf	___ftmul@f1
 23798  4271  0141               	movlb	1	; select bank1
 23799  4272  083F               	movf	(XC@freq_l+1)^(0+128),w
 23800  4273  0140               	movlb	0	; select bank0
 23801  4274  00C9               	movwf	___ftmul@f1+1
 23802  4275  0141               	movlb	1	; select bank1
 23803  4276  0840               	movf	(XC@freq_l+2)^(0+128),w
 23804  4277  0140               	movlb	0	; select bank0
 23805  4278  00CA               	movwf	___ftmul@f1+2
 23806  4279  0141               	movlb	1	; select bank1
 23807  427A  083D               	movf	(XC@nF+1)^(0+128),w
 23808  427B  0140               	movlb	0	; select bank0
 23809  427C  00B4               	movwf	___lwtoft@c+1
 23810  427D  0141               	movlb	1	; select bank1
 23811  427E  083C               	movf	XC@nF^(0+128),w
 23812  427F  0140               	movlb	0	; select bank0
 23813  4280  00B3               	movwf	___lwtoft@c
 23814  4281  31E7  27EB  31C2   	fcall	___lwtoft
 23815  4284  0140               	movlb	0	; select bank0
 23816  4285  0833               	movf	?___lwtoft,w
 23817  4286  00CB               	movwf	___ftmul@f2
 23818  4287  0834               	movf	?___lwtoft+1,w
 23819  4288  00CC               	movwf	___ftmul@f2+1
 23820  4289  0835               	movf	?___lwtoft+2,w
 23821  428A  00CD               	movwf	___ftmul@f2+2
 23822  428B  31B9  218F  31C2   	fcall	___ftmul
 23823  428E  0140               	movlb	0	; select bank0
 23824  428F  0848               	movf	?___ftmul,w
 23825  4290  0141               	movlb	1	; select bank1
 23826  4291  00C1               	movwf	_XC$4261^(0+128)
 23827  4292  0140               	movlb	0	; select bank0
 23828  4293  0849               	movf	?___ftmul+1,w
 23829  4294  0141               	movlb	1	; select bank1
 23830  4295  00C2               	movwf	(_XC$4261+1)^(0+128)
 23831  4296  0140               	movlb	0	; select bank0
 23832  4297  084A               	movf	?___ftmul+2,w
 23833  4298  0141               	movlb	1	; select bank1
 23834  4299  00C3               	movwf	(_XC$4261+2)^(0+128)
 23835                           
 23836                           ;func.c: 318: return(1000000/(6.28*freq_l*nF));
 23837  429A  30F6               	movlw	246
 23838  429B  0140               	movlb	0	; select bank0
 23839  429C  00C8               	movwf	___ftmul@f1
 23840  429D  30C8               	movlw	200
 23841  429E  00C9               	movwf	___ftmul@f1+1
 23842  429F  3040               	movlw	64
 23843  42A0  00CA               	movwf	___ftmul@f1+2
 23844  42A1  0141               	movlb	1	; select bank1
 23845  42A2  0841               	movf	_XC$4261^(0+128),w
 23846  42A3  0140               	movlb	0	; select bank0
 23847  42A4  00CB               	movwf	___ftmul@f2
 23848  42A5  0141               	movlb	1	; select bank1
 23849  42A6  0842               	movf	(_XC$4261+1)^(0+128),w
 23850  42A7  0140               	movlb	0	; select bank0
 23851  42A8  00CC               	movwf	___ftmul@f2+1
 23852  42A9  0141               	movlb	1	; select bank1
 23853  42AA  0843               	movf	(_XC$4261+2)^(0+128),w
 23854  42AB  0140               	movlb	0	; select bank0
 23855  42AC  00CD               	movwf	___ftmul@f2+2
 23856  42AD  31B9  218F  31C2   	fcall	___ftmul
 23857  42B0  0140               	movlb	0	; select bank0
 23858  42B1  0848               	movf	?___ftmul,w
 23859  42B2  0141               	movlb	1	; select bank1
 23860  42B3  00AA               	movwf	___ftdiv@f2^(0+128)
 23861  42B4  0140               	movlb	0	; select bank0
 23862  42B5  0849               	movf	?___ftmul+1,w
 23863  42B6  0141               	movlb	1	; select bank1
 23864  42B7  00AB               	movwf	(___ftdiv@f2+1)^(0+128)
 23865  42B8  0140               	movlb	0	; select bank0
 23866  42B9  084A               	movf	?___ftmul+2,w
 23867  42BA  0141               	movlb	1	; select bank1
 23868  42BB  00AC               	movwf	(___ftdiv@f2+2)^(0+128)
 23869  42BC  3024               	movlw	36
 23870  42BD  00AD               	movwf	___ftdiv@f1^(0+128)
 23871  42BE  3074               	movlw	116
 23872  42BF  00AE               	movwf	(___ftdiv@f1+1)^(0+128)
 23873  42C0  3049               	movlw	73
 23874  42C1  00AF               	movwf	(___ftdiv@f1+2)^(0+128)
 23875  42C2  31BA  2243         	fcall	___ftdiv
 23876  42C4  0141               	movlb	1	; select bank1
 23877  42C5  082A               	movf	?___ftdiv^(0+128),w
 23878  42C6  00BA               	movwf	?_XC^(0+128)
 23879  42C7  082B               	movf	(?___ftdiv+1)^(0+128),w
 23880  42C8  00BB               	movwf	(?_XC+1)^(0+128)
 23881  42C9  082C               	movf	(?___ftdiv+2)^(0+128),w
 23882  42CA  00BC               	movwf	(?_XC+2)^(0+128)
 23883  42CB  0008               	return
 23884  42CC                     __end_of_XC:	
 23885                           
 23886                           	psect	text49
 23887  67EB                     __ptext49:	
 23888 ;; *************** function ___lwtoft *****************
 23889 ;; Defined at:
 23890 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 23891 ;; Parameters:    Size  Location     Type
 23892 ;;  c               2   19[BANK0 ] unsigned int 
 23893 ;; Auto vars:     Size  Location     Type
 23894 ;;		None
 23895 ;; Return value:  Size  Location     Type
 23896 ;;                  3   19[BANK0 ] float 
 23897 ;; Registers used:
 23898 ;;		wreg, status,2, status,0, pclath, cstack
 23899 ;; Tracked objects:
 23900 ;;		On entry : 0/0
 23901 ;;		On exit  : 0/0
 23902 ;;		Unchanged: 0/0
 23903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23904 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23907 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23908 ;;Total ram usage:        4 bytes
 23909 ;; Hardware stack levels used:    1
 23910 ;; Hardware stack levels required when called:    4
 23911 ;; This function calls:
 23912 ;;		___ftpack
 23913 ;; This function is called by:
 23914 ;;		_ini_GERADOR
 23915 ;;		_XC
 23916 ;; This function uses a non-reentrant model
 23917 ;;
 23918                           
 23919                           
 23920                           ;psect for function ___lwtoft
 23921  67EB                     ___lwtoft:	
 23922                           
 23923                           ;incstack = 0
 23924                           ; Regs used in ___lwtoft: [wreg+status,2+status,0+pclath+cstack]
 23925  67EB  0140               	movlb	0	; select bank0
 23926  67EC  0833               	movf	___lwtoft@c,w
 23927  67ED  00AB               	movwf	___ftpack@arg
 23928  67EE  0834               	movf	___lwtoft@c+1,w
 23929  67EF  00AC               	movwf	___ftpack@arg+1
 23930  67F0  01AD               	clrf	___ftpack@arg+2
 23931  67F1  308E               	movlw	142
 23932  67F2  00B6               	movwf	??___lwtoft
 23933  67F3  0836               	movf	??___lwtoft,w
 23934  67F4  00AE               	movwf	___ftpack@exp
 23935  67F5  01AF               	clrf	___ftpack@sign
 23936  67F6  31CD  25EF         	fcall	___ftpack
 23937  67F8  0140               	movlb	0	; select bank0
 23938  67F9  082B               	movf	?___ftpack,w
 23939  67FA  00B3               	movwf	?___lwtoft
 23940  67FB  082C               	movf	?___ftpack+1,w
 23941  67FC  00B4               	movwf	?___lwtoft+1
 23942  67FD  082D               	movf	?___ftpack+2,w
 23943  67FE  00B5               	movwf	?___lwtoft+2
 23944  67FF  0008               	return
 23945  6800                     __end_of___lwtoft:	
 23946                           
 23947                           	psect	text50
 23948  398F                     __ptext50:	
 23949 ;; *************** function ___ftmul *****************
 23950 ;; Defined at:
 23951 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 23952 ;; Parameters:    Size  Location     Type
 23953 ;;  f1              3   40[BANK0 ] float 
 23954 ;;  f2              3   43[BANK0 ] float 
 23955 ;; Auto vars:     Size  Location     Type
 23956 ;;  f3_as_produc    3   51[BANK0 ] unsigned um
 23957 ;;  sign            1   55[BANK0 ] unsigned char 
 23958 ;;  cntr            1   54[BANK0 ] unsigned char 
 23959 ;;  exp             1   50[BANK0 ] unsigned char 
 23960 ;; Return value:  Size  Location     Type
 23961 ;;                  3   40[BANK0 ] float 
 23962 ;; Registers used:
 23963 ;;		wreg, status,2, status,0, pclath, cstack
 23964 ;; Tracked objects:
 23965 ;;		On entry : 0/0
 23966 ;;		On exit  : 0/0
 23967 ;;		Unchanged: 0/0
 23968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 23969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23970 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23971 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23972 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 23973 ;;Total ram usage:       16 bytes
 23974 ;; Hardware stack levels used:    1
 23975 ;; Hardware stack levels required when called:    4
 23976 ;; This function calls:
 23977 ;;		___ftpack
 23978 ;; This function is called by:
 23979 ;;		_ini_GERADOR
 23980 ;;		_XC
 23981 ;;		_ini_ee_tempos
 23982 ;;		_atan
 23983 ;;		_eval_poly
 23984 ;;		_pow
 23985 ;;		_sin
 23986 ;;		_sqrt
 23987 ;;		_exp
 23988 ;;		_log
 23989 ;;		_conv_temp
 23990 ;; This function uses a non-reentrant model
 23991 ;;
 23992                           
 23993                           
 23994                           ;psect for function ___ftmul
 23995  398F                     ___ftmul:	
 23996                           
 23997                           ;incstack = 0
 23998                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
 23999  398F  0140               	movlb	0	; select bank0
 24000  3990  0848               	movf	___ftmul@f1,w
 24001  3991  00CE               	movwf	??___ftmul
 24002  3992  0849               	movf	___ftmul@f1+1,w
 24003  3993  00CF               	movwf	??___ftmul+1
 24004  3994  084A               	movf	___ftmul@f1+2,w
 24005  3995  00D0               	movwf	??___ftmul+2
 24006  3996  1003               	clrc
 24007  3997  0D4F               	rlf	??___ftmul+1,w
 24008  3998  0D50               	rlf	??___ftmul+2,w
 24009  3999  00D1               	movwf	??___ftmul+3
 24010  399A  0851               	movf	??___ftmul+3,w
 24011  399B  00D2               	movwf	___ftmul@exp
 24012  399C  0852               	movf	___ftmul@exp,w
 24013  399D  1D03               	btfss	3,2
 24014  399E  29A6               	goto	l14726
 24015  399F  3000               	movlw	0
 24016  39A0  00C8               	movwf	?___ftmul
 24017  39A1  3000               	movlw	0
 24018  39A2  00C9               	movwf	?___ftmul+1
 24019  39A3  3000               	movlw	0
 24020  39A4  00CA               	movwf	?___ftmul+2
 24021  39A5  0008               	return
 24022  39A6                     l14726:	
 24023  39A6  084B               	movf	___ftmul@f2,w
 24024  39A7  00CE               	movwf	??___ftmul
 24025  39A8  084C               	movf	___ftmul@f2+1,w
 24026  39A9  00CF               	movwf	??___ftmul+1
 24027  39AA  084D               	movf	___ftmul@f2+2,w
 24028  39AB  00D0               	movwf	??___ftmul+2
 24029  39AC  1003               	clrc
 24030  39AD  0D4F               	rlf	??___ftmul+1,w
 24031  39AE  0D50               	rlf	??___ftmul+2,w
 24032  39AF  00D1               	movwf	??___ftmul+3
 24033  39B0  0851               	movf	??___ftmul+3,w
 24034  39B1  00D7               	movwf	___ftmul@sign
 24035  39B2  0857               	movf	___ftmul@sign,w
 24036  39B3  1D03               	btfss	3,2
 24037  39B4  29BC               	goto	l14732
 24038  39B5  3000               	movlw	0
 24039  39B6  00C8               	movwf	?___ftmul
 24040  39B7  3000               	movlw	0
 24041  39B8  00C9               	movwf	?___ftmul+1
 24042  39B9  3000               	movlw	0
 24043  39BA  00CA               	movwf	?___ftmul+2
 24044  39BB  0008               	return
 24045  39BC                     l14732:	
 24046  39BC  0857               	movf	___ftmul@sign,w
 24047  39BD  3E7B               	addlw	123
 24048  39BE  00CE               	movwf	??___ftmul
 24049  39BF  084E               	movf	??___ftmul,w
 24050  39C0  07D2               	addwf	___ftmul@exp,f
 24051  39C1  0848               	movf	___ftmul@f1,w
 24052  39C2  00CE               	movwf	??___ftmul
 24053  39C3  0849               	movf	___ftmul@f1+1,w
 24054  39C4  00CF               	movwf	??___ftmul+1
 24055  39C5  084A               	movf	___ftmul@f1+2,w
 24056  39C6  00D0               	movwf	??___ftmul+2
 24057  39C7  3010               	movlw	16
 24058  39C8                     u15805:	
 24059  39C8  36D0               	lsrf	??___ftmul+2,f
 24060  39C9  0CCF               	rrf	??___ftmul+1,f
 24061  39CA  0CCE               	rrf	??___ftmul,f
 24062  39CB  0B89               	decfsz	9,f
 24063  39CC  29C8               	goto	u15805
 24064  39CD  084E               	movf	??___ftmul,w
 24065  39CE  00D1               	movwf	??___ftmul+3
 24066  39CF  0851               	movf	??___ftmul+3,w
 24067  39D0  00D7               	movwf	___ftmul@sign
 24068  39D1  084B               	movf	___ftmul@f2,w
 24069  39D2  00CE               	movwf	??___ftmul
 24070  39D3  084C               	movf	___ftmul@f2+1,w
 24071  39D4  00CF               	movwf	??___ftmul+1
 24072  39D5  084D               	movf	___ftmul@f2+2,w
 24073  39D6  00D0               	movwf	??___ftmul+2
 24074  39D7  3010               	movlw	16
 24075  39D8                     u15815:	
 24076  39D8  36D0               	lsrf	??___ftmul+2,f
 24077  39D9  0CCF               	rrf	??___ftmul+1,f
 24078  39DA  0CCE               	rrf	??___ftmul,f
 24079  39DB  0B89               	decfsz	9,f
 24080  39DC  29D8               	goto	u15815
 24081  39DD  084E               	movf	??___ftmul,w
 24082  39DE  00D1               	movwf	??___ftmul+3
 24083  39DF  0851               	movf	??___ftmul+3,w
 24084  39E0  06D7               	xorwf	___ftmul@sign,f
 24085  39E1  3080               	movlw	128
 24086  39E2  00CE               	movwf	??___ftmul
 24087  39E3  084E               	movf	??___ftmul,w
 24088  39E4  05D7               	andwf	___ftmul@sign,f
 24089  39E5  17C9               	bsf	___ftmul@f1+1,7
 24090  39E6  17CC               	bsf	___ftmul@f2+1,7
 24091  39E7  30FF               	movlw	255
 24092  39E8  05CB               	andwf	___ftmul@f2,f
 24093  39E9  30FF               	movlw	255
 24094  39EA  05CC               	andwf	___ftmul@f2+1,f
 24095  39EB  3000               	movlw	0
 24096  39EC  05CD               	andwf	___ftmul@f2+2,f
 24097  39ED  3000               	movlw	0
 24098  39EE  00D3               	movwf	___ftmul@f3_as_product
 24099  39EF  3000               	movlw	0
 24100  39F0  00D4               	movwf	___ftmul@f3_as_product+1
 24101  39F1  3000               	movlw	0
 24102  39F2  00D5               	movwf	___ftmul@f3_as_product+2
 24103  39F3  3007               	movlw	7
 24104  39F4  00CE               	movwf	??___ftmul
 24105  39F5  084E               	movf	??___ftmul,w
 24106  39F6  00D6               	movwf	___ftmul@cntr
 24107  39F7                     l14744:	
 24108  39F7  1C48               	btfss	___ftmul@f1,0
 24109  39F8  29FF               	goto	l14748
 24110  39F9  084B               	movf	___ftmul@f2,w
 24111  39FA  07D3               	addwf	___ftmul@f3_as_product,f
 24112  39FB  084C               	movf	___ftmul@f2+1,w
 24113  39FC  3DD4               	addwfc	___ftmul@f3_as_product+1,f
 24114  39FD  084D               	movf	___ftmul@f2+2,w
 24115  39FE  3DD5               	addwfc	___ftmul@f3_as_product+2,f
 24116  39FF                     l14748:	
 24117  39FF  3001               	movlw	1
 24118  3A00                     u15835:	
 24119  3A00  36CA               	lsrf	___ftmul@f1+2,f
 24120  3A01  0CC9               	rrf	___ftmul@f1+1,f
 24121  3A02  0CC8               	rrf	___ftmul@f1,f
 24122  3A03  0B89               	decfsz	9,f
 24123  3A04  2A00               	goto	u15835
 24124  3A05  3001               	movlw	1
 24125  3A06                     u15845:	
 24126  3A06  35CB               	lslf	___ftmul@f2,f
 24127  3A07  0DCC               	rlf	___ftmul@f2+1,f
 24128  3A08  0DCD               	rlf	___ftmul@f2+2,f
 24129  3A09  0B89               	decfsz	9,f
 24130  3A0A  2A06               	goto	u15845
 24131  3A0B  3001               	movlw	1
 24132  3A0C  02D6               	subwf	___ftmul@cntr,f
 24133  3A0D  1D03               	btfss	3,2
 24134  3A0E  29F7               	goto	l14744
 24135  3A0F  3009               	movlw	9
 24136  3A10  00CE               	movwf	??___ftmul
 24137  3A11  084E               	movf	??___ftmul,w
 24138  3A12  00D6               	movwf	___ftmul@cntr
 24139  3A13                     l14756:	
 24140  3A13  1C48               	btfss	___ftmul@f1,0
 24141  3A14  2A1B               	goto	l14760
 24142  3A15  084B               	movf	___ftmul@f2,w
 24143  3A16  07D3               	addwf	___ftmul@f3_as_product,f
 24144  3A17  084C               	movf	___ftmul@f2+1,w
 24145  3A18  3DD4               	addwfc	___ftmul@f3_as_product+1,f
 24146  3A19  084D               	movf	___ftmul@f2+2,w
 24147  3A1A  3DD5               	addwfc	___ftmul@f3_as_product+2,f
 24148  3A1B                     l14760:	
 24149  3A1B  3001               	movlw	1
 24150  3A1C                     u15875:	
 24151  3A1C  36CA               	lsrf	___ftmul@f1+2,f
 24152  3A1D  0CC9               	rrf	___ftmul@f1+1,f
 24153  3A1E  0CC8               	rrf	___ftmul@f1,f
 24154  3A1F  0B89               	decfsz	9,f
 24155  3A20  2A1C               	goto	u15875
 24156  3A21  3001               	movlw	1
 24157  3A22                     u15885:	
 24158  3A22  36D5               	lsrf	___ftmul@f3_as_product+2,f
 24159  3A23  0CD4               	rrf	___ftmul@f3_as_product+1,f
 24160  3A24  0CD3               	rrf	___ftmul@f3_as_product,f
 24161  3A25  0B89               	decfsz	9,f
 24162  3A26  2A22               	goto	u15885
 24163  3A27  3001               	movlw	1
 24164  3A28  02D6               	subwf	___ftmul@cntr,f
 24165  3A29  1D03               	btfss	3,2
 24166  3A2A  2A13               	goto	l14756
 24167  3A2B  0853               	movf	___ftmul@f3_as_product,w
 24168  3A2C  00AB               	movwf	___ftpack@arg
 24169  3A2D  0854               	movf	___ftmul@f3_as_product+1,w
 24170  3A2E  00AC               	movwf	___ftpack@arg+1
 24171  3A2F  0855               	movf	___ftmul@f3_as_product+2,w
 24172  3A30  00AD               	movwf	___ftpack@arg+2
 24173  3A31  0852               	movf	___ftmul@exp,w
 24174  3A32  00CE               	movwf	??___ftmul
 24175  3A33  084E               	movf	??___ftmul,w
 24176  3A34  00AE               	movwf	___ftpack@exp
 24177  3A35  0857               	movf	___ftmul@sign,w
 24178  3A36  00CF               	movwf	??___ftmul+1
 24179  3A37  084F               	movf	??___ftmul+1,w
 24180  3A38  00AF               	movwf	___ftpack@sign
 24181  3A39  31CD  25EF         	fcall	___ftpack
 24182  3A3B  0140               	movlb	0	; select bank0
 24183  3A3C  082B               	movf	?___ftpack,w
 24184  3A3D  00C8               	movwf	?___ftmul
 24185  3A3E  082C               	movf	?___ftpack+1,w
 24186  3A3F  00C9               	movwf	?___ftmul+1
 24187  3A40  082D               	movf	?___ftpack+2,w
 24188  3A41  00CA               	movwf	?___ftmul+2
 24189  3A42  0008               	return
 24190  3A43                     __end_of___ftmul:	
 24191                           
 24192                           	psect	text51
 24193  3A43                     __ptext51:	
 24194 ;; *************** function ___ftdiv *****************
 24195 ;; Defined at:
 24196 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 24197 ;; Parameters:    Size  Location     Type
 24198 ;;  f2              3   10[BANK1 ] float 
 24199 ;;  f1              3   13[BANK1 ] float 
 24200 ;; Auto vars:     Size  Location     Type
 24201 ;;  f3              3   21[BANK1 ] float 
 24202 ;;  sign            1   25[BANK1 ] unsigned char 
 24203 ;;  exp             1   24[BANK1 ] unsigned char 
 24204 ;;  cntr            1   20[BANK1 ] unsigned char 
 24205 ;; Return value:  Size  Location     Type
 24206 ;;                  3   10[BANK1 ] float 
 24207 ;; Registers used:
 24208 ;;		wreg, status,2, status,0, pclath, cstack
 24209 ;; Tracked objects:
 24210 ;;		On entry : 0/0
 24211 ;;		On exit  : 0/0
 24212 ;;		Unchanged: 0/0
 24213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24214 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24215 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24216 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24217 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24218 ;;Total ram usage:       16 bytes
 24219 ;; Hardware stack levels used:    1
 24220 ;; Hardware stack levels required when called:    4
 24221 ;; This function calls:
 24222 ;;		___ftpack
 24223 ;; This function is called by:
 24224 ;;		_ini_GERADOR
 24225 ;;		_XC
 24226 ;;		_get_temp
 24227 ;;		_ini_ee_tempos
 24228 ;;		_atan
 24229 ;;		_sin
 24230 ;;		_exp
 24231 ;;		_conv_temp
 24232 ;; This function uses a non-reentrant model
 24233 ;;
 24234                           
 24235                           
 24236                           ;psect for function ___ftdiv
 24237  3A43                     ___ftdiv:	
 24238                           
 24239                           ;incstack = 0
 24240                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
 24241  3A43  0141               	movlb	1	; select bank1
 24242  3A44  082D               	movf	___ftdiv@f1^(0+128),w
 24243  3A45  00B0               	movwf	??___ftdiv^(0+128)
 24244  3A46  082E               	movf	(___ftdiv@f1+1)^(0+128),w
 24245  3A47  00B1               	movwf	(??___ftdiv^(0+128)+1)
 24246  3A48  082F               	movf	(___ftdiv@f1+2)^(0+128),w
 24247  3A49  00B2               	movwf	(??___ftdiv^(0+128)+2)
 24248  3A4A  1003               	clrc
 24249  3A4B  0D31               	rlf	(??___ftdiv^(0+128)+1),w
 24250  3A4C  0D32               	rlf	(??___ftdiv^(0+128)+2),w
 24251  3A4D  00B3               	movwf	(??___ftdiv+3)^(0+128)
 24252  3A4E  0833               	movf	(??___ftdiv+3)^(0+128),w
 24253  3A4F  00B8               	movwf	___ftdiv@exp^(0+128)
 24254  3A50  0838               	movf	___ftdiv@exp^(0+128),w
 24255  3A51  1D03               	btfss	3,2
 24256  3A52  2A5A               	goto	l15390
 24257  3A53  3000               	movlw	0
 24258  3A54  00AA               	movwf	?___ftdiv^(0+128)
 24259  3A55  3000               	movlw	0
 24260  3A56  00AB               	movwf	(?___ftdiv+1)^(0+128)
 24261  3A57  3000               	movlw	0
 24262  3A58  00AC               	movwf	(?___ftdiv+2)^(0+128)
 24263  3A59  0008               	return
 24264  3A5A                     l15390:	
 24265  3A5A  082A               	movf	___ftdiv@f2^(0+128),w
 24266  3A5B  00B0               	movwf	??___ftdiv^(0+128)
 24267  3A5C  082B               	movf	(___ftdiv@f2+1)^(0+128),w
 24268  3A5D  00B1               	movwf	(??___ftdiv^(0+128)+1)
 24269  3A5E  082C               	movf	(___ftdiv@f2+2)^(0+128),w
 24270  3A5F  00B2               	movwf	(??___ftdiv^(0+128)+2)
 24271  3A60  1003               	clrc
 24272  3A61  0D31               	rlf	(??___ftdiv^(0+128)+1),w
 24273  3A62  0D32               	rlf	(??___ftdiv^(0+128)+2),w
 24274  3A63  00B3               	movwf	(??___ftdiv+3)^(0+128)
 24275  3A64  0833               	movf	(??___ftdiv+3)^(0+128),w
 24276  3A65  00B9               	movwf	___ftdiv@sign^(0+128)
 24277  3A66  0839               	movf	___ftdiv@sign^(0+128),w
 24278  3A67  1D03               	btfss	3,2
 24279  3A68  2A70               	goto	l15396
 24280  3A69  3000               	movlw	0
 24281  3A6A  00AA               	movwf	?___ftdiv^(0+128)
 24282  3A6B  3000               	movlw	0
 24283  3A6C  00AB               	movwf	(?___ftdiv+1)^(0+128)
 24284  3A6D  3000               	movlw	0
 24285  3A6E  00AC               	movwf	(?___ftdiv+2)^(0+128)
 24286  3A6F  0008               	return
 24287  3A70                     l15396:	
 24288  3A70  3000               	movlw	0
 24289  3A71  00B5               	movwf	___ftdiv@f3^(0+128)
 24290  3A72  3000               	movlw	0
 24291  3A73  00B6               	movwf	(___ftdiv@f3+1)^(0+128)
 24292  3A74  3000               	movlw	0
 24293  3A75  00B7               	movwf	(___ftdiv@f3+2)^(0+128)
 24294  3A76  3089               	movlw	137
 24295  3A77  0739               	addwf	___ftdiv@sign^(0+128),w
 24296  3A78  00B0               	movwf	??___ftdiv^(0+128)
 24297  3A79  0830               	movf	??___ftdiv^(0+128),w
 24298  3A7A  02B8               	subwf	___ftdiv@exp^(0+128),f
 24299  3A7B  082D               	movf	___ftdiv@f1^(0+128),w
 24300  3A7C  00B0               	movwf	??___ftdiv^(0+128)
 24301  3A7D  082E               	movf	(___ftdiv@f1+1)^(0+128),w
 24302  3A7E  00B1               	movwf	(??___ftdiv^(0+128)+1)
 24303  3A7F  082F               	movf	(___ftdiv@f1+2)^(0+128),w
 24304  3A80  00B2               	movwf	(??___ftdiv^(0+128)+2)
 24305  3A81  3010               	movlw	16
 24306  3A82                     u16905:	
 24307  3A82  36B2               	lsrf	(??___ftdiv^(0+128)+2),f
 24308  3A83  0CB1               	rrf	(??___ftdiv^(0+128)+1),f
 24309  3A84  0CB0               	rrf	??___ftdiv^(0+128),f
 24310  3A85  0B89               	decfsz	9,f
 24311  3A86  2A82               	goto	u16905
 24312  3A87  0830               	movf	??___ftdiv^(0+128),w
 24313  3A88  00B3               	movwf	(??___ftdiv+3)^(0+128)
 24314  3A89  0833               	movf	(??___ftdiv+3)^(0+128),w
 24315  3A8A  00B9               	movwf	___ftdiv@sign^(0+128)
 24316  3A8B  082A               	movf	___ftdiv@f2^(0+128),w
 24317  3A8C  00B0               	movwf	??___ftdiv^(0+128)
 24318  3A8D  082B               	movf	(___ftdiv@f2+1)^(0+128),w
 24319  3A8E  00B1               	movwf	(??___ftdiv^(0+128)+1)
 24320  3A8F  082C               	movf	(___ftdiv@f2+2)^(0+128),w
 24321  3A90  00B2               	movwf	(??___ftdiv^(0+128)+2)
 24322  3A91  3010               	movlw	16
 24323  3A92                     u16915:	
 24324  3A92  36B2               	lsrf	(??___ftdiv^(0+128)+2),f
 24325  3A93  0CB1               	rrf	(??___ftdiv^(0+128)+1),f
 24326  3A94  0CB0               	rrf	??___ftdiv^(0+128),f
 24327  3A95  0B89               	decfsz	9,f
 24328  3A96  2A92               	goto	u16915
 24329  3A97  0830               	movf	??___ftdiv^(0+128),w
 24330  3A98  00B3               	movwf	(??___ftdiv+3)^(0+128)
 24331  3A99  0833               	movf	(??___ftdiv+3)^(0+128),w
 24332  3A9A  06B9               	xorwf	___ftdiv@sign^(0+128),f
 24333  3A9B  3080               	movlw	128
 24334  3A9C  00B0               	movwf	??___ftdiv^(0+128)
 24335  3A9D  0830               	movf	??___ftdiv^(0+128),w
 24336  3A9E  05B9               	andwf	___ftdiv@sign^(0+128),f
 24337  3A9F  17AE               	bsf	(___ftdiv@f1^(0+128)+1),7
 24338  3AA0  30FF               	movlw	255
 24339  3AA1  05AD               	andwf	___ftdiv@f1^(0+128),f
 24340  3AA2  30FF               	movlw	255
 24341  3AA3  05AE               	andwf	(___ftdiv@f1+1)^(0+128),f
 24342  3AA4  3000               	movlw	0
 24343  3AA5  05AF               	andwf	(___ftdiv@f1+2)^(0+128),f
 24344  3AA6  17AB               	bsf	(___ftdiv@f2^(0+128)+1),7
 24345  3AA7  30FF               	movlw	255
 24346  3AA8  05AA               	andwf	___ftdiv@f2^(0+128),f
 24347  3AA9  30FF               	movlw	255
 24348  3AAA  05AB               	andwf	(___ftdiv@f2+1)^(0+128),f
 24349  3AAB  3000               	movlw	0
 24350  3AAC  05AC               	andwf	(___ftdiv@f2+2)^(0+128),f
 24351  3AAD  3018               	movlw	24
 24352  3AAE  00B0               	movwf	??___ftdiv^(0+128)
 24353  3AAF  0830               	movf	??___ftdiv^(0+128),w
 24354  3AB0  00B4               	movwf	___ftdiv@cntr^(0+128)
 24355  3AB1                     l15410:	
 24356  3AB1  3001               	movlw	1
 24357  3AB2                     u16925:	
 24358  3AB2  35B5               	lslf	___ftdiv@f3^(0+128),f
 24359  3AB3  0DB6               	rlf	(___ftdiv@f3+1)^(0+128),f
 24360  3AB4  0DB7               	rlf	(___ftdiv@f3+2)^(0+128),f
 24361  3AB5  0B89               	decfsz	9,f
 24362  3AB6  2AB2               	goto	u16925
 24363  3AB7  082C               	movf	(___ftdiv@f2+2)^(0+128),w
 24364  3AB8  022F               	subwf	(___ftdiv@f1+2)^(0+128),w
 24365  3AB9  1D03               	skipz
 24366  3ABA  2AC1               	goto	u16935
 24367  3ABB  082B               	movf	(___ftdiv@f2+1)^(0+128),w
 24368  3ABC  022E               	subwf	(___ftdiv@f1+1)^(0+128),w
 24369  3ABD  1D03               	skipz
 24370  3ABE  2AC1               	goto	u16935
 24371  3ABF  082A               	movf	___ftdiv@f2^(0+128),w
 24372  3AC0  022D               	subwf	___ftdiv@f1^(0+128),w
 24373  3AC1                     u16935:	
 24374  3AC1  1C03               	skipc
 24375  3AC2  2ACA               	goto	l15418
 24376  3AC3  082A               	movf	___ftdiv@f2^(0+128),w
 24377  3AC4  02AD               	subwf	___ftdiv@f1^(0+128),f
 24378  3AC5  082B               	movf	(___ftdiv@f2+1)^(0+128),w
 24379  3AC6  3BAE               	subwfb	(___ftdiv@f1+1)^(0+128),f
 24380  3AC7  082C               	movf	(___ftdiv@f2+2)^(0+128),w
 24381  3AC8  3BAF               	subwfb	(___ftdiv@f1+2)^(0+128),f
 24382  3AC9  1435               	bsf	___ftdiv@f3^(0+128),0
 24383  3ACA                     l15418:	
 24384  3ACA  3001               	movlw	1
 24385  3ACB                     u16945:	
 24386  3ACB  35AD               	lslf	___ftdiv@f1^(0+128),f
 24387  3ACC  0DAE               	rlf	(___ftdiv@f1+1)^(0+128),f
 24388  3ACD  0DAF               	rlf	(___ftdiv@f1+2)^(0+128),f
 24389  3ACE  0B89               	decfsz	9,f
 24390  3ACF  2ACB               	goto	u16945
 24391  3AD0  3001               	movlw	1
 24392  3AD1  02B4               	subwf	___ftdiv@cntr^(0+128),f
 24393  3AD2  1D03               	btfss	3,2
 24394  3AD3  2AB1               	goto	l15410
 24395  3AD4  0835               	movf	___ftdiv@f3^(0+128),w
 24396  3AD5  0140               	movlb	0	; select bank0
 24397  3AD6  00AB               	movwf	___ftpack@arg
 24398  3AD7  0141               	movlb	1	; select bank1
 24399  3AD8  0836               	movf	(___ftdiv@f3+1)^(0+128),w
 24400  3AD9  0140               	movlb	0	; select bank0
 24401  3ADA  00AC               	movwf	___ftpack@arg+1
 24402  3ADB  0141               	movlb	1	; select bank1
 24403  3ADC  0837               	movf	(___ftdiv@f3+2)^(0+128),w
 24404  3ADD  0140               	movlb	0	; select bank0
 24405  3ADE  00AD               	movwf	___ftpack@arg+2
 24406  3ADF  0141               	movlb	1	; select bank1
 24407  3AE0  0838               	movf	___ftdiv@exp^(0+128),w
 24408  3AE1  00B0               	movwf	??___ftdiv^(0+128)
 24409  3AE2  0830               	movf	??___ftdiv^(0+128),w
 24410  3AE3  0140               	movlb	0	; select bank0
 24411  3AE4  00AE               	movwf	___ftpack@exp
 24412  3AE5  0141               	movlb	1	; select bank1
 24413  3AE6  0839               	movf	___ftdiv@sign^(0+128),w
 24414  3AE7  00B1               	movwf	(??___ftdiv+1)^(0+128)
 24415  3AE8  0831               	movf	(??___ftdiv+1)^(0+128),w
 24416  3AE9  0140               	movlb	0	; select bank0
 24417  3AEA  00AF               	movwf	___ftpack@sign
 24418  3AEB  31CD  25EF         	fcall	___ftpack
 24419  3AED  0140               	movlb	0	; select bank0
 24420  3AEE  082B               	movf	?___ftpack,w
 24421  3AEF  0141               	movlb	1	; select bank1
 24422  3AF0  00AA               	movwf	?___ftdiv^(0+128)
 24423  3AF1  0140               	movlb	0	; select bank0
 24424  3AF2  082C               	movf	?___ftpack+1,w
 24425  3AF3  0141               	movlb	1	; select bank1
 24426  3AF4  00AB               	movwf	(?___ftdiv+1)^(0+128)
 24427  3AF5  0140               	movlb	0	; select bank0
 24428  3AF6  082D               	movf	?___ftpack+2,w
 24429  3AF7  0141               	movlb	1	; select bank1
 24430  3AF8  00AC               	movwf	(?___ftdiv+2)^(0+128)
 24431  3AF9  0008               	return
 24432  3AFA                     __end_of___ftdiv:	
 24433                           
 24434                           	psect	text52
 24435  4DEF                     __ptext52:	
 24436 ;; *************** function ___ftpack *****************
 24437 ;; Defined at:
 24438 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 24439 ;; Parameters:    Size  Location     Type
 24440 ;;  arg             3   11[BANK0 ] unsigned um
 24441 ;;  exp             1   14[BANK0 ] unsigned char 
 24442 ;;  sign            1   15[BANK0 ] unsigned char 
 24443 ;; Auto vars:     Size  Location     Type
 24444 ;;		None
 24445 ;; Return value:  Size  Location     Type
 24446 ;;                  3   11[BANK0 ] float 
 24447 ;; Registers used:
 24448 ;;		wreg, status,2, status,0
 24449 ;; Tracked objects:
 24450 ;;		On entry : 0/0
 24451 ;;		On exit  : 0/0
 24452 ;;		Unchanged: 0/0
 24453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24454 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24456 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24457 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24458 ;;Total ram usage:        8 bytes
 24459 ;; Hardware stack levels used:    1
 24460 ;; Hardware stack levels required when called:    3
 24461 ;; This function calls:
 24462 ;;		Nothing
 24463 ;; This function is called by:
 24464 ;;		___altoft
 24465 ;;		___awtoft
 24466 ;;		___ftadd
 24467 ;;		___ftdiv
 24468 ;;		___ftmul
 24469 ;;		___lltoft
 24470 ;;		___lwtoft
 24471 ;; This function uses a non-reentrant model
 24472 ;;
 24473                           
 24474                           
 24475                           ;psect for function ___ftpack
 24476  4DEF                     ___ftpack:	
 24477                           
 24478                           ;incstack = 0
 24479                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
 24480  4DEF  0140               	movlb	0	; select bank0
 24481  4DF0  082E               	movf	___ftpack@exp,w
 24482  4DF1  1903               	btfsc	3,2
 24483  4DF2  2DF8               	goto	l14168
 24484  4DF3  082D               	movf	___ftpack@arg+2,w
 24485  4DF4  042C               	iorwf	___ftpack@arg+1,w
 24486  4DF5  042B               	iorwf	___ftpack@arg,w
 24487  4DF6  1D03               	skipz
 24488  4DF7  2E09               	goto	l14174
 24489  4DF8                     l14168:	
 24490  4DF8  3000               	movlw	0
 24491  4DF9  00AB               	movwf	?___ftpack
 24492  4DFA  3000               	movlw	0
 24493  4DFB  00AC               	movwf	?___ftpack+1
 24494  4DFC  3000               	movlw	0
 24495  4DFD  00AD               	movwf	?___ftpack+2
 24496  4DFE  0008               	return
 24497  4DFF                     l14172:	
 24498  4DFF  3001               	movlw	1
 24499  4E00  00B0               	movwf	??___ftpack
 24500  4E01  0830               	movf	??___ftpack,w
 24501  4E02  07AE               	addwf	___ftpack@exp,f
 24502  4E03  3001               	movlw	1
 24503  4E04                     u14755:	
 24504  4E04  36AD               	lsrf	___ftpack@arg+2,f
 24505  4E05  0CAC               	rrf	___ftpack@arg+1,f
 24506  4E06  0CAB               	rrf	___ftpack@arg,f
 24507  4E07  0B89               	decfsz	9,f
 24508  4E08  2E04               	goto	u14755
 24509  4E09                     l14174:	
 24510  4E09  30FE               	movlw	254
 24511  4E0A  052D               	andwf	___ftpack@arg+2,w
 24512  4E0B  1903               	btfsc	3,2
 24513  4E0C  2E22               	goto	l3007
 24514  4E0D  2DFF               	goto	l14172
 24515  4E0E                     l14176:	
 24516  4E0E  3001               	movlw	1
 24517  4E0F  00B0               	movwf	??___ftpack
 24518  4E10  0830               	movf	??___ftpack,w
 24519  4E11  07AE               	addwf	___ftpack@exp,f
 24520  4E12  3001               	movlw	1
 24521  4E13  07AB               	addwf	___ftpack@arg,f
 24522  4E14  3000               	movlw	0
 24523  4E15  1803               	skipnc
 24524  4E16  3001               	movlw	1
 24525  4E17  07AC               	addwf	___ftpack@arg+1,f
 24526  4E18  3000               	movlw	0
 24527  4E19  1803               	skipnc
 24528  4E1A  3001               	movlw	1
 24529  4E1B  07AD               	addwf	___ftpack@arg+2,f
 24530  4E1C  3001               	movlw	1
 24531  4E1D                     u14775:	
 24532  4E1D  36AD               	lsrf	___ftpack@arg+2,f
 24533  4E1E  0CAC               	rrf	___ftpack@arg+1,f
 24534  4E1F  0CAB               	rrf	___ftpack@arg,f
 24535  4E20  0B89               	decfsz	9,f
 24536  4E21  2E1D               	goto	u14775
 24537  4E22                     l3007:	
 24538  4E22  30FF               	movlw	255
 24539  4E23  052D               	andwf	___ftpack@arg+2,w
 24540  4E24  1903               	btfsc	3,2
 24541  4E25  2E2F               	goto	l14184
 24542  4E26  2E0E               	goto	l14176
 24543  4E27                     l14182:	
 24544  4E27  3001               	movlw	1
 24545  4E28  02AE               	subwf	___ftpack@exp,f
 24546  4E29  3001               	movlw	1
 24547  4E2A                     u14795:	
 24548  4E2A  35AB               	lslf	___ftpack@arg,f
 24549  4E2B  0DAC               	rlf	___ftpack@arg+1,f
 24550  4E2C  0DAD               	rlf	___ftpack@arg+2,f
 24551  4E2D  0B89               	decfsz	9,f
 24552  4E2E  2E2A               	goto	u14795
 24553  4E2F                     l14184:	
 24554  4E2F  1BAC               	btfsc	___ftpack@arg+1,7
 24555  4E30  2E35               	goto	l3014
 24556  4E31  3002               	movlw	2
 24557  4E32  022E               	subwf	___ftpack@exp,w
 24558  4E33  1803               	skipnc
 24559  4E34  2E27               	goto	l14182
 24560  4E35                     l3014:	
 24561  4E35  182E               	btfsc	___ftpack@exp,0
 24562  4E36  2E3D               	goto	l3015
 24563  4E37  30FF               	movlw	255
 24564  4E38  05AB               	andwf	___ftpack@arg,f
 24565  4E39  307F               	movlw	127
 24566  4E3A  05AC               	andwf	___ftpack@arg+1,f
 24567  4E3B  30FF               	movlw	255
 24568  4E3C  05AD               	andwf	___ftpack@arg+2,f
 24569  4E3D                     l3015:	
 24570  4E3D  1003               	clrc
 24571  4E3E  0CAE               	rrf	___ftpack@exp,f
 24572  4E3F  082E               	movf	___ftpack@exp,w
 24573  4E40  00B0               	movwf	??___ftpack
 24574  4E41  01B1               	clrf	??___ftpack+1
 24575  4E42  01B2               	clrf	??___ftpack+2
 24576  4E43  3010               	movlw	16
 24577  4E44                     u14835:	
 24578  4E44  35B0               	lslf	??___ftpack,f
 24579  4E45  0DB1               	rlf	??___ftpack+1,f
 24580  4E46  0DB2               	rlf	??___ftpack+2,f
 24581  4E47  0B89               	decfsz	9,f
 24582  4E48  2E44               	goto	u14835
 24583  4E49  0830               	movf	??___ftpack,w
 24584  4E4A  04AB               	iorwf	___ftpack@arg,f
 24585  4E4B  0831               	movf	??___ftpack+1,w
 24586  4E4C  04AC               	iorwf	___ftpack@arg+1,f
 24587  4E4D  0832               	movf	??___ftpack+2,w
 24588  4E4E  04AD               	iorwf	___ftpack@arg+2,f
 24589  4E4F  082F               	movf	___ftpack@sign,w
 24590  4E50  1903               	btfsc	3,2
 24591  4E51  0008               	return
 24592  4E52  17AD               	bsf	___ftpack@arg+2,7
 24593  4E53  0008               	return
 24594  4E54                     __end_of___ftpack:	
 24595                           
 24596                           	psect	text53
 24597  0800                     __ptext53:	
 24598 ;; *************** function _get_duty *****************
 24599 ;; Defined at:
 24600 ;;		line 2284 in file "func.c"
 24601 ;; Parameters:    Size  Location     Type
 24602 ;;		None
 24603 ;; Auto vars:     Size  Location     Type
 24604 ;;		None
 24605 ;; Return value:  Size  Location     Type
 24606 ;;                  1    wreg      unsigned char 
 24607 ;; Registers used:
 24608 ;;		wreg, status,2, status,0, pclath, cstack
 24609 ;; Tracked objects:
 24610 ;;		On entry : 0/0
 24611 ;;		On exit  : 0/0
 24612 ;;		Unchanged: 0/0
 24613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24618 ;;Total ram usage:        0 bytes
 24619 ;; Hardware stack levels used:    1
 24620 ;; Hardware stack levels required when called:    4
 24621 ;; This function calls:
 24622 ;;		___ltdiv
 24623 ;;		___tmul
 24624 ;; This function is called by:
 24625 ;;		_main
 24626 ;; This function uses a non-reentrant model
 24627 ;;
 24628                           
 24629                           
 24630                           ;psect for function _get_duty
 24631  0800                     _get_duty:	
 24632                           
 24633                           ;func.c: 2285: return (unsigned char)((SMT2CPW*100)/SMT2CPR);
 24634                           
 24635                           ;incstack = 0
 24636                           ; Regs used in _get_duty: [wreg+status,2+status,0+pclath+cstack]
 24637  0800  014A               	movlb	10	; select bank10
 24638  0801  080F               	movf	15,w	;volatile
 24639  0802  0140               	movlb	0	; select bank0
 24640  0803  00B4               	movwf	___ltdiv@divisor
 24641  0804  014A               	movlb	10	; select bank10
 24642  0805  0810               	movf	16,w	;volatile
 24643  0806  0140               	movlb	0	; select bank0
 24644  0807  00B5               	movwf	___ltdiv@divisor+1
 24645  0808  014A               	movlb	10	; select bank10
 24646  0809  0811               	movf	17,w	;volatile
 24647  080A  0140               	movlb	0	; select bank0
 24648  080B  00B6               	movwf	___ltdiv@divisor+2
 24649  080C  014A               	movlb	10	; select bank10
 24650  080D  0812               	movf	18,w	;volatile
 24651  080E  0140               	movlb	0	; select bank0
 24652  080F  00AB               	movwf	___tmul@multiplier
 24653  0810  014A               	movlb	10	; select bank10
 24654  0811  0813               	movf	19,w	;volatile
 24655  0812  0140               	movlb	0	; select bank0
 24656  0813  00AC               	movwf	___tmul@multiplier+1
 24657  0814  014A               	movlb	10	; select bank10
 24658  0815  0814               	movf	20,w	;volatile
 24659  0816  0140               	movlb	0	; select bank0
 24660  0817  00AD               	movwf	___tmul@multiplier+2
 24661  0818  3064               	movlw	100
 24662  0819  00AE               	movwf	___tmul@multiplicand
 24663  081A  3000               	movlw	0
 24664  081B  00AF               	movwf	___tmul@multiplicand+1
 24665  081C  3000               	movlw	0
 24666  081D  00B0               	movwf	___tmul@multiplicand+2
 24667  081E  31B0  2000  3188   	fcall	___tmul
 24668  0821  0140               	movlb	0	; select bank0
 24669  0822  082B               	movf	?___tmul,w
 24670  0823  00B7               	movwf	___ltdiv@dividend
 24671  0824  082C               	movf	?___tmul+1,w
 24672  0825  00B8               	movwf	___ltdiv@dividend+1
 24673  0826  082D               	movf	?___tmul+2,w
 24674  0827  00B9               	movwf	___ltdiv@dividend+2
 24675  0828  31C8  20B9         	fcall	___ltdiv
 24676  082A  0140               	movlb	0	; select bank0
 24677  082B  0834               	movf	?___ltdiv,w
 24678  082C  0008               	return
 24679  082D                     __end_of_get_duty:	
 24680                           
 24681                           	psect	text54
 24682  3000                     __ptext54:	
 24683 ;; *************** function ___tmul *****************
 24684 ;; Defined at:
 24685 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul24.c"
 24686 ;; Parameters:    Size  Location     Type
 24687 ;;  multiplier      3   11[BANK0 ] unsigned um
 24688 ;;  multiplicand    3   14[BANK0 ] unsigned um
 24689 ;; Auto vars:     Size  Location     Type
 24690 ;;  product         3   17[BANK0 ] unsigned um
 24691 ;; Return value:  Size  Location     Type
 24692 ;;                  3   11[BANK0 ] unsigned um
 24693 ;; Registers used:
 24694 ;;		wreg, status,2, status,0
 24695 ;; Tracked objects:
 24696 ;;		On entry : 0/0
 24697 ;;		On exit  : 0/0
 24698 ;;		Unchanged: 0/0
 24699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24700 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24701 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24703 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24704 ;;Total ram usage:        9 bytes
 24705 ;; Hardware stack levels used:    1
 24706 ;; Hardware stack levels required when called:    3
 24707 ;; This function calls:
 24708 ;;		Nothing
 24709 ;; This function is called by:
 24710 ;;		_get_duty
 24711 ;; This function uses a non-reentrant model
 24712 ;;
 24713                           
 24714                           
 24715                           ;psect for function ___tmul
 24716  3000                     ___tmul:	
 24717                           
 24718                           ;incstack = 0
 24719                           ; Regs used in ___tmul: [wreg+status,2+status,0]
 24720  3000  3000               	movlw	0
 24721  3001  0140               	movlb	0	; select bank0
 24722  3002  00B1               	movwf	___tmul@product
 24723  3003  3000               	movlw	0
 24724  3004  00B2               	movwf	___tmul@product+1
 24725  3005  3000               	movlw	0
 24726  3006  00B3               	movwf	___tmul@product+2
 24727  3007                     l17158:	
 24728  3007  1C2B               	btfss	___tmul@multiplier,0
 24729  3008  280F               	goto	l17162
 24730  3009  082E               	movf	___tmul@multiplicand,w
 24731  300A  07B1               	addwf	___tmul@product,f
 24732  300B  082F               	movf	___tmul@multiplicand+1,w
 24733  300C  3DB2               	addwfc	___tmul@product+1,f
 24734  300D  0830               	movf	___tmul@multiplicand+2,w
 24735  300E  3DB3               	addwfc	___tmul@product+2,f
 24736  300F                     l17162:	
 24737  300F  3001               	movlw	1
 24738  3010                     u19405:	
 24739  3010  35AE               	lslf	___tmul@multiplicand,f
 24740  3011  0DAF               	rlf	___tmul@multiplicand+1,f
 24741  3012  0DB0               	rlf	___tmul@multiplicand+2,f
 24742  3013  0B89               	decfsz	9,f
 24743  3014  2810               	goto	u19405
 24744  3015  3001               	movlw	1
 24745  3016                     u19415:	
 24746  3016  36AD               	lsrf	___tmul@multiplier+2,f
 24747  3017  0CAC               	rrf	___tmul@multiplier+1,f
 24748  3018  0CAB               	rrf	___tmul@multiplier,f
 24749  3019  0B89               	decfsz	9,f
 24750  301A  2816               	goto	u19415
 24751  301B  082D               	movf	___tmul@multiplier+2,w
 24752  301C  042C               	iorwf	___tmul@multiplier+1,w
 24753  301D  042B               	iorwf	___tmul@multiplier,w
 24754  301E  1D03               	skipz
 24755  301F  2807               	goto	l17158
 24756  3020  0831               	movf	___tmul@product,w
 24757  3021  00AB               	movwf	?___tmul
 24758  3022  0832               	movf	___tmul@product+1,w
 24759  3023  00AC               	movwf	?___tmul+1
 24760  3024  0833               	movf	___tmul@product+2,w
 24761  3025  00AD               	movwf	?___tmul+2
 24762  3026  0008               	return
 24763  3027                     __end_of___tmul:	
 24764                           
 24765                           	psect	text55
 24766  48B9                     __ptext55:	
 24767 ;; *************** function ___ltdiv *****************
 24768 ;; Defined at:
 24769 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltdiv.c"
 24770 ;; Parameters:    Size  Location     Type
 24771 ;;  divisor         3   20[BANK0 ] unsigned um
 24772 ;;  dividend        3   23[BANK0 ] unsigned um
 24773 ;; Auto vars:     Size  Location     Type
 24774 ;;  quotient        3   27[BANK0 ] unsigned um
 24775 ;;  counter         1   30[BANK0 ] unsigned char 
 24776 ;; Return value:  Size  Location     Type
 24777 ;;                  3   20[BANK0 ] unsigned um
 24778 ;; Registers used:
 24779 ;;		wreg, status,2, status,0
 24780 ;; Tracked objects:
 24781 ;;		On entry : 0/0
 24782 ;;		On exit  : 0/0
 24783 ;;		Unchanged: 0/0
 24784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24785 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24786 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24787 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24788 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24789 ;;Total ram usage:       11 bytes
 24790 ;; Hardware stack levels used:    1
 24791 ;; Hardware stack levels required when called:    3
 24792 ;; This function calls:
 24793 ;;		Nothing
 24794 ;; This function is called by:
 24795 ;;		_get_duty
 24796 ;; This function uses a non-reentrant model
 24797 ;;
 24798                           
 24799                           
 24800                           ;psect for function ___ltdiv
 24801  48B9                     ___ltdiv:	
 24802                           
 24803                           ;incstack = 0
 24804                           ; Regs used in ___ltdiv: [wreg+status,2+status,0]
 24805  48B9  3000               	movlw	0
 24806  48BA  0140               	movlb	0	; select bank0
 24807  48BB  00BB               	movwf	___ltdiv@quotient
 24808  48BC  3000               	movlw	0
 24809  48BD  00BC               	movwf	___ltdiv@quotient+1
 24810  48BE  3000               	movlw	0
 24811  48BF  00BD               	movwf	___ltdiv@quotient+2
 24812  48C0  0836               	movf	___ltdiv@divisor+2,w
 24813  48C1  0435               	iorwf	___ltdiv@divisor+1,w
 24814  48C2  0434               	iorwf	___ltdiv@divisor,w
 24815  48C3  1903               	skipnz
 24816  48C4  28F7               	goto	l17190
 24817  48C5  01BE               	clrf	___ltdiv@counter
 24818  48C6  0ABE               	incf	___ltdiv@counter,f
 24819  48C7                     l17176:	
 24820  48C7  1BB6               	btfsc	___ltdiv@divisor+2,7
 24821  48C8  28D4               	goto	l17178
 24822  48C9  3001               	movlw	1
 24823  48CA                     u19445:	
 24824  48CA  35B4               	lslf	___ltdiv@divisor,f
 24825  48CB  0DB5               	rlf	___ltdiv@divisor+1,f
 24826  48CC  0DB6               	rlf	___ltdiv@divisor+2,f
 24827  48CD  0B89               	decfsz	9,f
 24828  48CE  28CA               	goto	u19445
 24829  48CF  3001               	movlw	1
 24830  48D0  00BA               	movwf	??___ltdiv
 24831  48D1  083A               	movf	??___ltdiv,w
 24832  48D2  07BE               	addwf	___ltdiv@counter,f
 24833  48D3  28C7               	goto	l17176
 24834  48D4                     l17178:	
 24835  48D4  3001               	movlw	1
 24836  48D5                     u19465:	
 24837  48D5  35BB               	lslf	___ltdiv@quotient,f
 24838  48D6  0DBC               	rlf	___ltdiv@quotient+1,f
 24839  48D7  0DBD               	rlf	___ltdiv@quotient+2,f
 24840  48D8  0B89               	decfsz	9,f
 24841  48D9  28D5               	goto	u19465
 24842  48DA  0836               	movf	___ltdiv@divisor+2,w
 24843  48DB  0239               	subwf	___ltdiv@dividend+2,w
 24844  48DC  1D03               	skipz
 24845  48DD  28E4               	goto	u19475
 24846  48DE  0835               	movf	___ltdiv@divisor+1,w
 24847  48DF  0238               	subwf	___ltdiv@dividend+1,w
 24848  48E0  1D03               	skipz
 24849  48E1  28E4               	goto	u19475
 24850  48E2  0834               	movf	___ltdiv@divisor,w
 24851  48E3  0237               	subwf	___ltdiv@dividend,w
 24852  48E4                     u19475:	
 24853  48E4  1C03               	skipc
 24854  48E5  28ED               	goto	l17186
 24855  48E6  0834               	movf	___ltdiv@divisor,w
 24856  48E7  02B7               	subwf	___ltdiv@dividend,f
 24857  48E8  0835               	movf	___ltdiv@divisor+1,w
 24858  48E9  3BB8               	subwfb	___ltdiv@dividend+1,f
 24859  48EA  0836               	movf	___ltdiv@divisor+2,w
 24860  48EB  3BB9               	subwfb	___ltdiv@dividend+2,f
 24861  48EC  143B               	bsf	___ltdiv@quotient,0
 24862  48ED                     l17186:	
 24863  48ED  3001               	movlw	1
 24864  48EE                     u19485:	
 24865  48EE  36B6               	lsrf	___ltdiv@divisor+2,f
 24866  48EF  0CB5               	rrf	___ltdiv@divisor+1,f
 24867  48F0  0CB4               	rrf	___ltdiv@divisor,f
 24868  48F1  0B89               	decfsz	9,f
 24869  48F2  28EE               	goto	u19485
 24870  48F3  3001               	movlw	1
 24871  48F4  02BE               	subwf	___ltdiv@counter,f
 24872  48F5  1D03               	btfss	3,2
 24873  48F6  28D4               	goto	l17178
 24874  48F7                     l17190:	
 24875  48F7  083B               	movf	___ltdiv@quotient,w
 24876  48F8  00B4               	movwf	?___ltdiv
 24877  48F9  083C               	movf	___ltdiv@quotient+1,w
 24878  48FA  00B5               	movwf	?___ltdiv+1
 24879  48FB  083D               	movf	___ltdiv@quotient+2,w
 24880  48FC  00B6               	movwf	?___ltdiv+2
 24881  48FD  0008               	return
 24882  48FE                     __end_of___ltdiv:	
 24883                           
 24884                           	psect	text56
 24885  4944                     __ptext56:	
 24886 ;; *************** function _func_rst *****************
 24887 ;; Defined at:
 24888 ;;		line 1917 in file "func.c"
 24889 ;; Parameters:    Size  Location     Type
 24890 ;;		None
 24891 ;; Auto vars:     Size  Location     Type
 24892 ;;		None
 24893 ;; Return value:  Size  Location     Type
 24894 ;;                  1    wreg      void 
 24895 ;; Registers used:
 24896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 24897 ;; Tracked objects:
 24898 ;;		On entry : 0/0
 24899 ;;		On exit  : 0/0
 24900 ;;		Unchanged: 0/0
 24901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 24902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24904 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24905 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 24906 ;;Total ram usage:        1 bytes
 24907 ;; Hardware stack levels used:    1
 24908 ;; Hardware stack levels required when called:    6
 24909 ;; This function calls:
 24910 ;;		_liberar_tecla
 24911 ;;		_rst_inversor
 24912 ;;		_salva_EEPROM32
 24913 ;;		_set_freq
 24914 ;; This function is called by:
 24915 ;;		_main
 24916 ;; This function uses a non-reentrant model
 24917 ;;
 24918                           
 24919                           
 24920                           ;psect for function _func_rst
 24921  4944                     _func_rst:	
 24922                           
 24923                           ;func.c: 1918: if(liberar_tecla(12,1000)){
 24924                           
 24925                           ;incstack = 0
 24926                           ; Regs used in _func_rst: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 24927  4944  30E8               	movlw	232
 24928  4945  0140               	movlb	0	; select bank0
 24929  4946  00B3               	movwf	liberar_tecla@t
 24930  4947  3003               	movlw	3
 24931  4948  00B4               	movwf	liberar_tecla@t+1
 24932  4949  300C               	movlw	12
 24933  494A  31D7  2735  31C9   	fcall	_liberar_tecla
 24934  494D  0140               	movlb	0	; select bank0
 24935  494E  0833               	movf	?_liberar_tecla,w
 24936  494F  0434               	iorwf	?_liberar_tecla+1,w
 24937  4950  1903               	btfsc	3,2
 24938  4951  2955               	goto	l17870
 24939                           
 24940                           ;func.c: 1919: rst_inversor();
 24941  4952  31D2  220E         	fcall	_rst_inversor
 24942                           
 24943                           ;func.c: 1920: }
 24944  4954  0008               	return
 24945  4955                     l17870:	
 24946                           
 24947                           ;func.c: 1921: else{
 24948                           ;func.c: 1922: freq_atual = freq_inicial;
 24949  4955  0143               	movlb	3	; select bank3
 24950  4956  0837               	movf	(_freq_inicial+1)^(0+384),w
 24951  4957  00B5               	movwf	(_freq_atual+1)^(0+384)
 24952  4958  0836               	movf	_freq_inicial^(0+384),w
 24953  4959  00B4               	movwf	_freq_atual^(0+384)
 24954                           
 24955                           ;func.c: 1923: set_freq(freq_atual);
 24956  495A  0835               	movf	(_freq_atual+1)^(0+384),w
 24957  495B  0140               	movlb	0	; select bank0
 24958  495C  00C7               	movwf	set_freq@f+1
 24959  495D  0143               	movlb	3	; select bank3
 24960  495E  0834               	movf	_freq_atual^(0+384),w
 24961  495F  0140               	movlb	0	; select bank0
 24962  4960  00C6               	movwf	set_freq@f
 24963  4961  31C5  2585  31C9   	fcall	_set_freq
 24964                           
 24965                           ;func.c: 1924: n_pecas = 0;
 24966  4964  3000               	movlw	0
 24967  4965  0143               	movlb	3	; select bank3
 24968  4966  00A3               	movwf	(_n_pecas+3)^(0+384)
 24969  4967  3000               	movlw	0
 24970  4968  00A2               	movwf	(_n_pecas+2)^(0+384)
 24971  4969  3000               	movlw	0
 24972  496A  00A1               	movwf	(_n_pecas+1)^(0+384)
 24973  496B  3000               	movlw	0
 24974  496C  00A0               	movwf	_n_pecas^(0+384)
 24975                           
 24976                           ;func.c: 1925: salva_EEPROM32(n_pecas,5);
 24977  496D  0823               	movf	(_n_pecas+3)^(0+384),w
 24978  496E  0140               	movlb	0	; select bank0
 24979  496F  00B1               	movwf	salva_EEPROM32@valor+3
 24980  4970  0143               	movlb	3	; select bank3
 24981  4971  0822               	movf	(_n_pecas+2)^(0+384),w
 24982  4972  0140               	movlb	0	; select bank0
 24983  4973  00B0               	movwf	salva_EEPROM32@valor+2
 24984  4974  0143               	movlb	3	; select bank3
 24985  4975  0821               	movf	(_n_pecas+1)^(0+384),w
 24986  4976  0140               	movlb	0	; select bank0
 24987  4977  00AF               	movwf	salva_EEPROM32@valor+1
 24988  4978  0143               	movlb	3	; select bank3
 24989  4979  0820               	movf	_n_pecas^(0+384),w
 24990  497A  0140               	movlb	0	; select bank0
 24991  497B  00AE               	movwf	salva_EEPROM32@valor
 24992  497C  3005               	movlw	5
 24993  497D  00CE               	movwf	??_func_rst
 24994  497E  084E               	movf	??_func_rst,w
 24995  497F  00B2               	movwf	salva_EEPROM32@address
 24996  4980  31CD  2527  31C9   	fcall	_salva_EEPROM32
 24997  4983                     l17878:	
 24998                           ;func.c: 1926: while((PORTD&0b00111111) == 12){
 24999                           
 25000  4983  303F               	movlw	63
 25001  4984  0140               	movlb	0	; select bank0
 25002  4985  050F               	andwf	15,w	;volatile
 25003  4986  00CE               	movwf	??_func_rst
 25004  4987  300C               	movlw	12
 25005  4988  064E               	xorwf	??_func_rst,w
 25006  4989  1D03               	btfss	3,2
 25007  498A  0008               	return
 25008  498B  0064               	clrwdt	;# 
 25009  498C  2983               	goto	l17878
 25010  498D                     __end_of_func_rst:	
 25011                           
 25012                           	psect	text57
 25013  3D63                     __ptext57:	
 25014 ;; *************** function _func_enter *****************
 25015 ;; Defined at:
 25016 ;;		line 1834 in file "func.c"
 25017 ;; Parameters:    Size  Location     Type
 25018 ;;		None
 25019 ;; Auto vars:     Size  Location     Type
 25020 ;;  bt              1   47[BANK0 ] unsigned char 
 25021 ;; Return value:  Size  Location     Type
 25022 ;;                  1    wreg      void 
 25023 ;; Registers used:
 25024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25025 ;; Tracked objects:
 25026 ;;		On entry : 0/0
 25027 ;;		On exit  : 0/0
 25028 ;;		Unchanged: 0/0
 25029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25031 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25032 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25034 ;;Total ram usage:        2 bytes
 25035 ;; Hardware stack levels used:    1
 25036 ;; Hardware stack levels required when called:    6
 25037 ;; This function calls:
 25038 ;;		_Lcd_Clear
 25039 ;;		_Lcd_Set_Cursor
 25040 ;;		_Lcd_Write_String
 25041 ;;		_liberar_tecla
 25042 ;;		_set_freq
 25043 ;;		_teclado
 25044 ;;		_utoa
 25045 ;; This function is called by:
 25046 ;;		_main
 25047 ;; This function uses a non-reentrant model
 25048 ;;
 25049                           
 25050                           
 25051                           ;psect for function _func_enter
 25052  3D63                     _func_enter:	
 25053                           
 25054                           ;func.c: 1836: if(!liberar_tecla(18,2000)){
 25055                           
 25056                           ;incstack = 0
 25057                           ; Regs used in _func_enter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25058  3D63  30D0               	movlw	208
 25059  3D64  0140               	movlb	0	; select bank0
 25060  3D65  00B3               	movwf	liberar_tecla@t
 25061  3D66  3007               	movlw	7
 25062  3D67  00B4               	movwf	liberar_tecla@t+1
 25063  3D68  3012               	movlw	18
 25064  3D69  31D7  2735  31BD   	fcall	_liberar_tecla
 25065  3D6C  0140               	movlb	0	; select bank0
 25066  3D6D  0833               	movf	?_liberar_tecla,w
 25067  3D6E  0434               	iorwf	?_liberar_tecla+1,w
 25068  3D6F  1903               	btfsc	3,2
 25069  3D70  0008               	return
 25070                           
 25071                           ;func.c: 1869: else{
 25072                           ;func.c: 1872: char bt = 0;
 25073                           
 25074                           ;func.c: 1868: }
 25075  3D71  01CF               	clrf	func_enter@bt
 25076  3D72                     l17812:	
 25077                           ;func.c: 1873: do{
 25078                           
 25079                           
 25080                           ;func.c: 1874: LATBbits.LATB7 = 1;
 25081  3D72  0140               	movlb	0	; select bank0
 25082  3D73  1797               	bsf	23,7	;volatile
 25083                           
 25084                           ;func.c: 1875: }while(teclado() == 18);
 25085  3D74  31C2  22CC  31BD   	fcall	_teclado
 25086  3D77  3A12               	xorlw	18
 25087  3D78  1903               	skipnz
 25088  3D79  2D72               	goto	l17812
 25089                           
 25090                           ;func.c: 1876: LATBbits.LATB7 = 0;
 25091  3D7A  0140               	movlb	0	; select bank0
 25092  3D7B  1397               	bcf	23,7	;volatile
 25093                           
 25094                           ;func.c: 1878: Lcd_Clear();
 25095  3D7C  31E1  21DF  31BD   	fcall	_Lcd_Clear
 25096                           
 25097                           ;func.c: 1879: Lcd_Set_Cursor(1,1);
 25098  3D7F  0140               	movlb	0	; select bank0
 25099  3D80  01AE               	clrf	Lcd_Set_Cursor@b
 25100  3D81  0AAE               	incf	Lcd_Set_Cursor@b,f
 25101  3D82  3001               	movlw	1
 25102  3D83  31D5  25D8  31BD   	fcall	_Lcd_Set_Cursor
 25103                           
 25104                           ;func.c: 1880: Lcd_Write_String(freq_ini_str);
 25105  3D86  306C               	movlw	low (_freq_ini_str| (0+32768))
 25106  3D87  0140               	movlb	0	; select bank0
 25107  3D88  00B0               	movwf	Lcd_Write_String@a
 25108  3D89  30E8               	movlw	high (_freq_ini_str| (0+32768))
 25109  3D8A  00B1               	movwf	Lcd_Write_String@a+1
 25110  3D8B  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25111                           
 25112                           ;func.c: 1881: Lcd_Write_String("x10)");
 25113  3D8E  30F6               	movlw	low (STR_18| (0+32768))
 25114  3D8F  0140               	movlb	0	; select bank0
 25115  3D90  00B0               	movwf	Lcd_Write_String@a
 25116  3D91  30E8               	movlw	high (STR_18| (0+32768))
 25117  3D92  00B1               	movwf	Lcd_Write_String@a+1
 25118  3D93  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25119                           
 25120                           ;func.c: 1882: Lcd_Set_Cursor(2,1);
 25121  3D96  0140               	movlb	0	; select bank0
 25122  3D97  01AE               	clrf	Lcd_Set_Cursor@b
 25123  3D98  0AAE               	incf	Lcd_Set_Cursor@b,f
 25124  3D99  3002               	movlw	2
 25125  3D9A  31D5  25D8  31BD   	fcall	_Lcd_Set_Cursor
 25126                           
 25127                           ;func.c: 1883: Lcd_Write_String(freq_str);
 25128  3D9D  30C7               	movlw	low (_freq_str| (0+32768))
 25129  3D9E  0140               	movlb	0	; select bank0
 25130  3D9F  00B0               	movwf	Lcd_Write_String@a
 25131  3DA0  30E8               	movlw	high (_freq_str| (0+32768))
 25132  3DA1  00B1               	movwf	Lcd_Write_String@a+1
 25133  3DA2  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25134                           
 25135                           ;func.c: 1884: Lcd_Set_Cursor(2,8);
 25136  3DA5  3008               	movlw	8
 25137  3DA6  0140               	movlb	0	; select bank0
 25138  3DA7  00CE               	movwf	??_func_enter
 25139  3DA8  084E               	movf	??_func_enter,w
 25140  3DA9  00AE               	movwf	Lcd_Set_Cursor@b
 25141  3DAA  3002               	movlw	2
 25142  3DAB  31D5  25D8  31BD   	fcall	_Lcd_Set_Cursor
 25143                           
 25144                           ;func.c: 1885: utoa(str,freq_inicial,10);
 25145  3DAE  0143               	movlb	3	; select bank3
 25146  3DAF  0837               	movf	(_freq_inicial+1)^(0+384),w
 25147  3DB0  0140               	movlb	0	; select bank0
 25148  3DB1  00BA               	movwf	utoa@val+1
 25149  3DB2  0143               	movlb	3	; select bank3
 25150  3DB3  0836               	movf	_freq_inicial^(0+384),w
 25151  3DB4  0140               	movlb	0	; select bank0
 25152  3DB5  00B9               	movwf	utoa@val
 25153  3DB6  300A               	movlw	10
 25154  3DB7  00BB               	movwf	utoa@base
 25155  3DB8  3000               	movlw	0
 25156  3DB9  00BC               	movwf	utoa@base+1
 25157  3DBA  305C               	movlw	(low (_str| (0+512)))& (0+255)
 25158  3DBB  31CD  258B  31BD   	fcall	_utoa
 25159                           
 25160                           ;func.c: 1886: Lcd_Write_String(str);
 25161  3DBE  305C               	movlw	low _str
 25162  3DBF  0140               	movlb	0	; select bank0
 25163  3DC0  00B0               	movwf	Lcd_Write_String@a
 25164  3DC1  3002               	movlw	high _str
 25165  3DC2  00B1               	movwf	Lcd_Write_String@a+1
 25166  3DC3  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25167                           
 25168                           ;func.c: 1887: Lcd_Write_String("Hz   ");
 25169  3DC6  30E0               	movlw	low ((STR_49+1)| (0+32768))
 25170  3DC7  0140               	movlb	0	; select bank0
 25171  3DC8  00B0               	movwf	Lcd_Write_String@a
 25172  3DC9  30E8               	movlw	high ((STR_49+1)| (0+32768))
 25173  3DCA  00B1               	movwf	Lcd_Write_String@a+1
 25174  3DCB  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25175  3DCE                     l17832:	
 25176                           ;func.c: 1888: do{
 25177                           
 25178                           
 25179                           ;func.c: 1889: bt = teclado();
 25180  3DCE  31C2  22CC  31BD   	fcall	_teclado
 25181  3DD1  0140               	movlb	0	; select bank0
 25182  3DD2  00CE               	movwf	??_func_enter
 25183  3DD3  084E               	movf	??_func_enter,w
 25184  3DD4  00CF               	movwf	func_enter@bt
 25185                           
 25186                           ;func.c: 1890: if(bt == 17 || bt == 20){
 25187  3DD5  3011               	movlw	17
 25188  3DD6  064F               	xorwf	func_enter@bt,w
 25189  3DD7  1903               	btfsc	3,2
 25190  3DD8  2DDD               	goto	l17838
 25191  3DD9  3014               	movlw	20
 25192  3DDA  064F               	xorwf	func_enter@bt,w
 25193  3DDB  1D03               	btfss	3,2
 25194  3DDC  2E2C               	goto	l17862
 25195  3DDD                     l17838:	
 25196                           
 25197                           ;func.c: 1892: if(bt == 17){
 25198  3DDD  3011               	movlw	17
 25199  3DDE  064F               	xorwf	func_enter@bt,w
 25200  3DDF  1D03               	btfss	3,2
 25201  3DE0  2DE7               	goto	l17842
 25202                           
 25203                           ;func.c: 1893: freq_inicial += 10;
 25204  3DE1  300A               	movlw	10
 25205  3DE2  0143               	movlb	3	; select bank3
 25206  3DE3  07B6               	addwf	_freq_inicial^(0+384),f
 25207  3DE4  3000               	movlw	0
 25208  3DE5  3DB7               	addwfc	(_freq_inicial+1)^(0+384),f
 25209                           
 25210                           ;func.c: 1894: }
 25211  3DE6  2DEC               	goto	l17844
 25212  3DE7                     l17842:	
 25213                           
 25214                           ;func.c: 1895: else{
 25215                           ;func.c: 1896: freq_inicial -= 10;
 25216  3DE7  300A               	movlw	10
 25217  3DE8  0143               	movlb	3	; select bank3
 25218  3DE9  02B6               	subwf	_freq_inicial^(0+384),f
 25219  3DEA  3000               	movlw	0
 25220  3DEB  3BB7               	subwfb	(_freq_inicial+1)^(0+384),f
 25221  3DEC                     l17844:	
 25222                           
 25223                           ;func.c: 1897: }
 25224                           ;func.c: 1899: Lcd_Set_Cursor(2,8);
 25225  3DEC  3008               	movlw	8
 25226  3DED  0140               	movlb	0	; select bank0
 25227  3DEE  00CE               	movwf	??_func_enter
 25228  3DEF  084E               	movf	??_func_enter,w
 25229  3DF0  00AE               	movwf	Lcd_Set_Cursor@b
 25230  3DF1  3002               	movlw	2
 25231  3DF2  31D5  25D8  31BD   	fcall	_Lcd_Set_Cursor
 25232                           
 25233                           ;func.c: 1900: utoa(str,freq_inicial,10);
 25234  3DF5  0143               	movlb	3	; select bank3
 25235  3DF6  0837               	movf	(_freq_inicial+1)^(0+384),w
 25236  3DF7  0140               	movlb	0	; select bank0
 25237  3DF8  00BA               	movwf	utoa@val+1
 25238  3DF9  0143               	movlb	3	; select bank3
 25239  3DFA  0836               	movf	_freq_inicial^(0+384),w
 25240  3DFB  0140               	movlb	0	; select bank0
 25241  3DFC  00B9               	movwf	utoa@val
 25242  3DFD  300A               	movlw	10
 25243  3DFE  00BB               	movwf	utoa@base
 25244  3DFF  3000               	movlw	0
 25245  3E00  00BC               	movwf	utoa@base+1
 25246  3E01  305C               	movlw	(low (_str| (0+512)))& (0+255)
 25247  3E02  31CD  258B  31BD   	fcall	_utoa
 25248                           
 25249                           ;func.c: 1901: Lcd_Write_String(str);
 25250  3E05  305C               	movlw	low _str
 25251  3E06  0140               	movlb	0	; select bank0
 25252  3E07  00B0               	movwf	Lcd_Write_String@a
 25253  3E08  3002               	movlw	high _str
 25254  3E09  00B1               	movwf	Lcd_Write_String@a+1
 25255  3E0A  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25256                           
 25257                           ;func.c: 1902: Lcd_Write_String("Hz   ");
 25258  3E0D  30E0               	movlw	low ((STR_49+1)| (0+32768))
 25259  3E0E  0140               	movlb	0	; select bank0
 25260  3E0F  00B0               	movwf	Lcd_Write_String@a
 25261  3E10  30E8               	movlw	high ((STR_49+1)| (0+32768))
 25262  3E11  00B1               	movwf	Lcd_Write_String@a+1
 25263  3E12  31D1  2171  31BD   	fcall	_Lcd_Write_String
 25264                           
 25265                           ;func.c: 1903: freq_atual = freq_inicial;
 25266  3E15  0143               	movlb	3	; select bank3
 25267  3E16  0837               	movf	(_freq_inicial+1)^(0+384),w
 25268  3E17  00B5               	movwf	(_freq_atual+1)^(0+384)
 25269  3E18  0836               	movf	_freq_inicial^(0+384),w
 25270  3E19  00B4               	movwf	_freq_atual^(0+384)
 25271  3E1A                     l17854:	
 25272                           ;func.c: 1904: do{
 25273                           
 25274                           
 25275                           ;func.c: 1905: LATBbits.LATB7 = 1;
 25276  3E1A  0140               	movlb	0	; select bank0
 25277  3E1B  1797               	bsf	23,7	;volatile
 25278                           
 25279                           ;func.c: 1907: bt = teclado();
 25280  3E1C  31C2  22CC  31BD   	fcall	_teclado
 25281  3E1F  0140               	movlb	0	; select bank0
 25282  3E20  00CE               	movwf	??_func_enter
 25283  3E21  084E               	movf	??_func_enter,w
 25284  3E22  00CF               	movwf	func_enter@bt
 25285                           
 25286                           ;func.c: 1908: }while(bt == 17 || bt == 20);
 25287  3E23  3011               	movlw	17
 25288  3E24  064F               	xorwf	func_enter@bt,w
 25289  3E25  1903               	btfsc	3,2
 25290  3E26  2E1A               	goto	l17854
 25291  3E27  3014               	movlw	20
 25292  3E28  064F               	xorwf	func_enter@bt,w
 25293  3E29  1903               	btfsc	3,2
 25294  3E2A  2E1A               	goto	l17854
 25295                           
 25296                           ;func.c: 1909: LATBbits.LATB7 = 0;
 25297  3E2B  1397               	bcf	23,7	;volatile
 25298  3E2C                     l17862:	
 25299                           
 25300                           ;func.c: 1910: }
 25301                           ;func.c: 1911: }while(bt != 18);
 25302  3E2C  3012               	movlw	18
 25303  3E2D  064F               	xorwf	func_enter@bt,w
 25304  3E2E  1D03               	btfss	3,2
 25305  3E2F  2DCE               	goto	l17832
 25306                           
 25307                           ;func.c: 1912: set_freq(freq_atual);
 25308  3E30  0143               	movlb	3	; select bank3
 25309  3E31  0835               	movf	(_freq_atual+1)^(0+384),w
 25310  3E32  0140               	movlb	0	; select bank0
 25311  3E33  00C7               	movwf	set_freq@f+1
 25312  3E34  0143               	movlb	3	; select bank3
 25313  3E35  0834               	movf	_freq_atual^(0+384),w
 25314  3E36  0140               	movlb	0	; select bank0
 25315  3E37  00C6               	movwf	set_freq@f
 25316  3E38  31C5  2585         	fcall	_set_freq
 25317  3E3A  0008               	return
 25318  3E3B                     __end_of_func_enter:	
 25319                           
 25320                           	psect	text58
 25321  4D8B                     __ptext58:	
 25322 ;; *************** function _utoa *****************
 25323 ;; Defined at:
 25324 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 25325 ;; Parameters:    Size  Location     Type
 25326 ;;  buf             1    wreg     PTR unsigned char 
 25327 ;;		 -> str(20), 
 25328 ;;  val             2   25[BANK0 ] unsigned int 
 25329 ;;  base            2   27[BANK0 ] int 
 25330 ;; Auto vars:     Size  Location     Type
 25331 ;;  buf             1   33[BANK0 ] PTR unsigned char 
 25332 ;;		 -> str(20), 
 25333 ;;  v               2   30[BANK0 ] unsigned int 
 25334 ;;  c               1   32[BANK0 ] unsigned char 
 25335 ;; Return value:  Size  Location     Type
 25336 ;;                  1    wreg      PTR unsigned char 
 25337 ;; Registers used:
 25338 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25339 ;; Tracked objects:
 25340 ;;		On entry : 0/0
 25341 ;;		On exit  : 0/0
 25342 ;;		Unchanged: 0/0
 25343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25344 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25345 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25346 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25347 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25348 ;;Total ram usage:        9 bytes
 25349 ;; Hardware stack levels used:    1
 25350 ;; Hardware stack levels required when called:    4
 25351 ;; This function calls:
 25352 ;;		___lwdiv
 25353 ;;		___lwmod
 25354 ;; This function is called by:
 25355 ;;		_func_enter
 25356 ;; This function uses a non-reentrant model
 25357 ;;
 25358                           
 25359                           
 25360                           ;psect for function _utoa
 25361  4D8B                     _utoa:	
 25362                           
 25363                           ;incstack = 0
 25364                           ; Regs used in _utoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 25365                           ;utoa@buf stored from wreg
 25366  4D8B  0140               	movlb	0	; select bank0
 25367  4D8C  00C1               	movwf	utoa@buf
 25368  4D8D  083A               	movf	utoa@val+1,w
 25369  4D8E  00BF               	movwf	utoa@v+1
 25370  4D8F  0839               	movf	utoa@val,w
 25371  4D90  00BE               	movwf	utoa@v
 25372  4D91                     l16810:	
 25373  4D91  083C               	movf	utoa@base+1,w
 25374  4D92  00AC               	movwf	___lwdiv@divisor+1
 25375  4D93  083B               	movf	utoa@base,w
 25376  4D94  00AB               	movwf	___lwdiv@divisor
 25377  4D95  083F               	movf	utoa@v+1,w
 25378  4D96  00AE               	movwf	___lwdiv@dividend+1
 25379  4D97  083E               	movf	utoa@v,w
 25380  4D98  00AD               	movwf	___lwdiv@dividend
 25381  4D99  31D5  25A3  31CD   	fcall	___lwdiv
 25382  4D9C  0140               	movlb	0	; select bank0
 25383  4D9D  082C               	movf	?___lwdiv+1,w
 25384  4D9E  00BF               	movwf	utoa@v+1
 25385  4D9F  082B               	movf	?___lwdiv,w
 25386  4DA0  00BE               	movwf	utoa@v
 25387  4DA1  3001               	movlw	1
 25388  4DA2  00BD               	movwf	??_utoa
 25389  4DA3  083D               	movf	??_utoa,w
 25390  4DA4  07C1               	addwf	utoa@buf,f
 25391  4DA5  083E               	movf	utoa@v,w
 25392  4DA6  043F               	iorwf	utoa@v+1,w
 25393  4DA7  1D03               	btfss	3,2
 25394  4DA8  2D91               	goto	l16810
 25395  4DA9  0841               	movf	utoa@buf,w
 25396  4DAA  0086               	movwf	6
 25397  4DAB  3002               	movlw	2	; select bank4/5
 25398  4DAC  0087               	movwf	7
 25399  4DAD  0181               	clrf	1
 25400  4DAE  3001               	movlw	1
 25401  4DAF  02C1               	subwf	utoa@buf,f
 25402  4DB0                     l16820:	
 25403  4DB0  083C               	movf	utoa@base+1,w
 25404  4DB1  00B4               	movwf	___lwmod@divisor+1
 25405  4DB2  083B               	movf	utoa@base,w
 25406  4DB3  00B3               	movwf	___lwmod@divisor
 25407  4DB4  083A               	movf	utoa@val+1,w
 25408  4DB5  00B6               	movwf	___lwmod@dividend+1
 25409  4DB6  0839               	movf	utoa@val,w
 25410  4DB7  00B5               	movwf	___lwmod@dividend
 25411  4DB8  31D3  23FB  31CD   	fcall	___lwmod
 25412  4DBB  0140               	movlb	0	; select bank0
 25413  4DBC  0833               	movf	?___lwmod,w
 25414  4DBD  00BD               	movwf	??_utoa
 25415  4DBE  083D               	movf	??_utoa,w
 25416  4DBF  00C0               	movwf	utoa@c
 25417  4DC0  083C               	movf	utoa@base+1,w
 25418  4DC1  00AC               	movwf	___lwdiv@divisor+1
 25419  4DC2  083B               	movf	utoa@base,w
 25420  4DC3  00AB               	movwf	___lwdiv@divisor
 25421  4DC4  083A               	movf	utoa@val+1,w
 25422  4DC5  00AE               	movwf	___lwdiv@dividend+1
 25423  4DC6  0839               	movf	utoa@val,w
 25424  4DC7  00AD               	movwf	___lwdiv@dividend
 25425  4DC8  31D5  25A3  31CD   	fcall	___lwdiv
 25426  4DCB  0140               	movlb	0	; select bank0
 25427  4DCC  082C               	movf	?___lwdiv+1,w
 25428  4DCD  00BA               	movwf	utoa@val+1
 25429  4DCE  082B               	movf	?___lwdiv,w
 25430  4DCF  00B9               	movwf	utoa@val
 25431  4DD0  300A               	movlw	10
 25432  4DD1  0240               	subwf	utoa@c,w
 25433  4DD2  1C03               	skipc
 25434  4DD3  2DD8               	goto	l3113
 25435  4DD4  3007               	movlw	7
 25436  4DD5  00BD               	movwf	??_utoa
 25437  4DD6  083D               	movf	??_utoa,w
 25438  4DD7  07C0               	addwf	utoa@c,f
 25439  4DD8                     l3113:	
 25440  4DD8  3030               	movlw	48
 25441  4DD9  00BD               	movwf	??_utoa
 25442  4DDA  083D               	movf	??_utoa,w
 25443  4DDB  07C0               	addwf	utoa@c,f
 25444  4DDC  0840               	movf	utoa@c,w
 25445  4DDD  00BD               	movwf	??_utoa
 25446  4DDE  0841               	movf	utoa@buf,w
 25447  4DDF  0086               	movwf	6
 25448  4DE0  3002               	movlw	2	; select bank4/5
 25449  4DE1  0087               	movwf	7
 25450  4DE2  083D               	movf	??_utoa,w
 25451  4DE3  0081               	movwf	1
 25452  4DE4  3001               	movlw	1
 25453  4DE5  02C1               	subwf	utoa@buf,f
 25454  4DE6  0839               	movf	utoa@val,w
 25455  4DE7  043A               	iorwf	utoa@val+1,w
 25456  4DE8  1D03               	btfss	3,2
 25457  4DE9  2DB0               	goto	l16820
 25458                           
 25459                           ;	Return value of _utoa is never used
 25460  4DEA  3001               	movlw	1
 25461  4DEB  00BD               	movwf	??_utoa
 25462  4DEC  083D               	movf	??_utoa,w
 25463  4DED  07C1               	addwf	utoa@buf,f
 25464  4DEE  0008               	return
 25465  4DEF                     __end_of_utoa:	
 25466                           
 25467                           	psect	text59
 25468  475F                     __ptext59:	
 25469 ;; *************** function _config_maq_especial *****************
 25470 ;; Defined at:
 25471 ;;		line 1046 in file "func.c"
 25472 ;; Parameters:    Size  Location     Type
 25473 ;;		None
 25474 ;; Auto vars:     Size  Location     Type
 25475 ;;  i               1   19[BANK0 ] unsigned char 
 25476 ;;  i               1   18[BANK0 ] unsigned char 
 25477 ;; Return value:  Size  Location     Type
 25478 ;;                  1    wreg      void 
 25479 ;; Registers used:
 25480 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25481 ;; Tracked objects:
 25482 ;;		On entry : 0/0
 25483 ;;		On exit  : 0/0
 25484 ;;		Unchanged: 0/0
 25485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25487 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25488 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25489 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25490 ;;Total ram usage:        3 bytes
 25491 ;; Hardware stack levels used:    1
 25492 ;; Hardware stack levels required when called:    6
 25493 ;; This function calls:
 25494 ;;		_config_entrada
 25495 ;;		_config_saidas
 25496 ;; This function is called by:
 25497 ;;		_main
 25498 ;; This function uses a non-reentrant model
 25499 ;;
 25500                           
 25501                           
 25502                           ;psect for function _config_maq_especial
 25503  475F                     _config_maq_especial:	
 25504                           
 25505                           ;func.c: 1047: for(char i = 0;i<=ENTRADA_MAX;i++){
 25506                           
 25507                           ;incstack = 0
 25508                           ; Regs used in _config_maq_especial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25509  475F  0140               	movlb	0	; select bank0
 25510  4760  01B2               	clrf	config_maq_especial@i
 25511  4761  3006               	movlw	6
 25512  4762  0232               	subwf	config_maq_especial@i,w
 25513  4763  1803               	btfsc	3,0
 25514  4764  2F7E               	goto	l17350
 25515  4765                     l17344:	
 25516                           
 25517                           ;func.c: 1048: byte_in[in[i]] = 0;
 25518  4765  0832               	movf	config_maq_especial@i,w
 25519  4766  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 25520  4767  0086               	movwf	6
 25521  4768  3002               	movlw	2	; select bank5/6
 25522  4769  0087               	movwf	7
 25523  476A  0801               	movf	1,w
 25524  476B  3EA8               	addlw	(low (_byte_in| (0+512)))& (0+255)
 25525  476C  0086               	movwf	6
 25526  476D  3002               	movlw	2	; select bank5/6
 25527  476E  0087               	movwf	7
 25528  476F  0181               	clrf	1
 25529                           
 25530                           ;func.c: 1049: in[i] = 0;
 25531  4770  0832               	movf	config_maq_especial@i,w
 25532  4771  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 25533  4772  0086               	movwf	6
 25534  4773  3002               	movlw	2	; select bank5/6
 25535  4774  0087               	movwf	7
 25536  4775  0181               	clrf	1
 25537  4776  3001               	movlw	1
 25538  4777  00B1               	movwf	??_config_maq_especial
 25539  4778  0831               	movf	??_config_maq_especial,w
 25540  4779  07B2               	addwf	config_maq_especial@i,f
 25541  477A  3006               	movlw	6
 25542  477B  0232               	subwf	config_maq_especial@i,w
 25543  477C  1C03               	skipc
 25544  477D  2F65               	goto	l17344
 25545  477E                     l17350:	
 25546                           
 25547                           ;func.c: 1050: }
 25548                           ;func.c: 1051: for(char i = 0;i<=SAIDA_MAX;i++){
 25549  477E  01B3               	clrf	config_maq_especial@i_2517
 25550  477F  3005               	movlw	5
 25551  4780  0233               	subwf	config_maq_especial@i_2517,w
 25552  4781  1803               	btfsc	3,0
 25553  4782  2F9C               	goto	l17362
 25554  4783                     l17356:	
 25555                           
 25556                           ;func.c: 1052: byte_out[out[i]] = 0;
 25557  4783  0833               	movf	config_maq_especial@i_2517,w
 25558  4784  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25559  4785  0086               	movwf	6
 25560  4786  3002               	movlw	2	; select bank5/6
 25561  4787  0087               	movwf	7
 25562  4788  0801               	movf	1,w
 25563  4789  3EA0               	addlw	(low (_byte_out| (0+512)))& (0+255)
 25564  478A  0086               	movwf	6
 25565  478B  3002               	movlw	2	; select bank5/6
 25566  478C  0087               	movwf	7
 25567  478D  0181               	clrf	1
 25568                           
 25569                           ;func.c: 1053: out[i] = 0;
 25570  478E  0833               	movf	config_maq_especial@i_2517,w
 25571  478F  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25572  4790  0086               	movwf	6
 25573  4791  3002               	movlw	2	; select bank5/6
 25574  4792  0087               	movwf	7
 25575  4793  0181               	clrf	1
 25576  4794  3001               	movlw	1
 25577  4795  00B1               	movwf	??_config_maq_especial
 25578  4796  0831               	movf	??_config_maq_especial,w
 25579  4797  07B3               	addwf	config_maq_especial@i_2517,f
 25580  4798  3005               	movlw	5
 25581  4799  0233               	subwf	config_maq_especial@i_2517,w
 25582  479A  1C03               	skipc
 25583  479B  2F83               	goto	l17356
 25584  479C                     l17362:	
 25585                           
 25586                           ;func.c: 1054: }
 25587                           ;func.c: 1055: cfg.value = 0;
 25588  479C  3000               	movlw	0
 25589  479D  0143               	movlb	3	; select bank3
 25590  479E  00B3               	movwf	(_cfg+3)^(0+384)
 25591  479F  3000               	movlw	0
 25592  47A0  00B2               	movwf	(_cfg+2)^(0+384)
 25593  47A1  3000               	movlw	0
 25594  47A2  00B1               	movwf	(_cfg+1)^(0+384)
 25595  47A3  3000               	movlw	0
 25596  47A4  00B0               	movwf	_cfg^(0+384)
 25597                           
 25598                           ;func.c: 1056: flag_in.value = 0;
 25599  47A5  01CC               	clrf	_flag_in^(0+384)	;volatile
 25600  47A6  01CD               	clrf	(_flag_in+1)^(0+384)	;volatile
 25601                           
 25602                           ;func.c: 1058: config_entrada(EMERGENCIA,IN5);
 25603  47A7  3005               	movlw	5
 25604  47A8  0140               	movlb	0	; select bank0
 25605  47A9  00B1               	movwf	??_config_maq_especial
 25606  47AA  0831               	movf	??_config_maq_especial,w
 25607  47AB  00AD               	movwf	config_entrada@ch
 25608  47AC  3001               	movlw	1
 25609  47AD  31C1  21C9  31C7   	fcall	_config_entrada
 25610                           
 25611                           ;func.c: 1059: config_entrada(ACIONAMENTO1,IN4);
 25612  47B0  3004               	movlw	4
 25613  47B1  0140               	movlb	0	; select bank0
 25614  47B2  00B1               	movwf	??_config_maq_especial
 25615  47B3  0831               	movf	??_config_maq_especial,w
 25616  47B4  00AD               	movwf	config_entrada@ch
 25617  47B5  3002               	movlw	2
 25618  47B6  31C1  21C9  31C7   	fcall	_config_entrada
 25619                           
 25620                           ;func.c: 1060: config_entrada(ACIONAMENTO2,IN3);
 25621  47B9  3003               	movlw	3
 25622  47BA  0140               	movlb	0	; select bank0
 25623  47BB  00B1               	movwf	??_config_maq_especial
 25624  47BC  0831               	movf	??_config_maq_especial,w
 25625  47BD  00AD               	movwf	config_entrada@ch
 25626  47BE  3003               	movlw	3
 25627  47BF  31C1  21C9  31C7   	fcall	_config_entrada
 25628                           
 25629                           ;func.c: 1061: config_entrada(RESET,IN2);
 25630  47C2  3002               	movlw	2
 25631  47C3  0140               	movlb	0	; select bank0
 25632  47C4  00B1               	movwf	??_config_maq_especial
 25633  47C5  0831               	movf	??_config_maq_especial,w
 25634  47C6  00AD               	movwf	config_entrada@ch
 25635  47C7  3004               	movlw	4
 25636  47C8  31C1  21C9  31C7   	fcall	_config_entrada
 25637                           
 25638                           ;func.c: 1062: config_entrada(0,IN1);
 25639  47CB  0140               	movlb	0	; select bank0
 25640  47CC  01AD               	clrf	config_entrada@ch
 25641  47CD  0AAD               	incf	config_entrada@ch,f
 25642  47CE  3000               	movlw	0
 25643  47CF  31C1  21C9  31C7   	fcall	_config_entrada
 25644                           
 25645                           ;func.c: 1064: config_saidas(RST_INV,OUT1);
 25646  47D2  0140               	movlb	0	; select bank0
 25647  47D3  01AE               	clrf	config_saidas@ch
 25648  47D4  0AAE               	incf	config_saidas@ch,f
 25649  47D5  3007               	movlw	7
 25650  47D6  31CC  246B  31C7   	fcall	_config_saidas
 25651                           
 25652                           ;func.c: 1065: config_saidas(PNE_DESCE,OUT2);
 25653  47D9  3002               	movlw	2
 25654  47DA  0140               	movlb	0	; select bank0
 25655  47DB  00B1               	movwf	??_config_maq_especial
 25656  47DC  0831               	movf	??_config_maq_especial,w
 25657  47DD  00AE               	movwf	config_saidas@ch
 25658  47DE  3001               	movlw	1
 25659  47DF  31CC  246B  31C7   	fcall	_config_saidas
 25660                           
 25661                           ;func.c: 1066: if(flag.energiaErro)
 25662  47E2  0143               	movlb	3	; select bank3
 25663  47E3  1CAC               	btfss	_flag^(0+384),1	;volatile
 25664  47E4  2FEC               	goto	l17384
 25665                           
 25666                           ;func.c: 1067: config_saidas(ERRO_ENE,OUT3);
 25667  47E5  3003               	movlw	3
 25668  47E6  0140               	movlb	0	; select bank0
 25669  47E7  00B1               	movwf	??_config_maq_especial
 25670  47E8  0831               	movf	??_config_maq_especial,w
 25671  47E9  00AE               	movwf	config_saidas@ch
 25672  47EA  3004               	movlw	4
 25673  47EB  2FF2               	goto	L46
 25674  47EC                     l17384:	
 25675                           
 25676                           ;func.c: 1068: else
 25677                           ;func.c: 1069: config_saidas(STATUS_GERADOR,OUT3);
 25678  47EC  3003               	movlw	3
 25679  47ED  0140               	movlb	0	; select bank0
 25680  47EE  00B1               	movwf	??_config_maq_especial
 25681  47EF  0831               	movf	??_config_maq_especial,w
 25682  47F0  00AE               	movwf	config_saidas@ch
 25683  47F1  3005               	movlw	5
 25684  47F2                     L46:	
 25685  47F2  31CC  246B  31C7   	fcall	_config_saidas
 25686                           
 25687                           ;func.c: 1070: config_saidas(ERRO,OUT4);
 25688  47F5  3004               	movlw	4
 25689  47F6  0140               	movlb	0	; select bank0
 25690  47F7  00B1               	movwf	??_config_maq_especial
 25691  47F8  0831               	movf	??_config_maq_especial,w
 25692  47F9  00AE               	movwf	config_saidas@ch
 25693  47FA  3003               	movlw	3
 25694  47FB  31CC  246B         	fcall	_config_saidas
 25695                           
 25696                           ;func.c: 1071: cfg.stop_release = 1;
 25697  47FD  0143               	movlb	3	; select bank3
 25698  47FE  1432               	bsf	(_cfg^(0+384)+2),0
 25699  47FF  0008               	return
 25700  4800                     __end_of_config_maq_especial:	
 25701                           
 25702                           	psect	text60
 25703  4C6B                     __ptext60:	
 25704 ;; *************** function _config_saidas *****************
 25705 ;; Defined at:
 25706 ;;		line 996 in file "func.c"
 25707 ;; Parameters:    Size  Location     Type
 25708 ;;  x               1    wreg     enum E15193
 25709 ;;  ch              1   14[BANK0 ] enum E15204
 25710 ;; Auto vars:     Size  Location     Type
 25711 ;;  x               1   16[BANK0 ] enum E15193
 25712 ;; Return value:  Size  Location     Type
 25713 ;;                  1    wreg      void 
 25714 ;; Registers used:
 25715 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25716 ;; Tracked objects:
 25717 ;;		On entry : 0/0
 25718 ;;		On exit  : 0/0
 25719 ;;		Unchanged: 0/0
 25720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25721 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25722 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25723 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25724 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25725 ;;Total ram usage:        3 bytes
 25726 ;; Hardware stack levels used:    1
 25727 ;; Hardware stack levels required when called:    5
 25728 ;; This function calls:
 25729 ;;		_clear_saida
 25730 ;;		_config_flag_saida
 25731 ;; This function is called by:
 25732 ;;		_config_maq_especial
 25733 ;;		_config_maq
 25734 ;;		_telas
 25735 ;; This function uses a non-reentrant model
 25736 ;;
 25737                           
 25738                           
 25739                           ;psect for function _config_saidas
 25740  4C6B                     _config_saidas:	
 25741                           
 25742                           ;incstack = 0
 25743                           ; Regs used in _config_saidas: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25744                           ;config_saidas@x stored from wreg
 25745  4C6B  0140               	movlb	0	; select bank0
 25746  4C6C  00B0               	movwf	config_saidas@x
 25747                           
 25748                           ;func.c: 997: clear_saida(ch);
 25749  4C6D  082E               	movf	config_saidas@ch,w
 25750  4C6E  31E1  21C7  31CC   	fcall	_clear_saida
 25751                           
 25752                           ;func.c: 999: switch (ch){
 25753  4C71  2CAD               	goto	l14116
 25754  4C72                     l14106:	
 25755                           ;func.c: 1000: case OUT1:
 25756                           
 25757                           
 25758                           ;func.c: 1001: out[ch] = x;
 25759  4C72  0140               	movlb	0	; select bank0
 25760  4C73  0830               	movf	config_saidas@x,w
 25761  4C74  00AF               	movwf	??_config_saidas
 25762  4C75  082E               	movf	config_saidas@ch,w
 25763  4C76  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25764  4C77  0086               	movwf	6
 25765  4C78  3002               	movlw	2	; select bank5/6
 25766  4C79  0087               	movwf	7
 25767  4C7A  082F               	movf	??_config_saidas,w
 25768  4C7B  0081               	movwf	1
 25769                           
 25770                           ;func.c: 1002: byte_out[x] = (0b00000001);
 25771  4C7C  0830               	movf	config_saidas@x,w
 25772  4C7D  3EA0               	addlw	(low (_byte_out| (0+512)))& (0+255)
 25773  4C7E  0086               	movwf	6
 25774  4C7F  3002               	movlw	2	; select bank5/6
 25775  4C80  0087               	movwf	7
 25776  4C81  0181               	clrf	1
 25777  4C82  0A81               	incf	1,f
 25778                           
 25779                           ;func.c: 1003: break;
 25780  4C83  2CBC               	goto	l14118
 25781  4C84                     l14108:	
 25782                           ;func.c: 1004: case OUT2:
 25783                           
 25784                           
 25785                           ;func.c: 1005: out[ch] = x;
 25786  4C84  0830               	movf	config_saidas@x,w
 25787  4C85  00AF               	movwf	??_config_saidas
 25788  4C86  082E               	movf	config_saidas@ch,w
 25789  4C87  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25790  4C88  0086               	movwf	6
 25791  4C89  3002               	movlw	2	; select bank5/6
 25792  4C8A  0087               	movwf	7
 25793  4C8B  082F               	movf	??_config_saidas,w
 25794  4C8C  0081               	movwf	1
 25795                           
 25796                           ;func.c: 1006: byte_out[x] = (0b00100000);
 25797  4C8D  3020               	movlw	32
 25798  4C8E  2CA4               	goto	L48
 25799  4C8F                     l14110:	
 25800                           ;func.c: 1008: case OUT3:
 25801                           
 25802                           ;func.c: 1007: break;
 25803                           
 25804                           
 25805                           ;func.c: 1009: out[ch] = x;
 25806  4C8F  0830               	movf	config_saidas@x,w
 25807  4C90  00AF               	movwf	??_config_saidas
 25808  4C91  082E               	movf	config_saidas@ch,w
 25809  4C92  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25810  4C93  0086               	movwf	6
 25811  4C94  3002               	movlw	2	; select bank5/6
 25812  4C95  0087               	movwf	7
 25813  4C96  082F               	movf	??_config_saidas,w
 25814  4C97  0081               	movwf	1
 25815                           
 25816                           ;func.c: 1010: byte_out[x] = (0b00010000);
 25817  4C98  3010               	movlw	16
 25818  4C99  2CA4               	goto	L48
 25819  4C9A                     l14112:	
 25820                           ;func.c: 1012: case OUT4:
 25821                           
 25822                           ;func.c: 1011: break;
 25823                           
 25824                           
 25825                           ;func.c: 1013: out[ch] = x;
 25826  4C9A  0830               	movf	config_saidas@x,w
 25827  4C9B  00AF               	movwf	??_config_saidas
 25828  4C9C  082E               	movf	config_saidas@ch,w
 25829  4C9D  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25830  4C9E  0086               	movwf	6
 25831  4C9F  3002               	movlw	2	; select bank5/6
 25832  4CA0  0087               	movwf	7
 25833  4CA1  082F               	movf	??_config_saidas,w
 25834  4CA2  0081               	movwf	1
 25835                           
 25836                           ;func.c: 1014: byte_out[x] = (0b00001000);
 25837  4CA3  3008               	movlw	8
 25838  4CA4                     L48:	
 25839  4CA4  00AF               	movwf	??_config_saidas
 25840  4CA5  0830               	movf	config_saidas@x,w
 25841  4CA6  3EA0               	addlw	(low (_byte_out| (0+512)))& (0+255)
 25842  4CA7  0086               	movwf	6
 25843  4CA8  3002               	movlw	2	; select bank5/6
 25844  4CA9  0087               	movwf	7
 25845  4CAA  082F               	movf	??_config_saidas,w
 25846  4CAB  0081               	movwf	1
 25847                           
 25848                           ;func.c: 1016: }
 25849                           
 25850                           ;func.c: 1015: break;
 25851  4CAC  2CBC               	goto	l14118
 25852  4CAD                     l14116:	
 25853  4CAD  0140               	movlb	0	; select bank0
 25854  4CAE  082E               	movf	config_saidas@ch,w
 25855                           
 25856                           ; Switch size 1, requested type "space"
 25857                           ; Number of cases is 4, Range of values is 1 to 4
 25858                           ; switch strategies available:
 25859                           ; Name         Instructions Cycles
 25860                           ; simple_byte           13     7 (average)
 25861                           ; direct_byte           17     9 (fixed)
 25862                           ; jumptable            263     9 (fixed)
 25863                           ;	Chosen strategy is simple_byte
 25864  4CAF  3A01               	xorlw	1	; case 1
 25865  4CB0  1903               	skipnz
 25866  4CB1  2C72               	goto	l14106
 25867  4CB2  3A03               	xorlw	3	; case 2
 25868  4CB3  1903               	skipnz
 25869  4CB4  2C84               	goto	l14108
 25870  4CB5  3A01               	xorlw	1	; case 3
 25871  4CB6  1903               	skipnz
 25872  4CB7  2C8F               	goto	l14110
 25873  4CB8  3A07               	xorlw	7	; case 4
 25874  4CB9  1903               	skipnz
 25875  4CBA  2C9A               	goto	l14112
 25876  4CBB  2CBC               	goto	l14118
 25877  4CBC                     l14118:	
 25878                           
 25879                           ;func.c: 1017: config_flag_saida(x,ch);
 25880  4CBC  082E               	movf	config_saidas@ch,w
 25881  4CBD  00AF               	movwf	??_config_saidas
 25882  4CBE  082F               	movf	??_config_saidas,w
 25883  4CBF  00AB               	movwf	config_flag_saida@ch
 25884  4CC0  0830               	movf	config_saidas@x,w
 25885  4CC1  31CB  23C1         	fcall	_config_flag_saida
 25886  4CC3  0008               	return
 25887  4CC4                     __end_of_config_saidas:	
 25888                           
 25889                           	psect	text61
 25890  61C7                     __ptext61:	
 25891 ;; *************** function _clear_saida *****************
 25892 ;; Defined at:
 25893 ;;		line 1032 in file "func.c"
 25894 ;; Parameters:    Size  Location     Type
 25895 ;;  ch              1    wreg     enum E15204
 25896 ;; Auto vars:     Size  Location     Type
 25897 ;;  ch              1   13[BANK0 ] enum E15204
 25898 ;; Return value:  Size  Location     Type
 25899 ;;                  1    wreg      void 
 25900 ;; Registers used:
 25901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 25902 ;; Tracked objects:
 25903 ;;		On entry : 0/0
 25904 ;;		On exit  : 0/0
 25905 ;;		Unchanged: 0/0
 25906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25908 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25910 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25911 ;;Total ram usage:        1 bytes
 25912 ;; Hardware stack levels used:    1
 25913 ;; Hardware stack levels required when called:    4
 25914 ;; This function calls:
 25915 ;;		_config_flag_saida
 25916 ;; This function is called by:
 25917 ;;		_config_saidas
 25918 ;; This function uses a non-reentrant model
 25919 ;;
 25920                           
 25921                           
 25922                           ;psect for function _clear_saida
 25923  61C7                     _clear_saida:	
 25924                           
 25925                           ;incstack = 0
 25926                           ; Regs used in _clear_saida: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 25927                           ;clear_saida@ch stored from wreg
 25928  61C7  0140               	movlb	0	; select bank0
 25929  61C8  00AD               	movwf	clear_saida@ch
 25930                           
 25931                           ;func.c: 1033: config_flag_saida(out[ch],0);
 25932  61C9  01AB               	clrf	config_flag_saida@ch
 25933  61CA  082D               	movf	clear_saida@ch,w
 25934  61CB  3EB0               	addlw	(low (_out| (0+512)))& (0+255)
 25935  61CC  0086               	movwf	6
 25936  61CD  3002               	movlw	2	; select bank5/6
 25937  61CE  0087               	movwf	7
 25938  61CF  0801               	movf	1,w
 25939  61D0  31CB  23C1         	fcall	_config_flag_saida
 25940  61D2  0008               	return
 25941  61D3                     __end_of_clear_saida:	
 25942                           
 25943                           	psect	text62
 25944  4BC1                     __ptext62:	
 25945 ;; *************** function _config_flag_saida *****************
 25946 ;; Defined at:
 25947 ;;		line 1186 in file "func.c"
 25948 ;; Parameters:    Size  Location     Type
 25949 ;;  x               1    wreg     enum E15193
 25950 ;;  ch              1   11[BANK0 ] enum E15204
 25951 ;; Auto vars:     Size  Location     Type
 25952 ;;  x               1   12[BANK0 ] enum E15193
 25953 ;; Return value:  Size  Location     Type
 25954 ;;                  1    wreg      void 
 25955 ;; Registers used:
 25956 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 25957 ;; Tracked objects:
 25958 ;;		On entry : 0/0
 25959 ;;		On exit  : 0/0
 25960 ;;		Unchanged: 0/0
 25961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 25962 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 25966 ;;Total ram usage:        2 bytes
 25967 ;; Hardware stack levels used:    1
 25968 ;; Hardware stack levels required when called:    3
 25969 ;; This function calls:
 25970 ;;		Nothing
 25971 ;; This function is called by:
 25972 ;;		_config_saidas
 25973 ;;		_clear_saida
 25974 ;; This function uses a non-reentrant model
 25975 ;;
 25976                           
 25977                           
 25978                           ;psect for function _config_flag_saida
 25979  4BC1                     _config_flag_saida:	
 25980                           
 25981                           ;incstack = 0
 25982                           ; Regs used in _config_flag_saida: [wreg-fsr0h+status,2+status,0]
 25983                           ;config_flag_saida@x stored from wreg
 25984  4BC1  0140               	movlb	0	; select bank0
 25985  4BC2  00AC               	movwf	config_flag_saida@x
 25986                           
 25987                           ;func.c: 1187: switch (x){
 25988  4BC3  2C09               	goto	l13842
 25989  4BC4                     l13812:	
 25990                           ;func.c: 1190: case PNE_DESCE:
 25991                           
 25992                           ;func.c: 1189: break;
 25993                           
 25994                           ;func.c: 1188: case OUT_NC:
 25995                           
 25996                           
 25997                           ;func.c: 1191: if(ch != OUT_NONE) cfg.pne_desce = 1;
 25998  4BC4  082B               	movf	config_flag_saida@ch,w
 25999  4BC5  1903               	btfsc	3,2
 26000  4BC6  2BCA               	goto	l1566
 26001  4BC7  0143               	movlb	3	; select bank3
 26002  4BC8  1630               	bsf	_cfg^(0+384),4
 26003  4BC9  0008               	return
 26004  4BCA                     l1566:	
 26005                           
 26006                           ;func.c: 1192: else cfg.pne_desce = 0;
 26007  4BCA  0143               	movlb	3	; select bank3
 26008  4BCB  1230               	bcf	_cfg^(0+384),4
 26009                           
 26010                           ;func.c: 1193: break;
 26011  4BCC  0008               	return
 26012  4BCD                     l13816:	
 26013                           ;func.c: 1194: case PNE_SOBE:
 26014                           
 26015                           
 26016                           ;func.c: 1195: if(ch != OUT_NONE) cfg.pne_sobe = 1;
 26017  4BCD  0140               	movlb	0	; select bank0
 26018  4BCE  082B               	movf	config_flag_saida@ch,w
 26019  4BCF  1903               	btfsc	3,2
 26020  4BD0  2BD4               	goto	l1569
 26021  4BD1  0143               	movlb	3	; select bank3
 26022  4BD2  15B0               	bsf	_cfg^(0+384),3
 26023  4BD3  0008               	return
 26024  4BD4                     l1569:	
 26025                           
 26026                           ;func.c: 1196: else cfg.pne_sobe = 0;
 26027  4BD4  0143               	movlb	3	; select bank3
 26028  4BD5  11B0               	bcf	_cfg^(0+384),3
 26029                           
 26030                           ;func.c: 1197: break;
 26031  4BD6  0008               	return
 26032  4BD7                     l13820:	
 26033                           ;func.c: 1198: case ERRO:
 26034                           
 26035                           
 26036                           ;func.c: 1199: if(ch != OUT_NONE) cfg.trava_erro = 1;
 26037  4BD7  0140               	movlb	0	; select bank0
 26038  4BD8  082B               	movf	config_flag_saida@ch,w
 26039  4BD9  1903               	btfsc	3,2
 26040  4BDA  2BDE               	goto	l1572
 26041  4BDB  0143               	movlb	3	; select bank3
 26042  4BDC  1531               	bsf	(_cfg^(0+384)+1),2
 26043  4BDD  0008               	return
 26044  4BDE                     l1572:	
 26045                           
 26046                           ;func.c: 1200: else cfg.trava_erro = 0;
 26047  4BDE  0143               	movlb	3	; select bank3
 26048  4BDF  1131               	bcf	(_cfg^(0+384)+1),2
 26049                           
 26050                           ;func.c: 1201: break;
 26051  4BE0  0008               	return
 26052  4BE1                     l13824:	
 26053                           ;func.c: 1202: case ERRO_ENE:
 26054                           
 26055                           
 26056                           ;func.c: 1203: if(ch != OUT_NONE) cfg.energ_erro = 1;
 26057  4BE1  0140               	movlb	0	; select bank0
 26058  4BE2  082B               	movf	config_flag_saida@ch,w
 26059  4BE3  1903               	btfsc	3,2
 26060  4BE4  2BE8               	goto	l1575
 26061  4BE5  0143               	movlb	3	; select bank3
 26062  4BE6  14B2               	bsf	(_cfg^(0+384)+2),1
 26063  4BE7  0008               	return
 26064  4BE8                     l1575:	
 26065                           
 26066                           ;func.c: 1204: else cfg.energ_erro = 0;
 26067  4BE8  0143               	movlb	3	; select bank3
 26068  4BE9  10B2               	bcf	(_cfg^(0+384)+2),1
 26069                           
 26070                           ;func.c: 1205: break;
 26071  4BEA  0008               	return
 26072  4BEB                     l13828:	
 26073                           ;func.c: 1206: case STATUS_GERADOR:
 26074                           
 26075                           
 26076                           ;func.c: 1207: if(ch != OUT_NONE) cfg.status_out = 1;
 26077  4BEB  0140               	movlb	0	; select bank0
 26078  4BEC  082B               	movf	config_flag_saida@ch,w
 26079  4BED  1903               	btfsc	3,2
 26080  4BEE  2BF2               	goto	l1578
 26081  4BEF  0143               	movlb	3	; select bank3
 26082  4BF0  16B1               	bsf	(_cfg^(0+384)+1),5
 26083  4BF1  0008               	return
 26084  4BF2                     l1578:	
 26085                           
 26086                           ;func.c: 1208: else cfg.status_out = 0;
 26087  4BF2  0143               	movlb	3	; select bank3
 26088  4BF3  12B1               	bcf	(_cfg^(0+384)+1),5
 26089                           
 26090                           ;func.c: 1209: break;
 26091  4BF4  0008               	return
 26092  4BF5                     l13832:	
 26093                           ;func.c: 1210: case STATUS_HF:
 26094                           
 26095                           
 26096                           ;func.c: 1211: if(ch != OUT_NONE) cfg.status_hf = 1;
 26097  4BF5  0140               	movlb	0	; select bank0
 26098  4BF6  082B               	movf	config_flag_saida@ch,w
 26099  4BF7  1903               	btfsc	3,2
 26100  4BF8  2BFC               	goto	l1581
 26101  4BF9  0143               	movlb	3	; select bank3
 26102  4BFA  1731               	bsf	(_cfg^(0+384)+1),6
 26103  4BFB  0008               	return
 26104  4BFC                     l1581:	
 26105                           
 26106                           ;func.c: 1212: else cfg.status_hf = 0;
 26107  4BFC  0143               	movlb	3	; select bank3
 26108  4BFD  1331               	bcf	(_cfg^(0+384)+1),6
 26109                           
 26110                           ;func.c: 1213: break;
 26111  4BFE  0008               	return
 26112  4BFF                     l13836:	
 26113                           ;func.c: 1214: case RST_INV:
 26114                           
 26115                           
 26116                           ;func.c: 1215: if(ch != OUT_NONE) cfg.rst_inv = 1;
 26117  4BFF  0140               	movlb	0	; select bank0
 26118  4C00  082B               	movf	config_flag_saida@ch,w
 26119  4C01  1903               	btfsc	3,2
 26120  4C02  2C06               	goto	l1584
 26121  4C03  0143               	movlb	3	; select bank3
 26122  4C04  17B1               	bsf	(_cfg^(0+384)+1),7
 26123  4C05  0008               	return
 26124  4C06                     l1584:	
 26125                           
 26126                           ;func.c: 1216: else cfg.rst_inv = 0;
 26127  4C06  0143               	movlb	3	; select bank3
 26128  4C07  13B1               	bcf	(_cfg^(0+384)+1),7
 26129                           
 26130                           ;func.c: 1218: }
 26131                           
 26132                           ;func.c: 1217: break;
 26133  4C08  0008               	return
 26134  4C09                     l13842:	
 26135  4C09  0140               	movlb	0	; select bank0
 26136  4C0A  082C               	movf	config_flag_saida@x,w
 26137                           
 26138                           ; Switch size 1, requested type "space"
 26139                           ; Number of cases is 8, Range of values is 0 to 7
 26140                           ; switch strategies available:
 26141                           ; Name         Instructions Cycles
 26142                           ; direct_byte           22     6 (fixed)
 26143                           ; simple_byte           25    13 (average)
 26144                           ; jumptable            260     6 (fixed)
 26145                           ;	Chosen strategy is direct_byte
 26146  4C0B  0084               	movwf	4
 26147  4C0C  3008               	movlw	8
 26148  4C0D  0204               	subwf	4,w
 26149  4C0E  1803               	skipnc
 26150  4C0F  0008               	return
 26151  4C10  31E1               	movlp	high S18606
 26152  4C11  3504               	lslf	4,w
 26153  4C12  3E35               	addlw	low S18606
 26154  4C13  0082               	movwf	2
 26155  4C14                     l1586:	
 26156  4C14  0008               	return
 26157  4C15                     __end_of_config_flag_saida:	
 26158                           
 26159                           	psect	swtext3
 26160  6135                     __pswtext3:	
 26161  6135                     S18606:	
 26162  6135  31CC  2C14         	ljmp	l1586
 26163  6137  31CB  2BC4         	ljmp	l13812
 26164  6139  31CB  2BCD         	ljmp	l13816
 26165  613B  31CB  2BD7         	ljmp	l13820
 26166  613D  31CB  2BE1         	ljmp	l13824
 26167  613F  31CB  2BEB         	ljmp	l13828
 26168  6141  31CB  2BF5         	ljmp	l13832
 26169  6143  31CB  2BFF         	ljmp	l13836
 26170                           
 26171                           	psect	text63
 26172  41C9                     __ptext63:	
 26173 ;; *************** function _config_entrada *****************
 26174 ;; Defined at:
 26175 ;;		line 961 in file "func.c"
 26176 ;; Parameters:    Size  Location     Type
 26177 ;;  x               1    wreg     enum E15171
 26178 ;;  ch              1   13[BANK0 ] enum E15184
 26179 ;; Auto vars:     Size  Location     Type
 26180 ;;  x               1   16[BANK0 ] enum E15171
 26181 ;; Return value:  Size  Location     Type
 26182 ;;                  1    wreg      void 
 26183 ;; Registers used:
 26184 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26185 ;; Tracked objects:
 26186 ;;		On entry : 0/0
 26187 ;;		On exit  : 0/0
 26188 ;;		Unchanged: 0/0
 26189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26190 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26192 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26193 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26194 ;;Total ram usage:        4 bytes
 26195 ;; Hardware stack levels used:    1
 26196 ;; Hardware stack levels required when called:    4
 26197 ;; This function calls:
 26198 ;;		_config_flag_entrada
 26199 ;; This function is called by:
 26200 ;;		_config_maq_especial
 26201 ;;		_config_maq
 26202 ;; This function uses a non-reentrant model
 26203 ;;
 26204                           
 26205                           
 26206                           ;psect for function _config_entrada
 26207  41C9                     _config_entrada:	
 26208                           
 26209                           ;incstack = 0
 26210                           ; Regs used in _config_entrada: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26211                           ;config_entrada@x stored from wreg
 26212  41C9  0140               	movlb	0	; select bank0
 26213  41CA  00B0               	movwf	config_entrada@x
 26214                           
 26215                           ;func.c: 962: switch (ch) {
 26216  41CB  2A38               	goto	l14094
 26217  41CC                     l14080:	
 26218                           ;func.c: 963: case IN1:
 26219                           
 26220                           
 26221                           ;func.c: 964: in[ch] = x;
 26222  41CC  0830               	movf	config_entrada@x,w
 26223  41CD  00AE               	movwf	??_config_entrada
 26224  41CE  082D               	movf	config_entrada@ch,w
 26225  41CF  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 26226  41D0  0086               	movwf	6
 26227  41D1  3002               	movlw	2	; select bank5/6
 26228  41D2  0087               	movwf	7
 26229  41D3  082E               	movf	??_config_entrada,w
 26230  41D4  0081               	movwf	1
 26231                           
 26232                           ;func.c: 965: byte_in[x] = (1<<ch);
 26233  41D5  3001               	movlw	1
 26234  41D6  00AE               	movwf	??_config_entrada
 26235  41D7  0A2D               	incf	config_entrada@ch,w
 26236  41D8  29DA               	goto	u14594
 26237  41D9                     u14595:	
 26238  41D9  35AE               	lslf	??_config_entrada,f
 26239  41DA                     u14594:	
 26240  41DA  0B89               	decfsz	9,f
 26241  41DB  29D9               	goto	u14595
 26242  41DC  2A2E               	goto	L53
 26243  41DD                     l14082:	
 26244                           ;func.c: 968: case IN2:
 26245                           
 26246                           ;func.c: 966: break;
 26247                           
 26248                           
 26249                           ;func.c: 969: in[ch] = x;
 26250  41DD  0830               	movf	config_entrada@x,w
 26251  41DE  00AE               	movwf	??_config_entrada
 26252  41DF  082D               	movf	config_entrada@ch,w
 26253  41E0  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 26254  41E1  0086               	movwf	6
 26255  41E2  3002               	movlw	2	; select bank5/6
 26256  41E3  0087               	movwf	7
 26257  41E4  082E               	movf	??_config_entrada,w
 26258  41E5  0081               	movwf	1
 26259                           
 26260                           ;func.c: 970: byte_in[x] = (1<<ch);
 26261  41E6  3001               	movlw	1
 26262  41E7  00AE               	movwf	??_config_entrada
 26263  41E8  0A2D               	incf	config_entrada@ch,w
 26264  41E9  29EB               	goto	u14604
 26265  41EA                     u14605:	
 26266  41EA  35AE               	lslf	??_config_entrada,f
 26267  41EB                     u14604:	
 26268  41EB  0B89               	decfsz	9,f
 26269  41EC  29EA               	goto	u14605
 26270  41ED  2A2E               	goto	L53
 26271  41EE                     l14084:	
 26272                           ;func.c: 973: case IN3:
 26273                           
 26274                           ;func.c: 971: break;
 26275                           
 26276                           
 26277                           ;func.c: 974: in[ch] = x;
 26278  41EE  0830               	movf	config_entrada@x,w
 26279  41EF  00AE               	movwf	??_config_entrada
 26280  41F0  082D               	movf	config_entrada@ch,w
 26281  41F1  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 26282  41F2  0086               	movwf	6
 26283  41F3  3002               	movlw	2	; select bank5/6
 26284  41F4  0087               	movwf	7
 26285  41F5  082E               	movf	??_config_entrada,w
 26286  41F6  0081               	movwf	1
 26287                           
 26288                           ;func.c: 975: byte_in[x] = (1<<ch);
 26289  41F7  3001               	movlw	1
 26290  41F8  00AE               	movwf	??_config_entrada
 26291  41F9  0A2D               	incf	config_entrada@ch,w
 26292  41FA  29FC               	goto	u14614
 26293  41FB                     u14615:	
 26294  41FB  35AE               	lslf	??_config_entrada,f
 26295  41FC                     u14614:	
 26296  41FC  0B89               	decfsz	9,f
 26297  41FD  29FB               	goto	u14615
 26298  41FE  2A2E               	goto	L53
 26299  41FF                     l14086:	
 26300                           ;func.c: 978: case IN4:
 26301                           
 26302                           ;func.c: 976: break;
 26303                           
 26304                           
 26305                           ;func.c: 979: in[ch] = x;
 26306  41FF  0830               	movf	config_entrada@x,w
 26307  4200  00AE               	movwf	??_config_entrada
 26308  4201  082D               	movf	config_entrada@ch,w
 26309  4202  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 26310  4203  0086               	movwf	6
 26311  4204  3002               	movlw	2	; select bank5/6
 26312  4205  0087               	movwf	7
 26313  4206  082E               	movf	??_config_entrada,w
 26314  4207  0081               	movwf	1
 26315                           
 26316                           ;func.c: 980: byte_in[x] = (1<<ch);
 26317  4208  3001               	movlw	1
 26318  4209  00AE               	movwf	??_config_entrada
 26319  420A  0A2D               	incf	config_entrada@ch,w
 26320  420B  2A0D               	goto	u14624
 26321  420C                     u14625:	
 26322  420C  35AE               	lslf	??_config_entrada,f
 26323  420D                     u14624:	
 26324  420D  0B89               	decfsz	9,f
 26325  420E  2A0C               	goto	u14625
 26326  420F  2A2E               	goto	L53
 26327  4210                     l14088:	
 26328                           ;func.c: 983: case IN5:
 26329                           
 26330                           ;func.c: 981: break;
 26331                           
 26332                           
 26333                           ;func.c: 984: in[ch] = x;
 26334  4210  0830               	movf	config_entrada@x,w
 26335  4211  00AE               	movwf	??_config_entrada
 26336  4212  082D               	movf	config_entrada@ch,w
 26337  4213  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 26338  4214  0086               	movwf	6
 26339  4215  3002               	movlw	2	; select bank5/6
 26340  4216  0087               	movwf	7
 26341  4217  082E               	movf	??_config_entrada,w
 26342  4218  0081               	movwf	1
 26343                           
 26344                           ;func.c: 985: byte_in[x] = (1<<ch);
 26345  4219  3001               	movlw	1
 26346  421A  00AE               	movwf	??_config_entrada
 26347  421B  0A2D               	incf	config_entrada@ch,w
 26348  421C  2A1E               	goto	u14634
 26349  421D                     u14635:	
 26350  421D  35AE               	lslf	??_config_entrada,f
 26351  421E                     u14634:	
 26352  421E  0B89               	decfsz	9,f
 26353  421F  2A1D               	goto	u14635
 26354  4220  2A2E               	goto	L53
 26355  4221                     l14090:	
 26356                           ;func.c: 988: case IN_NONE:
 26357                           
 26358                           ;func.c: 986: break;
 26359                           
 26360                           
 26361                           ;func.c: 989: in[ch] = 0;
 26362  4221  082D               	movf	config_entrada@ch,w
 26363  4222  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 26364  4223  0086               	movwf	6
 26365  4224  3002               	movlw	2	; select bank5/6
 26366  4225  0087               	movwf	7
 26367  4226  0181               	clrf	1
 26368                           
 26369                           ;func.c: 990: byte_in[x] = (1<<ch);
 26370  4227  3001               	movlw	1
 26371  4228  00AE               	movwf	??_config_entrada
 26372  4229  0A2D               	incf	config_entrada@ch,w
 26373  422A  2A2C               	goto	u14644
 26374  422B                     u14645:	
 26375  422B  35AE               	lslf	??_config_entrada,f
 26376  422C                     u14644:	
 26377  422C  0B89               	decfsz	9,f
 26378  422D  2A2B               	goto	u14645
 26379  422E                     L53:	
 26380  422E  082E               	movf	??_config_entrada,w
 26381  422F  00AF               	movwf	??_config_entrada+1
 26382  4230  0830               	movf	config_entrada@x,w
 26383  4231  3EA8               	addlw	(low (_byte_in| (0+512)))& (0+255)
 26384  4232  0086               	movwf	6
 26385  4233  3002               	movlw	2	; select bank5/6
 26386  4234  0087               	movwf	7
 26387  4235  082F               	movf	??_config_entrada+1,w
 26388  4236  0081               	movwf	1
 26389                           
 26390                           ;func.c: 992: }
 26391                           
 26392                           ;func.c: 991: break;
 26393  4237  2A42               	goto	l14096
 26394  4238                     l14094:	
 26395  4238  082D               	movf	config_entrada@ch,w
 26396                           
 26397                           ; Switch size 1, requested type "space"
 26398                           ; Number of cases is 6, Range of values is 0 to 5
 26399                           ; switch strategies available:
 26400                           ; Name         Instructions Cycles
 26401                           ; direct_byte           18     6 (fixed)
 26402                           ; simple_byte           19    10 (average)
 26403                           ; jumptable            260     6 (fixed)
 26404                           ;	Chosen strategy is direct_byte
 26405  4239  0084               	movwf	4
 26406  423A  3006               	movlw	6
 26407  423B  0204               	subwf	4,w
 26408  423C  1803               	skipnc
 26409  423D  2A42               	goto	l14096
 26410  423E  31E1               	movlp	high S18608
 26411  423F  3504               	lslf	4,w
 26412  4240  3ED3               	addlw	low S18608
 26413  4241  0082               	movwf	2
 26414  4242                     l14096:	
 26415                           
 26416                           ;func.c: 993: config_flag_entrada(x,ch);
 26417  4242  082D               	movf	config_entrada@ch,w
 26418  4243  00AE               	movwf	??_config_entrada
 26419  4244  082E               	movf	??_config_entrada,w
 26420  4245  00AB               	movwf	config_flag_entrada@ch
 26421  4246  0830               	movf	config_entrada@x,w
 26422  4247  31CF  2721         	fcall	_config_flag_entrada
 26423  4249  0008               	return
 26424  424A                     __end_of_config_entrada:	
 26425                           
 26426                           	psect	swtext4
 26427  61D3                     __pswtext4:	
 26428  61D3                     S18608:	
 26429  61D3  31C2  2A21         	ljmp	l14090
 26430  61D5  31C1  29CC         	ljmp	l14080
 26431  61D7  31C1  29DD         	ljmp	l14082
 26432  61D9  31C1  29EE         	ljmp	l14084
 26433  61DB  31C1  29FF         	ljmp	l14086
 26434  61DD  31C2  2A10         	ljmp	l14088
 26435                           
 26436                           	psect	text64
 26437  4F21                     __ptext64:	
 26438 ;; *************** function _config_flag_entrada *****************
 26439 ;; Defined at:
 26440 ;;		line 1143 in file "func.c"
 26441 ;; Parameters:    Size  Location     Type
 26442 ;;  x               1    wreg     enum E15171
 26443 ;;  ch              1   11[BANK0 ] enum E15184
 26444 ;; Auto vars:     Size  Location     Type
 26445 ;;  x               1   12[BANK0 ] enum E15171
 26446 ;; Return value:  Size  Location     Type
 26447 ;;                  1    wreg      void 
 26448 ;; Registers used:
 26449 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 26450 ;; Tracked objects:
 26451 ;;		On entry : 0/0
 26452 ;;		On exit  : 0/0
 26453 ;;		Unchanged: 0/0
 26454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26455 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26456 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26458 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26459 ;;Total ram usage:        2 bytes
 26460 ;; Hardware stack levels used:    1
 26461 ;; Hardware stack levels required when called:    3
 26462 ;; This function calls:
 26463 ;;		Nothing
 26464 ;; This function is called by:
 26465 ;;		_config_entrada
 26466 ;;		_clear_entrada
 26467 ;; This function uses a non-reentrant model
 26468 ;;
 26469                           
 26470                           
 26471                           ;psect for function _config_flag_entrada
 26472  4F21                     _config_flag_entrada:	
 26473                           
 26474                           ;incstack = 0
 26475                           ; Regs used in _config_flag_entrada: [wreg-fsr0h+status,2+status,0]
 26476                           ;config_flag_entrada@x stored from wreg
 26477  4F21  0140               	movlb	0	; select bank0
 26478  4F22  00AC               	movwf	config_flag_entrada@x
 26479                           
 26480                           ;func.c: 1144: switch(x){
 26481  4F23  2F7D               	goto	l13980
 26482  4F24                     l13942:	
 26483                           ;func.c: 1147: case EMERGENCIA:
 26484                           
 26485                           ;func.c: 1146: break;
 26486                           
 26487                           ;func.c: 1145: case IN_NC:
 26488                           
 26489                           
 26490                           ;func.c: 1148: if(ch != IN_NONE) cfg.emergencia = 1;
 26491  4F24  082B               	movf	config_flag_entrada@ch,w
 26492  4F25  1903               	btfsc	3,2
 26493  4F26  2F2A               	goto	l1533
 26494  4F27  0143               	movlb	3	; select bank3
 26495  4F28  1430               	bsf	_cfg^(0+384),0
 26496  4F29  0008               	return
 26497  4F2A                     l1533:	
 26498                           
 26499                           ;func.c: 1149: else cfg.emergencia = 0;
 26500  4F2A  0143               	movlb	3	; select bank3
 26501  4F2B  1030               	bcf	_cfg^(0+384),0
 26502                           
 26503                           ;func.c: 1150: break;
 26504  4F2C  0008               	return
 26505  4F2D                     l13946:	
 26506                           ;func.c: 1151: case ACIONAMENTO1:
 26507                           
 26508                           
 26509                           ;func.c: 1152: if(ch != IN_NONE) cfg.aciona1 = 1;
 26510  4F2D  0140               	movlb	0	; select bank0
 26511  4F2E  082B               	movf	config_flag_entrada@ch,w
 26512  4F2F  1903               	btfsc	3,2
 26513  4F30  2F34               	goto	l1536
 26514  4F31  0143               	movlb	3	; select bank3
 26515  4F32  14B0               	bsf	_cfg^(0+384),1
 26516  4F33  0008               	return
 26517  4F34                     l1536:	
 26518                           
 26519                           ;func.c: 1153: else cfg.aciona1 = 0;
 26520  4F34  0143               	movlb	3	; select bank3
 26521  4F35  10B0               	bcf	_cfg^(0+384),1
 26522                           
 26523                           ;func.c: 1154: break;
 26524  4F36  0008               	return
 26525  4F37                     l13950:	
 26526                           ;func.c: 1155: case ACIONAMENTO2:
 26527                           
 26528                           
 26529                           ;func.c: 1156: if(ch != IN_NONE) cfg.aciona2 = 1;
 26530  4F37  0140               	movlb	0	; select bank0
 26531  4F38  082B               	movf	config_flag_entrada@ch,w
 26532  4F39  1903               	btfsc	3,2
 26533  4F3A  2F3E               	goto	l1539
 26534  4F3B  0143               	movlb	3	; select bank3
 26535  4F3C  1530               	bsf	_cfg^(0+384),2
 26536  4F3D  0008               	return
 26537  4F3E                     l1539:	
 26538                           
 26539                           ;func.c: 1157: else cfg.aciona2 = 0;
 26540  4F3E  0143               	movlb	3	; select bank3
 26541  4F3F  1130               	bcf	_cfg^(0+384),2
 26542                           
 26543                           ;func.c: 1158: break;
 26544  4F40  0008               	return
 26545  4F41                     l13954:	
 26546                           ;func.c: 1159: case RESET:
 26547                           
 26548                           
 26549                           ;func.c: 1160: if(ch != IN_NONE) cfg.reset = 1;
 26550  4F41  0140               	movlb	0	; select bank0
 26551  4F42  082B               	movf	config_flag_entrada@ch,w
 26552  4F43  1903               	btfsc	3,2
 26553  4F44  2F48               	goto	l1542
 26554  4F45  0143               	movlb	3	; select bank3
 26555  4F46  15B1               	bsf	(_cfg^(0+384)+1),3
 26556  4F47  0008               	return
 26557  4F48                     l1542:	
 26558                           
 26559                           ;func.c: 1161: else cfg.reset = 0;
 26560  4F48  0143               	movlb	3	; select bank3
 26561  4F49  11B1               	bcf	(_cfg^(0+384)+1),3
 26562                           
 26563                           ;func.c: 1162: break;
 26564  4F4A  0008               	return
 26565  4F4B                     l13958:	
 26566                           ;func.c: 1163: case METAL:
 26567                           
 26568                           
 26569                           ;func.c: 1164: if(ch != IN_NONE) cfg.metal = 1;
 26570  4F4B  0140               	movlb	0	; select bank0
 26571  4F4C  082B               	movf	config_flag_entrada@ch,w
 26572  4F4D  1903               	btfsc	3,2
 26573  4F4E  2F52               	goto	l1545
 26574  4F4F  0143               	movlb	3	; select bank3
 26575  4F50  1631               	bsf	(_cfg^(0+384)+1),4
 26576  4F51  0008               	return
 26577  4F52                     l1545:	
 26578                           
 26579                           ;func.c: 1165: else cfg.metal = 0;
 26580  4F52  0143               	movlb	3	; select bank3
 26581  4F53  1231               	bcf	(_cfg^(0+384)+1),4
 26582                           
 26583                           ;func.c: 1166: break;
 26584  4F54  0008               	return
 26585  4F55                     l13962:	
 26586                           ;func.c: 1167: case SENSOR_PECA:
 26587                           
 26588                           
 26589                           ;func.c: 1168: if(ch != IN_NONE) cfg.sensor_peca = 1;
 26590  4F55  0140               	movlb	0	; select bank0
 26591  4F56  082B               	movf	config_flag_entrada@ch,w
 26592  4F57  1903               	btfsc	3,2
 26593  4F58  2F5C               	goto	l1548
 26594  4F59  0143               	movlb	3	; select bank3
 26595  4F5A  1431               	bsf	(_cfg^(0+384)+1),0
 26596  4F5B  0008               	return
 26597  4F5C                     l1548:	
 26598                           
 26599                           ;func.c: 1169: else cfg.sensor_peca = 0;
 26600  4F5C  0143               	movlb	3	; select bank3
 26601  4F5D  1031               	bcf	(_cfg^(0+384)+1),0
 26602                           
 26603                           ;func.c: 1170: break;
 26604  4F5E  0008               	return
 26605  4F5F                     l13966:	
 26606                           ;func.c: 1171: case SENSOR_PNE_AV:
 26607                           
 26608                           
 26609                           ;func.c: 1172: if(ch != IN_NONE) cfg.sensor_pne_av = 1;
 26610  4F5F  0140               	movlb	0	; select bank0
 26611  4F60  082B               	movf	config_flag_entrada@ch,w
 26612  4F61  1903               	btfsc	3,2
 26613  4F62  2F66               	goto	l1551
 26614  4F63  0143               	movlb	3	; select bank3
 26615  4F64  1730               	bsf	_cfg^(0+384),6
 26616  4F65  0008               	return
 26617  4F66                     l1551:	
 26618                           
 26619                           ;func.c: 1173: else cfg.sensor_pne_av = 0;
 26620  4F66  0143               	movlb	3	; select bank3
 26621  4F67  1330               	bcf	_cfg^(0+384),6
 26622                           
 26623                           ;func.c: 1174: break;
 26624  4F68  0008               	return
 26625  4F69                     l13970:	
 26626                           ;func.c: 1175: case SENSOR_PNE_RC:
 26627                           
 26628                           
 26629                           ;func.c: 1176: if(ch != IN_NONE) cfg.sensor_pne_rc = 1;
 26630  4F69  0140               	movlb	0	; select bank0
 26631  4F6A  082B               	movf	config_flag_entrada@ch,w
 26632  4F6B  1903               	btfsc	3,2
 26633  4F6C  2F70               	goto	l1554
 26634  4F6D  0143               	movlb	3	; select bank3
 26635  4F6E  17B0               	bsf	_cfg^(0+384),7
 26636  4F6F  0008               	return
 26637  4F70                     l1554:	
 26638                           
 26639                           ;func.c: 1177: else cfg.sensor_pne_rc = 0;
 26640  4F70  0143               	movlb	3	; select bank3
 26641  4F71  13B0               	bcf	_cfg^(0+384),7
 26642                           
 26643                           ;func.c: 1178: break;
 26644  4F72  0008               	return
 26645  4F73                     l13974:	
 26646                           ;func.c: 1179: case SENSOR_HOLD:
 26647                           
 26648                           
 26649                           ;func.c: 1180: if(ch != IN_NONE) cfg.sensor_hold= 1;
 26650  4F73  0140               	movlb	0	; select bank0
 26651  4F74  082B               	movf	config_flag_entrada@ch,w
 26652  4F75  1903               	btfsc	3,2
 26653  4F76  2F7A               	goto	l1557
 26654  4F77  0143               	movlb	3	; select bank3
 26655  4F78  16B0               	bsf	_cfg^(0+384),5
 26656  4F79  0008               	return
 26657  4F7A                     l1557:	
 26658                           
 26659                           ;func.c: 1181: else cfg.sensor_hold = 0;
 26660  4F7A  0143               	movlb	3	; select bank3
 26661  4F7B  12B0               	bcf	_cfg^(0+384),5
 26662                           
 26663                           ;func.c: 1183: }
 26664                           
 26665                           ;func.c: 1182: break;
 26666  4F7C  0008               	return
 26667  4F7D                     l13980:	
 26668  4F7D  0140               	movlb	0	; select bank0
 26669  4F7E  082C               	movf	config_flag_entrada@x,w
 26670                           
 26671                           ; Switch size 1, requested type "space"
 26672                           ; Number of cases is 10, Range of values is 0 to 9
 26673                           ; switch strategies available:
 26674                           ; Name         Instructions Cycles
 26675                           ; direct_byte           26     6 (fixed)
 26676                           ; simple_byte           31    16 (average)
 26677                           ; jumptable            260     6 (fixed)
 26678                           ;	Chosen strategy is direct_byte
 26679  4F7F  0084               	movwf	4
 26680  4F80  300A               	movlw	10
 26681  4F81  0204               	subwf	4,w
 26682  4F82  1803               	skipnc
 26683  4F83  0008               	return
 26684  4F84  31E0               	movlp	high S18610
 26685  4F85  3504               	lslf	4,w
 26686  4F86  3EE8               	addlw	low S18610
 26687  4F87  0082               	movwf	2
 26688  4F88                     l1559:	
 26689  4F88  0008               	return
 26690  4F89                     __end_of_config_flag_entrada:	
 26691                           
 26692                           	psect	swtext5
 26693  60E8                     __pswtext5:	
 26694  60E8                     S18610:	
 26695  60E8  31CF  2F88         	ljmp	l1559
 26696  60EA  31CF  2F24         	ljmp	l13942
 26697  60EC  31CF  2F2D         	ljmp	l13946
 26698  60EE  31CF  2F37         	ljmp	l13950
 26699  60F0  31CF  2F41         	ljmp	l13954
 26700  60F2  31CF  2F4B         	ljmp	l13958
 26701  60F4  31CF  2F55         	ljmp	l13962
 26702  60F6  31CF  2F5F         	ljmp	l13966
 26703  60F8  31CF  2F69         	ljmp	l13970
 26704  60FA  31CF  2F73         	ljmp	l13974
 26705                           
 26706                           	psect	text65
 26707  51EE                     __ptext65:	
 26708 ;; *************** function _config_IO_start *****************
 26709 ;; Defined at:
 26710 ;;		line 860 in file "func.c"
 26711 ;; Parameters:    Size  Location     Type
 26712 ;;		None
 26713 ;; Auto vars:     Size  Location     Type
 26714 ;;		None
 26715 ;; Return value:  Size  Location     Type
 26716 ;;                  1    wreg      void 
 26717 ;; Registers used:
 26718 ;;		wreg, status,2
 26719 ;; Tracked objects:
 26720 ;;		On entry : 0/0
 26721 ;;		On exit  : 0/0
 26722 ;;		Unchanged: 0/0
 26723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26728 ;;Total ram usage:        0 bytes
 26729 ;; Hardware stack levels used:    1
 26730 ;; Hardware stack levels required when called:    3
 26731 ;; This function calls:
 26732 ;;		Nothing
 26733 ;; This function is called by:
 26734 ;;		_main
 26735 ;; This function uses a non-reentrant model
 26736 ;;
 26737                           
 26738                           
 26739                           ;psect for function _config_IO_start
 26740  51EE                     _config_IO_start:	
 26741                           
 26742                           ;func.c: 861: cfg.value = 0;
 26743                           
 26744                           ;incstack = 0
 26745                           ; Regs used in _config_IO_start: [wreg+status,2]
 26746  51EE  3000               	movlw	0
 26747  51EF  0143               	movlb	3	; select bank3
 26748  51F0  00B3               	movwf	(_cfg+3)^(0+384)
 26749  51F1  3000               	movlw	0
 26750  51F2  00B2               	movwf	(_cfg+2)^(0+384)
 26751  51F3  3000               	movlw	0
 26752  51F4  00B1               	movwf	(_cfg+1)^(0+384)
 26753  51F5  3000               	movlw	0
 26754  51F6  00B0               	movwf	_cfg^(0+384)
 26755                           
 26756                           ;func.c: 862: flag.value = 0;
 26757  51F7  3000               	movlw	0
 26758  51F8  00AF               	movwf	(_flag+3)^(0+384)	;volatile
 26759  51F9  3000               	movlw	0
 26760  51FA  00AE               	movwf	(_flag+2)^(0+384)	;volatile
 26761  51FB  3000               	movlw	0
 26762  51FC  00AD               	movwf	(_flag+1)^(0+384)	;volatile
 26763  51FD  3000               	movlw	0
 26764  51FE  00AC               	movwf	_flag^(0+384)	;volatile
 26765                           
 26766                           ;func.c: 863: flag_in.value = 0;
 26767  51FF  01CC               	clrf	_flag_in^(0+384)	;volatile
 26768  5200  01CD               	clrf	(_flag_in+1)^(0+384)	;volatile
 26769                           
 26770                           ;func.c: 864: led.value = 0;
 26771  5201  01E5               	clrf	_led^(0+384)	;volatile
 26772                           
 26773                           ;func.c: 865: ee.value = 0;
 26774  5202  3000               	movlw	0
 26775  5203  00AB               	movwf	(_ee+3)^(0+384)	;volatile
 26776  5204  3000               	movlw	0
 26777  5205  00AA               	movwf	(_ee+2)^(0+384)	;volatile
 26778  5206  3000               	movlw	0
 26779  5207  00A9               	movwf	(_ee+1)^(0+384)	;volatile
 26780  5208  3000               	movlw	0
 26781  5209  00A8               	movwf	_ee^(0+384)	;volatile
 26782                           
 26783                           ;func.c: 866: flag_in.value = 0;
 26784  520A  01CC               	clrf	_flag_in^(0+384)	;volatile
 26785  520B  01CD               	clrf	(_flag_in+1)^(0+384)	;volatile
 26786                           
 26787                           ;func.c: 867: btt.byte = 0;
 26788  520C  01E4               	clrf	_btt^(0+384)	;volatile
 26789  520D  0008               	return
 26790  520E                     __end_of_config_IO_start:	
 26791                           
 26792                           	psect	text66
 26793  29EC                     __ptext66:	
 26794 ;; *************** function _ciclarPneumatico *****************
 26795 ;; Defined at:
 26796 ;;		line 2902 in file "func.c"
 26797 ;; Parameters:    Size  Location     Type
 26798 ;;		None
 26799 ;; Auto vars:     Size  Location     Type
 26800 ;;  contarTempo     2   13[BANK1 ] unsigned int 
 26801 ;;  contarDescid    2   11[BANK1 ] unsigned int 
 26802 ;; Return value:  Size  Location     Type
 26803 ;;                  1    wreg      void 
 26804 ;; Registers used:
 26805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 26806 ;; Tracked objects:
 26807 ;;		On entry : 0/0
 26808 ;;		On exit  : 0/0
 26809 ;;		Unchanged: 0/0
 26810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 26811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26812 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26813 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26814 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 26815 ;;Total ram usage:        8 bytes
 26816 ;; Hardware stack levels used:    1
 26817 ;; Hardware stack levels required when called:    9
 26818 ;; This function calls:
 26819 ;;		_Lcd_Clear
 26820 ;;		_Lcd_Set_Cursor
 26821 ;;		_Lcd_Write_String
 26822 ;;		___lwdiv
 26823 ;;		_ltoa
 26824 ;;		_saida
 26825 ;;		_teclado
 26826 ;;		_trava_erro
 26827 ;; This function is called by:
 26828 ;;		_main
 26829 ;; This function uses a non-reentrant model
 26830 ;;
 26831                           
 26832                           
 26833                           ;psect for function _ciclarPneumatico
 26834  29EC                     _ciclarPneumatico:	
 26835                           
 26836                           ;func.c: 2903: uint16_t contarDescidas = 0;
 26837                           
 26838                           ;incstack = 0
 26839                           ; Regs used in _ciclarPneumatico: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 26840  29EC  0141               	movlb	1	; select bank1
 26841  29ED  01AB               	clrf	ciclarPneumatico@contarDescidas^(0+128)
 26842  29EE  01AC               	clrf	(ciclarPneumatico@contarDescidas+1)^(0+128)
 26843                           
 26844                           ;func.c: 2904: uint16_t contarTempo = 0;
 26845  29EF  01AD               	clrf	ciclarPneumatico@contarTempo^(0+128)
 26846  29F0  01AE               	clrf	(ciclarPneumatico@contarTempo+1)^(0+128)
 26847                           
 26848                           ;func.c: 2905: Lcd_Clear();
 26849  29F1  31E1  21DF  31A9   	fcall	_Lcd_Clear
 26850                           
 26851                           ;func.c: 2906: trava_erro("Teste Pneum!");
 26852  29F4  3079               	movlw	low (STR_42| (0+32768))
 26853  29F5  0140               	movlb	0	; select bank0
 26854  29F6  00D7               	movwf	trava_erro@s
 26855  29F7  30E8               	movlw	high (STR_42| (0+32768))
 26856  29F8  00D8               	movwf	trava_erro@s+1
 26857  29F9  31C6  26BE  31A9   	fcall	_trava_erro
 26858  29FC                     l17702:	
 26859                           ;func.c: 2908: while(teclado() != 12){
 26860                           
 26861  29FC  31C2  22CC  31A9   	fcall	_teclado
 26862  29FF  3A0C               	xorlw	12
 26863  2A00  1903               	btfsc	3,2
 26864  2A01  0008               	return
 26865                           
 26866                           ;func.c: 2910: contarDescidas += 1;
 26867  2A02  3001               	movlw	1
 26868  2A03  0141               	movlb	1	; select bank1
 26869  2A04  07AB               	addwf	ciclarPneumatico@contarDescidas^(0+128),f
 26870  2A05  3000               	movlw	0
 26871  2A06  3DAC               	addwfc	(ciclarPneumatico@contarDescidas+1)^(0+128),f
 26872                           
 26873                           ;func.c: 2912: Lcd_Clear();
 26874  2A07  31E1  21DF  31A9   	fcall	_Lcd_Clear
 26875                           
 26876                           ;func.c: 2913: Lcd_Set_Cursor(1,1);
 26877  2A0A  0140               	movlb	0	; select bank0
 26878  2A0B  01AE               	clrf	Lcd_Set_Cursor@b
 26879  2A0C  0AAE               	incf	Lcd_Set_Cursor@b,f
 26880  2A0D  3001               	movlw	1
 26881  2A0E  31D5  25D8  31A9   	fcall	_Lcd_Set_Cursor
 26882                           
 26883                           ;func.c: 2914: Lcd_Write_String("Ciclos:");
 26884  2A11  30D7               	movlw	low (STR_43| (0+32768))
 26885  2A12  0140               	movlb	0	; select bank0
 26886  2A13  00B0               	movwf	Lcd_Write_String@a
 26887  2A14  30E8               	movlw	high (STR_43| (0+32768))
 26888  2A15  00B1               	movwf	Lcd_Write_String@a+1
 26889  2A16  31D1  2171  31A9   	fcall	_Lcd_Write_String
 26890                           
 26891                           ;func.c: 2915: ltoa(str,contarDescidas,10);
 26892  2A19  0141               	movlb	1	; select bank1
 26893  2A1A  082B               	movf	ciclarPneumatico@contarDescidas^(0+128),w
 26894  2A1B  0140               	movlb	0	; select bank0
 26895  2A1C  00CA               	movwf	ltoa@val
 26896  2A1D  0141               	movlb	1	; select bank1
 26897  2A1E  082C               	movf	(ciclarPneumatico@contarDescidas+1)^(0+128),w
 26898  2A1F  0140               	movlb	0	; select bank0
 26899  2A20  00CB               	movwf	ltoa@val+1
 26900  2A21  01CC               	clrf	ltoa@val+2
 26901  2A22  01CD               	clrf	ltoa@val+3
 26902  2A23  300A               	movlw	10
 26903  2A24  00CE               	movwf	ltoa@base
 26904  2A25  3000               	movlw	0
 26905  2A26  00CF               	movwf	ltoa@base+1
 26906  2A27  305C               	movlw	(low (_str| (0+512)))& (0+255)
 26907  2A28  31D4  24DE  31A9   	fcall	_ltoa
 26908                           
 26909                           ;func.c: 2916: Lcd_Write_String(str);
 26910  2A2B  305C               	movlw	low _str
 26911  2A2C  0140               	movlb	0	; select bank0
 26912  2A2D  00B0               	movwf	Lcd_Write_String@a
 26913  2A2E  3002               	movlw	high _str
 26914  2A2F  00B1               	movwf	Lcd_Write_String@a+1
 26915  2A30  31D1  2171  31A9   	fcall	_Lcd_Write_String
 26916                           
 26917                           ;func.c: 2917: Lcd_Write_String("   ");
 26918  2A33  30F2               	movlw	low ((STR_35+1)| (0+32768))
 26919  2A34  0140               	movlb	0	; select bank0
 26920  2A35  00B0               	movwf	Lcd_Write_String@a
 26921  2A36  30E8               	movlw	high ((STR_35+1)| (0+32768))
 26922  2A37  00B1               	movwf	Lcd_Write_String@a+1
 26923  2A38  31D1  2171  31A9   	fcall	_Lcd_Write_String
 26924                           
 26925                           ;func.c: 2919: saida(PNE_DESCE,1);
 26926  2A3B  3001               	movlw	1
 26927  2A3C  0140               	movlb	0	; select bank0
 26928  2A3D  00AB               	movwf	saida@b
 26929  2A3E  3000               	movlw	0
 26930  2A3F  00AC               	movwf	saida@b+1
 26931  2A40  3001               	movlw	1
 26932  2A41  31D1  21CE  31A9   	fcall	_saida
 26933                           
 26934                           ;func.c: 2920: contarTempo = t10ms;
 26935  2A44  0140               	movlb	0	; select bank0
 26936  2A45  085F               	movf	_t10ms+1,w
 26937  2A46  0141               	movlb	1	; select bank1
 26938  2A47  00AE               	movwf	(ciclarPneumatico@contarTempo+1)^(0+128)
 26939  2A48  0140               	movlb	0	; select bank0
 26940  2A49  085E               	movf	_t10ms,w
 26941  2A4A  0141               	movlb	1	; select bank1
 26942  2A4B  00AD               	movwf	ciclarPneumatico@contarTempo^(0+128)
 26943  2A4C                     l17678:	
 26944                           ;func.c: 2921: while((t10ms - contarTempo) < (tmp_solda/10)){
 26945                           
 26946  2A4C  300A               	movlw	10
 26947  2A4D  0140               	movlb	0	; select bank0
 26948  2A4E  00AB               	movwf	___lwdiv@divisor
 26949  2A4F  3000               	movlw	0
 26950  2A50  00AC               	movwf	___lwdiv@divisor+1
 26951  2A51  0143               	movlb	3	; select bank3
 26952  2A52  0841               	movf	(_tmp_solda+1)^(0+384),w
 26953  2A53  0140               	movlb	0	; select bank0
 26954  2A54  00AE               	movwf	___lwdiv@dividend+1
 26955  2A55  0143               	movlb	3	; select bank3
 26956  2A56  0840               	movf	_tmp_solda^(0+384),w
 26957  2A57  0140               	movlb	0	; select bank0
 26958  2A58  00AD               	movwf	___lwdiv@dividend
 26959  2A59  31D5  25A3  31A9   	fcall	___lwdiv
 26960  2A5C  0141               	movlb	1	; select bank1
 26961  2A5D  092D               	comf	ciclarPneumatico@contarTempo^(0+128),w
 26962  2A5E  00A7               	movwf	??_ciclarPneumatico^(0+128)
 26963  2A5F  092E               	comf	(ciclarPneumatico@contarTempo+1)^(0+128),w
 26964  2A60  00A8               	movwf	(??_ciclarPneumatico^(0+128)+1)
 26965  2A61  0AA7               	incf	??_ciclarPneumatico^(0+128),f
 26966  2A62  1903               	skipnz
 26967  2A63  0AA8               	incf	(??_ciclarPneumatico^(0+128)+1),f
 26968  2A64  0140               	movlb	0	; select bank0
 26969  2A65  085E               	movf	_t10ms,w
 26970  2A66  0141               	movlb	1	; select bank1
 26971  2A67  0727               	addwf	??_ciclarPneumatico^(0+128),w
 26972  2A68  00A9               	movwf	(??_ciclarPneumatico+2)^(0+128)
 26973  2A69  0140               	movlb	0	; select bank0
 26974  2A6A  085F               	movf	_t10ms+1,w
 26975  2A6B  0141               	movlb	1	; select bank1
 26976  2A6C  3D28               	addwfc	(??_ciclarPneumatico+1)^(0+128),w
 26977  2A6D  00AA               	movwf	(??_ciclarPneumatico+3)^(0+128)
 26978  2A6E  0140               	movlb	0	; select bank0
 26979  2A6F  082C               	movf	?___lwdiv+1,w
 26980  2A70  0141               	movlb	1	; select bank1
 26981  2A71  022A               	subwf	(??_ciclarPneumatico+3)^(0+128),w
 26982  2A72  1D03               	skipz
 26983  2A73  2A78               	goto	u19775
 26984  2A74  0140               	movlb	0	; select bank0
 26985  2A75  082B               	movf	?___lwdiv,w
 26986  2A76  0141               	movlb	1	; select bank1
 26987  2A77  0229               	subwf	(??_ciclarPneumatico+2)^(0+128),w
 26988  2A78                     u19775:	
 26989  2A78  1803               	btfsc	3,0
 26990  2A79  2AC4               	goto	l17680
 26991                           
 26992                           ;func.c: 2922: Lcd_Set_Cursor(2,1);
 26993  2A7A  0140               	movlb	0	; select bank0
 26994  2A7B  01AE               	clrf	Lcd_Set_Cursor@b
 26995  2A7C  0AAE               	incf	Lcd_Set_Cursor@b,f
 26996  2A7D  3002               	movlw	2
 26997  2A7E  31D5  25D8  31A9   	fcall	_Lcd_Set_Cursor
 26998                           
 26999                           ;func.c: 2923: Lcd_Write_String("time:");
 27000  2A81  30E6               	movlw	low (STR_45| (0+32768))
 27001  2A82  0140               	movlb	0	; select bank0
 27002  2A83  00B0               	movwf	Lcd_Write_String@a
 27003  2A84  30E8               	movlw	high (STR_45| (0+32768))
 27004  2A85  00B1               	movwf	Lcd_Write_String@a+1
 27005  2A86  31D1  2171  31A9   	fcall	_Lcd_Write_String
 27006                           
 27007                           ;func.c: 2924: ltoa(str,t10ms - contarTempo,10);
 27008  2A89  0141               	movlb	1	; select bank1
 27009  2A8A  092D               	comf	ciclarPneumatico@contarTempo^(0+128),w
 27010  2A8B  00A7               	movwf	??_ciclarPneumatico^(0+128)
 27011  2A8C  092E               	comf	(ciclarPneumatico@contarTempo+1)^(0+128),w
 27012  2A8D  00A8               	movwf	(??_ciclarPneumatico^(0+128)+1)
 27013  2A8E  0AA7               	incf	??_ciclarPneumatico^(0+128),f
 27014  2A8F  1903               	skipnz
 27015  2A90  0AA8               	incf	(??_ciclarPneumatico^(0+128)+1),f
 27016  2A91  0140               	movlb	0	; select bank0
 27017  2A92  085E               	movf	_t10ms,w
 27018  2A93  0141               	movlb	1	; select bank1
 27019  2A94  0727               	addwf	??_ciclarPneumatico^(0+128),w
 27020  2A95  0140               	movlb	0	; select bank0
 27021  2A96  00CA               	movwf	ltoa@val
 27022  2A97  085F               	movf	_t10ms+1,w
 27023  2A98  0141               	movlb	1	; select bank1
 27024  2A99  3D28               	addwfc	(??_ciclarPneumatico+1)^(0+128),w
 27025  2A9A  0140               	movlb	0	; select bank0
 27026  2A9B  00CB               	movwf	ltoa@val+1
 27027  2A9C  01CC               	clrf	ltoa@val+2
 27028  2A9D  01CD               	clrf	ltoa@val+3
 27029  2A9E  300A               	movlw	10
 27030  2A9F  00CE               	movwf	ltoa@base
 27031  2AA0  3000               	movlw	0
 27032  2AA1  00CF               	movwf	ltoa@base+1
 27033  2AA2  305C               	movlw	(low (_str| (0+512)))& (0+255)
 27034  2AA3  31D4  24DE  31A9   	fcall	_ltoa
 27035                           
 27036                           ;func.c: 2925: Lcd_Write_String(str);
 27037  2AA6  305C               	movlw	low _str
 27038  2AA7  0140               	movlb	0	; select bank0
 27039  2AA8  00B0               	movwf	Lcd_Write_String@a
 27040  2AA9  3002               	movlw	high _str
 27041  2AAA  00B1               	movwf	Lcd_Write_String@a+1
 27042  2AAB  31D1  2171  31A9   	fcall	_Lcd_Write_String
 27043                           
 27044                           ;func.c: 2926: Lcd_Write_String("   ");
 27045  2AAE  30F2               	movlw	low ((STR_35+1)| (0+32768))
 27046  2AAF  0140               	movlb	0	; select bank0
 27047  2AB0  00B0               	movwf	Lcd_Write_String@a
 27048  2AB1  30E8               	movlw	high ((STR_35+1)| (0+32768))
 27049  2AB2  00B1               	movwf	Lcd_Write_String@a+1
 27050  2AB3  31D1  2171  31A9   	fcall	_Lcd_Write_String
 27051                           
 27052                           ;func.c: 2927: if(teclado() == 18){
 27053  2AB6  31C2  22CC  31A9   	fcall	_teclado
 27054  2AB9  3A12               	xorlw	18
 27055  2ABA  1D03               	skipz
 27056  2ABB  2A4C               	goto	l17678
 27057                           
 27058                           ;func.c: 2928: saida(PNE_DESCE,0);
 27059  2ABC  3000               	movlw	0
 27060  2ABD  0140               	movlb	0	; select bank0
 27061  2ABE  00AB               	movwf	saida@b
 27062  2ABF  00AC               	movwf	saida@b+1
 27063  2AC0  3001               	movlw	1
 27064  2AC1  31D1  21CE         	fcall	_saida
 27065                           
 27066                           ;func.c: 2929: return;
 27067  2AC3  0008               	return
 27068  2AC4                     l17680:	
 27069                           
 27070                           ;func.c: 2930: }
 27071                           ;func.c: 2931: }
 27072                           ;func.c: 2933: saida(PNE_DESCE,0);
 27073  2AC4  3000               	movlw	0
 27074  2AC5  0140               	movlb	0	; select bank0
 27075  2AC6  00AB               	movwf	saida@b
 27076  2AC7  00AC               	movwf	saida@b+1
 27077  2AC8  3001               	movlw	1
 27078  2AC9  31D1  21CE  31A9   	fcall	_saida
 27079                           
 27080                           ;func.c: 2934: contarTempo = t10ms;
 27081  2ACC  0140               	movlb	0	; select bank0
 27082  2ACD  085F               	movf	_t10ms+1,w
 27083  2ACE  0141               	movlb	1	; select bank1
 27084  2ACF  00AE               	movwf	(ciclarPneumatico@contarTempo+1)^(0+128)
 27085  2AD0  0140               	movlb	0	; select bank0
 27086  2AD1  085E               	movf	_t10ms,w
 27087  2AD2  0141               	movlb	1	; select bank1
 27088  2AD3  00AD               	movwf	ciclarPneumatico@contarTempo^(0+128)
 27089  2AD4                     l17700:	
 27090                           ;func.c: 2935: while((t10ms - contarTempo) < (tmp_fixar/10)){
 27091                           
 27092  2AD4  300A               	movlw	10
 27093  2AD5  0140               	movlb	0	; select bank0
 27094  2AD6  00AB               	movwf	___lwdiv@divisor
 27095  2AD7  3000               	movlw	0
 27096  2AD8  00AC               	movwf	___lwdiv@divisor+1
 27097  2AD9  0143               	movlb	3	; select bank3
 27098  2ADA  083D               	movf	(_tmp_fixar+1)^(0+384),w
 27099  2ADB  0140               	movlb	0	; select bank0
 27100  2ADC  00AE               	movwf	___lwdiv@dividend+1
 27101  2ADD  0143               	movlb	3	; select bank3
 27102  2ADE  083C               	movf	_tmp_fixar^(0+384),w
 27103  2ADF  0140               	movlb	0	; select bank0
 27104  2AE0  00AD               	movwf	___lwdiv@dividend
 27105  2AE1  31D5  25A3  31A9   	fcall	___lwdiv
 27106  2AE4  0141               	movlb	1	; select bank1
 27107  2AE5  092D               	comf	ciclarPneumatico@contarTempo^(0+128),w
 27108  2AE6  00A7               	movwf	??_ciclarPneumatico^(0+128)
 27109  2AE7  092E               	comf	(ciclarPneumatico@contarTempo+1)^(0+128),w
 27110  2AE8  00A8               	movwf	(??_ciclarPneumatico^(0+128)+1)
 27111  2AE9  0AA7               	incf	??_ciclarPneumatico^(0+128),f
 27112  2AEA  1903               	skipnz
 27113  2AEB  0AA8               	incf	(??_ciclarPneumatico^(0+128)+1),f
 27114  2AEC  0140               	movlb	0	; select bank0
 27115  2AED  085E               	movf	_t10ms,w
 27116  2AEE  0141               	movlb	1	; select bank1
 27117  2AEF  0727               	addwf	??_ciclarPneumatico^(0+128),w
 27118  2AF0  00A9               	movwf	(??_ciclarPneumatico+2)^(0+128)
 27119  2AF1  0140               	movlb	0	; select bank0
 27120  2AF2  085F               	movf	_t10ms+1,w
 27121  2AF3  0141               	movlb	1	; select bank1
 27122  2AF4  3D28               	addwfc	(??_ciclarPneumatico+1)^(0+128),w
 27123  2AF5  00AA               	movwf	(??_ciclarPneumatico+3)^(0+128)
 27124  2AF6  0140               	movlb	0	; select bank0
 27125  2AF7  082C               	movf	?___lwdiv+1,w
 27126  2AF8  0141               	movlb	1	; select bank1
 27127  2AF9  022A               	subwf	(??_ciclarPneumatico+3)^(0+128),w
 27128  2AFA  1D03               	skipz
 27129  2AFB  2B00               	goto	u19795
 27130  2AFC  0140               	movlb	0	; select bank0
 27131  2AFD  082B               	movf	?___lwdiv,w
 27132  2AFE  0141               	movlb	1	; select bank1
 27133  2AFF  0229               	subwf	(??_ciclarPneumatico+2)^(0+128),w
 27134  2B00                     u19795:	
 27135  2B00  1803               	btfsc	3,0
 27136  2B01  29FC               	goto	l17702
 27137                           
 27138                           ;func.c: 2936: Lcd_Set_Cursor(2,1);
 27139  2B02  0140               	movlb	0	; select bank0
 27140  2B03  01AE               	clrf	Lcd_Set_Cursor@b
 27141  2B04  0AAE               	incf	Lcd_Set_Cursor@b,f
 27142  2B05  3002               	movlw	2
 27143  2B06  31D5  25D8  31A9   	fcall	_Lcd_Set_Cursor
 27144                           
 27145                           ;func.c: 2937: Lcd_Write_String("time:");
 27146  2B09  30E6               	movlw	low (STR_45| (0+32768))
 27147  2B0A  0140               	movlb	0	; select bank0
 27148  2B0B  00B0               	movwf	Lcd_Write_String@a
 27149  2B0C  30E8               	movlw	high (STR_45| (0+32768))
 27150  2B0D  00B1               	movwf	Lcd_Write_String@a+1
 27151  2B0E  31D1  2171  31A9   	fcall	_Lcd_Write_String
 27152                           
 27153                           ;func.c: 2938: ltoa(str,t10ms - contarTempo,10);
 27154  2B11  0141               	movlb	1	; select bank1
 27155  2B12  092D               	comf	ciclarPneumatico@contarTempo^(0+128),w
 27156  2B13  00A7               	movwf	??_ciclarPneumatico^(0+128)
 27157  2B14  092E               	comf	(ciclarPneumatico@contarTempo+1)^(0+128),w
 27158  2B15  00A8               	movwf	(??_ciclarPneumatico^(0+128)+1)
 27159  2B16  0AA7               	incf	??_ciclarPneumatico^(0+128),f
 27160  2B17  1903               	skipnz
 27161  2B18  0AA8               	incf	(??_ciclarPneumatico^(0+128)+1),f
 27162  2B19  0140               	movlb	0	; select bank0
 27163  2B1A  085E               	movf	_t10ms,w
 27164  2B1B  0141               	movlb	1	; select bank1
 27165  2B1C  0727               	addwf	??_ciclarPneumatico^(0+128),w
 27166  2B1D  0140               	movlb	0	; select bank0
 27167  2B1E  00CA               	movwf	ltoa@val
 27168  2B1F  085F               	movf	_t10ms+1,w
 27169  2B20  0141               	movlb	1	; select bank1
 27170  2B21  3D28               	addwfc	(??_ciclarPneumatico+1)^(0+128),w
 27171  2B22  0140               	movlb	0	; select bank0
 27172  2B23  00CB               	movwf	ltoa@val+1
 27173  2B24  01CC               	clrf	ltoa@val+2
 27174  2B25  01CD               	clrf	ltoa@val+3
 27175  2B26  300A               	movlw	10
 27176  2B27  00CE               	movwf	ltoa@base
 27177  2B28  3000               	movlw	0
 27178  2B29  00CF               	movwf	ltoa@base+1
 27179  2B2A  305C               	movlw	(low (_str| (0+512)))& (0+255)
 27180  2B2B  31D4  24DE  31A9   	fcall	_ltoa
 27181                           
 27182                           ;func.c: 2939: Lcd_Write_String(str);
 27183  2B2E  305C               	movlw	low _str
 27184  2B2F  0140               	movlb	0	; select bank0
 27185  2B30  00B0               	movwf	Lcd_Write_String@a
 27186  2B31  3002               	movlw	high _str
 27187  2B32  00B1               	movwf	Lcd_Write_String@a+1
 27188  2B33  31D1  2171  31A9   	fcall	_Lcd_Write_String
 27189                           
 27190                           ;func.c: 2940: Lcd_Write_String("   ");
 27191  2B36  30F2               	movlw	low ((STR_35+1)| (0+32768))
 27192  2B37  0140               	movlb	0	; select bank0
 27193  2B38  00B0               	movwf	Lcd_Write_String@a
 27194  2B39  30E8               	movlw	high ((STR_35+1)| (0+32768))
 27195  2B3A  00B1               	movwf	Lcd_Write_String@a+1
 27196  2B3B  31D1  2171  31A9   	fcall	_Lcd_Write_String
 27197                           
 27198                           ;func.c: 2941: if(teclado() == 18){
 27199  2B3E  31C2  22CC  31A9   	fcall	_teclado
 27200  2B41  3A12               	xorlw	18
 27201  2B42  1D03               	skipz
 27202  2B43  2AD4               	goto	l17700
 27203                           
 27204                           ;func.c: 2942: saida(PNE_DESCE,0);
 27205  2B44  3000               	movlw	0
 27206  2B45  0140               	movlb	0	; select bank0
 27207  2B46  00AB               	movwf	saida@b
 27208  2B47  00AC               	movwf	saida@b+1
 27209  2B48  3001               	movlw	1
 27210  2B49  31D1  21CE         	fcall	_saida
 27211                           
 27212                           ;func.c: 2943: return;
 27213  2B4B  0008               	return
 27214  2B4C                     __end_of_ciclarPneumatico:	
 27215                           
 27216                           	psect	text67
 27217  082D                     __ptext67:	
 27218 ;; *************** function _ciclar *****************
 27219 ;; Defined at:
 27220 ;;		line 2778 in file "func.c"
 27221 ;; Parameters:    Size  Location     Type
 27222 ;;		None
 27223 ;; Auto vars:     Size  Location     Type
 27224 ;;  temp_n_pecas    4   23[BANK1 ] unsigned long 
 27225 ;;  ciclos          2   29[BANK1 ] unsigned int 
 27226 ;;  etapa           1   31[BANK1 ] unsigned char 
 27227 ;;  temp            1   28[BANK1 ] unsigned char 
 27228 ;;  bt              1   27[BANK1 ] unsigned char 
 27229 ;; Return value:  Size  Location     Type
 27230 ;;                  1    wreg      void 
 27231 ;; Registers used:
 27232 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27233 ;; Tracked objects:
 27234 ;;		On entry : 0/0
 27235 ;;		On exit  : 0/0
 27236 ;;		Unchanged: 0/0
 27237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27239 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27240 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27241 ;;      Totals:         0       1       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27242 ;;Total ram usage:       10 bytes
 27243 ;; Hardware stack levels used:    1
 27244 ;; Hardware stack levels required when called:   10
 27245 ;; This function calls:
 27246 ;;		_Lcd_Clear
 27247 ;;		_Lcd_Set_Cursor
 27248 ;;		_Lcd_Write_String
 27249 ;;		___lwdiv
 27250 ;;		_delay
 27251 ;;		_escreve_freq
 27252 ;;		_ltoa
 27253 ;;		_op_desce
 27254 ;;		_op_fixar
 27255 ;;		_op_solda
 27256 ;;		_set_freq
 27257 ;;		_status_gerador
 27258 ;;		_teclado
 27259 ;;		_trata_dados
 27260 ;;		_trava_erro
 27261 ;; This function is called by:
 27262 ;;		_main
 27263 ;; This function uses a non-reentrant model
 27264 ;;
 27265                           
 27266                           
 27267                           ;psect for function _ciclar
 27268  082D                     _ciclar:	
 27269                           
 27270                           ;func.c: 2779: unsigned char etapa = 0;
 27271                           
 27272                           ;incstack = 0
 27273                           ; Regs used in _ciclar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 27274  082D  0141               	movlb	1	; select bank1
 27275  082E  01BF               	clrf	ciclar@etapa^(0+128)
 27276                           
 27277                           ;func.c: 2780: unsigned char bt;
 27278                           ;func.c: 2781: unsigned int ciclos = 0;
 27279  082F  01BD               	clrf	ciclar@ciclos^(0+128)
 27280  0830  01BE               	clrf	(ciclar@ciclos+1)^(0+128)
 27281                           
 27282                           ;func.c: 2782: unsigned char temp = (unsigned char)cfg.stop_release;
 27283  0831  3000               	movlw	0
 27284  0832  0143               	movlb	3	; select bank3
 27285  0833  1832               	btfsc	(_cfg^(0+384)+2),0
 27286  0834  3001               	movlw	1
 27287  0835  0141               	movlb	1	; select bank1
 27288  0836  00BC               	movwf	ciclar@temp^(0+128)
 27289                           
 27290                           ;func.c: 2783: unsigned long temp_n_pecas = n_pecas;
 27291  0837  0143               	movlb	3	; select bank3
 27292  0838  0823               	movf	(_n_pecas+3)^(0+384),w
 27293  0839  0141               	movlb	1	; select bank1
 27294  083A  00BA               	movwf	(ciclar@temp_n_pecas+3)^(0+128)
 27295  083B  0143               	movlb	3	; select bank3
 27296  083C  0822               	movf	(_n_pecas+2)^(0+384),w
 27297  083D  0141               	movlb	1	; select bank1
 27298  083E  00B9               	movwf	(ciclar@temp_n_pecas+2)^(0+128)
 27299  083F  0143               	movlb	3	; select bank3
 27300  0840  0821               	movf	(_n_pecas+1)^(0+384),w
 27301  0841  0141               	movlb	1	; select bank1
 27302  0842  00B8               	movwf	(ciclar@temp_n_pecas+1)^(0+128)
 27303  0843  0143               	movlb	3	; select bank3
 27304  0844  0820               	movf	_n_pecas^(0+384),w
 27305  0845  0141               	movlb	1	; select bank1
 27306  0846  00B7               	movwf	ciclar@temp_n_pecas^(0+128)
 27307                           
 27308                           ;func.c: 2785: Lcd_Clear();
 27309  0847  31E1  21DF  3188   	fcall	_Lcd_Clear
 27310                           
 27311                           ;func.c: 2786: trava_erro("MODO CICLADOR");
 27312  084A  305E               	movlw	low (STR_30| (0+32768))
 27313  084B  0140               	movlb	0	; select bank0
 27314  084C  00D7               	movwf	trava_erro@s
 27315  084D  30E8               	movlw	high (STR_30| (0+32768))
 27316  084E  00D8               	movwf	trava_erro@s+1
 27317  084F  31C6  26BE  3188   	fcall	_trava_erro
 27318                           
 27319                           ;func.c: 2788: Lcd_Clear();
 27320  0852  31E1  21DF  3188   	fcall	_Lcd_Clear
 27321                           
 27322                           ;func.c: 2789: Lcd_Set_Cursor(1,1);
 27323  0855  0140               	movlb	0	; select bank0
 27324  0856  01AE               	clrf	Lcd_Set_Cursor@b
 27325  0857  0AAE               	incf	Lcd_Set_Cursor@b,f
 27326  0858  3001               	movlw	1
 27327  0859  31D5  25D8  3188   	fcall	_Lcd_Set_Cursor
 27328                           
 27329                           ;func.c: 2790: Lcd_Write_String(freq_str);
 27330  085C  30C7               	movlw	low (_freq_str| (0+32768))
 27331  085D  0140               	movlb	0	; select bank0
 27332  085E  00B0               	movwf	Lcd_Write_String@a
 27333  085F  30E8               	movlw	high (_freq_str| (0+32768))
 27334  0860  00B1               	movwf	Lcd_Write_String@a+1
 27335  0861  31D1  2171  3188   	fcall	_Lcd_Write_String
 27336                           
 27337                           ;func.c: 2791: ltoa(str,freq_inicial,10);
 27338  0864  0143               	movlb	3	; select bank3
 27339  0865  0836               	movf	_freq_inicial^(0+384),w
 27340  0866  0140               	movlb	0	; select bank0
 27341  0867  00CA               	movwf	ltoa@val
 27342  0868  0143               	movlb	3	; select bank3
 27343  0869  0837               	movf	(_freq_inicial+1)^(0+384),w
 27344  086A  0140               	movlb	0	; select bank0
 27345  086B  00CB               	movwf	ltoa@val+1
 27346  086C  01CC               	clrf	ltoa@val+2
 27347  086D  01CD               	clrf	ltoa@val+3
 27348  086E  300A               	movlw	10
 27349  086F  00CE               	movwf	ltoa@base
 27350  0870  3000               	movlw	0
 27351  0871  00CF               	movwf	ltoa@base+1
 27352  0872  305C               	movlw	(low (_str| (0+512)))& (0+255)
 27353  0873  31D4  24DE  3188   	fcall	_ltoa
 27354                           
 27355                           ;func.c: 2792: Lcd_Write_String(str);
 27356  0876  305C               	movlw	low _str
 27357  0877  0140               	movlb	0	; select bank0
 27358  0878  00B0               	movwf	Lcd_Write_String@a
 27359  0879  3002               	movlw	high _str
 27360  087A  00B1               	movwf	Lcd_Write_String@a+1
 27361  087B  31D1  2171  3188   	fcall	_Lcd_Write_String
 27362                           
 27363                           ;func.c: 2793: Lcd_Write_String("   ");
 27364  087E  30F2               	movlw	low ((STR_35+1)| (0+32768))
 27365  087F  0140               	movlb	0	; select bank0
 27366  0880  00B0               	movwf	Lcd_Write_String@a
 27367  0881  30E8               	movlw	high ((STR_35+1)| (0+32768))
 27368  0882  00B1               	movwf	Lcd_Write_String@a+1
 27369  0883  31D1  2171  3188   	fcall	_Lcd_Write_String
 27370                           
 27371                           ;func.c: 2794: escreve_freq();
 27372  0886  31D3  23D2  3188   	fcall	_escreve_freq
 27373                           
 27374                           ;func.c: 2795: cfg.stop_release = 0;
 27375  0889  0143               	movlb	3	; select bank3
 27376  088A  1032               	bcf	(_cfg^(0+384)+2),0
 27377                           
 27378                           ;func.c: 2796: status_gerador(STATUS_GERADOR,1);
 27379  088B  3001               	movlw	1
 27380  088C  0140               	movlb	0	; select bank0
 27381  088D  00B0               	movwf	status_gerador@b
 27382  088E  3000               	movlw	0
 27383  088F  00B1               	movwf	status_gerador@b+1
 27384  0890  3005               	movlw	5
 27385  0891  31CC  24C4  3188   	fcall	_status_gerador
 27386                           
 27387                           ;func.c: 2797: set_freq(freq_inicial);
 27388  0894  0143               	movlb	3	; select bank3
 27389  0895  0837               	movf	(_freq_inicial+1)^(0+384),w
 27390  0896  0140               	movlb	0	; select bank0
 27391  0897  00C7               	movwf	set_freq@f+1
 27392  0898  0143               	movlb	3	; select bank3
 27393  0899  0836               	movf	_freq_inicial^(0+384),w
 27394  089A  0140               	movlb	0	; select bank0
 27395  089B  00C6               	movwf	set_freq@f
 27396  089C  31C5  2585  3188   	fcall	_set_freq
 27397                           
 27398                           ;func.c: 2799: while (etapa != 100){
 27399  089F  2A09               	goto	l17632
 27400  08A0                     l17526:	
 27401                           ;func.c: 2803: default:
 27402                           
 27403                           ;func.c: 2802: switch (bt){
 27404                           
 27405                           
 27406                           ;func.c: 2804: if(etapa == 10){
 27407  08A0  300A               	movlw	10
 27408  08A1  063F               	xorwf	ciclar@etapa^(0+128),w
 27409  08A2  1D03               	btfss	3,2
 27410  08A3  2A09               	goto	l17632
 27411                           
 27412                           ;func.c: 2805: flag.sussess = 1;
 27413  08A4  0143               	movlb	3	; select bank3
 27414  08A5  15AC               	bsf	_flag^(0+384),3	;volatile
 27415                           
 27416                           ;func.c: 2806: op_desce(0);
 27417  08A6  3000               	movlw	0
 27418  08A7  0140               	movlb	0	; select bank0
 27419  08A8  00D3               	movwf	op_desce@t
 27420  08A9  00D4               	movwf	op_desce@t+1
 27421  08AA  31B3  234C  3188   	fcall	_op_desce
 27422                           
 27423                           ;func.c: 2807: op_solda(tmp_solda);
 27424  08AD  0143               	movlb	3	; select bank3
 27425  08AE  0841               	movf	(_tmp_solda+1)^(0+384),w
 27426  08AF  0140               	movlb	0	; select bank0
 27427  08B0  00D4               	movwf	op_solda@t+1
 27428  08B1  0143               	movlb	3	; select bank3
 27429  08B2  0840               	movf	_tmp_solda^(0+384),w
 27430  08B3  0140               	movlb	0	; select bank0
 27431  08B4  00D3               	movwf	op_solda@t
 27432  08B5  31A5  254B  3188   	fcall	_op_solda
 27433                           
 27434                           ;func.c: 2808: op_fixar(0);
 27435  08B8  3000               	movlw	0
 27436  08B9  0140               	movlb	0	; select bank0
 27437  08BA  00BA               	movwf	op_fixar@t
 27438  08BB  00BB               	movwf	op_fixar@t+1
 27439  08BC  31BC  248F  3188   	fcall	_op_fixar
 27440                           
 27441                           ;func.c: 2809: flag_in.liberado = 0;
 27442  08BF  0143               	movlb	3	; select bank3
 27443  08C0  10CD               	bcf	(_flag_in^(0+384)+1),1	;volatile
 27444                           
 27445                           ;func.c: 2810: trata_dados();
 27446  08C1  3199  219E  3188   	fcall	_trata_dados
 27447                           
 27448                           ;func.c: 2811: set_freq(freq_atual);
 27449  08C4  0143               	movlb	3	; select bank3
 27450  08C5  0835               	movf	(_freq_atual+1)^(0+384),w
 27451  08C6  0140               	movlb	0	; select bank0
 27452  08C7  00C7               	movwf	set_freq@f+1
 27453  08C8  0143               	movlb	3	; select bank3
 27454  08C9  0834               	movf	_freq_atual^(0+384),w
 27455  08CA  0140               	movlb	0	; select bank0
 27456  08CB  00C6               	movwf	set_freq@f
 27457  08CC  31C5  2585  3188   	fcall	_set_freq
 27458                           
 27459                           ;func.c: 2812: if(flag.abortar){
 27460  08CF  0143               	movlb	3	; select bank3
 27461  08D0  1F2C               	btfss	_flag^(0+384),6	;volatile
 27462  08D1  28D9               	goto	l17542
 27463                           
 27464                           ;func.c: 2813: etapa = 0;
 27465  08D2  0141               	movlb	1	; select bank1
 27466  08D3  01BF               	clrf	ciclar@etapa^(0+128)
 27467                           
 27468                           ;func.c: 2814: trava_erro("Erro ao Ciclar");
 27469  08D4  3041               	movlw	low (STR_32| (0+32768))
 27470  08D5  0140               	movlb	0	; select bank0
 27471  08D6  00D7               	movwf	trava_erro@s
 27472  08D7  30E8               	movlw	high (STR_32| (0+32768))
 27473  08D8  2A05               	goto	L54
 27474  08D9                     l17542:	
 27475                           ;func.c: 2815: }
 27476                           
 27477                           
 27478                           ;func.c: 2816: else if(ciclos >= (unsigned int)cont_pecas){
 27479  08D9  0143               	movlb	3	; select bank3
 27480  08DA  0825               	movf	(_cont_pecas+1)^(0+384),w
 27481  08DB  0141               	movlb	1	; select bank1
 27482  08DC  023E               	subwf	(ciclar@ciclos+1)^(0+128),w
 27483  08DD  1D03               	skipz
 27484  08DE  28E3               	goto	u19695
 27485  08DF  0143               	movlb	3	; select bank3
 27486  08E0  0824               	movf	_cont_pecas^(0+384),w
 27487  08E1  0141               	movlb	1	; select bank1
 27488  08E2  023D               	subwf	ciclar@ciclos^(0+128),w
 27489  08E3                     u19695:	
 27490  08E3  1C03               	skipc
 27491  08E4  28EB               	goto	l17548
 27492                           
 27493                           ;func.c: 2817: etapa = 0;
 27494  08E5  01BF               	clrf	ciclar@etapa^(0+128)
 27495                           
 27496                           ;func.c: 2818: trava_erro("Fim da contagem");
 27497  08E6  30D8               	movlw	low (STR_33| (0+32768))
 27498  08E7  0140               	movlb	0	; select bank0
 27499  08E8  00D7               	movwf	trava_erro@s
 27500  08E9  30E0               	movlw	high (STR_33| (0+32768))
 27501  08EA  2A05               	goto	L54
 27502  08EB                     l17548:	
 27503                           ;func.c: 2819: }
 27504                           
 27505                           
 27506                           ;func.c: 2820: else {
 27507                           ;func.c: 2821: ciclos++;
 27508  08EB  3001               	movlw	1
 27509  08EC  0141               	movlb	1	; select bank1
 27510  08ED  07BD               	addwf	ciclar@ciclos^(0+128),f
 27511  08EE  3000               	movlw	0
 27512  08EF  3DBE               	addwfc	(ciclar@ciclos+1)^(0+128),f
 27513                           
 27514                           ;func.c: 2822: Lcd_Set_Cursor(1,1);
 27515  08F0  0140               	movlb	0	; select bank0
 27516  08F1  01AE               	clrf	Lcd_Set_Cursor@b
 27517  08F2  0AAE               	incf	Lcd_Set_Cursor@b,f
 27518  08F3  3001               	movlw	1
 27519  08F4  31D5  25D8  3188   	fcall	_Lcd_Set_Cursor
 27520                           
 27521                           ;func.c: 2823: Lcd_Write_String("CICLOS:");
 27522  08F7  30CF               	movlw	low (STR_34| (0+32768))
 27523  08F8  0140               	movlb	0	; select bank0
 27524  08F9  00B0               	movwf	Lcd_Write_String@a
 27525  08FA  30E8               	movlw	high (STR_34| (0+32768))
 27526  08FB  00B1               	movwf	Lcd_Write_String@a+1
 27527  08FC  31D1  2171  3188   	fcall	_Lcd_Write_String
 27528                           
 27529                           ;func.c: 2824: ltoa(str,ciclos,10);
 27530  08FF  0141               	movlb	1	; select bank1
 27531  0900  083D               	movf	ciclar@ciclos^(0+128),w
 27532  0901  0140               	movlb	0	; select bank0
 27533  0902  00CA               	movwf	ltoa@val
 27534  0903  0141               	movlb	1	; select bank1
 27535  0904  083E               	movf	(ciclar@ciclos+1)^(0+128),w
 27536  0905  0140               	movlb	0	; select bank0
 27537  0906  00CB               	movwf	ltoa@val+1
 27538  0907  01CC               	clrf	ltoa@val+2
 27539  0908  01CD               	clrf	ltoa@val+3
 27540  0909  300A               	movlw	10
 27541  090A  00CE               	movwf	ltoa@base
 27542  090B  3000               	movlw	0
 27543  090C  00CF               	movwf	ltoa@base+1
 27544  090D  305C               	movlw	(low (_str| (0+512)))& (0+255)
 27545  090E  31D4  24DE  3188   	fcall	_ltoa
 27546                           
 27547                           ;func.c: 2825: Lcd_Write_String(str);
 27548  0911  305C               	movlw	low _str
 27549  0912  0140               	movlb	0	; select bank0
 27550  0913  00B0               	movwf	Lcd_Write_String@a
 27551  0914  3002               	movlw	high _str
 27552  0915  00B1               	movwf	Lcd_Write_String@a+1
 27553  0916  31D1  2171  3188   	fcall	_Lcd_Write_String
 27554                           
 27555                           ;func.c: 2826: Lcd_Write_String("    ");
 27556  0919  30F1               	movlw	low (STR_35| (0+32768))
 27557  091A  0140               	movlb	0	; select bank0
 27558  091B  00B0               	movwf	Lcd_Write_String@a
 27559  091C  30E8               	movlw	high (STR_35| (0+32768))
 27560  091D  00B1               	movwf	Lcd_Write_String@a+1
 27561  091E  31D1  2171  3188   	fcall	_Lcd_Write_String
 27562                           
 27563                           ;func.c: 2827: escreve_freq();
 27564  0921  31D3  23D2  3188   	fcall	_escreve_freq
 27565                           
 27566                           ;func.c: 2828: delay(tmp_desce/10);
 27567  0924  300A               	movlw	10
 27568  0925  0140               	movlb	0	; select bank0
 27569  0926  00AB               	movwf	___lwdiv@divisor
 27570  0927  3000               	movlw	0
 27571  0928  00AC               	movwf	___lwdiv@divisor+1
 27572  0929  0143               	movlb	3	; select bank3
 27573  092A  0843               	movf	(_tmp_desce+1)^(0+384),w
 27574  092B  0140               	movlb	0	; select bank0
 27575  092C  00AE               	movwf	___lwdiv@dividend+1
 27576  092D  0143               	movlb	3	; select bank3
 27577  092E  0842               	movf	_tmp_desce^(0+384),w
 27578  092F  0140               	movlb	0	; select bank0
 27579  0930  00AD               	movwf	___lwdiv@dividend
 27580  0931  31D5  25A3  3188   	fcall	___lwdiv
 27581  0934  0140               	movlb	0	; select bank0
 27582  0935  082C               	movf	?___lwdiv+1,w
 27583  0936  00B4               	movwf	delay@ms+1
 27584  0937  082B               	movf	?___lwdiv,w
 27585  0938  00B3               	movwf	delay@ms
 27586  0939  31D1  2136  3188   	fcall	_delay
 27587                           
 27588                           ;func.c: 2829: }
 27589                           ;func.c: 2830: }
 27590                           ;func.c: 2831: break;
 27591  093C  2A09               	goto	l17632
 27592  093D                     l17564:	
 27593                           ;func.c: 2833: case 9:
 27594                           
 27595                           
 27596                           ;func.c: 2834: case 12:
 27597                           ;func.c: 2835: if(etapa == 10){
 27598  093D  300A               	movlw	10
 27599  093E  0141               	movlb	1	; select bank1
 27600  093F  063F               	xorwf	ciclar@etapa^(0+128),w
 27601  0940  1903               	btfsc	3,2
 27602  0941  29FE               	goto	L55
 27603                           
 27604                           ;func.c: 2840: else{
 27605                           ;func.c: 2841: etapa = 100;
 27606                           
 27607                           ;func.c: 2839: }
 27608                           
 27609                           ;func.c: 2838: trava_erro("Interrompido");
 27610                           
 27611                           ;func.c: 2837: etapa = 0;
 27612                           
 27613                           ;func.c: 2836: ciclos = 0;
 27614  0942  3064               	movlw	100
 27615  0943  0140               	movlb	0	; select bank0
 27616  0944  00D9               	movwf	??_ciclar
 27617  0945  0859               	movf	??_ciclar,w
 27618  0946  0141               	movlb	1	; select bank1
 27619  0947  00BF               	movwf	ciclar@etapa^(0+128)
 27620                           
 27621                           ;func.c: 2842: }
 27622                           ;func.c: 2843: break;
 27623  0948  2A09               	goto	l17632
 27624  0949                     l17572:	
 27625                           ;func.c: 2845: case 18:
 27626                           
 27627                           
 27628                           ;func.c: 2846: if(etapa != 10){
 27629  0949  300A               	movlw	10
 27630  094A  063F               	xorwf	ciclar@etapa^(0+128),w
 27631  094B  1903               	btfsc	3,2
 27632  094C  2A09               	goto	l17632
 27633                           
 27634                           ;func.c: 2847: etapa = 10;
 27635  094D  300A               	movlw	10
 27636  094E  0140               	movlb	0	; select bank0
 27637  094F  00D9               	movwf	??_ciclar
 27638  0950  0859               	movf	??_ciclar,w
 27639  0951  0141               	movlb	1	; select bank1
 27640  0952  00BF               	movwf	ciclar@etapa^(0+128)
 27641                           
 27642                           ;func.c: 2848: ciclos = 0;
 27643  0953  01BD               	clrf	ciclar@ciclos^(0+128)
 27644  0954  01BE               	clrf	(ciclar@ciclos+1)^(0+128)
 27645                           
 27646                           ;func.c: 2849: }
 27647                           ;func.c: 2850: break;
 27648  0955  2A09               	goto	l17632
 27649  0956                     l17578:	
 27650                           ;func.c: 2851: case 17:
 27651                           
 27652                           
 27653                           ;func.c: 2852: if(etapa == 10){
 27654  0956  300A               	movlw	10
 27655  0957  063F               	xorwf	ciclar@etapa^(0+128),w
 27656  0958  1D03               	btfss	3,2
 27657  0959  2966               	goto	l17586
 27658                           
 27659                           ;func.c: 2853: trava_erro("Interrompido");
 27660  095A  3086               	movlw	low (STR_36| (0+32768))
 27661  095B  0140               	movlb	0	; select bank0
 27662  095C  00D7               	movwf	trava_erro@s
 27663  095D  30E8               	movlw	high (STR_36| (0+32768))
 27664  095E  00D8               	movwf	trava_erro@s+1
 27665  095F  31C6  26BE  3188   	fcall	_trava_erro
 27666                           
 27667                           ;func.c: 2854: ciclos = 0;
 27668  0962  0141               	movlb	1	; select bank1
 27669  0963  01BD               	clrf	ciclar@ciclos^(0+128)
 27670  0964  01BE               	clrf	(ciclar@ciclos+1)^(0+128)
 27671                           
 27672                           ;func.c: 2855: etapa = 0;
 27673  0965  01BF               	clrf	ciclar@etapa^(0+128)
 27674  0966                     l17586:	
 27675                           
 27676                           ;func.c: 2856: }
 27677                           ;func.c: 2858: freq_inicial += 10;
 27678  0966  300A               	movlw	10
 27679  0967  0143               	movlb	3	; select bank3
 27680  0968  07B6               	addwf	_freq_inicial^(0+384),f
 27681  0969  3000               	movlw	0
 27682  096A  3DB7               	addwfc	(_freq_inicial+1)^(0+384),f
 27683                           
 27684                           ;func.c: 2859: set_freq(freq_inicial);
 27685  096B  0837               	movf	(_freq_inicial+1)^(0+384),w
 27686  096C  0140               	movlb	0	; select bank0
 27687  096D  00C7               	movwf	set_freq@f+1
 27688  096E  0143               	movlb	3	; select bank3
 27689  096F  0836               	movf	_freq_inicial^(0+384),w
 27690  0970  0140               	movlb	0	; select bank0
 27691  0971  00C6               	movwf	set_freq@f
 27692  0972  31C5  2585  3188   	fcall	_set_freq
 27693                           
 27694                           ;func.c: 2861: Lcd_Set_Cursor(1,1);
 27695  0975  0140               	movlb	0	; select bank0
 27696  0976  01AE               	clrf	Lcd_Set_Cursor@b
 27697  0977  0AAE               	incf	Lcd_Set_Cursor@b,f
 27698  0978  3001               	movlw	1
 27699  0979  31D5  25D8  3188   	fcall	_Lcd_Set_Cursor
 27700                           
 27701                           ;func.c: 2862: Lcd_Write_String(freq_str);
 27702  097C  30C7               	movlw	low (_freq_str| (0+32768))
 27703  097D  0140               	movlb	0	; select bank0
 27704  097E  00B0               	movwf	Lcd_Write_String@a
 27705  097F  30E8               	movlw	high (_freq_str| (0+32768))
 27706  0980  00B1               	movwf	Lcd_Write_String@a+1
 27707  0981  31D1  2171  3188   	fcall	_Lcd_Write_String
 27708                           
 27709                           ;func.c: 2863: ltoa(str,freq_inicial,10);
 27710  0984  0143               	movlb	3	; select bank3
 27711  0985  0836               	movf	_freq_inicial^(0+384),w
 27712  0986  0140               	movlb	0	; select bank0
 27713  0987  00CA               	movwf	ltoa@val
 27714  0988  0143               	movlb	3	; select bank3
 27715  0989  0837               	movf	(_freq_inicial+1)^(0+384),w
 27716  098A  0140               	movlb	0	; select bank0
 27717  098B  00CB               	movwf	ltoa@val+1
 27718  098C  01CC               	clrf	ltoa@val+2
 27719  098D  01CD               	clrf	ltoa@val+3
 27720  098E  300A               	movlw	10
 27721  098F  00CE               	movwf	ltoa@base
 27722  0990  3000               	movlw	0
 27723  0991  00CF               	movwf	ltoa@base+1
 27724  0992  305C               	movlw	(low (_str| (0+512)))& (0+255)
 27725  0993  31D4  24DE  3188   	fcall	_ltoa
 27726                           
 27727                           ;func.c: 2864: Lcd_Write_String(str);
 27728  0996  305C               	movlw	low _str
 27729  0997  0140               	movlb	0	; select bank0
 27730  0998  00B0               	movwf	Lcd_Write_String@a
 27731  0999  3002               	movlw	high _str
 27732  099A  00B1               	movwf	Lcd_Write_String@a+1
 27733  099B  31D1  2171  3188   	fcall	_Lcd_Write_String
 27734                           
 27735                           ;func.c: 2865: Lcd_Write_String("   ");
 27736  099E  30F2               	movlw	low ((STR_35+1)| (0+32768))
 27737  099F  0140               	movlb	0	; select bank0
 27738  09A0  00B0               	movwf	Lcd_Write_String@a
 27739  09A1  30E8               	movlw	high ((STR_35+1)| (0+32768))
 27740  09A2  00B1               	movwf	Lcd_Write_String@a+1
 27741  09A3  31D1  2171  3188   	fcall	_Lcd_Write_String
 27742                           
 27743                           ;func.c: 2866: break;
 27744  09A6  2A09               	goto	l17632
 27745  09A7                     l17600:	
 27746                           ;func.c: 2868: case 20:
 27747                           
 27748                           
 27749                           ;func.c: 2869: if(etapa == 10){
 27750  09A7  300A               	movlw	10
 27751  09A8  0141               	movlb	1	; select bank1
 27752  09A9  063F               	xorwf	ciclar@etapa^(0+128),w
 27753  09AA  1D03               	btfss	3,2
 27754  09AB  29B8               	goto	l17608
 27755                           
 27756                           ;func.c: 2870: trava_erro("Interrompido");
 27757  09AC  3086               	movlw	low (STR_36| (0+32768))
 27758  09AD  0140               	movlb	0	; select bank0
 27759  09AE  00D7               	movwf	trava_erro@s
 27760  09AF  30E8               	movlw	high (STR_36| (0+32768))
 27761  09B0  00D8               	movwf	trava_erro@s+1
 27762  09B1  31C6  26BE  3188   	fcall	_trava_erro
 27763                           
 27764                           ;func.c: 2871: ciclos = 0;
 27765  09B4  0141               	movlb	1	; select bank1
 27766  09B5  01BD               	clrf	ciclar@ciclos^(0+128)
 27767  09B6  01BE               	clrf	(ciclar@ciclos+1)^(0+128)
 27768                           
 27769                           ;func.c: 2872: etapa = 0;
 27770  09B7  01BF               	clrf	ciclar@etapa^(0+128)
 27771  09B8                     l17608:	
 27772                           
 27773                           ;func.c: 2873: }
 27774                           ;func.c: 2875: freq_inicial -= 10;
 27775  09B8  300A               	movlw	10
 27776  09B9  0143               	movlb	3	; select bank3
 27777  09BA  02B6               	subwf	_freq_inicial^(0+384),f
 27778  09BB  3000               	movlw	0
 27779  09BC  3BB7               	subwfb	(_freq_inicial+1)^(0+384),f
 27780                           
 27781                           ;func.c: 2876: set_freq(freq_inicial);
 27782  09BD  0837               	movf	(_freq_inicial+1)^(0+384),w
 27783  09BE  0140               	movlb	0	; select bank0
 27784  09BF  00C7               	movwf	set_freq@f+1
 27785  09C0  0143               	movlb	3	; select bank3
 27786  09C1  0836               	movf	_freq_inicial^(0+384),w
 27787  09C2  0140               	movlb	0	; select bank0
 27788  09C3  00C6               	movwf	set_freq@f
 27789  09C4  31C5  2585  3188   	fcall	_set_freq
 27790                           
 27791                           ;func.c: 2878: Lcd_Set_Cursor(1,1);
 27792  09C7  0140               	movlb	0	; select bank0
 27793  09C8  01AE               	clrf	Lcd_Set_Cursor@b
 27794  09C9  0AAE               	incf	Lcd_Set_Cursor@b,f
 27795  09CA  3001               	movlw	1
 27796  09CB  31D5  25D8  3188   	fcall	_Lcd_Set_Cursor
 27797                           
 27798                           ;func.c: 2879: Lcd_Write_String(freq_str);
 27799  09CE  30C7               	movlw	low (_freq_str| (0+32768))
 27800  09CF  0140               	movlb	0	; select bank0
 27801  09D0  00B0               	movwf	Lcd_Write_String@a
 27802  09D1  30E8               	movlw	high (_freq_str| (0+32768))
 27803  09D2  00B1               	movwf	Lcd_Write_String@a+1
 27804  09D3  31D1  2171  3188   	fcall	_Lcd_Write_String
 27805                           
 27806                           ;func.c: 2880: ltoa(str,freq_inicial,10);
 27807  09D6  0143               	movlb	3	; select bank3
 27808  09D7  0836               	movf	_freq_inicial^(0+384),w
 27809  09D8  0140               	movlb	0	; select bank0
 27810  09D9  00CA               	movwf	ltoa@val
 27811  09DA  0143               	movlb	3	; select bank3
 27812  09DB  0837               	movf	(_freq_inicial+1)^(0+384),w
 27813  09DC  0140               	movlb	0	; select bank0
 27814  09DD  00CB               	movwf	ltoa@val+1
 27815  09DE  01CC               	clrf	ltoa@val+2
 27816  09DF  01CD               	clrf	ltoa@val+3
 27817  09E0  300A               	movlw	10
 27818  09E1  00CE               	movwf	ltoa@base
 27819  09E2  3000               	movlw	0
 27820  09E3  00CF               	movwf	ltoa@base+1
 27821  09E4  305C               	movlw	(low (_str| (0+512)))& (0+255)
 27822  09E5  31D4  24DE  3188   	fcall	_ltoa
 27823                           
 27824                           ;func.c: 2881: Lcd_Write_String(str);
 27825  09E8  305C               	movlw	low _str
 27826  09E9  0140               	movlb	0	; select bank0
 27827  09EA  00B0               	movwf	Lcd_Write_String@a
 27828  09EB  3002               	movlw	high _str
 27829  09EC  00B1               	movwf	Lcd_Write_String@a+1
 27830  09ED  31D1  2171  3188   	fcall	_Lcd_Write_String
 27831                           
 27832                           ;func.c: 2882: Lcd_Write_String("   ");
 27833  09F0  30F2               	movlw	low ((STR_35+1)| (0+32768))
 27834  09F1  0140               	movlb	0	; select bank0
 27835  09F2  00B0               	movwf	Lcd_Write_String@a
 27836  09F3  30E8               	movlw	high ((STR_35+1)| (0+32768))
 27837  09F4  00B1               	movwf	Lcd_Write_String@a+1
 27838  09F5  31D1  2171  3188   	fcall	_Lcd_Write_String
 27839                           
 27840                           ;func.c: 2883: break;
 27841  09F8  2A09               	goto	l17632
 27842  09F9                     l17622:	
 27843                           ;func.c: 2885: case 34:
 27844                           
 27845                           
 27846                           ;func.c: 2886: case 10:
 27847                           ;func.c: 2887: case 33:
 27848                           ;func.c: 2888: case 36:
 27849                           ;func.c: 2889: if(etapa == 10){
 27850  09F9  300A               	movlw	10
 27851  09FA  0141               	movlb	1	; select bank1
 27852  09FB  063F               	xorwf	ciclar@etapa^(0+128),w
 27853  09FC  1D03               	btfss	3,2
 27854  09FD  2A09               	goto	l17632
 27855  09FE                     L55:	
 27856                           
 27857                           ;func.c: 2890: ciclos = 0;
 27858  09FE  01BD               	clrf	ciclar@ciclos^(0+128)
 27859  09FF  01BE               	clrf	(ciclar@ciclos+1)^(0+128)
 27860                           
 27861                           ;func.c: 2891: etapa = 0;
 27862  0A00  01BF               	clrf	ciclar@etapa^(0+128)
 27863                           
 27864                           ;func.c: 2892: trava_erro("Interrompido");
 27865  0A01  3086               	movlw	low (STR_36| (0+32768))
 27866  0A02  0140               	movlb	0	; select bank0
 27867  0A03  00D7               	movwf	trava_erro@s
 27868  0A04  30E8               	movlw	high (STR_36| (0+32768))
 27869  0A05                     L54:	
 27870  0A05  00D8               	movwf	trava_erro@s+1
 27871  0A06  31C6  26BE  3188   	fcall	_trava_erro
 27872  0A09                     l17632:	
 27873                           ;func.c: 2895: }
 27874                           
 27875                           ;func.c: 2893: }
 27876                           ;func.c: 2894: break;
 27877                           
 27878  0A09  3064               	movlw	100
 27879  0A0A  0141               	movlb	1	; select bank1
 27880  0A0B  063F               	xorwf	ciclar@etapa^(0+128),w
 27881  0A0C  1903               	btfsc	3,2
 27882  0A0D  2A35               	goto	l17634
 27883                           
 27884                           ;func.c: 2801: bt = teclado();
 27885  0A0E  31C2  22CC  3188   	fcall	_teclado
 27886  0A11  0140               	movlb	0	; select bank0
 27887  0A12  00D9               	movwf	??_ciclar
 27888  0A13  0859               	movf	??_ciclar,w
 27889  0A14  0141               	movlb	1	; select bank1
 27890  0A15  00BB               	movwf	ciclar@bt^(0+128)
 27891  0A16  0141               	movlb	1	; select bank1
 27892  0A17  083B               	movf	ciclar@bt^(0+128),w
 27893                           
 27894                           ; Switch size 1, requested type "space"
 27895                           ; Number of cases is 9, Range of values is 9 to 36
 27896                           ; switch strategies available:
 27897                           ; Name         Instructions Cycles
 27898                           ; simple_byte           28    15 (average)
 27899                           ; direct_byte           65     9 (fixed)
 27900                           ; jumptable            263     9 (fixed)
 27901                           ;	Chosen strategy is simple_byte
 27902  0A18  3A09               	xorlw	9	; case 9
 27903  0A19  1903               	skipnz
 27904  0A1A  293D               	goto	l17564
 27905  0A1B  3A03               	xorlw	3	; case 10
 27906  0A1C  1903               	skipnz
 27907  0A1D  29F9               	goto	l17622
 27908  0A1E  3A06               	xorlw	6	; case 12
 27909  0A1F  1903               	skipnz
 27910  0A20  293D               	goto	l17564
 27911  0A21  3A1D               	xorlw	29	; case 17
 27912  0A22  1903               	skipnz
 27913  0A23  2956               	goto	l17578
 27914  0A24  3A03               	xorlw	3	; case 18
 27915  0A25  1903               	skipnz
 27916  0A26  2949               	goto	l17572
 27917  0A27  3A06               	xorlw	6	; case 20
 27918  0A28  1903               	skipnz
 27919  0A29  29A7               	goto	l17600
 27920  0A2A  3A35               	xorlw	53	; case 33
 27921  0A2B  1903               	skipnz
 27922  0A2C  29F9               	goto	l17622
 27923  0A2D  3A03               	xorlw	3	; case 34
 27924  0A2E  1903               	skipnz
 27925  0A2F  29F9               	goto	l17622
 27926  0A30  3A06               	xorlw	6	; case 36
 27927  0A31  1903               	skipnz
 27928  0A32  29F9               	goto	l17622
 27929  0A33  28A0               	goto	l17526
 27930  0A34  2A09               	goto	l17632
 27931  0A35                     l17634:	
 27932                           
 27933                           ;func.c: 2896: }
 27934                           ;func.c: 2897: n_pecas = temp_n_pecas;
 27935  0A35  083A               	movf	(ciclar@temp_n_pecas+3)^(0+128),w
 27936  0A36  0143               	movlb	3	; select bank3
 27937  0A37  00A3               	movwf	(_n_pecas+3)^(0+384)
 27938  0A38  0141               	movlb	1	; select bank1
 27939  0A39  0839               	movf	(ciclar@temp_n_pecas+2)^(0+128),w
 27940  0A3A  0143               	movlb	3	; select bank3
 27941  0A3B  00A2               	movwf	(_n_pecas+2)^(0+384)
 27942  0A3C  0141               	movlb	1	; select bank1
 27943  0A3D  0838               	movf	(ciclar@temp_n_pecas+1)^(0+128),w
 27944  0A3E  0143               	movlb	3	; select bank3
 27945  0A3F  00A1               	movwf	(_n_pecas+1)^(0+384)
 27946  0A40  0141               	movlb	1	; select bank1
 27947  0A41  0837               	movf	ciclar@temp_n_pecas^(0+128),w
 27948  0A42  0143               	movlb	3	; select bank3
 27949  0A43  00A0               	movwf	_n_pecas^(0+384)
 27950                           
 27951                           ;func.c: 2898: cfg.stop_release = temp;
 27952  0A44  0141               	movlb	1	; select bank1
 27953  0A45  083C               	movf	ciclar@temp^(0+128),w
 27954  0A46  3901               	andlw	1
 27955  0A47  0143               	movlb	3	; select bank3
 27956  0A48  1032               	bcf	(_cfg^(0+384)+2),0
 27957  0A49  1D03               	skipz
 27958  0A4A  1432               	bsf	(_cfg^(0+384)+2),0
 27959  0A4B  0008               	return
 27960  0A4C                     __end_of_ciclar:	
 27961                           
 27962                           	psect	text68
 27963  199E                     __ptext68:	
 27964 ;; *************** function _trata_dados *****************
 27965 ;; Defined at:
 27966 ;;		line 686 in file "func.c"
 27967 ;; Parameters:    Size  Location     Type
 27968 ;;		None
 27969 ;; Auto vars:     Size  Location     Type
 27970 ;;  i               1   22[BANK1 ] unsigned char 
 27971 ;;  bt              1   19[BANK1 ] unsigned char 
 27972 ;;  f               4   14[BANK1 ] unsigned long 
 27973 ;;  bt              1   18[BANK1 ] unsigned char 
 27974 ;; Return value:  Size  Location     Type
 27975 ;;                  1    wreg      void 
 27976 ;; Registers used:
 27977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 27978 ;; Tracked objects:
 27979 ;;		On entry : 0/0
 27980 ;;		On exit  : 0/0
 27981 ;;		Unchanged: 0/0
 27982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 27983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27984 ;;      Locals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27985 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27986 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 27987 ;;Total ram usage:       15 bytes
 27988 ;; Hardware stack levels used:    1
 27989 ;; Hardware stack levels required when called:    9
 27990 ;; This function calls:
 27991 ;;		_Inicia_LCD
 27992 ;;		_Lcd_Clear
 27993 ;;		_Lcd_Write_String
 27994 ;;		___lldiv
 27995 ;;		___wmul
 27996 ;;		_carrega_EEPROM32
 27997 ;;		_delay
 27998 ;;		_escreve_LCD
 27999 ;;		_ltoa
 28000 ;;		_rst_inversor
 28001 ;;		_salva_n_pecas
 28002 ;;		_set_freq
 28003 ;;		_status_gerador
 28004 ;;		_teclado
 28005 ;;		_tela_ultima_solda
 28006 ;;		_trava_erro
 28007 ;;		_ver_freq
 28008 ;; This function is called by:
 28009 ;;		_main
 28010 ;;		_ciclar
 28011 ;; This function uses a non-reentrant model
 28012 ;;
 28013                           
 28014                           
 28015                           ;psect for function _trata_dados
 28016  199E                     _trata_dados:	
 28017                           
 28018                           ;func.c: 687: if(flag.sussess){
 28019                           
 28020                           ;incstack = 0
 28021                           ; Regs used in _trata_dados: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 28022  199E  0143               	movlb	3	; select bank3
 28023  199F  1DAC               	btfss	_flag^(0+384),3	;volatile
 28024  19A0  2AB3               	goto	l16482
 28025                           
 28026                           ;func.c: 688: if(modo != RAPIDO){
 28027  19A1  035C               	decf	_modo^(0+384),w
 28028  19A2  1903               	btfsc	3,2
 28029  19A3  29CC               	goto	l16434
 28030                           
 28031                           ;func.c: 689: if(flag.regressivo && cont_pecas >0){
 28032  19A4  1D2C               	btfss	_flag^(0+384),2	;volatile
 28033  19A5  29C6               	goto	l1342
 28034  19A6  0827               	movf	(_cont_pecas+3)^(0+384),w
 28035  19A7  0426               	iorwf	(_cont_pecas+2)^(0+384),w
 28036  19A8  0425               	iorwf	(_cont_pecas+1)^(0+384),w
 28037  19A9  0424               	iorwf	_cont_pecas^(0+384),w
 28038  19AA  1903               	skipnz
 28039  19AB  29C6               	goto	l1342
 28040                           
 28041                           ;func.c: 690: cont_pecas--;
 28042  19AC  3001               	movlw	1
 28043  19AD  0141               	movlb	1	; select bank1
 28044  19AE  00A8               	movwf	??_trata_dados^(0+128)
 28045  19AF  3000               	movlw	0
 28046  19B0  00A9               	movwf	(??_trata_dados^(0+128)+1)
 28047  19B1  3000               	movlw	0
 28048  19B2  00AA               	movwf	(??_trata_dados^(0+128)+2)
 28049  19B3  3000               	movlw	0
 28050  19B4  00AB               	movwf	(??_trata_dados^(0+128)+3)
 28051  19B5  0828               	movf	??_trata_dados^(0+128),w
 28052  19B6  0143               	movlb	3	; select bank3
 28053  19B7  02A4               	subwf	_cont_pecas^(0+384),f
 28054  19B8  0141               	movlb	1	; select bank1
 28055  19B9  0829               	movf	(??_trata_dados+1)^(0+128),w
 28056  19BA  0143               	movlb	3	; select bank3
 28057  19BB  3BA5               	subwfb	(_cont_pecas+1)^(0+384),f
 28058  19BC  0141               	movlb	1	; select bank1
 28059  19BD  082A               	movf	(??_trata_dados+2)^(0+128),w
 28060  19BE  0143               	movlb	3	; select bank3
 28061  19BF  3BA6               	subwfb	(_cont_pecas+2)^(0+384),f
 28062  19C0  0141               	movlb	1	; select bank1
 28063  19C1  082B               	movf	(??_trata_dados+3)^(0+128),w
 28064  19C2  0143               	movlb	3	; select bank3
 28065  19C3  3BA7               	subwfb	(_cont_pecas+3)^(0+384),f
 28066                           
 28067                           ;func.c: 691: flag.zero_cont = 0;
 28068  19C4  12AD               	bcf	(_flag^(0+384)+1),5	;volatile
 28069                           
 28070                           ;func.c: 692: }
 28071  19C5  29C9               	goto	l16432
 28072  19C6                     l1342:	
 28073                           
 28074                           ;func.c: 693: else if (flag.regressivo){
 28075  19C6  1D2C               	btfss	_flag^(0+384),2	;volatile
 28076  19C7  29C9               	goto	l16432
 28077                           
 28078                           ;func.c: 694: flag.zero_cont = 1;
 28079  19C8  16AD               	bsf	(_flag^(0+384)+1),5	;volatile
 28080  19C9                     l16432:	
 28081                           
 28082                           ;func.c: 695: }
 28083                           ;func.c: 696: salva_n_pecas();
 28084  19C9  31CC  2415  3199   	fcall	_salva_n_pecas
 28085  19CC                     l16434:	
 28086                           
 28087                           ;func.c: 697: }
 28088                           ;func.c: 698: if(0 != ver_freq(freq_atual)){
 28089  19CC  0143               	movlb	3	; select bank3
 28090  19CD  0835               	movf	(_freq_atual+1)^(0+384),w
 28091  19CE  0140               	movlb	0	; select bank0
 28092  19CF  00C7               	movwf	ver_freq@f+1
 28093  19D0  0143               	movlb	3	; select bank3
 28094  19D1  0834               	movf	_freq_atual^(0+384),w
 28095  19D2  0140               	movlb	0	; select bank0
 28096  19D3  00C6               	movwf	ver_freq@f
 28097  19D4  31D6  260E  3199   	fcall	_ver_freq
 28098  19D7  3A00               	xorlw	0
 28099  19D8  1903               	skipnz
 28100  19D9  29E0               	goto	l16438
 28101                           
 28102                           ;func.c: 699: freq_atual = freq_inicial;
 28103  19DA  0143               	movlb	3	; select bank3
 28104  19DB  0837               	movf	(_freq_inicial+1)^(0+384),w
 28105  19DC  00B5               	movwf	(_freq_atual+1)^(0+384)
 28106  19DD  0836               	movf	_freq_inicial^(0+384),w
 28107  19DE  00B4               	movwf	_freq_atual^(0+384)
 28108                           
 28109                           ;func.c: 700: }
 28110  19DF  2A3E               	goto	l16456
 28111  19E0                     l16438:	
 28112                           
 28113                           ;func.c: 701: else if(t1ms_solda > 100){
 28114  19E0  3000               	movlw	0
 28115  19E1  0143               	movlb	3	; select bank3
 28116  19E2  0247               	subwf	(_t1ms_solda+1)^(0+384),w
 28117  19E3  3065               	movlw	101
 28118  19E4  1903               	skipnz
 28119  19E5  0246               	subwf	_t1ms_solda^(0+384),w
 28120  19E6  1C03               	skipc
 28121  19E7  2A3E               	goto	l16456
 28122                           
 28123                           ;func.c: 702: uint32_t f = 0;
 28124  19E8  3000               	movlw	0
 28125  19E9  0141               	movlb	1	; select bank1
 28126  19EA  00B1               	movwf	(trata_dados@f+3)^(0+128)
 28127  19EB  3000               	movlw	0
 28128  19EC  00B0               	movwf	(trata_dados@f+2)^(0+128)
 28129  19ED  3000               	movlw	0
 28130  19EE  00AF               	movwf	(trata_dados@f+1)^(0+128)
 28131  19EF  3000               	movlw	0
 28132  19F0  00AE               	movwf	trata_dados@f^(0+128)
 28133                           
 28134                           ;func.c: 703: for(char i = 0; i<100; i++){
 28135  19F1  01B6               	clrf	trata_dados@i^(0+128)
 28136  19F2  3064               	movlw	100
 28137  19F3  0236               	subwf	trata_dados@i^(0+128),w
 28138  19F4  1803               	btfsc	3,0
 28139  19F5  2A18               	goto	l16454
 28140  19F6                     l16448:	
 28141                           
 28142                           ;func.c: 704: f+=freq_atual_arr[i];
 28143  19F6  0836               	movf	trata_dados@i^(0+128),w
 28144  19F7  00A8               	movwf	??_trata_dados^(0+128)
 28145  19F8  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28146  19F9  35A8               	lslf	??_trata_dados^(0+128),f
 28147  19FA  0DA9               	rlf	(??_trata_dados^(0+128)+1),f
 28148  19FB  3028               	movlw	40
 28149  19FC  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28150  19FD  302F               	movlw	47
 28151  19FE  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28152  19FF  0828               	movf	??_trata_dados^(0+128),w
 28153  1A00  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28154  1A01  0086               	movwf	6
 28155  1A02  0829               	movf	(??_trata_dados+1)^(0+128),w
 28156  1A03  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28157  1A04  0087               	movwf	7
 28158  1A05  3F40               	moviw [0]fsr1
 28159  1A06  00AC               	movwf	(??_trata_dados+4)^(0+128)
 28160  1A07  3F41               	moviw [1]fsr1
 28161  1A08  00AD               	movwf	((??_trata_dados+4)^(0+128)+1)
 28162  1A09  082C               	movf	(??_trata_dados+4)^(0+128),w
 28163  1A0A  07AE               	addwf	trata_dados@f^(0+128),f
 28164  1A0B  082D               	movf	(??_trata_dados+5)^(0+128),w
 28165  1A0C  3DAF               	addwfc	(trata_dados@f+1)^(0+128),f
 28166  1A0D  3000               	movlw	0
 28167  1A0E  3DB0               	addwfc	(trata_dados@f+2)^(0+128),f
 28168  1A0F  3DB1               	addwfc	(trata_dados@f+3)^(0+128),f
 28169  1A10  3001               	movlw	1
 28170  1A11  00A8               	movwf	??_trata_dados^(0+128)
 28171  1A12  0828               	movf	??_trata_dados^(0+128),w
 28172  1A13  07B6               	addwf	trata_dados@i^(0+128),f
 28173  1A14  3064               	movlw	100
 28174  1A15  0236               	subwf	trata_dados@i^(0+128),w
 28175  1A16  1C03               	skipc
 28176  1A17  29F6               	goto	l16448
 28177  1A18                     l16454:	
 28178                           
 28179                           ;func.c: 705: }
 28180                           ;func.c: 706: freq_atual = (f/100) + 50;
 28181  1A18  3000               	movlw	0
 28182  1A19  0140               	movlb	0	; select bank0
 28183  1A1A  00B2               	movwf	___lldiv@divisor+3
 28184  1A1B  3000               	movlw	0
 28185  1A1C  00B1               	movwf	___lldiv@divisor+2
 28186  1A1D  3000               	movlw	0
 28187  1A1E  00B0               	movwf	___lldiv@divisor+1
 28188  1A1F  3064               	movlw	100
 28189  1A20  00AF               	movwf	___lldiv@divisor
 28190  1A21  0141               	movlb	1	; select bank1
 28191  1A22  0831               	movf	(trata_dados@f+3)^(0+128),w
 28192  1A23  0140               	movlb	0	; select bank0
 28193  1A24  00B6               	movwf	___lldiv@dividend+3
 28194  1A25  0141               	movlb	1	; select bank1
 28195  1A26  0830               	movf	(trata_dados@f+2)^(0+128),w
 28196  1A27  0140               	movlb	0	; select bank0
 28197  1A28  00B5               	movwf	___lldiv@dividend+2
 28198  1A29  0141               	movlb	1	; select bank1
 28199  1A2A  082F               	movf	(trata_dados@f+1)^(0+128),w
 28200  1A2B  0140               	movlb	0	; select bank0
 28201  1A2C  00B4               	movwf	___lldiv@dividend+1
 28202  1A2D  0141               	movlb	1	; select bank1
 28203  1A2E  082E               	movf	trata_dados@f^(0+128),w
 28204  1A2F  0140               	movlb	0	; select bank0
 28205  1A30  00B3               	movwf	___lldiv@dividend
 28206  1A31  31CB  236E  3199   	fcall	___lldiv
 28207  1A34  0140               	movlb	0	; select bank0
 28208  1A35  082F               	movf	?___lldiv,w
 28209  1A36  3E32               	addlw	50
 28210  1A37  0143               	movlb	3	; select bank3
 28211  1A38  00B4               	movwf	_freq_atual^(0+384)
 28212  1A39  3000               	movlw	0
 28213  1A3A  0140               	movlb	0	; select bank0
 28214  1A3B  3D30               	addwfc	?___lldiv+1,w
 28215  1A3C  0143               	movlb	3	; select bank3
 28216  1A3D  00B5               	movwf	(_freq_atual+1)^(0+384)
 28217  1A3E                     l16456:	
 28218                           
 28219                           ;func.c: 707: }
 28220                           ;func.c: 709: if(modo == NORMAL && cfg.energ_erro && flag.energiaErro){
 28221  1A3E  085C               	movf	_modo^(0+384),w
 28222  1A3F  1903               	btfsc	3,2
 28223  1A40  1CB2               	btfss	(_cfg^(0+384)+2),1
 28224  1A41  2BF6               	goto	l16542
 28225  1A42  1CAC               	btfss	_flag^(0+384),1	;volatile
 28226  1A43  2BF6               	goto	l16542
 28227                           
 28228                           ;func.c: 710: if(flag.energia){
 28229  1A44  1C2C               	btfss	_flag^(0+384),0	;volatile
 28230  1A45  2A6F               	goto	l16472
 28231                           
 28232                           ;func.c: 711: if(t1ms_solda >= tmp_solda){
 28233  1A46  0841               	movf	(_tmp_solda+1)^(0+384),w
 28234  1A47  0247               	subwf	(_t1ms_solda+1)^(0+384),w
 28235  1A48  1D03               	skipz
 28236  1A49  2A4C               	goto	u18905
 28237  1A4A  0840               	movf	_tmp_solda^(0+384),w
 28238  1A4B  0246               	subwf	_t1ms_solda^(0+384),w
 28239  1A4C                     u18905:	
 28240  1A4C  1C03               	skipc
 28241  1A4D  2AAD               	goto	l16480
 28242                           
 28243                           ;func.c: 712: status_gerador(ERRO_ENE,1);
 28244  1A4E  3001               	movlw	1
 28245  1A4F  0140               	movlb	0	; select bank0
 28246  1A50  00B0               	movwf	status_gerador@b
 28247  1A51  3000               	movlw	0
 28248  1A52  00B1               	movwf	status_gerador@b+1
 28249  1A53  3004               	movlw	4
 28250  1A54  31CC  24C4  3199   	fcall	_status_gerador
 28251                           
 28252                           ;func.c: 713: trava_erro(tempo_ovf_str[idioma]);
 28253  1A57  0143               	movlb	3	; select bank3
 28254  1A58  085A               	movf	_idioma^(0+384),w
 28255  1A59  0141               	movlb	1	; select bank1
 28256  1A5A  00A8               	movwf	??_trata_dados^(0+128)
 28257  1A5B  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28258  1A5C  0828               	movf	??_trata_dados^(0+128),w
 28259  1A5D  0140               	movlb	0	; select bank0
 28260  1A5E  00AB               	movwf	___wmul@multiplier
 28261  1A5F  0141               	movlb	1	; select bank1
 28262  1A60  0829               	movf	(??_trata_dados+1)^(0+128),w
 28263  1A61  0140               	movlb	0	; select bank0
 28264  1A62  00AC               	movwf	___wmul@multiplier+1
 28265  1A63  3011               	movlw	17
 28266  1A64  00AD               	movwf	___wmul@multiplicand
 28267  1A65  3000               	movlw	0
 28268  1A66  00AE               	movwf	___wmul@multiplicand+1
 28269  1A67  31D0  20FE  3199   	fcall	___wmul
 28270  1A6A  303A               	movlw	low (_tempo_ovf_str| (0+32768))
 28271  1A6B  0141               	movlb	1	; select bank1
 28272  1A6C  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28273  1A6D  30DA               	movlw	high (_tempo_ovf_str| (0+32768))
 28274  1A6E  2A98               	goto	L56
 28275  1A6F                     l16472:	
 28276                           ;func.c: 714: }
 28277                           ;func.c: 715: }
 28278                           
 28279                           ;func.c: 713: trava_erro(tempo_ovf_str[idioma]);
 28280                           
 28281                           
 28282                           ;func.c: 716: else{
 28283                           ;func.c: 717: if(energia_total < ener_solda){
 28284  1A6F  0143               	movlb	3	; select bank3
 28285  1A70  083F               	movf	(_ener_solda+1)^(0+384),w
 28286  1A71  0239               	subwf	(_energia_total+1)^(0+384),w
 28287  1A72  1D03               	skipz
 28288  1A73  2A76               	goto	u18915
 28289  1A74  083E               	movf	_ener_solda^(0+384),w
 28290  1A75  0238               	subwf	_energia_total^(0+384),w
 28291  1A76                     u18915:	
 28292  1A76  1803               	skipnc
 28293  1A77  2AAD               	goto	l16480
 28294                           
 28295                           ;func.c: 718: status_gerador(ERRO_ENE,1);
 28296  1A78  3001               	movlw	1
 28297  1A79  0140               	movlb	0	; select bank0
 28298  1A7A  00B0               	movwf	status_gerador@b
 28299  1A7B  3000               	movlw	0
 28300  1A7C  00B1               	movwf	status_gerador@b+1
 28301  1A7D  3004               	movlw	4
 28302  1A7E  31CC  24C4  3199   	fcall	_status_gerador
 28303                           
 28304                           ;func.c: 719: trava_erro(energia_low_str[idioma]);
 28305  1A81  0143               	movlb	3	; select bank3
 28306  1A82  085A               	movf	_idioma^(0+384),w
 28307  1A83  0141               	movlb	1	; select bank1
 28308  1A84  00A8               	movwf	??_trata_dados^(0+128)
 28309  1A85  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28310  1A86  0828               	movf	??_trata_dados^(0+128),w
 28311  1A87  0140               	movlb	0	; select bank0
 28312  1A88  00AB               	movwf	___wmul@multiplier
 28313  1A89  0141               	movlb	1	; select bank1
 28314  1A8A  0829               	movf	(??_trata_dados+1)^(0+128),w
 28315  1A8B  0140               	movlb	0	; select bank0
 28316  1A8C  00AC               	movwf	___wmul@multiplier+1
 28317  1A8D  3011               	movlw	17
 28318  1A8E  00AD               	movwf	___wmul@multiplicand
 28319  1A8F  3000               	movlw	0
 28320  1A90  00AE               	movwf	___wmul@multiplicand+1
 28321  1A91  31D0  20FE  3199   	fcall	___wmul
 28322  1A94  305C               	movlw	low (_energia_low_str| (0+32768))
 28323  1A95  0141               	movlb	1	; select bank1
 28324  1A96  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28325  1A97  30DA               	movlw	high (_energia_low_str| (0+32768))
 28326  1A98                     L56:	
 28327  1A98  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28328  1A99  0140               	movlb	0	; select bank0
 28329  1A9A  082B               	movf	?___wmul,w
 28330  1A9B  0141               	movlb	1	; select bank1
 28331  1A9C  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28332  1A9D  00B4               	movwf	_trata_dados$4262^(0+128)
 28333  1A9E  0140               	movlb	0	; select bank0
 28334  1A9F  082C               	movf	?___wmul+1,w
 28335  1AA0  0141               	movlb	1	; select bank1
 28336  1AA1  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28337  1AA2  00B5               	movwf	(_trata_dados$4262+1)^(0+128)
 28338                           
 28339                           ;func.c: 719: trava_erro(energia_low_str[idioma]);
 28340  1AA3  0835               	movf	(_trata_dados$4262+1)^(0+128),w
 28341  1AA4  0140               	movlb	0	; select bank0
 28342  1AA5  00D8               	movwf	trava_erro@s+1
 28343  1AA6  0141               	movlb	1	; select bank1
 28344  1AA7  0834               	movf	_trata_dados$4262^(0+128),w
 28345  1AA8  0140               	movlb	0	; select bank0
 28346  1AA9  00D7               	movwf	trava_erro@s
 28347  1AAA  31C6  26BE  3199   	fcall	_trava_erro
 28348  1AAD                     l16480:	
 28349                           
 28350                           ;func.c: 720: }
 28351                           ;func.c: 721: }
 28352                           ;func.c: 722: status_gerador(ERRO_ENE,0);
 28353  1AAD  3000               	movlw	0
 28354  1AAE  0140               	movlb	0	; select bank0
 28355  1AAF  00B0               	movwf	status_gerador@b
 28356  1AB0  00B1               	movwf	status_gerador@b+1
 28357  1AB1  3004               	movlw	4
 28358  1AB2  2BF3               	goto	L57
 28359  1AB3                     l16482:	
 28360                           ;func.c: 723: }
 28361                           ;func.c: 724: }
 28362                           
 28363                           
 28364                           ;func.c: 725: else if(ciclador){
 28365  1AB3  0143               	movlb	3	; select bank3
 28366  1AB4  0861               	movf	_ciclador^(0+384),w
 28367  1AB5  1903               	btfsc	3,2
 28368  1AB6  2AD9               	goto	l16498
 28369                           
 28370                           ;func.c: 727: char bt;
 28371                           ;func.c: 728: led.value = 0xFF;
 28372  1AB7  30FF               	movlw	255
 28373  1AB8  0141               	movlb	1	; select bank1
 28374  1AB9  00A8               	movwf	??_trata_dados^(0+128)
 28375  1ABA  0828               	movf	??_trata_dados^(0+128),w
 28376  1ABB  0143               	movlb	3	; select bank3
 28377  1ABC  00E5               	movwf	_led^(0+384)	;volatile
 28378  1ABD                     l16486:	
 28379                           ;func.c: 729: do{
 28380                           
 28381                           
 28382                           ;func.c: 730: bt = teclado();
 28383  1ABD  31C2  22CC  3199   	fcall	_teclado
 28384  1AC0  0141               	movlb	1	; select bank1
 28385  1AC1  00A8               	movwf	??_trata_dados^(0+128)
 28386  1AC2  0828               	movf	??_trata_dados^(0+128),w
 28387  1AC3  00B2               	movwf	trata_dados@bt^(0+128)
 28388                           
 28389                           ;func.c: 731: led.value ^= 1;
 28390  1AC4  3001               	movlw	1
 28391  1AC5  00A8               	movwf	??_trata_dados^(0+128)
 28392  1AC6  0828               	movf	??_trata_dados^(0+128),w
 28393  1AC7  0143               	movlb	3	; select bank3
 28394  1AC8  06E5               	xorwf	_led^(0+384),f	;volatile
 28395                           
 28396                           ;func.c: 732: }while(bt != 18);
 28397  1AC9  3012               	movlw	18
 28398  1ACA  0141               	movlb	1	; select bank1
 28399  1ACB  0632               	xorwf	trata_dados@bt^(0+128),w
 28400  1ACC  1D03               	btfss	3,2
 28401  1ACD  2ABD               	goto	l16486
 28402                           
 28403                           ;func.c: 733: freq_atual = freq_inicial;
 28404  1ACE  0143               	movlb	3	; select bank3
 28405  1ACF  0837               	movf	(_freq_inicial+1)^(0+384),w
 28406  1AD0  00B5               	movwf	(_freq_atual+1)^(0+384)
 28407  1AD1  0836               	movf	_freq_inicial^(0+384),w
 28408  1AD2  00B4               	movwf	_freq_atual^(0+384)
 28409                           
 28410                           ;func.c: 734: rst_inversor();
 28411  1AD3  31D2  220E  3199   	fcall	_rst_inversor
 28412                           
 28413                           ;func.c: 735: led.value = 0;
 28414  1AD6  0143               	movlb	3	; select bank3
 28415  1AD7  01E5               	clrf	_led^(0+384)	;volatile
 28416                           
 28417                           ;func.c: 736: }
 28418  1AD8  2BF6               	goto	l16542
 28419  1AD9                     l16498:	
 28420                           
 28421                           ;func.c: 737: else{
 28422                           ;func.c: 738: status_gerador(ERRO,1);
 28423  1AD9  3001               	movlw	1
 28424  1ADA  0140               	movlb	0	; select bank0
 28425  1ADB  00B0               	movwf	status_gerador@b
 28426  1ADC  3000               	movlw	0
 28427  1ADD  00B1               	movwf	status_gerador@b+1
 28428  1ADE  3003               	movlw	3
 28429  1ADF  31CC  24C4  3199   	fcall	_status_gerador
 28430                           
 28431                           ;func.c: 739: if(cfg.emergencia && erro == 250){
 28432  1AE2  0143               	movlb	3	; select bank3
 28433  1AE3  1C30               	btfss	_cfg^(0+384),0
 28434  1AE4  2B14               	goto	l1360
 28435  1AE5  30FA               	movlw	250
 28436  1AE6  0140               	movlb	0	; select bank0
 28437  1AE7  0663               	xorwf	_erro,w
 28438  1AE8  1D03               	btfss	3,2
 28439  1AE9  2B14               	goto	l1360
 28440                           
 28441                           ;func.c: 740: escreve_LCD(1,1,emergencia_str[idioma]);
 28442  1AEA  01B5               	clrf	escreve_LCD@coluna
 28443  1AEB  0AB5               	incf	escreve_LCD@coluna,f
 28444  1AEC  0143               	movlb	3	; select bank3
 28445  1AED  085A               	movf	_idioma^(0+384),w
 28446  1AEE  0141               	movlb	1	; select bank1
 28447  1AEF  00A8               	movwf	??_trata_dados^(0+128)
 28448  1AF0  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28449  1AF1  0828               	movf	??_trata_dados^(0+128),w
 28450  1AF2  0140               	movlb	0	; select bank0
 28451  1AF3  00AB               	movwf	___wmul@multiplier
 28452  1AF4  0141               	movlb	1	; select bank1
 28453  1AF5  0829               	movf	(??_trata_dados+1)^(0+128),w
 28454  1AF6  0140               	movlb	0	; select bank0
 28455  1AF7  00AC               	movwf	___wmul@multiplier+1
 28456  1AF8  3011               	movlw	17
 28457  1AF9  00AD               	movwf	___wmul@multiplicand
 28458  1AFA  3000               	movlw	0
 28459  1AFB  00AE               	movwf	___wmul@multiplicand+1
 28460  1AFC  31D0  20FE  3199   	fcall	___wmul
 28461  1AFF  3026               	movlw	low (_emergencia_str| (0+32768))
 28462  1B00  0141               	movlb	1	; select bank1
 28463  1B01  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28464  1B02  30DD               	movlw	high (_emergencia_str| (0+32768))
 28465  1B03  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28466  1B04  0140               	movlb	0	; select bank0
 28467  1B05  082B               	movf	?___wmul,w
 28468  1B06  0141               	movlb	1	; select bank1
 28469  1B07  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28470  1B08  0140               	movlb	0	; select bank0
 28471  1B09  00B6               	movwf	escreve_LCD@str
 28472  1B0A  082C               	movf	?___wmul+1,w
 28473  1B0B  0141               	movlb	1	; select bank1
 28474  1B0C  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28475  1B0D  0140               	movlb	0	; select bank0
 28476  1B0E  00B7               	movwf	escreve_LCD@str+1
 28477  1B0F  3001               	movlw	1
 28478  1B10  31E7  27C1  3199   	fcall	_escreve_LCD
 28479                           
 28480                           ;func.c: 741: }
 28481  1B13  2BEE               	goto	l16540
 28482  1B14                     l1360:	
 28483                           
 28484                           ;func.c: 742: else if(PORTDbits.RD7){
 28485  1B14  0140               	movlb	0	; select bank0
 28486  1B15  1F8F               	btfss	15,7	;volatile
 28487  1B16  2B5B               	goto	l1362
 28488                           
 28489                           ;func.c: 743: led.OVL = 1;
 28490  1B17  0143               	movlb	3	; select bank3
 28491  1B18  14E5               	bsf	_led^(0+384),1	;volatile
 28492                           
 28493                           ;func.c: 744: escreve_LCD(1,1,erro_inv_str[idioma]);
 28494  1B19  0140               	movlb	0	; select bank0
 28495  1B1A  01B5               	clrf	escreve_LCD@coluna
 28496  1B1B  0AB5               	incf	escreve_LCD@coluna,f
 28497  1B1C  0143               	movlb	3	; select bank3
 28498  1B1D  085A               	movf	_idioma^(0+384),w
 28499  1B1E  0141               	movlb	1	; select bank1
 28500  1B1F  00A8               	movwf	??_trata_dados^(0+128)
 28501  1B20  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28502  1B21  0828               	movf	??_trata_dados^(0+128),w
 28503  1B22  0140               	movlb	0	; select bank0
 28504  1B23  00AB               	movwf	___wmul@multiplier
 28505  1B24  0141               	movlb	1	; select bank1
 28506  1B25  0829               	movf	(??_trata_dados+1)^(0+128),w
 28507  1B26  0140               	movlb	0	; select bank0
 28508  1B27  00AC               	movwf	___wmul@multiplier+1
 28509  1B28  3011               	movlw	17
 28510  1B29  00AD               	movwf	___wmul@multiplicand
 28511  1B2A  3000               	movlw	0
 28512  1B2B  00AE               	movwf	___wmul@multiplicand+1
 28513  1B2C  31D0  20FE  3199   	fcall	___wmul
 28514  1B2F  3038               	movlw	low (_erro_inv_str| (0+32768))
 28515  1B30  0141               	movlb	1	; select bank1
 28516  1B31  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28517  1B32  30DC               	movlw	high (_erro_inv_str| (0+32768))
 28518  1B33  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28519  1B34  0140               	movlb	0	; select bank0
 28520  1B35  082B               	movf	?___wmul,w
 28521  1B36  0141               	movlb	1	; select bank1
 28522  1B37  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28523  1B38  0140               	movlb	0	; select bank0
 28524  1B39  00B6               	movwf	escreve_LCD@str
 28525  1B3A  082C               	movf	?___wmul+1,w
 28526  1B3B  0141               	movlb	1	; select bank1
 28527  1B3C  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28528  1B3D  0140               	movlb	0	; select bank0
 28529  1B3E  00B7               	movwf	escreve_LCD@str+1
 28530  1B3F  3001               	movlw	1
 28531  1B40  31E7  27C1  3199   	fcall	_escreve_LCD
 28532  1B43                     l16510:	
 28533                           ;func.c: 745: do{
 28534                           
 28535                           
 28536                           ;func.c: 746: delay(50);
 28537  1B43  3032               	movlw	50
 28538  1B44  0140               	movlb	0	; select bank0
 28539  1B45  00B3               	movwf	delay@ms
 28540  1B46  3000               	movlw	0
 28541  1B47  00B4               	movwf	delay@ms+1
 28542  1B48  31D1  2136  3199   	fcall	_delay
 28543                           
 28544                           ;func.c: 747: rst_inversor();
 28545  1B4B  31D2  220E  3199   	fcall	_rst_inversor
 28546                           
 28547                           ;func.c: 748: delay(50);
 28548  1B4E  3032               	movlw	50
 28549  1B4F  0140               	movlb	0	; select bank0
 28550  1B50  00B3               	movwf	delay@ms
 28551  1B51  3000               	movlw	0
 28552  1B52  00B4               	movwf	delay@ms+1
 28553  1B53  31D1  2136  3199   	fcall	_delay
 28554                           
 28555                           ;func.c: 749: }while(PORTDbits.RD7);
 28556  1B56  0140               	movlb	0	; select bank0
 28557  1B57  1B8F               	btfsc	15,7	;volatile
 28558  1B58  2B43               	goto	l16510
 28559                           
 28560                           ;func.c: 750: trava_erro("\0");
 28561  1B59  3018               	movlw	low (STR_3| (0+32768))
 28562  1B5A  2BE3               	goto	L58
 28563  1B5B                     l1362:	
 28564                           ;func.c: 752: }
 28565                           
 28566                           ;func.c: 751: freq_atual = freq_inicial;
 28567                           
 28568                           
 28569                           ;func.c: 753: else if(flag.abortar){
 28570  1B5B  0143               	movlb	3	; select bank3
 28571  1B5C  1F2C               	btfss	_flag^(0+384),6	;volatile
 28572  1B5D  2BEE               	goto	l16540
 28573                           
 28574                           ;func.c: 754: led.ERR = 1;
 28575  1B5E  1565               	bsf	_led^(0+384),2	;volatile
 28576                           
 28577                           ;func.c: 755: Lcd_Clear();
 28578  1B5F  31E1  21DF  3199   	fcall	_Lcd_Clear
 28579                           
 28580                           ;func.c: 756: if(erro == 100){
 28581  1B62  3064               	movlw	100
 28582  1B63  0140               	movlb	0	; select bank0
 28583  1B64  0663               	xorwf	_erro,w
 28584  1B65  1D03               	btfss	3,2
 28585  1B66  2B91               	goto	l16530
 28586                           
 28587                           ;func.c: 757: escreve_LCD(1,1,erro_ovl_str[idioma]);
 28588  1B67  01B5               	clrf	escreve_LCD@coluna
 28589  1B68  0AB5               	incf	escreve_LCD@coluna,f
 28590  1B69  0143               	movlb	3	; select bank3
 28591  1B6A  085A               	movf	_idioma^(0+384),w
 28592  1B6B  0141               	movlb	1	; select bank1
 28593  1B6C  00A8               	movwf	??_trata_dados^(0+128)
 28594  1B6D  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28595  1B6E  0828               	movf	??_trata_dados^(0+128),w
 28596  1B6F  0140               	movlb	0	; select bank0
 28597  1B70  00AB               	movwf	___wmul@multiplier
 28598  1B71  0141               	movlb	1	; select bank1
 28599  1B72  0829               	movf	(??_trata_dados+1)^(0+128),w
 28600  1B73  0140               	movlb	0	; select bank0
 28601  1B74  00AC               	movwf	___wmul@multiplier+1
 28602  1B75  3011               	movlw	17
 28603  1B76  00AD               	movwf	___wmul@multiplicand
 28604  1B77  3000               	movlw	0
 28605  1B78  00AE               	movwf	___wmul@multiplicand+1
 28606  1B79  31D0  20FE  3199   	fcall	___wmul
 28607  1B7C  305A               	movlw	low (_erro_ovl_str| (0+32768))
 28608  1B7D  0141               	movlb	1	; select bank1
 28609  1B7E  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28610  1B7F  30DC               	movlw	high (_erro_ovl_str| (0+32768))
 28611  1B80  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28612  1B81  0140               	movlb	0	; select bank0
 28613  1B82  082B               	movf	?___wmul,w
 28614  1B83  0141               	movlb	1	; select bank1
 28615  1B84  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28616  1B85  0140               	movlb	0	; select bank0
 28617  1B86  00B6               	movwf	escreve_LCD@str
 28618  1B87  082C               	movf	?___wmul+1,w
 28619  1B88  0141               	movlb	1	; select bank1
 28620  1B89  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28621  1B8A  0140               	movlb	0	; select bank0
 28622  1B8B  00B7               	movwf	escreve_LCD@str+1
 28623  1B8C  3001               	movlw	1
 28624  1B8D  31E7  27C1  3199   	fcall	_escreve_LCD
 28625                           
 28626                           ;func.c: 758: }
 28627  1B90  2BE1               	goto	l16536
 28628  1B91                     l16530:	
 28629                           
 28630                           ;func.c: 759: else{
 28631                           ;func.c: 760: escreve_LCD(1,1,erro_str[idioma]);
 28632  1B91  0140               	movlb	0	; select bank0
 28633  1B92  01B5               	clrf	escreve_LCD@coluna
 28634  1B93  0AB5               	incf	escreve_LCD@coluna,f
 28635  1B94  0143               	movlb	3	; select bank3
 28636  1B95  085A               	movf	_idioma^(0+384),w
 28637  1B96  0141               	movlb	1	; select bank1
 28638  1B97  00A8               	movwf	??_trata_dados^(0+128)
 28639  1B98  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28640  1B99  0828               	movf	??_trata_dados^(0+128),w
 28641  1B9A  0140               	movlb	0	; select bank0
 28642  1B9B  00AB               	movwf	___wmul@multiplier
 28643  1B9C  0141               	movlb	1	; select bank1
 28644  1B9D  0829               	movf	(??_trata_dados+1)^(0+128),w
 28645  1B9E  0140               	movlb	0	; select bank0
 28646  1B9F  00AC               	movwf	___wmul@multiplier+1
 28647  1BA0  3011               	movlw	17
 28648  1BA1  00AD               	movwf	___wmul@multiplicand
 28649  1BA2  3000               	movlw	0
 28650  1BA3  00AE               	movwf	___wmul@multiplicand+1
 28651  1BA4  31D0  20FE  3199   	fcall	___wmul
 28652  1BA7  307C               	movlw	low (_erro_str| (0+32768))
 28653  1BA8  0141               	movlb	1	; select bank1
 28654  1BA9  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28655  1BAA  30DC               	movlw	high (_erro_str| (0+32768))
 28656  1BAB  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28657  1BAC  0140               	movlb	0	; select bank0
 28658  1BAD  082B               	movf	?___wmul,w
 28659  1BAE  0141               	movlb	1	; select bank1
 28660  1BAF  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28661  1BB0  0140               	movlb	0	; select bank0
 28662  1BB1  00B6               	movwf	escreve_LCD@str
 28663  1BB2  082C               	movf	?___wmul+1,w
 28664  1BB3  0141               	movlb	1	; select bank1
 28665  1BB4  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28666  1BB5  0140               	movlb	0	; select bank0
 28667  1BB6  00B7               	movwf	escreve_LCD@str+1
 28668  1BB7  3001               	movlw	1
 28669  1BB8  31E7  27C1  3199   	fcall	_escreve_LCD
 28670                           
 28671                           ;func.c: 761: ltoa(str,erro,10);
 28672  1BBB  0140               	movlb	0	; select bank0
 28673  1BBC  0863               	movf	_erro,w
 28674  1BBD  0141               	movlb	1	; select bank1
 28675  1BBE  00A8               	movwf	??_trata_dados^(0+128)
 28676  1BBF  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28677  1BC0  01AA               	clrf	(??_trata_dados^(0+128)+2)
 28678  1BC1  01AB               	clrf	(??_trata_dados^(0+128)+3)
 28679  1BC2  082B               	movf	(??_trata_dados+3)^(0+128),w
 28680  1BC3  0140               	movlb	0	; select bank0
 28681  1BC4  00CD               	movwf	ltoa@val+3
 28682  1BC5  0141               	movlb	1	; select bank1
 28683  1BC6  082A               	movf	(??_trata_dados+2)^(0+128),w
 28684  1BC7  0140               	movlb	0	; select bank0
 28685  1BC8  00CC               	movwf	ltoa@val+2
 28686  1BC9  0141               	movlb	1	; select bank1
 28687  1BCA  0829               	movf	(??_trata_dados+1)^(0+128),w
 28688  1BCB  0140               	movlb	0	; select bank0
 28689  1BCC  00CB               	movwf	ltoa@val+1
 28690  1BCD  0141               	movlb	1	; select bank1
 28691  1BCE  0828               	movf	??_trata_dados^(0+128),w
 28692  1BCF  0140               	movlb	0	; select bank0
 28693  1BD0  00CA               	movwf	ltoa@val
 28694  1BD1  300A               	movlw	10
 28695  1BD2  00CE               	movwf	ltoa@base
 28696  1BD3  3000               	movlw	0
 28697  1BD4  00CF               	movwf	ltoa@base+1
 28698  1BD5  305C               	movlw	(low (_str| (0+512)))& (0+255)
 28699  1BD6  31D4  24DE  3199   	fcall	_ltoa
 28700                           
 28701                           ;func.c: 762: Lcd_Write_String(str);
 28702  1BD9  305C               	movlw	low _str
 28703  1BDA  0140               	movlb	0	; select bank0
 28704  1BDB  00B0               	movwf	Lcd_Write_String@a
 28705  1BDC  3002               	movlw	high _str
 28706  1BDD  00B1               	movwf	Lcd_Write_String@a+1
 28707  1BDE  31D1  2171  3199   	fcall	_Lcd_Write_String
 28708  1BE1                     l16536:	
 28709                           
 28710                           ;func.c: 763: }
 28711                           ;func.c: 764: trava_erro("\0");
 28712  1BE1  3018               	movlw	low (STR_3| (0+32768))
 28713  1BE2  0140               	movlb	0	; select bank0
 28714  1BE3                     L58:	
 28715  1BE3  00D7               	movwf	trava_erro@s
 28716  1BE4  30E9               	movlw	high (STR_3| (0+32768))
 28717  1BE5  00D8               	movwf	trava_erro@s+1
 28718  1BE6  31C6  26BE  3199   	fcall	_trava_erro
 28719                           
 28720                           ;func.c: 765: freq_atual = freq_inicial;
 28721  1BE9  0143               	movlb	3	; select bank3
 28722  1BEA  0837               	movf	(_freq_inicial+1)^(0+384),w
 28723  1BEB  00B5               	movwf	(_freq_atual+1)^(0+384)
 28724  1BEC  0836               	movf	_freq_inicial^(0+384),w
 28725  1BED  00B4               	movwf	_freq_atual^(0+384)
 28726  1BEE                     l16540:	
 28727                           
 28728                           ;func.c: 767: }
 28729                           ;func.c: 768: status_gerador(ERRO,0);
 28730  1BEE  3000               	movlw	0
 28731  1BEF  0140               	movlb	0	; select bank0
 28732  1BF0  00B0               	movwf	status_gerador@b
 28733  1BF1  00B1               	movwf	status_gerador@b+1
 28734  1BF2  3003               	movlw	3
 28735  1BF3                     L57:	
 28736  1BF3  31CC  24C4  3199   	fcall	_status_gerador
 28737  1BF6                     l16542:	
 28738                           
 28739                           ;func.c: 769: }
 28740                           ;func.c: 770: if(flag.regressivo && flag.zero_cont){
 28741  1BF6  0143               	movlb	3	; select bank3
 28742  1BF7  192C               	btfsc	_flag^(0+384),2	;volatile
 28743  1BF8  1EAD               	btfss	(_flag^(0+384)+1),5	;volatile
 28744  1BF9  2C73               	goto	l16558
 28745                           
 28746                           ;func.c: 771: escreve_LCD(1,1,zero_cont_str[idioma]);
 28747  1BFA  0140               	movlb	0	; select bank0
 28748  1BFB  01B5               	clrf	escreve_LCD@coluna
 28749  1BFC  0AB5               	incf	escreve_LCD@coluna,f
 28750  1BFD  0143               	movlb	3	; select bank3
 28751  1BFE  085A               	movf	_idioma^(0+384),w
 28752  1BFF  0141               	movlb	1	; select bank1
 28753  1C00  00A8               	movwf	??_trata_dados^(0+128)
 28754  1C01  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28755  1C02  0828               	movf	??_trata_dados^(0+128),w
 28756  1C03  0140               	movlb	0	; select bank0
 28757  1C04  00AB               	movwf	___wmul@multiplier
 28758  1C05  0141               	movlb	1	; select bank1
 28759  1C06  0829               	movf	(??_trata_dados+1)^(0+128),w
 28760  1C07  0140               	movlb	0	; select bank0
 28761  1C08  00AC               	movwf	___wmul@multiplier+1
 28762  1C09  3011               	movlw	17
 28763  1C0A  00AD               	movwf	___wmul@multiplicand
 28764  1C0B  3000               	movlw	0
 28765  1C0C  00AE               	movwf	___wmul@multiplicand+1
 28766  1C0D  31D0  20FE  3199   	fcall	___wmul
 28767  1C10  3016               	movlw	low (_zero_cont_str| (0+32768))
 28768  1C11  0141               	movlb	1	; select bank1
 28769  1C12  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28770  1C13  30DC               	movlw	high (_zero_cont_str| (0+32768))
 28771  1C14  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28772  1C15  0140               	movlb	0	; select bank0
 28773  1C16  082B               	movf	?___wmul,w
 28774  1C17  0141               	movlb	1	; select bank1
 28775  1C18  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28776  1C19  0140               	movlb	0	; select bank0
 28777  1C1A  00B6               	movwf	escreve_LCD@str
 28778  1C1B  082C               	movf	?___wmul+1,w
 28779  1C1C  0141               	movlb	1	; select bank1
 28780  1C1D  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28781  1C1E  0140               	movlb	0	; select bank0
 28782  1C1F  00B7               	movwf	escreve_LCD@str+1
 28783  1C20  3001               	movlw	1
 28784  1C21  31E7  27C1  3199   	fcall	_escreve_LCD
 28785                           
 28786                           ;func.c: 772: escreve_LCD(2,1,Sai_enter_str[idioma]);
 28787  1C24  0140               	movlb	0	; select bank0
 28788  1C25  01B5               	clrf	escreve_LCD@coluna
 28789  1C26  0AB5               	incf	escreve_LCD@coluna,f
 28790  1C27  0143               	movlb	3	; select bank3
 28791  1C28  085A               	movf	_idioma^(0+384),w
 28792  1C29  0141               	movlb	1	; select bank1
 28793  1C2A  00A8               	movwf	??_trata_dados^(0+128)
 28794  1C2B  01A9               	clrf	(??_trata_dados^(0+128)+1)
 28795  1C2C  0828               	movf	??_trata_dados^(0+128),w
 28796  1C2D  0140               	movlb	0	; select bank0
 28797  1C2E  00AB               	movwf	___wmul@multiplier
 28798  1C2F  0141               	movlb	1	; select bank1
 28799  1C30  0829               	movf	(??_trata_dados+1)^(0+128),w
 28800  1C31  0140               	movlb	0	; select bank0
 28801  1C32  00AC               	movwf	___wmul@multiplier+1
 28802  1C33  3011               	movlw	17
 28803  1C34  00AD               	movwf	___wmul@multiplicand
 28804  1C35  3000               	movlw	0
 28805  1C36  00AE               	movwf	___wmul@multiplicand+1
 28806  1C37  31D0  20FE  3199   	fcall	___wmul
 28807  1C3A  309E               	movlw	low (_Sai_enter_str| (0+32768))
 28808  1C3B  0141               	movlb	1	; select bank1
 28809  1C3C  00AA               	movwf	(??_trata_dados+2)^(0+128)
 28810  1C3D  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 28811  1C3E  00AB               	movwf	((??_trata_dados+2)^(0+128)+1)
 28812  1C3F  0140               	movlb	0	; select bank0
 28813  1C40  082B               	movf	?___wmul,w
 28814  1C41  0141               	movlb	1	; select bank1
 28815  1C42  072A               	addwf	(??_trata_dados+2)^(0+128),w
 28816  1C43  0140               	movlb	0	; select bank0
 28817  1C44  00B6               	movwf	escreve_LCD@str
 28818  1C45  082C               	movf	?___wmul+1,w
 28819  1C46  0141               	movlb	1	; select bank1
 28820  1C47  3D2B               	addwfc	(??_trata_dados+3)^(0+128),w
 28821  1C48  0140               	movlb	0	; select bank0
 28822  1C49  00B7               	movwf	escreve_LCD@str+1
 28823  1C4A  3002               	movlw	2
 28824  1C4B  31E7  27C1  3199   	fcall	_escreve_LCD
 28825  1C4E                     l1370:	
 28826                           ;func.c: 773: do{
 28827                           
 28828  1C4E  0064               	clrwdt	;# 
 28829                           
 28830                           ;func.c: 775: char bt = teclado();
 28831  1C4F  31C2  22CC  3199   	fcall	_teclado
 28832  1C52  0141               	movlb	1	; select bank1
 28833  1C53  00A8               	movwf	??_trata_dados^(0+128)
 28834  1C54  0828               	movf	??_trata_dados^(0+128),w
 28835  1C55  00B3               	movwf	trata_dados@bt_2483^(0+128)
 28836                           
 28837                           ;func.c: 776: if(bt == 18){
 28838  1C56  3012               	movlw	18
 28839  1C57  0633               	xorwf	trata_dados@bt_2483^(0+128),w
 28840  1C58  1D03               	btfss	3,2
 28841  1C59  2C70               	goto	l16556
 28842                           
 28843                           ;func.c: 777: flag.zero_cont = 0;
 28844  1C5A  0143               	movlb	3	; select bank3
 28845  1C5B  12AD               	bcf	(_flag^(0+384)+1),5	;volatile
 28846                           
 28847                           ;func.c: 778: cont_pecas = carrega_EEPROM32(214);
 28848  1C5C  30D6               	movlw	214
 28849  1C5D  31CE  2654  3199   	fcall	_carrega_EEPROM32
 28850  1C60  0140               	movlb	0	; select bank0
 28851  1C61  082F               	movf	?_carrega_EEPROM32+3,w
 28852  1C62  0143               	movlb	3	; select bank3
 28853  1C63  00A7               	movwf	(_cont_pecas+3)^(0+384)
 28854  1C64  0140               	movlb	0	; select bank0
 28855  1C65  082E               	movf	?_carrega_EEPROM32+2,w
 28856  1C66  0143               	movlb	3	; select bank3
 28857  1C67  00A6               	movwf	(_cont_pecas+2)^(0+384)
 28858  1C68  0140               	movlb	0	; select bank0
 28859  1C69  082D               	movf	?_carrega_EEPROM32+1,w
 28860  1C6A  0143               	movlb	3	; select bank3
 28861  1C6B  00A5               	movwf	(_cont_pecas+1)^(0+384)
 28862  1C6C  0140               	movlb	0	; select bank0
 28863  1C6D  082C               	movf	?_carrega_EEPROM32,w
 28864  1C6E  0143               	movlb	3	; select bank3
 28865  1C6F  00A4               	movwf	_cont_pecas^(0+384)
 28866  1C70                     l16556:	
 28867                           
 28868                           ;func.c: 779: }
 28869                           ;func.c: 780: }while(flag.zero_cont);
 28870  1C70  0143               	movlb	3	; select bank3
 28871  1C71  1AAD               	btfsc	(_flag^(0+384)+1),5	;volatile
 28872  1C72  2C4E               	goto	l1370
 28873  1C73                     l16558:	
 28874                           
 28875                           ;func.c: 781: }
 28876                           ;func.c: 782: erro = 0;
 28877  1C73  0140               	movlb	0	; select bank0
 28878  1C74  01E3               	clrf	_erro
 28879                           
 28880                           ;func.c: 783: led.value = 0;
 28881  1C75  0143               	movlb	3	; select bank3
 28882  1C76  01E5               	clrf	_led^(0+384)	;volatile
 28883                           
 28884                           ;func.c: 784: flag.inicia = 0;
 28885  1C77  122C               	bcf	_flag^(0+384),4	;volatile
 28886                           
 28887                           ;func.c: 785: flag.abortar = 0;
 28888  1C78  132C               	bcf	_flag^(0+384),6	;volatile
 28889                           
 28890                           ;func.c: 786: flag.US = 0;
 28891  1C79  12AC               	bcf	_flag^(0+384),5	;volatile
 28892                           
 28893                           ;func.c: 787: set_freq(freq_atual);
 28894  1C7A  0835               	movf	(_freq_atual+1)^(0+384),w
 28895  1C7B  0140               	movlb	0	; select bank0
 28896  1C7C  00C7               	movwf	set_freq@f+1
 28897  1C7D  0143               	movlb	3	; select bank3
 28898  1C7E  0834               	movf	_freq_atual^(0+384),w
 28899  1C7F  0140               	movlb	0	; select bank0
 28900  1C80  00C6               	movwf	set_freq@f
 28901  1C81  31C5  2585  3199   	fcall	_set_freq
 28902                           
 28903                           ;func.c: 788: if(!ciclador){
 28904  1C84  0143               	movlb	3	; select bank3
 28905  1C85  0861               	movf	_ciclador^(0+384),w
 28906  1C86  1D03               	btfss	3,2
 28907  1C87  2C8E               	goto	l16574
 28908                           
 28909                           ;func.c: 789: Inicia_LCD();
 28910  1C88  31E7  2760  3199   	fcall	_Inicia_LCD
 28911                           
 28912                           ;func.c: 790: tela_ultima_solda();
 28913  1C8B  31AC  24B3  3199   	fcall	_tela_ultima_solda
 28914  1C8E                     l16574:	
 28915                           
 28916                           ;func.c: 791: }
 28917                           ;func.c: 792: LATBbits.LATB7 = 1;
 28918  1C8E  0140               	movlb	0	; select bank0
 28919  1C8F  1797               	bsf	23,7	;volatile
 28920                           
 28921                           ;func.c: 793: delay(10);
 28922  1C90  300A               	movlw	10
 28923  1C91  00B3               	movwf	delay@ms
 28924  1C92  3000               	movlw	0
 28925  1C93  00B4               	movwf	delay@ms+1
 28926  1C94  31D1  2136         	fcall	_delay
 28927                           
 28928                           ;func.c: 794: LATBbits.LATB7 = 0;
 28929  1C96  0140               	movlb	0	; select bank0
 28930  1C97  1397               	bcf	23,7	;volatile
 28931  1C98  0008               	return
 28932  1C99                     __end_of_trata_dados:	
 28933                           
 28934                           	psect	text69
 28935  46BE                     __ptext69:	
 28936 ;; *************** function _trava_erro *****************
 28937 ;; Defined at:
 28938 ;;		line 807 in file "func.c"
 28939 ;; Parameters:    Size  Location     Type
 28940 ;;  s               2   55[BANK0 ] PTR const unsigned char 
 28941 ;;		 -> STR_42(13), STR_41(13), STR_39(13), STR_37(13), 
 28942 ;;		 -> STR_36(13), STR_33(16), STR_32(15), STR_30(14), 
 28943 ;;		 -> STR_23(2), STR_4(2), STR_3(2), energia_low_str(34), 
 28944 ;;		 -> tempo_ovf_str(34), erro_senha_str(34), erro_inv_str(34), 
 28945 ;; Auto vars:     Size  Location     Type
 28946 ;;  t               2    4[BANK1 ] unsigned int 
 28947 ;;  bt              1    6[BANK1 ] unsigned char 
 28948 ;; Return value:  Size  Location     Type
 28949 ;;                  1    wreg      void 
 28950 ;; Registers used:
 28951 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 28952 ;; Tracked objects:
 28953 ;;		On entry : 0/0
 28954 ;;		On exit  : 0/0
 28955 ;;		Unchanged: 0/0
 28956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 28957 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 28958 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 28959 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 28960 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 28961 ;;Total ram usage:        9 bytes
 28962 ;; Hardware stack levels used:    1
 28963 ;; Hardware stack levels required when called:    8
 28964 ;; This function calls:
 28965 ;;		___wmul
 28966 ;;		_entrada
 28967 ;;		_escreve_LCD
 28968 ;;		_teclado
 28969 ;;		_tela_inicial
 28970 ;; This function is called by:
 28971 ;;		_main
 28972 ;;		_trata_dados
 28973 ;;		_teste_US
 28974 ;;		_ciclar
 28975 ;;		_ciclarPneumatico
 28976 ;; This function uses a non-reentrant model
 28977 ;;
 28978                           
 28979                           
 28980                           ;psect for function _trava_erro
 28981  46BE                     _trava_erro:	
 28982                           
 28983                           ;func.c: 808: char bt;
 28984                           ;func.c: 809: if(s[0] != '\0')
 28985                           
 28986                           ;incstack = 0
 28987                           ; Regs used in _trava_erro: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 28988  46BE  0140               	movlb	0	; select bank0
 28989  46BF  0857               	movf	trava_erro@s,w
 28990  46C0  0084               	movwf	4
 28991  46C1  0858               	movf	trava_erro@s+1,w
 28992  46C2  0085               	movwf	5
 28993  46C3  0012               	moviw fsr0++
 28994  46C4  1903               	btfsc	3,2
 28995  46C5  2ED0               	goto	l1382
 28996                           
 28997                           ;func.c: 810: escreve_LCD(1,1,s);
 28998  46C6  01B5               	clrf	escreve_LCD@coluna
 28999  46C7  0AB5               	incf	escreve_LCD@coluna,f
 29000  46C8  0858               	movf	trava_erro@s+1,w
 29001  46C9  00B7               	movwf	escreve_LCD@str+1
 29002  46CA  0857               	movf	trava_erro@s,w
 29003  46CB  00B6               	movwf	escreve_LCD@str
 29004  46CC  3001               	movlw	1
 29005  46CD  31E7  27C1  31C6   	fcall	_escreve_LCD
 29006  46D0                     l1382:	
 29007                           
 29008                           ;func.c: 811: escreve_LCD(2,1,Sai_enter_str[idioma]);
 29009  46D0  0140               	movlb	0	; select bank0
 29010  46D1  01B5               	clrf	escreve_LCD@coluna
 29011  46D2  0AB5               	incf	escreve_LCD@coluna,f
 29012  46D3  0143               	movlb	3	; select bank3
 29013  46D4  085A               	movf	_idioma^(0+384),w
 29014  46D5  0141               	movlb	1	; select bank1
 29015  46D6  00A0               	movwf	??_trava_erro^(0+128)
 29016  46D7  01A1               	clrf	(??_trava_erro^(0+128)+1)
 29017  46D8  0820               	movf	??_trava_erro^(0+128),w
 29018  46D9  0140               	movlb	0	; select bank0
 29019  46DA  00AB               	movwf	___wmul@multiplier
 29020  46DB  0141               	movlb	1	; select bank1
 29021  46DC  0821               	movf	(??_trava_erro+1)^(0+128),w
 29022  46DD  0140               	movlb	0	; select bank0
 29023  46DE  00AC               	movwf	___wmul@multiplier+1
 29024  46DF  3011               	movlw	17
 29025  46E0  00AD               	movwf	___wmul@multiplicand
 29026  46E1  3000               	movlw	0
 29027  46E2  00AE               	movwf	___wmul@multiplicand+1
 29028  46E3  31D0  20FE  31C6   	fcall	___wmul
 29029  46E6  309E               	movlw	low (_Sai_enter_str| (0+32768))
 29030  46E7  0141               	movlb	1	; select bank1
 29031  46E8  00A2               	movwf	(??_trava_erro+2)^(0+128)
 29032  46E9  30DC               	movlw	high (_Sai_enter_str| (0+32768))
 29033  46EA  00A3               	movwf	((??_trava_erro+2)^(0+128)+1)
 29034  46EB  0140               	movlb	0	; select bank0
 29035  46EC  082B               	movf	?___wmul,w
 29036  46ED  0141               	movlb	1	; select bank1
 29037  46EE  0722               	addwf	(??_trava_erro+2)^(0+128),w
 29038  46EF  0140               	movlb	0	; select bank0
 29039  46F0  00B6               	movwf	escreve_LCD@str
 29040  46F1  082C               	movf	?___wmul+1,w
 29041  46F2  0141               	movlb	1	; select bank1
 29042  46F3  3D23               	addwfc	(??_trava_erro+3)^(0+128),w
 29043  46F4  0140               	movlb	0	; select bank0
 29044  46F5  00B7               	movwf	escreve_LCD@str+1
 29045  46F6  3002               	movlw	2
 29046  46F7  31E7  27C1  31C6   	fcall	_escreve_LCD
 29047                           
 29048                           ;func.c: 812: unsigned int t = t10ms;
 29049  46FA  0140               	movlb	0	; select bank0
 29050  46FB  085F               	movf	_t10ms+1,w
 29051  46FC  0141               	movlb	1	; select bank1
 29052  46FD  00A5               	movwf	(trava_erro@t+1)^(0+128)
 29053  46FE  0140               	movlb	0	; select bank0
 29054  46FF  085E               	movf	_t10ms,w
 29055  4700  0141               	movlb	1	; select bank1
 29056  4701  00A4               	movwf	trava_erro@t^(0+128)
 29057  4702                     l1383:	
 29058                           ;func.c: 813: do{
 29059                           
 29060  4702  0064               	clrwdt	;# 
 29061                           
 29062                           ;func.c: 815: bt = teclado();
 29063  4703  31C2  22CC  31C6   	fcall	_teclado
 29064  4706  0141               	movlb	1	; select bank1
 29065  4707  00A0               	movwf	??_trava_erro^(0+128)
 29066  4708  0820               	movf	??_trava_erro^(0+128),w
 29067  4709  00A6               	movwf	trava_erro@bt^(0+128)
 29068                           
 29069                           ;func.c: 816: if(t10ms - t > 100){
 29070  470A  0924               	comf	trava_erro@t^(0+128),w
 29071  470B  00A0               	movwf	??_trava_erro^(0+128)
 29072  470C  0925               	comf	(trava_erro@t+1)^(0+128),w
 29073  470D  00A1               	movwf	(??_trava_erro^(0+128)+1)
 29074  470E  0AA0               	incf	??_trava_erro^(0+128),f
 29075  470F  1903               	skipnz
 29076  4710  0AA1               	incf	(??_trava_erro^(0+128)+1),f
 29077  4711  0140               	movlb	0	; select bank0
 29078  4712  085E               	movf	_t10ms,w
 29079  4713  0141               	movlb	1	; select bank1
 29080  4714  0720               	addwf	??_trava_erro^(0+128),w
 29081  4715  00A2               	movwf	(??_trava_erro+2)^(0+128)
 29082  4716  0140               	movlb	0	; select bank0
 29083  4717  085F               	movf	_t10ms+1,w
 29084  4718  0141               	movlb	1	; select bank1
 29085  4719  3D21               	addwfc	(??_trava_erro+1)^(0+128),w
 29086  471A  00A3               	movwf	(??_trava_erro+3)^(0+128)
 29087  471B  3000               	movlw	0
 29088  471C  0223               	subwf	(??_trava_erro+3)^(0+128),w
 29089  471D  3065               	movlw	101
 29090  471E  1903               	skipnz
 29091  471F  0222               	subwf	(??_trava_erro+2)^(0+128),w
 29092  4720  1C03               	skipc
 29093  4721  2F34               	goto	l15606
 29094                           
 29095                           ;func.c: 817: LATBbits.LATB7 = ~LATBbits.LATB7;
 29096  4722  1003               	clrc
 29097  4723  0140               	movlb	0	; select bank0
 29098  4724  1F97               	btfss	23,7	;volatile
 29099  4725  1403               	setc
 29100  4726  1C03               	btfss	3,0
 29101  4727  2F2B               	goto	u17370
 29102  4728  0140               	movlb	0	; select bank0
 29103  4729  1797               	bsf	23,7	;volatile
 29104  472A  2F2D               	goto	l15604
 29105  472B                     u17370:	
 29106  472B  0140               	movlb	0	; select bank0
 29107  472C  1397               	bcf	23,7	;volatile
 29108  472D                     l15604:	
 29109                           
 29110                           ;func.c: 818: t = t10ms;
 29111  472D  085F               	movf	_t10ms+1,w
 29112  472E  0141               	movlb	1	; select bank1
 29113  472F  00A5               	movwf	(trava_erro@t+1)^(0+128)
 29114  4730  0140               	movlb	0	; select bank0
 29115  4731  085E               	movf	_t10ms,w
 29116  4732  0141               	movlb	1	; select bank1
 29117  4733  00A4               	movwf	trava_erro@t^(0+128)
 29118  4734                     l15606:	
 29119                           
 29120                           ;func.c: 819: }
 29121                           ;func.c: 820: }while(bt != 18 && !entrada(RESET));
 29122  4734  3012               	movlw	18
 29123  4735  0626               	xorwf	trava_erro@bt^(0+128),w
 29124  4736  1903               	btfsc	3,2
 29125  4737  2F41               	goto	l1387
 29126  4738  3004               	movlw	4
 29127  4739  31E7  27AD  31C6   	fcall	_entrada
 29128  473C  0140               	movlb	0	; select bank0
 29129  473D  082B               	movf	?_entrada,w
 29130  473E  042C               	iorwf	?_entrada+1,w
 29131  473F  1903               	btfsc	3,2
 29132  4740  2F02               	goto	l1383
 29133  4741                     l1387:	
 29134                           
 29135                           ;func.c: 821: LATBbits.LATB7 = 0;
 29136  4741  0140               	movlb	0	; select bank0
 29137  4742  1397               	bcf	23,7	;volatile
 29138                           
 29139                           ;func.c: 822: if(!flag.teste)
 29140  4743  0143               	movlb	3	; select bank3
 29141  4744  1B2D               	btfsc	(_flag^(0+384)+1),6	;volatile
 29142  4745  2F49               	goto	l1389
 29143                           
 29144                           ;func.c: 823: tela_inicial();
 29145  4746  31CF  2789  31C6   	fcall	_tela_inicial
 29146  4749                     l1389:	
 29147                           ;func.c: 824: do{
 29148                           
 29149  4749  0064               	clrwdt	;# 
 29150                           
 29151                           ;func.c: 826: bt = teclado();
 29152  474A  31C2  22CC  31C6   	fcall	_teclado
 29153  474D  0141               	movlb	1	; select bank1
 29154  474E  00A0               	movwf	??_trava_erro^(0+128)
 29155  474F  0820               	movf	??_trava_erro^(0+128),w
 29156  4750  00A6               	movwf	trava_erro@bt^(0+128)
 29157                           
 29158                           ;func.c: 827: }while(bt == 18 || entrada(RESET));
 29159  4751  3012               	movlw	18
 29160  4752  0626               	xorwf	trava_erro@bt^(0+128),w
 29161  4753  1903               	btfsc	3,2
 29162  4754  2F49               	goto	l1389
 29163  4755  3004               	movlw	4
 29164  4756  31E7  27AD  31C6   	fcall	_entrada
 29165  4759  0140               	movlb	0	; select bank0
 29166  475A  082B               	movf	?_entrada,w
 29167  475B  042C               	iorwf	?_entrada+1,w
 29168  475C  1903               	btfsc	3,2
 29169  475D  0008               	return
 29170  475E  2F49               	goto	l1389
 29171  475F                     __end_of_trava_erro:	
 29172                           
 29173                           	psect	text70
 29174  4F89                     __ptext70:	
 29175 ;; *************** function _tela_inicial *****************
 29176 ;; Defined at:
 29177 ;;		line 1310 in file "func.c"
 29178 ;; Parameters:    Size  Location     Type
 29179 ;;		None
 29180 ;; Auto vars:     Size  Location     Type
 29181 ;;		None
 29182 ;; Return value:  Size  Location     Type
 29183 ;;                  1    wreg      void 
 29184 ;; Registers used:
 29185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29186 ;; Tracked objects:
 29187 ;;		On entry : 0/0
 29188 ;;		On exit  : 0/0
 29189 ;;		Unchanged: 0/0
 29190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 29191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29193 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29194 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29195 ;;Total ram usage:        4 bytes
 29196 ;; Hardware stack levels used:    1
 29197 ;; Hardware stack levels required when called:    7
 29198 ;; This function calls:
 29199 ;;		_Lcd_Clear
 29200 ;;		_Lcd_Write_Char
 29201 ;;		_Lcd_Write_String
 29202 ;;		___wmul
 29203 ;;		_escreve_LCD
 29204 ;;		_ltoa
 29205 ;; This function is called by:
 29206 ;;		_main
 29207 ;;		_trava_erro
 29208 ;;		_emergencia
 29209 ;; This function uses a non-reentrant model
 29210 ;;
 29211                           
 29212                           
 29213                           ;psect for function _tela_inicial
 29214  4F89                     _tela_inicial:	
 29215                           
 29216                           ;incstack = 0
 29217                           ; Regs used in _tela_inicial: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 29218  4F89  0064               	clrwdt	;# 
 29219                           
 29220                           ;func.c: 1313: Lcd_Clear();
 29221  4F8A  31E1  21DF  31CF   	fcall	_Lcd_Clear
 29222                           
 29223                           ;func.c: 1315: escreve_LCD(1,1,Sonitron_str);
 29224  4F8D  0140               	movlb	0	; select bank0
 29225  4F8E  01B5               	clrf	escreve_LCD@coluna
 29226  4F8F  0AB5               	incf	escreve_LCD@coluna,f
 29227  4F90  3050               	movlw	low (_Sonitron_str| (0+32768))
 29228  4F91  00B6               	movwf	escreve_LCD@str
 29229  4F92  30E8               	movlw	high (_Sonitron_str| (0+32768))
 29230  4F93  00B7               	movwf	escreve_LCD@str+1
 29231  4F94  3001               	movlw	1
 29232  4F95  31E7  27C1  31CF   	fcall	_escreve_LCD
 29233                           
 29234                           ;func.c: 1316: Lcd_Write_Char('0'+ modo);
 29235  4F98  0143               	movlb	3	; select bank3
 29236  4F99  085C               	movf	_modo^(0+384),w
 29237  4F9A  3E30               	addlw	48
 29238  4F9B  31D4  2482  31CF   	fcall	_Lcd_Write_Char
 29239                           
 29240                           ;func.c: 1318: escreve_LCD(2,1,n_pecas_str[idioma]);
 29241  4F9E  0140               	movlb	0	; select bank0
 29242  4F9F  01B5               	clrf	escreve_LCD@coluna
 29243  4FA0  0AB5               	incf	escreve_LCD@coluna,f
 29244  4FA1  0143               	movlb	3	; select bank3
 29245  4FA2  085A               	movf	_idioma^(0+384),w
 29246  4FA3  0140               	movlb	0	; select bank0
 29247  4FA4  00D3               	movwf	??_tela_inicial
 29248  4FA5  01D4               	clrf	??_tela_inicial+1
 29249  4FA6  0853               	movf	??_tela_inicial,w
 29250  4FA7  00AB               	movwf	___wmul@multiplier
 29251  4FA8  0854               	movf	??_tela_inicial+1,w
 29252  4FA9  00AC               	movwf	___wmul@multiplier+1
 29253  4FAA  3011               	movlw	17
 29254  4FAB  00AD               	movwf	___wmul@multiplicand
 29255  4FAC  3000               	movlw	0
 29256  4FAD  00AE               	movwf	___wmul@multiplicand+1
 29257  4FAE  31D0  20FE  31CF   	fcall	___wmul
 29258  4FB1  3078               	movlw	low (_n_pecas_str| (0+32768))
 29259  4FB2  0140               	movlb	0	; select bank0
 29260  4FB3  00D5               	movwf	??_tela_inicial+2
 29261  4FB4  30E0               	movlw	high (_n_pecas_str| (0+32768))
 29262  4FB5  00D6               	movwf	??_tela_inicial+3
 29263  4FB6  082B               	movf	?___wmul,w
 29264  4FB7  0755               	addwf	??_tela_inicial+2,w
 29265  4FB8  00B6               	movwf	escreve_LCD@str
 29266  4FB9  082C               	movf	?___wmul+1,w
 29267  4FBA  3D56               	addwfc	??_tela_inicial+3,w
 29268  4FBB  00B7               	movwf	escreve_LCD@str+1
 29269  4FBC  3002               	movlw	2
 29270  4FBD  31E7  27C1  31CF   	fcall	_escreve_LCD
 29271                           
 29272                           ;func.c: 1319: if(flag.regressivo)
 29273  4FC0  0143               	movlb	3	; select bank3
 29274  4FC1  1D2C               	btfss	_flag^(0+384),2	;volatile
 29275  4FC2  2FD1               	goto	l14926
 29276                           
 29277                           ;func.c: 1320: num = cont_pecas;
 29278  4FC3  0827               	movf	(_cont_pecas+3)^(0+384),w
 29279  4FC4  0144               	movlb	4	; select bank4
 29280  4FC5  00A3               	movwf	(_num+3)^(0+512)
 29281  4FC6  0143               	movlb	3	; select bank3
 29282  4FC7  0826               	movf	(_cont_pecas+2)^(0+384),w
 29283  4FC8  0144               	movlb	4	; select bank4
 29284  4FC9  00A2               	movwf	(_num+2)^(0+512)
 29285  4FCA  0143               	movlb	3	; select bank3
 29286  4FCB  0825               	movf	(_cont_pecas+1)^(0+384),w
 29287  4FCC  0144               	movlb	4	; select bank4
 29288  4FCD  00A1               	movwf	(_num+1)^(0+512)
 29289  4FCE  0143               	movlb	3	; select bank3
 29290  4FCF  0824               	movf	_cont_pecas^(0+384),w
 29291  4FD0  2FDF               	goto	L59
 29292  4FD1                     l14926:	
 29293                           
 29294                           ;func.c: 1321: else
 29295                           ;func.c: 1322: num = n_pecas;
 29296  4FD1  0143               	movlb	3	; select bank3
 29297  4FD2  0823               	movf	(_n_pecas+3)^(0+384),w
 29298  4FD3  0144               	movlb	4	; select bank4
 29299  4FD4  00A3               	movwf	(_num+3)^(0+512)
 29300  4FD5  0143               	movlb	3	; select bank3
 29301  4FD6  0822               	movf	(_n_pecas+2)^(0+384),w
 29302  4FD7  0144               	movlb	4	; select bank4
 29303  4FD8  00A2               	movwf	(_num+2)^(0+512)
 29304  4FD9  0143               	movlb	3	; select bank3
 29305  4FDA  0821               	movf	(_n_pecas+1)^(0+384),w
 29306  4FDB  0144               	movlb	4	; select bank4
 29307  4FDC  00A1               	movwf	(_num+1)^(0+512)
 29308  4FDD  0143               	movlb	3	; select bank3
 29309  4FDE  0820               	movf	_n_pecas^(0+384),w
 29310  4FDF                     L59:	
 29311  4FDF  0144               	movlb	4	; select bank4
 29312  4FE0  00A0               	movwf	_num^(0+512)
 29313                           
 29314                           ;func.c: 1323: ltoa(str,num,10);
 29315  4FE1  0823               	movf	(_num+3)^(0+512),w
 29316  4FE2  0140               	movlb	0	; select bank0
 29317  4FE3  00CD               	movwf	ltoa@val+3
 29318  4FE4  0144               	movlb	4	; select bank4
 29319  4FE5  0822               	movf	(_num+2)^(0+512),w
 29320  4FE6  0140               	movlb	0	; select bank0
 29321  4FE7  00CC               	movwf	ltoa@val+2
 29322  4FE8  0144               	movlb	4	; select bank4
 29323  4FE9  0821               	movf	(_num+1)^(0+512),w
 29324  4FEA  0140               	movlb	0	; select bank0
 29325  4FEB  00CB               	movwf	ltoa@val+1
 29326  4FEC  0144               	movlb	4	; select bank4
 29327  4FED  0820               	movf	_num^(0+512),w
 29328  4FEE  0140               	movlb	0	; select bank0
 29329  4FEF  00CA               	movwf	ltoa@val
 29330  4FF0  300A               	movlw	10
 29331  4FF1  00CE               	movwf	ltoa@base
 29332  4FF2  3000               	movlw	0
 29333  4FF3  00CF               	movwf	ltoa@base+1
 29334  4FF4  305C               	movlw	(low (_str| (0+512)))& (0+255)
 29335  4FF5  31D4  24DE  31CF   	fcall	_ltoa
 29336                           
 29337                           ;func.c: 1324: Lcd_Write_String(str);
 29338  4FF8  305C               	movlw	low _str
 29339  4FF9  0140               	movlb	0	; select bank0
 29340  4FFA  00B0               	movwf	Lcd_Write_String@a
 29341  4FFB  3002               	movlw	high _str
 29342  4FFC  00B1               	movwf	Lcd_Write_String@a+1
 29343  4FFD  31D1  2171         	fcall	_Lcd_Write_String
 29344  4FFF  0008               	return
 29345  5000                     __end_of_tela_inicial:	
 29346                           
 29347                           	psect	text71
 29348  67AD                     __ptext71:	
 29349 ;; *************** function _entrada *****************
 29350 ;; Defined at:
 29351 ;;		line 920 in file "func.c"
 29352 ;; Parameters:    Size  Location     Type
 29353 ;;  x               1    wreg     enum E15171
 29354 ;; Auto vars:     Size  Location     Type
 29355 ;;  x               1   15[BANK0 ] enum E15171
 29356 ;;  p               1   16[BANK0 ] unsigned char 
 29357 ;; Return value:  Size  Location     Type
 29358 ;;                  2   11[BANK0 ] unsigned int 
 29359 ;; Registers used:
 29360 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 29361 ;; Tracked objects:
 29362 ;;		On entry : 0/0
 29363 ;;		On exit  : 0/0
 29364 ;;		Unchanged: 0/0
 29365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 29366 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29368 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29369 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29370 ;;Total ram usage:        6 bytes
 29371 ;; Hardware stack levels used:    1
 29372 ;; Hardware stack levels required when called:    3
 29373 ;; This function calls:
 29374 ;;		Nothing
 29375 ;; This function is called by:
 29376 ;;		_trava_erro
 29377 ;; This function uses a non-reentrant model
 29378 ;;
 29379                           
 29380                           
 29381                           ;psect for function _entrada
 29382  67AD                     _entrada:	
 29383                           
 29384                           ;incstack = 0
 29385                           ; Regs used in _entrada: [wreg+fsr1l+fsr1h+status,2+status,0]
 29386                           ;entrada@x stored from wreg
 29387  67AD  0140               	movlb	0	; select bank0
 29388  67AE  00AF               	movwf	entrada@x
 29389                           
 29390                           ;func.c: 921: char p = PORTA;
 29391  67AF  080C               	movf	12,w	;volatile
 29392  67B0  00AD               	movwf	??_entrada
 29393  67B1  082D               	movf	??_entrada,w
 29394  67B2  00B0               	movwf	entrada@p
 29395                           
 29396                           ;func.c: 922: return (p & byte_in[x]);
 29397  67B3  082F               	movf	entrada@x,w
 29398  67B4  3EA8               	addlw	(low (_byte_in| (0+512)))& (0+255)
 29399  67B5  0086               	movwf	6
 29400  67B6  3002               	movlw	2	; select bank5/6
 29401  67B7  0087               	movwf	7
 29402  67B8  0801               	movf	1,w
 29403  67B9  0530               	andwf	entrada@p,w
 29404  67BA  00AD               	movwf	??_entrada
 29405  67BB  01AE               	clrf	??_entrada+1
 29406  67BC  082D               	movf	??_entrada,w
 29407  67BD  00AB               	movwf	?_entrada
 29408  67BE  082E               	movf	??_entrada+1,w
 29409  67BF  00AC               	movwf	?_entrada+1
 29410  67C0  0008               	return
 29411  67C1                     __end_of_entrada:	
 29412                           
 29413                           	psect	text72
 29414  2CB3                     __ptext72:	
 29415 ;; *************** function _tela_ultima_solda *****************
 29416 ;; Defined at:
 29417 ;;		line 1278 in file "func.c"
 29418 ;; Parameters:    Size  Location     Type
 29419 ;;		None
 29420 ;; Auto vars:     Size  Location     Type
 29421 ;;		None
 29422 ;; Return value:  Size  Location     Type
 29423 ;;                  1    wreg      void 
 29424 ;; Registers used:
 29425 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29426 ;; Tracked objects:
 29427 ;;		On entry : 0/0
 29428 ;;		On exit  : 0/0
 29429 ;;		Unchanged: 0/0
 29430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 29431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29432 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29433 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29434 ;;      Totals:         0       4       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29435 ;;Total ram usage:       12 bytes
 29436 ;; Hardware stack levels used:    1
 29437 ;; Hardware stack levels required when called:    7
 29438 ;; This function calls:
 29439 ;;		_Lcd_Clear
 29440 ;;		_Lcd_Write_String
 29441 ;;		___lldiv
 29442 ;;		___llmod
 29443 ;;		___wmul
 29444 ;;		_escreve_LCD
 29445 ;;		_ltoa
 29446 ;; This function is called by:
 29447 ;;		_main
 29448 ;;		_trata_dados
 29449 ;; This function uses a non-reentrant model
 29450 ;;
 29451                           
 29452                           
 29453                           ;psect for function _tela_ultima_solda
 29454  2CB3                     _tela_ultima_solda:	
 29455                           
 29456                           ;func.c: 1279: Lcd_Clear();
 29457                           
 29458                           ;incstack = 0
 29459                           ; Regs used in _tela_ultima_solda: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 29460  2CB3  31E1  21DF  31AC   	fcall	_Lcd_Clear
 29461                           
 29462                           ;func.c: 1281: if(modo == CONTINUO || modo == CONTINUO_PULSO){
 29463  2CB6  3002               	movlw	2
 29464  2CB7  0143               	movlb	3	; select bank3
 29465  2CB8  065C               	xorwf	_modo^(0+384),w
 29466  2CB9  1903               	btfsc	3,2
 29467  2CBA  2CBF               	goto	l15730
 29468  2CBB  3003               	movlw	3
 29469  2CBC  065C               	xorwf	_modo^(0+384),w
 29470  2CBD  1D03               	btfss	3,2
 29471  2CBE  2DCB               	goto	l15754
 29472  2CBF                     l15730:	
 29473                           
 29474                           ;func.c: 1283: escreve_LCD(1,1,energia_str[idioma]);
 29475  2CBF  0140               	movlb	0	; select bank0
 29476  2CC0  01B5               	clrf	escreve_LCD@coluna
 29477  2CC1  0AB5               	incf	escreve_LCD@coluna,f
 29478  2CC2  0143               	movlb	3	; select bank3
 29479  2CC3  085A               	movf	_idioma^(0+384),w
 29480  2CC4  0140               	movlb	0	; select bank0
 29481  2CC5  00D3               	movwf	??_tela_ultima_solda
 29482  2CC6  01D4               	clrf	??_tela_ultima_solda+1
 29483  2CC7  0853               	movf	??_tela_ultima_solda,w
 29484  2CC8  00AB               	movwf	___wmul@multiplier
 29485  2CC9  0854               	movf	??_tela_ultima_solda+1,w
 29486  2CCA  00AC               	movwf	___wmul@multiplier+1
 29487  2CCB  3011               	movlw	17
 29488  2CCC  00AD               	movwf	___wmul@multiplicand
 29489  2CCD  3000               	movlw	0
 29490  2CCE  00AE               	movwf	___wmul@multiplicand+1
 29491  2CCF  31D0  20FE  31AC   	fcall	___wmul
 29492  2CD2  30C2               	movlw	low (_energia_str| (0+32768))
 29493  2CD3  0140               	movlb	0	; select bank0
 29494  2CD4  00D5               	movwf	??_tela_ultima_solda+2
 29495  2CD5  30DA               	movlw	high (_energia_str| (0+32768))
 29496  2CD6  00D6               	movwf	??_tela_ultima_solda+3
 29497  2CD7  082B               	movf	?___wmul,w
 29498  2CD8  0755               	addwf	??_tela_ultima_solda+2,w
 29499  2CD9  00B6               	movwf	escreve_LCD@str
 29500  2CDA  082C               	movf	?___wmul+1,w
 29501  2CDB  3D56               	addwfc	??_tela_ultima_solda+3,w
 29502  2CDC  00B7               	movwf	escreve_LCD@str+1
 29503  2CDD  3001               	movlw	1
 29504  2CDE  31E7  27C1  31AC   	fcall	_escreve_LCD
 29505                           
 29506                           ;func.c: 1284: ltoa(str,(energia_total_kJ),10);
 29507  2CE1  0144               	movlb	4	; select bank4
 29508  2CE2  084C               	movf	_energia_total_kJ^(0+512),w
 29509  2CE3  0140               	movlb	0	; select bank0
 29510  2CE4  00CA               	movwf	ltoa@val
 29511  2CE5  0144               	movlb	4	; select bank4
 29512  2CE6  084D               	movf	(_energia_total_kJ+1)^(0+512),w
 29513  2CE7  0140               	movlb	0	; select bank0
 29514  2CE8  00CB               	movwf	ltoa@val+1
 29515  2CE9  01CC               	clrf	ltoa@val+2
 29516  2CEA  01CD               	clrf	ltoa@val+3
 29517  2CEB  300A               	movlw	10
 29518  2CEC  00CE               	movwf	ltoa@base
 29519  2CED  3000               	movlw	0
 29520  2CEE  00CF               	movwf	ltoa@base+1
 29521  2CEF  305C               	movlw	(low (_str| (0+512)))& (0+255)
 29522  2CF0  31D4  24DE  31AC   	fcall	_ltoa
 29523                           
 29524                           ;func.c: 1285: Lcd_Write_String(str);
 29525  2CF3  305C               	movlw	low _str
 29526  2CF4  0140               	movlb	0	; select bank0
 29527  2CF5  00B0               	movwf	Lcd_Write_String@a
 29528  2CF6  3002               	movlw	high _str
 29529  2CF7  00B1               	movwf	Lcd_Write_String@a+1
 29530  2CF8  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29531                           
 29532                           ;func.c: 1286: Lcd_Write_String(" kJ");
 29533  2CFB  3003               	movlw	low (STR_5| (0+32768))
 29534  2CFC  0140               	movlb	0	; select bank0
 29535  2CFD  00B0               	movwf	Lcd_Write_String@a
 29536  2CFE  30E9               	movlw	high (STR_5| (0+32768))
 29537  2CFF  00B1               	movwf	Lcd_Write_String@a+1
 29538  2D00  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29539                           
 29540                           ;func.c: 1288: escreve_LCD(2,1,tempo_str[idioma]);
 29541  2D03  0140               	movlb	0	; select bank0
 29542  2D04  01B5               	clrf	escreve_LCD@coluna
 29543  2D05  0AB5               	incf	escreve_LCD@coluna,f
 29544  2D06  0143               	movlb	3	; select bank3
 29545  2D07  085A               	movf	_idioma^(0+384),w
 29546  2D08  0140               	movlb	0	; select bank0
 29547  2D09  00D3               	movwf	??_tela_ultima_solda
 29548  2D0A  01D4               	clrf	??_tela_ultima_solda+1
 29549  2D0B  0853               	movf	??_tela_ultima_solda,w
 29550  2D0C  00AB               	movwf	___wmul@multiplier
 29551  2D0D  0854               	movf	??_tela_ultima_solda+1,w
 29552  2D0E  00AC               	movwf	___wmul@multiplier+1
 29553  2D0F  3011               	movlw	17
 29554  2D10  00AD               	movwf	___wmul@multiplicand
 29555  2D11  3000               	movlw	0
 29556  2D12  00AE               	movwf	___wmul@multiplicand+1
 29557  2D13  31D0  20FE  31AC   	fcall	___wmul
 29558  2D16  30A0               	movlw	low (_tempo_str| (0+32768))
 29559  2D17  0140               	movlb	0	; select bank0
 29560  2D18  00D5               	movwf	??_tela_ultima_solda+2
 29561  2D19  30DA               	movlw	high (_tempo_str| (0+32768))
 29562  2D1A  00D6               	movwf	??_tela_ultima_solda+3
 29563  2D1B  082B               	movf	?___wmul,w
 29564  2D1C  0755               	addwf	??_tela_ultima_solda+2,w
 29565  2D1D  00B6               	movwf	escreve_LCD@str
 29566  2D1E  082C               	movf	?___wmul+1,w
 29567  2D1F  3D56               	addwfc	??_tela_ultima_solda+3,w
 29568  2D20  00B7               	movwf	escreve_LCD@str+1
 29569  2D21  3002               	movlw	2
 29570  2D22  31E7  27C1  31AC   	fcall	_escreve_LCD
 29571                           
 29572                           ;func.c: 1289: ltoa(str,(t100ms_solda_cont/10),10);
 29573  2D25  3000               	movlw	0
 29574  2D26  0140               	movlb	0	; select bank0
 29575  2D27  00B2               	movwf	___lldiv@divisor+3
 29576  2D28  3000               	movlw	0
 29577  2D29  00B1               	movwf	___lldiv@divisor+2
 29578  2D2A  3000               	movlw	0
 29579  2D2B  00B0               	movwf	___lldiv@divisor+1
 29580  2D2C  300A               	movlw	10
 29581  2D2D  00AF               	movwf	___lldiv@divisor
 29582  2D2E  0144               	movlb	4	; select bank4
 29583  2D2F  082B               	movf	(_t100ms_solda_cont+3)^(0+512),w
 29584  2D30  0140               	movlb	0	; select bank0
 29585  2D31  00B6               	movwf	___lldiv@dividend+3
 29586  2D32  0144               	movlb	4	; select bank4
 29587  2D33  082A               	movf	(_t100ms_solda_cont+2)^(0+512),w
 29588  2D34  0140               	movlb	0	; select bank0
 29589  2D35  00B5               	movwf	___lldiv@dividend+2
 29590  2D36  0144               	movlb	4	; select bank4
 29591  2D37  0829               	movf	(_t100ms_solda_cont+1)^(0+512),w
 29592  2D38  0140               	movlb	0	; select bank0
 29593  2D39  00B4               	movwf	___lldiv@dividend+1
 29594  2D3A  0144               	movlb	4	; select bank4
 29595  2D3B  0828               	movf	_t100ms_solda_cont^(0+512),w
 29596  2D3C  0140               	movlb	0	; select bank0
 29597  2D3D  00B3               	movwf	___lldiv@dividend
 29598  2D3E  31CB  236E  31AC   	fcall	___lldiv
 29599  2D41  0140               	movlb	0	; select bank0
 29600  2D42  0832               	movf	?___lldiv+3,w
 29601  2D43  0141               	movlb	1	; select bank1
 29602  2D44  00A3               	movwf	(_tela_ultima_solda$4263+3)^(0+128)
 29603  2D45  0140               	movlb	0	; select bank0
 29604  2D46  0831               	movf	?___lldiv+2,w
 29605  2D47  0141               	movlb	1	; select bank1
 29606  2D48  00A2               	movwf	(_tela_ultima_solda$4263+2)^(0+128)
 29607  2D49  0140               	movlb	0	; select bank0
 29608  2D4A  0830               	movf	?___lldiv+1,w
 29609  2D4B  0141               	movlb	1	; select bank1
 29610  2D4C  00A1               	movwf	(_tela_ultima_solda$4263+1)^(0+128)
 29611  2D4D  0140               	movlb	0	; select bank0
 29612  2D4E  082F               	movf	?___lldiv,w
 29613  2D4F  0141               	movlb	1	; select bank1
 29614  2D50  00A0               	movwf	_tela_ultima_solda$4263^(0+128)
 29615                           
 29616                           ;func.c: 1289: ltoa(str,(t100ms_solda_cont/10),10);
 29617  2D51  0823               	movf	(_tela_ultima_solda$4263+3)^(0+128),w
 29618  2D52  0140               	movlb	0	; select bank0
 29619  2D53  00CD               	movwf	ltoa@val+3
 29620  2D54  0141               	movlb	1	; select bank1
 29621  2D55  0822               	movf	(_tela_ultima_solda$4263+2)^(0+128),w
 29622  2D56  0140               	movlb	0	; select bank0
 29623  2D57  00CC               	movwf	ltoa@val+2
 29624  2D58  0141               	movlb	1	; select bank1
 29625  2D59  0821               	movf	(_tela_ultima_solda$4263+1)^(0+128),w
 29626  2D5A  0140               	movlb	0	; select bank0
 29627  2D5B  00CB               	movwf	ltoa@val+1
 29628  2D5C  0141               	movlb	1	; select bank1
 29629  2D5D  0820               	movf	_tela_ultima_solda$4263^(0+128),w
 29630  2D5E  0140               	movlb	0	; select bank0
 29631  2D5F  00CA               	movwf	ltoa@val
 29632  2D60  300A               	movlw	10
 29633  2D61  00CE               	movwf	ltoa@base
 29634  2D62  3000               	movlw	0
 29635  2D63  00CF               	movwf	ltoa@base+1
 29636  2D64  305C               	movlw	(low (_str| (0+512)))& (0+255)
 29637  2D65  31D4  24DE  31AC   	fcall	_ltoa
 29638                           
 29639                           ;func.c: 1290: Lcd_Write_String(str);
 29640  2D68  305C               	movlw	low _str
 29641  2D69  0140               	movlb	0	; select bank0
 29642  2D6A  00B0               	movwf	Lcd_Write_String@a
 29643  2D6B  3002               	movlw	high _str
 29644  2D6C  00B1               	movwf	Lcd_Write_String@a+1
 29645  2D6D  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29646                           
 29647                           ;func.c: 1291: Lcd_Write_String(".");
 29648  2D70  301A               	movlw	low (STR_6| (0+32768))
 29649  2D71  0140               	movlb	0	; select bank0
 29650  2D72  00B0               	movwf	Lcd_Write_String@a
 29651  2D73  30E9               	movlw	high (STR_6| (0+32768))
 29652  2D74  00B1               	movwf	Lcd_Write_String@a+1
 29653  2D75  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29654                           
 29655                           ;func.c: 1292: ltoa(str,(t100ms_solda_cont%10),10);
 29656  2D78  3000               	movlw	0
 29657  2D79  0140               	movlb	0	; select bank0
 29658  2D7A  00AE               	movwf	___llmod@divisor+3
 29659  2D7B  3000               	movlw	0
 29660  2D7C  00AD               	movwf	___llmod@divisor+2
 29661  2D7D  3000               	movlw	0
 29662  2D7E  00AC               	movwf	___llmod@divisor+1
 29663  2D7F  300A               	movlw	10
 29664  2D80  00AB               	movwf	___llmod@divisor
 29665  2D81  0144               	movlb	4	; select bank4
 29666  2D82  082B               	movf	(_t100ms_solda_cont+3)^(0+512),w
 29667  2D83  0140               	movlb	0	; select bank0
 29668  2D84  00B2               	movwf	___llmod@dividend+3
 29669  2D85  0144               	movlb	4	; select bank4
 29670  2D86  082A               	movf	(_t100ms_solda_cont+2)^(0+512),w
 29671  2D87  0140               	movlb	0	; select bank0
 29672  2D88  00B1               	movwf	___llmod@dividend+2
 29673  2D89  0144               	movlb	4	; select bank4
 29674  2D8A  0829               	movf	(_t100ms_solda_cont+1)^(0+512),w
 29675  2D8B  0140               	movlb	0	; select bank0
 29676  2D8C  00B0               	movwf	___llmod@dividend+1
 29677  2D8D  0144               	movlb	4	; select bank4
 29678  2D8E  0828               	movf	_t100ms_solda_cont^(0+512),w
 29679  2D8F  0140               	movlb	0	; select bank0
 29680  2D90  00AF               	movwf	___llmod@dividend
 29681  2D91  31D7  2778  31AC   	fcall	___llmod
 29682  2D94  0140               	movlb	0	; select bank0
 29683  2D95  082E               	movf	?___llmod+3,w
 29684  2D96  0141               	movlb	1	; select bank1
 29685  2D97  00A7               	movwf	(_tela_ultima_solda$4264+3)^(0+128)
 29686  2D98  0140               	movlb	0	; select bank0
 29687  2D99  082D               	movf	?___llmod+2,w
 29688  2D9A  0141               	movlb	1	; select bank1
 29689  2D9B  00A6               	movwf	(_tela_ultima_solda$4264+2)^(0+128)
 29690  2D9C  0140               	movlb	0	; select bank0
 29691  2D9D  082C               	movf	?___llmod+1,w
 29692  2D9E  0141               	movlb	1	; select bank1
 29693  2D9F  00A5               	movwf	(_tela_ultima_solda$4264+1)^(0+128)
 29694  2DA0  0140               	movlb	0	; select bank0
 29695  2DA1  082B               	movf	?___llmod,w
 29696  2DA2  0141               	movlb	1	; select bank1
 29697  2DA3  00A4               	movwf	_tela_ultima_solda$4264^(0+128)
 29698                           
 29699                           ;func.c: 1292: ltoa(str,(t100ms_solda_cont%10),10);
 29700  2DA4  0827               	movf	(_tela_ultima_solda$4264+3)^(0+128),w
 29701  2DA5  0140               	movlb	0	; select bank0
 29702  2DA6  00CD               	movwf	ltoa@val+3
 29703  2DA7  0141               	movlb	1	; select bank1
 29704  2DA8  0826               	movf	(_tela_ultima_solda$4264+2)^(0+128),w
 29705  2DA9  0140               	movlb	0	; select bank0
 29706  2DAA  00CC               	movwf	ltoa@val+2
 29707  2DAB  0141               	movlb	1	; select bank1
 29708  2DAC  0825               	movf	(_tela_ultima_solda$4264+1)^(0+128),w
 29709  2DAD  0140               	movlb	0	; select bank0
 29710  2DAE  00CB               	movwf	ltoa@val+1
 29711  2DAF  0141               	movlb	1	; select bank1
 29712  2DB0  0824               	movf	_tela_ultima_solda$4264^(0+128),w
 29713  2DB1  0140               	movlb	0	; select bank0
 29714  2DB2  00CA               	movwf	ltoa@val
 29715  2DB3  300A               	movlw	10
 29716  2DB4  00CE               	movwf	ltoa@base
 29717  2DB5  3000               	movlw	0
 29718  2DB6  00CF               	movwf	ltoa@base+1
 29719  2DB7  305C               	movlw	(low (_str| (0+512)))& (0+255)
 29720  2DB8  31D4  24DE  31AC   	fcall	_ltoa
 29721                           
 29722                           ;func.c: 1293: Lcd_Write_String(str);
 29723  2DBB  305C               	movlw	low _str
 29724  2DBC  0140               	movlb	0	; select bank0
 29725  2DBD  00B0               	movwf	Lcd_Write_String@a
 29726  2DBE  3002               	movlw	high _str
 29727  2DBF  00B1               	movwf	Lcd_Write_String@a+1
 29728  2DC0  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29729                           
 29730                           ;func.c: 1294: Lcd_Write_String("s  ");
 29731  2DC3  30FB               	movlw	low (STR_7| (0+32768))
 29732  2DC4  0140               	movlb	0	; select bank0
 29733  2DC5  00B0               	movwf	Lcd_Write_String@a
 29734  2DC6  30E8               	movlw	high (STR_7| (0+32768))
 29735  2DC7  00B1               	movwf	Lcd_Write_String@a+1
 29736  2DC8  31D1  2171         	fcall	_Lcd_Write_String
 29737                           
 29738                           ;func.c: 1295: }
 29739  2DCA  0008               	return
 29740  2DCB                     l15754:	
 29741                           
 29742                           ;func.c: 1296: else{
 29743                           ;func.c: 1298: escreve_LCD(1,1,energia_str[idioma]);
 29744  2DCB  0140               	movlb	0	; select bank0
 29745  2DCC  01B5               	clrf	escreve_LCD@coluna
 29746  2DCD  0AB5               	incf	escreve_LCD@coluna,f
 29747  2DCE  0143               	movlb	3	; select bank3
 29748  2DCF  085A               	movf	_idioma^(0+384),w
 29749  2DD0  0140               	movlb	0	; select bank0
 29750  2DD1  00D3               	movwf	??_tela_ultima_solda
 29751  2DD2  01D4               	clrf	??_tela_ultima_solda+1
 29752  2DD3  0853               	movf	??_tela_ultima_solda,w
 29753  2DD4  00AB               	movwf	___wmul@multiplier
 29754  2DD5  0854               	movf	??_tela_ultima_solda+1,w
 29755  2DD6  00AC               	movwf	___wmul@multiplier+1
 29756  2DD7  3011               	movlw	17
 29757  2DD8  00AD               	movwf	___wmul@multiplicand
 29758  2DD9  3000               	movlw	0
 29759  2DDA  00AE               	movwf	___wmul@multiplicand+1
 29760  2DDB  31D0  20FE  31AC   	fcall	___wmul
 29761  2DDE  30C2               	movlw	low (_energia_str| (0+32768))
 29762  2DDF  0140               	movlb	0	; select bank0
 29763  2DE0  00D5               	movwf	??_tela_ultima_solda+2
 29764  2DE1  30DA               	movlw	high (_energia_str| (0+32768))
 29765  2DE2  00D6               	movwf	??_tela_ultima_solda+3
 29766  2DE3  082B               	movf	?___wmul,w
 29767  2DE4  0755               	addwf	??_tela_ultima_solda+2,w
 29768  2DE5  00B6               	movwf	escreve_LCD@str
 29769  2DE6  082C               	movf	?___wmul+1,w
 29770  2DE7  3D56               	addwfc	??_tela_ultima_solda+3,w
 29771  2DE8  00B7               	movwf	escreve_LCD@str+1
 29772  2DE9  3001               	movlw	1
 29773  2DEA  31E7  27C1  31AC   	fcall	_escreve_LCD
 29774                           
 29775                           ;func.c: 1299: ltoa(str,(energia_total),10);
 29776  2DED  0143               	movlb	3	; select bank3
 29777  2DEE  0838               	movf	_energia_total^(0+384),w
 29778  2DEF  0140               	movlb	0	; select bank0
 29779  2DF0  00CA               	movwf	ltoa@val
 29780  2DF1  0143               	movlb	3	; select bank3
 29781  2DF2  0839               	movf	(_energia_total+1)^(0+384),w
 29782  2DF3  0140               	movlb	0	; select bank0
 29783  2DF4  00CB               	movwf	ltoa@val+1
 29784  2DF5  01CC               	clrf	ltoa@val+2
 29785  2DF6  01CD               	clrf	ltoa@val+3
 29786  2DF7  300A               	movlw	10
 29787  2DF8  00CE               	movwf	ltoa@base
 29788  2DF9  3000               	movlw	0
 29789  2DFA  00CF               	movwf	ltoa@base+1
 29790  2DFB  305C               	movlw	(low (_str| (0+512)))& (0+255)
 29791  2DFC  31D4  24DE  31AC   	fcall	_ltoa
 29792                           
 29793                           ;func.c: 1300: Lcd_Write_String(str);
 29794  2DFF  305C               	movlw	low _str
 29795  2E00  0140               	movlb	0	; select bank0
 29796  2E01  00B0               	movwf	Lcd_Write_String@a
 29797  2E02  3002               	movlw	high _str
 29798  2E03  00B1               	movwf	Lcd_Write_String@a+1
 29799  2E04  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29800                           
 29801                           ;func.c: 1301: Lcd_Write_String(" J");
 29802  2E07  3015               	movlw	low (STR_8| (0+32768))
 29803  2E08  0140               	movlb	0	; select bank0
 29804  2E09  00B0               	movwf	Lcd_Write_String@a
 29805  2E0A  30E9               	movlw	high (STR_8| (0+32768))
 29806  2E0B  00B1               	movwf	Lcd_Write_String@a+1
 29807  2E0C  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29808                           
 29809                           ;func.c: 1303: escreve_LCD(2,1,tempo_str[idioma]);
 29810  2E0F  0140               	movlb	0	; select bank0
 29811  2E10  01B5               	clrf	escreve_LCD@coluna
 29812  2E11  0AB5               	incf	escreve_LCD@coluna,f
 29813  2E12  0143               	movlb	3	; select bank3
 29814  2E13  085A               	movf	_idioma^(0+384),w
 29815  2E14  0140               	movlb	0	; select bank0
 29816  2E15  00D3               	movwf	??_tela_ultima_solda
 29817  2E16  01D4               	clrf	??_tela_ultima_solda+1
 29818  2E17  0853               	movf	??_tela_ultima_solda,w
 29819  2E18  00AB               	movwf	___wmul@multiplier
 29820  2E19  0854               	movf	??_tela_ultima_solda+1,w
 29821  2E1A  00AC               	movwf	___wmul@multiplier+1
 29822  2E1B  3011               	movlw	17
 29823  2E1C  00AD               	movwf	___wmul@multiplicand
 29824  2E1D  3000               	movlw	0
 29825  2E1E  00AE               	movwf	___wmul@multiplicand+1
 29826  2E1F  31D0  20FE  31AC   	fcall	___wmul
 29827  2E22  30A0               	movlw	low (_tempo_str| (0+32768))
 29828  2E23  0140               	movlb	0	; select bank0
 29829  2E24  00D5               	movwf	??_tela_ultima_solda+2
 29830  2E25  30DA               	movlw	high (_tempo_str| (0+32768))
 29831  2E26  00D6               	movwf	??_tela_ultima_solda+3
 29832  2E27  082B               	movf	?___wmul,w
 29833  2E28  0755               	addwf	??_tela_ultima_solda+2,w
 29834  2E29  00B6               	movwf	escreve_LCD@str
 29835  2E2A  082C               	movf	?___wmul+1,w
 29836  2E2B  3D56               	addwfc	??_tela_ultima_solda+3,w
 29837  2E2C  00B7               	movwf	escreve_LCD@str+1
 29838  2E2D  3002               	movlw	2
 29839  2E2E  31E7  27C1  31AC   	fcall	_escreve_LCD
 29840                           
 29841                           ;func.c: 1304: ltoa(str,(t1ms_solda),10);
 29842  2E31  0143               	movlb	3	; select bank3
 29843  2E32  0846               	movf	_t1ms_solda^(0+384),w
 29844  2E33  0140               	movlb	0	; select bank0
 29845  2E34  00CA               	movwf	ltoa@val
 29846  2E35  0143               	movlb	3	; select bank3
 29847  2E36  0847               	movf	(_t1ms_solda+1)^(0+384),w
 29848  2E37  0140               	movlb	0	; select bank0
 29849  2E38  00CB               	movwf	ltoa@val+1
 29850  2E39  01CC               	clrf	ltoa@val+2
 29851  2E3A  01CD               	clrf	ltoa@val+3
 29852  2E3B  300A               	movlw	10
 29853  2E3C  00CE               	movwf	ltoa@base
 29854  2E3D  3000               	movlw	0
 29855  2E3E  00CF               	movwf	ltoa@base+1
 29856  2E3F  305C               	movlw	(low (_str| (0+512)))& (0+255)
 29857  2E40  31D4  24DE  31AC   	fcall	_ltoa
 29858                           
 29859                           ;func.c: 1305: Lcd_Write_String(str);
 29860  2E43  305C               	movlw	low _str
 29861  2E44  0140               	movlb	0	; select bank0
 29862  2E45  00B0               	movwf	Lcd_Write_String@a
 29863  2E46  3002               	movlw	high _str
 29864  2E47  00B1               	movwf	Lcd_Write_String@a+1
 29865  2E48  31D1  2171  31AC   	fcall	_Lcd_Write_String
 29866                           
 29867                           ;func.c: 1306: Lcd_Write_String(" ms");
 29868  2E4B  3007               	movlw	low (STR_9| (0+32768))
 29869  2E4C  0140               	movlb	0	; select bank0
 29870  2E4D  00B0               	movwf	Lcd_Write_String@a
 29871  2E4E  30E9               	movlw	high (STR_9| (0+32768))
 29872  2E4F  00B1               	movwf	Lcd_Write_String@a+1
 29873  2E50  31D1  2171         	fcall	_Lcd_Write_String
 29874  2E52  0008               	return
 29875  2E53                     __end_of_tela_ultima_solda:	
 29876                           
 29877                           	psect	text73
 29878  4585                     __ptext73:	
 29879 ;; *************** function _set_freq *****************
 29880 ;; Defined at:
 29881 ;;		line 194 in file "func.c"
 29882 ;; Parameters:    Size  Location     Type
 29883 ;;  f               2   38[BANK0 ] unsigned int 
 29884 ;; Auto vars:     Size  Location     Type
 29885 ;;  f_get           2   44[BANK0 ] unsigned int 
 29886 ;;  ok              1   43[BANK0 ] unsigned char 
 29887 ;;  i               1   42[BANK0 ] unsigned char 
 29888 ;; Return value:  Size  Location     Type
 29889 ;;                  1    wreg      void 
 29890 ;; Registers used:
 29891 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 29892 ;; Tracked objects:
 29893 ;;		On entry : 0/0
 29894 ;;		On exit  : 0/0
 29895 ;;		Unchanged: 0/0
 29896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 29897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29898 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29899 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29900 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 29901 ;;Total ram usage:        8 bytes
 29902 ;; Hardware stack levels used:    1
 29903 ;; Hardware stack levels required when called:    5
 29904 ;; This function calls:
 29905 ;;		_PWM2_LoadDutyValue
 29906 ;;		_get_freq
 29907 ;; This function is called by:
 29908 ;;		_main
 29909 ;;		_trata_dados
 29910 ;;		_func_enter
 29911 ;;		_func_rst
 29912 ;;		_teste_US
 29913 ;;		_ciclar
 29914 ;;		_rotina_tela
 29915 ;; This function uses a non-reentrant model
 29916 ;;
 29917                           
 29918                           
 29919                           ;psect for function _set_freq
 29920  4585                     _set_freq:	
 29921                           
 29922                           ;func.c: 196: char ok = 0;
 29923                           
 29924                           ;incstack = 0
 29925                           ; Regs used in _set_freq: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 29926  4585  0140               	movlb	0	; select bank0
 29927  4586  01CB               	clrf	set_freq@ok
 29928                           
 29929                           ;func.c: 197: unsigned char i = 0;
 29930  4587  01CA               	clrf	set_freq@i
 29931                           
 29932                           ;func.c: 199: unsigned int f_get = 0;
 29933  4588  01CC               	clrf	set_freq@f_get
 29934  4589  01CD               	clrf	set_freq@f_get+1
 29935                           
 29936                           ;func.c: 200: PWM.byte0 = CCPR2L;
 29937  458A  0146               	movlb	6	; select bank6
 29938  458B  0810               	movf	16,w	;volatile
 29939  458C  0140               	movlb	0	; select bank0
 29940  458D  00C8               	movwf	??_set_freq
 29941  458E  0848               	movf	??_set_freq,w
 29942  458F  0143               	movlb	3	; select bank3
 29943  4590  00CA               	movwf	_PWM^(0+384)	;volatile
 29944                           
 29945                           ;func.c: 201: PWM.byte1 = CCPR2H;
 29946  4591  0146               	movlb	6	; select bank6
 29947  4592  0811               	movf	17,w	;volatile
 29948  4593  0140               	movlb	0	; select bank0
 29949  4594  00C8               	movwf	??_set_freq
 29950  4595  0848               	movf	??_set_freq,w
 29951  4596  0143               	movlb	3	; select bank3
 29952  4597  00CB               	movwf	(_PWM^(0+384)+1)	;volatile
 29953                           
 29954                           ;func.c: 202: led.HF = 1;
 29955  4598  1465               	bsf	_led^(0+384),0	;volatile
 29956                           
 29957                           ;func.c: 206: if (f < limite_16 || f > limite_24){
 29958  4599  0144               	movlb	4	; select bank4
 29959  459A  0841               	movf	(_limite_16+1)^(0+512),w
 29960  459B  0140               	movlb	0	; select bank0
 29961  459C  0247               	subwf	set_freq@f+1,w
 29962  459D  1D03               	skipz
 29963  459E  2DA3               	goto	u16155
 29964  459F  0144               	movlb	4	; select bank4
 29965  45A0  0840               	movf	_limite_16^(0+512),w
 29966  45A1  0140               	movlb	0	; select bank0
 29967  45A2  0246               	subwf	set_freq@f,w
 29968  45A3                     u16155:	
 29969  45A3  1C03               	skipc
 29970  45A4  2DB0               	goto	l14896
 29971  45A5  0847               	movf	set_freq@f+1,w
 29972  45A6  0144               	movlb	4	; select bank4
 29973  45A7  0243               	subwf	(_limite_24+1)^(0+512),w
 29974  45A8  1D03               	skipz
 29975  45A9  2DAE               	goto	u16165
 29976  45AA  0140               	movlb	0	; select bank0
 29977  45AB  0846               	movf	set_freq@f,w
 29978  45AC  0144               	movlb	4	; select bank4
 29979  45AD  0242               	subwf	_limite_24^(0+512),w
 29980  45AE                     u16165:	
 29981  45AE  1803               	skipnc
 29982  45AF  2DC0               	goto	l1180
 29983  45B0                     l14896:	
 29984                           
 29985                           ;func.c: 207: f = freq_gerador;
 29986  45B0  0144               	movlb	4	; select bank4
 29987  45B1  0845               	movf	(_freq_gerador+1)^(0+512),w
 29988  45B2  0140               	movlb	0	; select bank0
 29989  45B3  00C7               	movwf	set_freq@f+1
 29990  45B4  0144               	movlb	4	; select bank4
 29991  45B5  0844               	movf	_freq_gerador^(0+512),w
 29992  45B6  0140               	movlb	0	; select bank0
 29993  45B7  00C6               	movwf	set_freq@f
 29994                           
 29995                           ;func.c: 208: freq_atual = freq_gerador;
 29996  45B8  0144               	movlb	4	; select bank4
 29997  45B9  0845               	movf	(_freq_gerador+1)^(0+512),w
 29998  45BA  0143               	movlb	3	; select bank3
 29999  45BB  00B5               	movwf	(_freq_atual+1)^(0+384)
 30000  45BC  0144               	movlb	4	; select bank4
 30001  45BD  0844               	movf	_freq_gerador^(0+512),w
 30002  45BE  0143               	movlb	3	; select bank3
 30003  45BF  00B4               	movwf	_freq_atual^(0+384)
 30004  45C0                     l1180:	
 30005                           ;func.c: 209: }
 30006                           ;func.c: 211: do{
 30007                           
 30008  45C0  0064               	clrwdt	;# 
 30009                           
 30010                           ;func.c: 213: f_get = get_freq(20);
 30011  45C1  3014               	movlw	20
 30012  45C2  31C6  261D  31C5   	fcall	_get_freq
 30013  45C5  0140               	movlb	0	; select bank0
 30014  45C6  083E               	movf	?_get_freq+1,w
 30015  45C7  00CD               	movwf	set_freq@f_get+1
 30016  45C8  083D               	movf	?_get_freq,w
 30017  45C9  00CC               	movwf	set_freq@f_get
 30018                           
 30019                           ;func.c: 214: if(f_get > f+20){
 30020  45CA  0846               	movf	set_freq@f,w
 30021  45CB  3E14               	addlw	20
 30022  45CC  00C8               	movwf	??_set_freq
 30023  45CD  3000               	movlw	0
 30024  45CE  3D47               	addwfc	set_freq@f+1,w
 30025  45CF  00C9               	movwf	??_set_freq+1
 30026  45D0  084D               	movf	set_freq@f_get+1,w
 30027  45D1  0249               	subwf	??_set_freq+1,w
 30028  45D2  1D03               	skipz
 30029  45D3  2DD6               	goto	u16175
 30030  45D4  084C               	movf	set_freq@f_get,w
 30031  45D5  0248               	subwf	??_set_freq,w
 30032  45D6                     u16175:	
 30033  45D6  1803               	skipnc
 30034  45D7  2DE8               	goto	l14904
 30035                           
 30036                           ;func.c: 215: PWM2_LoadDutyValue(++PWM.duty);
 30037  45D8  3001               	movlw	1
 30038  45D9  0143               	movlb	3	; select bank3
 30039  45DA  07CA               	addwf	_PWM^(0+384),f	;volatile
 30040  45DB  3000               	movlw	0
 30041  45DC  3DCB               	addwfc	(_PWM+1)^(0+384),f	;volatile
 30042  45DD  084B               	movf	(_PWM+1)^(0+384),w	;volatile
 30043  45DE  0140               	movlb	0	; select bank0
 30044  45DF  00AC               	movwf	PWM2_LoadDutyValue@dutyValue+1
 30045  45E0  0143               	movlb	3	; select bank3
 30046  45E1  084A               	movf	_PWM^(0+384),w	;volatile
 30047  45E2  0140               	movlb	0	; select bank0
 30048  45E3  00AB               	movwf	PWM2_LoadDutyValue@dutyValue
 30049  45E4  31D1  2190  31C5   	fcall	_PWM2_LoadDutyValue
 30050                           
 30051                           ;func.c: 218: }
 30052  45E7  2E0C               	goto	l14910
 30053  45E8                     l14904:	
 30054                           
 30055                           ;func.c: 219: else if(f_get < f-20){
 30056  45E8  0140               	movlb	0	; select bank0
 30057  45E9  0846               	movf	set_freq@f,w
 30058  45EA  3EEC               	addlw	236
 30059  45EB  00C8               	movwf	??_set_freq
 30060  45EC  30FF               	movlw	255
 30061  45ED  3D47               	addwfc	set_freq@f+1,w
 30062  45EE  00C9               	movwf	??_set_freq+1
 30063  45EF  0849               	movf	??_set_freq+1,w
 30064  45F0  024D               	subwf	set_freq@f_get+1,w
 30065  45F1  1D03               	skipz
 30066  45F2  2DF5               	goto	u16185
 30067  45F3  0848               	movf	??_set_freq,w
 30068  45F4  024C               	subwf	set_freq@f_get,w
 30069  45F5                     u16185:	
 30070  45F5  1803               	skipnc
 30071  45F6  2E07               	goto	l14908
 30072                           
 30073                           ;func.c: 220: PWM2_LoadDutyValue(--PWM.duty);
 30074  45F7  3001               	movlw	1
 30075  45F8  0143               	movlb	3	; select bank3
 30076  45F9  02CA               	subwf	_PWM^(0+384),f	;volatile
 30077  45FA  3000               	movlw	0
 30078  45FB  3BCB               	subwfb	(_PWM+1)^(0+384),f	;volatile
 30079  45FC  084B               	movf	(_PWM+1)^(0+384),w	;volatile
 30080  45FD  0140               	movlb	0	; select bank0
 30081  45FE  00AC               	movwf	PWM2_LoadDutyValue@dutyValue+1
 30082  45FF  0143               	movlb	3	; select bank3
 30083  4600  084A               	movf	_PWM^(0+384),w	;volatile
 30084  4601  0140               	movlb	0	; select bank0
 30085  4602  00AB               	movwf	PWM2_LoadDutyValue@dutyValue
 30086  4603  31D1  2190  31C5   	fcall	_PWM2_LoadDutyValue
 30087                           
 30088                           ;func.c: 223: }
 30089  4606  2E0C               	goto	l14910
 30090  4607                     l14908:	
 30091                           
 30092                           ;func.c: 224: else{
 30093                           ;func.c: 225: ok++;
 30094  4607  3001               	movlw	1
 30095  4608  0140               	movlb	0	; select bank0
 30096  4609  00C8               	movwf	??_set_freq
 30097  460A  0848               	movf	??_set_freq,w
 30098  460B  07CB               	addwf	set_freq@ok,f
 30099  460C                     l14910:	
 30100                           
 30101                           ;func.c: 227: }
 30102                           ;func.c: 228: _delay((unsigned long)((10)*(20000000/4000.0)));
 30103  460C  3041               	movlw	65
 30104  460D  0140               	movlb	0	; select bank0
 30105  460E  00C8               	movwf	??_set_freq
 30106  460F  30EE               	movlw	238
 30107  4610                     u20777:	
 30108  4610  0B89               	decfsz	9,f
 30109  4611  2E10               	goto	u20777
 30110  4612  0BC8               	decfsz	??_set_freq,f
 30111  4613  2E10               	goto	u20777
 30112  4614  0000               	nop
 30113                           
 30114                           ;func.c: 229: }while(ok <= 5);
 30115  4615  3006               	movlw	6
 30116  4616  0140               	movlb	0	; select bank0
 30117  4617  024B               	subwf	set_freq@ok,w
 30118  4618  1C03               	skipc
 30119  4619  2DC0               	goto	l1180
 30120                           
 30121                           ;func.c: 230: led.HF = 0;
 30122  461A  0143               	movlb	3	; select bank3
 30123  461B  1065               	bcf	_led^(0+384),0	;volatile
 30124  461C  0008               	return
 30125  461D                     __end_of_set_freq:	
 30126                           
 30127                           	psect	text74
 30128  520E                     __ptext74:	
 30129 ;; *************** function _rst_inversor *****************
 30130 ;; Defined at:
 30131 ;;		line 1346 in file "func.c"
 30132 ;; Parameters:    Size  Location     Type
 30133 ;;		None
 30134 ;; Auto vars:     Size  Location     Type
 30135 ;;		None
 30136 ;; Return value:  Size  Location     Type
 30137 ;;                  1    wreg      void 
 30138 ;; Registers used:
 30139 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30140 ;; Tracked objects:
 30141 ;;		On entry : 0/0
 30142 ;;		On exit  : 0/0
 30143 ;;		Unchanged: 0/0
 30144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30147 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30148 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30149 ;;Total ram usage:        2 bytes
 30150 ;; Hardware stack levels used:    1
 30151 ;; Hardware stack levels required when called:    4
 30152 ;; This function calls:
 30153 ;;		_saida
 30154 ;; This function is called by:
 30155 ;;		_main
 30156 ;;		_trata_dados
 30157 ;;		_func_rst
 30158 ;;		_teste_US
 30159 ;; This function uses a non-reentrant model
 30160 ;;
 30161                           
 30162                           
 30163                           ;psect for function _rst_inversor
 30164  520E                     _rst_inversor:	
 30165                           
 30166                           ;func.c: 1347: if(cfg.rst_inv){
 30167                           
 30168                           ;incstack = 0
 30169                           ; Regs used in _rst_inversor: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 30170  520E  0143               	movlb	3	; select bank3
 30171  520F  1FB1               	btfss	(_cfg^(0+384)+1),7
 30172  5210  0008               	return
 30173                           
 30174                           ;func.c: 1348: saida(RST_INV,1);
 30175  5211  3001               	movlw	1
 30176  5212  0140               	movlb	0	; select bank0
 30177  5213  00AB               	movwf	saida@b
 30178  5214  3000               	movlw	0
 30179  5215  00AC               	movwf	saida@b+1
 30180  5216  3007               	movlw	7
 30181  5217  31D1  21CE  31D2   	fcall	_saida
 30182                           
 30183                           ;func.c: 1349: _delay((unsigned long)((200)*(20000000/4000.0)));
 30184  521A  3006               	movlw	6
 30185  521B  0140               	movlb	0	; select bank0
 30186  521C  00B1               	movwf	??_rst_inversor+1
 30187  521D  3013               	movlw	19
 30188  521E  00B0               	movwf	??_rst_inversor
 30189  521F  30AD               	movlw	173
 30190  5220                     u20787:	
 30191  5220  0B89               	decfsz	9,f
 30192  5221  2A20               	goto	u20787
 30193  5222  0BB0               	decfsz	??_rst_inversor,f
 30194  5223  2A20               	goto	u20787
 30195  5224  0BB1               	decfsz	??_rst_inversor+1,f
 30196  5225  2A20               	goto	u20787
 30197  5226  3200               	nop2
 30198                           
 30199                           ;func.c: 1350: saida(RST_INV,0);
 30200  5227  3000               	movlw	0
 30201  5228  0140               	movlb	0	; select bank0
 30202  5229  00AB               	movwf	saida@b
 30203  522A  00AC               	movwf	saida@b+1
 30204  522B  3007               	movlw	7
 30205  522C  31D1  21CE         	fcall	_saida
 30206  522E  0008               	return
 30207  522F                     __end_of_rst_inversor:	
 30208                           
 30209                           	psect	text75
 30210  5136                     __ptext75:	
 30211 ;; *************** function _delay *****************
 30212 ;; Defined at:
 30213 ;;		line 321 in file "func.c"
 30214 ;; Parameters:    Size  Location     Type
 30215 ;;  ms              2   19[BANK0 ] unsigned int 
 30216 ;; Auto vars:     Size  Location     Type
 30217 ;;  t               2   25[BANK0 ] unsigned int 
 30218 ;; Return value:  Size  Location     Type
 30219 ;;                  1    wreg      void 
 30220 ;; Registers used:
 30221 ;;		wreg, status,2, status,0
 30222 ;; Tracked objects:
 30223 ;;		On entry : 0/0
 30224 ;;		On exit  : 0/0
 30225 ;;		Unchanged: 0/0
 30226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30228 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30229 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30230 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30231 ;;Total ram usage:        8 bytes
 30232 ;; Hardware stack levels used:    1
 30233 ;; Hardware stack levels required when called:    3
 30234 ;; This function calls:
 30235 ;;		Nothing
 30236 ;; This function is called by:
 30237 ;;		_main
 30238 ;;		_trata_dados
 30239 ;;		_ciclar
 30240 ;;		_rotina_tela
 30241 ;; This function uses a non-reentrant model
 30242 ;;
 30243                           
 30244                           
 30245                           ;psect for function _delay
 30246  5136                     _delay:	
 30247                           
 30248                           ;func.c: 322: unsigned int t = t10ms;
 30249                           
 30250                           ;incstack = 0
 30251                           ; Regs used in _delay: [wreg+status,2+status,0]
 30252  5136  0140               	movlb	0	; select bank0
 30253  5137  085F               	movf	_t10ms+1,w
 30254  5138  00BA               	movwf	delay@t+1
 30255  5139  085E               	movf	_t10ms,w
 30256  513A  00B9               	movwf	delay@t
 30257  513B                     l14882:	
 30258                           ;func.c: 323: while(ms > (t10ms - t)){
 30259                           
 30260  513B  0140               	movlb	0	; select bank0
 30261  513C  0939               	comf	delay@t,w
 30262  513D  00B5               	movwf	??_delay
 30263  513E  093A               	comf	delay@t+1,w
 30264  513F  00B6               	movwf	??_delay+1
 30265  5140  0AB5               	incf	??_delay,f
 30266  5141  1903               	skipnz
 30267  5142  0AB6               	incf	??_delay+1,f
 30268  5143  085E               	movf	_t10ms,w
 30269  5144  0735               	addwf	??_delay,w
 30270  5145  00B7               	movwf	??_delay+2
 30271  5146  085F               	movf	_t10ms+1,w
 30272  5147  3D36               	addwfc	??_delay+1,w
 30273  5148  00B8               	movwf	??_delay+3
 30274  5149  0834               	movf	delay@ms+1,w
 30275  514A  0238               	subwf	??_delay+3,w
 30276  514B  1D03               	skipz
 30277  514C  294F               	goto	u16145
 30278  514D  0833               	movf	delay@ms,w
 30279  514E  0237               	subwf	??_delay+2,w
 30280  514F                     u16145:	
 30281  514F  1803               	btfsc	3,0
 30282  5150  0008               	return
 30283  5151  0064               	clrwdt	;# 
 30284  5152  293B               	goto	l14882
 30285  5153                     __end_of_delay:	
 30286                           
 30287                           	psect	text76
 30288  4E54                     __ptext76:	
 30289 ;; *************** function _carrega_EEPROM32 *****************
 30290 ;; Defined at:
 30291 ;;		line 356 in file "func.c"
 30292 ;; Parameters:    Size  Location     Type
 30293 ;;  address         1    wreg     unsigned char 
 30294 ;; Auto vars:     Size  Location     Type
 30295 ;;  address         1   18[BANK0 ] unsigned char 
 30296 ;; Return value:  Size  Location     Type
 30297 ;;                  4   12[BANK0 ] unsigned long 
 30298 ;; Registers used:
 30299 ;;		wreg, status,2, status,0, pclath, cstack
 30300 ;; Tracked objects:
 30301 ;;		On entry : 0/0
 30302 ;;		On exit  : 0/0
 30303 ;;		Unchanged: 0/0
 30304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30305 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30306 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30307 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30308 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30309 ;;Total ram usage:        7 bytes
 30310 ;; Hardware stack levels used:    1
 30311 ;; Hardware stack levels required when called:    4
 30312 ;; This function calls:
 30313 ;;		_eeprom_read
 30314 ;; This function is called by:
 30315 ;;		_trata_dados
 30316 ;;		_telas
 30317 ;;		_ini_ee_tempos
 30318 ;; This function uses a non-reentrant model
 30319 ;;
 30320                           
 30321                           
 30322                           ;psect for function _carrega_EEPROM32
 30323  4E54                     _carrega_EEPROM32:	
 30324                           
 30325                           ;incstack = 0
 30326                           ; Regs used in _carrega_EEPROM32: [wreg+status,2+status,0+pclath+cstack]
 30327                           ;carrega_EEPROM32@address stored from wreg
 30328  4E54  0140               	movlb	0	; select bank0
 30329  4E55  00B2               	movwf	carrega_EEPROM32@address
 30330                           
 30331                           ;func.c: 357: ee.byte0 = eeprom_read(address);
 30332  4E56  0832               	movf	carrega_EEPROM32@address,w
 30333  4E57  31E1  2112  31CE   	fcall	_eeprom_read
 30334  4E5A  0140               	movlb	0	; select bank0
 30335  4E5B  00B0               	movwf	??_carrega_EEPROM32
 30336  4E5C  0830               	movf	??_carrega_EEPROM32,w
 30337  4E5D  0143               	movlb	3	; select bank3
 30338  4E5E  00A8               	movwf	_ee^(0+384)	;volatile
 30339                           
 30340                           ;func.c: 358: _delay((unsigned long)((1)*(20000000/4000.0)));
 30341  4E5F  3007               	movlw	7
 30342  4E60  0140               	movlb	0	; select bank0
 30343  4E61  00B0               	movwf	??_carrega_EEPROM32
 30344  4E62  307D               	movlw	125
 30345  4E63                     u20797:	
 30346  4E63  0B89               	decfsz	9,f
 30347  4E64  2E63               	goto	u20797
 30348  4E65  0BB0               	decfsz	??_carrega_EEPROM32,f
 30349  4E66  2E63               	goto	u20797
 30350                           
 30351                           ;func.c: 359: ee.byte1 = eeprom_read(++address);
 30352  4E67  3001               	movlw	1
 30353  4E68  0140               	movlb	0	; select bank0
 30354  4E69  00B0               	movwf	??_carrega_EEPROM32
 30355  4E6A  0830               	movf	??_carrega_EEPROM32,w
 30356  4E6B  07B2               	addwf	carrega_EEPROM32@address,f
 30357  4E6C  0832               	movf	carrega_EEPROM32@address,w
 30358  4E6D  31E1  2112  31CE   	fcall	_eeprom_read
 30359  4E70  0140               	movlb	0	; select bank0
 30360  4E71  00B1               	movwf	??_carrega_EEPROM32+1
 30361  4E72  0831               	movf	??_carrega_EEPROM32+1,w
 30362  4E73  0143               	movlb	3	; select bank3
 30363  4E74  00A9               	movwf	(_ee^(0+384)+1)	;volatile
 30364                           
 30365                           ;func.c: 360: _delay((unsigned long)((1)*(20000000/4000.0)));
 30366  4E75  3007               	movlw	7
 30367  4E76  0140               	movlb	0	; select bank0
 30368  4E77  00B0               	movwf	??_carrega_EEPROM32
 30369  4E78  307D               	movlw	125
 30370  4E79                     u20807:	
 30371  4E79  0B89               	decfsz	9,f
 30372  4E7A  2E79               	goto	u20807
 30373  4E7B  0BB0               	decfsz	??_carrega_EEPROM32,f
 30374  4E7C  2E79               	goto	u20807
 30375                           
 30376                           ;func.c: 361: ee.byte2 = eeprom_read(++address);
 30377  4E7D  3001               	movlw	1
 30378  4E7E  0140               	movlb	0	; select bank0
 30379  4E7F  00B0               	movwf	??_carrega_EEPROM32
 30380  4E80  0830               	movf	??_carrega_EEPROM32,w
 30381  4E81  07B2               	addwf	carrega_EEPROM32@address,f
 30382  4E82  0832               	movf	carrega_EEPROM32@address,w
 30383  4E83  31E1  2112  31CE   	fcall	_eeprom_read
 30384  4E86  0140               	movlb	0	; select bank0
 30385  4E87  00B1               	movwf	??_carrega_EEPROM32+1
 30386  4E88  0831               	movf	??_carrega_EEPROM32+1,w
 30387  4E89  0143               	movlb	3	; select bank3
 30388  4E8A  00AA               	movwf	(_ee^(0+384)+2)	;volatile
 30389                           
 30390                           ;func.c: 362: _delay((unsigned long)((1)*(20000000/4000.0)));
 30391  4E8B  3007               	movlw	7
 30392  4E8C  0140               	movlb	0	; select bank0
 30393  4E8D  00B0               	movwf	??_carrega_EEPROM32
 30394  4E8E  307D               	movlw	125
 30395  4E8F                     u20817:	
 30396  4E8F  0B89               	decfsz	9,f
 30397  4E90  2E8F               	goto	u20817
 30398  4E91  0BB0               	decfsz	??_carrega_EEPROM32,f
 30399  4E92  2E8F               	goto	u20817
 30400                           
 30401                           ;func.c: 363: ee.byte3 = eeprom_read(++address);
 30402  4E93  3001               	movlw	1
 30403  4E94  0140               	movlb	0	; select bank0
 30404  4E95  00B0               	movwf	??_carrega_EEPROM32
 30405  4E96  0830               	movf	??_carrega_EEPROM32,w
 30406  4E97  07B2               	addwf	carrega_EEPROM32@address,f
 30407  4E98  0832               	movf	carrega_EEPROM32@address,w
 30408  4E99  31E1  2112  31CE   	fcall	_eeprom_read
 30409  4E9C  0140               	movlb	0	; select bank0
 30410  4E9D  00B1               	movwf	??_carrega_EEPROM32+1
 30411  4E9E  0831               	movf	??_carrega_EEPROM32+1,w
 30412  4E9F  0143               	movlb	3	; select bank3
 30413  4EA0  00AB               	movwf	(_ee^(0+384)+3)	;volatile
 30414                           
 30415                           ;func.c: 364: _delay((unsigned long)((1)*(20000000/4000.0)));
 30416  4EA1  3007               	movlw	7
 30417  4EA2  0140               	movlb	0	; select bank0
 30418  4EA3  00B0               	movwf	??_carrega_EEPROM32
 30419  4EA4  307D               	movlw	125
 30420  4EA5                     u20827:	
 30421  4EA5  0B89               	decfsz	9,f
 30422  4EA6  2EA5               	goto	u20827
 30423  4EA7  0BB0               	decfsz	??_carrega_EEPROM32,f
 30424  4EA8  2EA5               	goto	u20827
 30425                           
 30426                           ;func.c: 365: return ee.value;
 30427  4EA9  0143               	movlb	3	; select bank3
 30428  4EAA  082B               	movf	(_ee+3)^(0+384),w	;volatile
 30429  4EAB  0140               	movlb	0	; select bank0
 30430  4EAC  00AF               	movwf	?_carrega_EEPROM32+3
 30431  4EAD  0143               	movlb	3	; select bank3
 30432  4EAE  082A               	movf	(_ee+2)^(0+384),w	;volatile
 30433  4EAF  0140               	movlb	0	; select bank0
 30434  4EB0  00AE               	movwf	?_carrega_EEPROM32+2
 30435  4EB1  0143               	movlb	3	; select bank3
 30436  4EB2  0829               	movf	(_ee+1)^(0+384),w	;volatile
 30437  4EB3  0140               	movlb	0	; select bank0
 30438  4EB4  00AD               	movwf	?_carrega_EEPROM32+1
 30439  4EB5  0143               	movlb	3	; select bank3
 30440  4EB6  0828               	movf	_ee^(0+384),w	;volatile
 30441  4EB7  0140               	movlb	0	; select bank0
 30442  4EB8  00AC               	movwf	?_carrega_EEPROM32
 30443  4EB9  0008               	return
 30444  4EBA                     __end_of_carrega_EEPROM32:	
 30445                           
 30446                           	psect	text77
 30447  254B                     __ptext77:	
 30448 ;; *************** function _op_solda *****************
 30449 ;; Defined at:
 30450 ;;		line 432 in file "func.c"
 30451 ;; Parameters:    Size  Location     Type
 30452 ;;  t               2   51[BANK0 ] unsigned int 
 30453 ;; Auto vars:     Size  Location     Type
 30454 ;;  conta_erro      1    1[BANK1 ] unsigned char 
 30455 ;;  subida_acion    1    0[BANK1 ] unsigned char 
 30456 ;; Return value:  Size  Location     Type
 30457 ;;                  1    wreg      void 
 30458 ;; Registers used:
 30459 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 30460 ;; Tracked objects:
 30461 ;;		On entry : 0/0
 30462 ;;		On exit  : 0/0
 30463 ;;		Unchanged: 0/0
 30464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 30465 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30466 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30467 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30468 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 30469 ;;Total ram usage:        8 bytes
 30470 ;; Hardware stack levels used:    1
 30471 ;; Hardware stack levels required when called:    7
 30472 ;; This function calls:
 30473 ;;		_Lcd_Write_String
 30474 ;;		___lldiv
 30475 ;;		___llmod
 30476 ;;		___wmul
 30477 ;;		_escreve_LCD
 30478 ;;		_escreve_freq
 30479 ;;		_get_freq
 30480 ;;		_ltoa
 30481 ;;		_salva_EEPROM32
 30482 ;;		_start_timer
 30483 ;;		_status_gerador
 30484 ;;		_stop_timer
 30485 ;;		_ver_entrada
 30486 ;;		_ver_freq
 30487 ;; This function is called by:
 30488 ;;		_main
 30489 ;;		_ciclar
 30490 ;; This function uses a non-reentrant model
 30491 ;;
 30492                           
 30493                           
 30494                           ;psect for function _op_solda
 30495  254B                     _op_solda:	
 30496                           
 30497                           ;func.c: 433: if(!flag.sussess) {
 30498                           
 30499                           ;incstack = 0
 30500                           ; Regs used in _op_solda: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 30501  254B  0143               	movlb	3	; select bank3
 30502  254C  19AC               	btfsc	_flag^(0+384),3	;volatile
 30503  254D  2D55               	goto	l16148
 30504                           
 30505                           ;func.c: 434: flag.US = 0;
 30506  254E  12AC               	bcf	_flag^(0+384),5	;volatile
 30507                           
 30508                           ;func.c: 435: led.HF = 0;
 30509  254F  1065               	bcf	_led^(0+384),0	;volatile
 30510                           
 30511                           ;func.c: 436: LATDbits.LATD6 = 0;
 30512  2550  0140               	movlb	0	; select bank0
 30513  2551  1319               	bcf	25,6	;volatile
 30514                           
 30515                           ;func.c: 437: statusSolda = PARADO;
 30516  2552  0143               	movlb	3	; select bank3
 30517  2553  01DB               	clrf	_statusSolda^(0+384)
 30518                           
 30519                           ;func.c: 438: return;
 30520  2554  0008               	return
 30521  2555                     l16148:	
 30522                           
 30523                           ;func.c: 439: }
 30524                           ;func.c: 441: escreve_LCD(1,1,process_str[idioma]);
 30525  2555  0140               	movlb	0	; select bank0
 30526  2556  01B5               	clrf	escreve_LCD@coluna
 30527  2557  0AB5               	incf	escreve_LCD@coluna,f
 30528  2558  0143               	movlb	3	; select bank3
 30529  2559  085A               	movf	_idioma^(0+384),w
 30530  255A  0140               	movlb	0	; select bank0
 30531  255B  00D5               	movwf	??_op_solda
 30532  255C  01D6               	clrf	??_op_solda+1
 30533  255D  0855               	movf	??_op_solda,w
 30534  255E  00AB               	movwf	___wmul@multiplier
 30535  255F  0856               	movf	??_op_solda+1,w
 30536  2560  00AC               	movwf	___wmul@multiplier+1
 30537  2561  3011               	movlw	17
 30538  2562  00AD               	movwf	___wmul@multiplicand
 30539  2563  3000               	movlw	0
 30540  2564  00AE               	movwf	___wmul@multiplicand+1
 30541  2565  31D0  20FE  31A5   	fcall	___wmul
 30542  2568  30AE               	movlw	low (_process_str| (0+32768))
 30543  2569  0140               	movlb	0	; select bank0
 30544  256A  00D7               	movwf	??_op_solda+2
 30545  256B  30DD               	movlw	high (_process_str| (0+32768))
 30546  256C  00D8               	movwf	??_op_solda+3
 30547  256D  082B               	movf	?___wmul,w
 30548  256E  0757               	addwf	??_op_solda+2,w
 30549  256F  00B6               	movwf	escreve_LCD@str
 30550  2570  082C               	movf	?___wmul+1,w
 30551  2571  3D58               	addwfc	??_op_solda+3,w
 30552  2572  00B7               	movwf	escreve_LCD@str+1
 30553  2573  3001               	movlw	1
 30554  2574  31E7  27C1  31A5   	fcall	_escreve_LCD
 30555                           
 30556                           ;func.c: 442: char conta_erro = 0;
 30557  2577  0141               	movlb	1	; select bank1
 30558  2578  01A1               	clrf	op_solda@conta_erro^(0+128)
 30559                           
 30560                           ;func.c: 443: char subida_acionamento = 0;
 30561  2579  01A0               	clrf	op_solda@subida_acionamento^(0+128)
 30562                           
 30563                           ;func.c: 444: amostras = 0;
 30564  257A  0145               	movlb	5	; select bank5
 30565  257B  01D3               	clrf	_amostras^(0+640)
 30566  257C  01D4               	clrf	(_amostras+1)^(0+640)
 30567                           
 30568                           ;func.c: 445: erro = 0;
 30569  257D  0140               	movlb	0	; select bank0
 30570  257E  01E3               	clrf	_erro
 30571                           
 30572                           ;func.c: 446: energia_total = 0;
 30573  257F  0143               	movlb	3	; select bank3
 30574  2580  01B8               	clrf	_energia_total^(0+384)
 30575  2581  01B9               	clrf	(_energia_total+1)^(0+384)
 30576                           
 30577                           ;func.c: 447: energia_total_kJ = 0;
 30578  2582  0144               	movlb	4	; select bank4
 30579  2583  01CC               	clrf	_energia_total_kJ^(0+512)
 30580  2584  01CD               	clrf	(_energia_total_kJ+1)^(0+512)
 30581                           
 30582                           ;func.c: 448: pot_inst = 0;
 30583  2585  01CE               	clrf	_pot_inst^(0+512)
 30584  2586  01CF               	clrf	(_pot_inst+1)^(0+512)
 30585                           
 30586                           ;func.c: 451: led.HF = 1;
 30587  2587  0143               	movlb	3	; select bank3
 30588  2588  1465               	bsf	_led^(0+384),0	;volatile
 30589                           
 30590                           ;func.c: 452: flag.US = 1;
 30591  2589  16AC               	bsf	_flag^(0+384),5	;volatile
 30592                           
 30593                           ;func.c: 453: flag.isr_pot = 0;
 30594  258A  13AC               	bcf	_flag^(0+384),7	;volatile
 30595                           
 30596                           ;func.c: 454: status_gerador(STATUS_HF,1);
 30597  258B  3001               	movlw	1
 30598  258C  0140               	movlb	0	; select bank0
 30599  258D  00B0               	movwf	status_gerador@b
 30600  258E  3000               	movlw	0
 30601  258F  00B1               	movwf	status_gerador@b+1
 30602  2590  3006               	movlw	6
 30603  2591  31CC  24C4  31A5   	fcall	_status_gerador
 30604                           
 30605                           ;func.c: 455: LATDbits.LATD6 = 1;
 30606  2594  0140               	movlb	0	; select bank0
 30607  2595  1719               	bsf	25,6	;volatile
 30608                           
 30609                           ;func.c: 456: statusSolda = SOLDANDO;
 30610  2596  3002               	movlw	2
 30611  2597  00D5               	movwf	??_op_solda
 30612  2598  0855               	movf	??_op_solda,w
 30613  2599  0143               	movlb	3	; select bank3
 30614  259A  00DB               	movwf	_statusSolda^(0+384)
 30615                           
 30616                           ;func.c: 458: if(modo == CONTINUO){
 30617  259B  3002               	movlw	2
 30618  259C  065C               	xorwf	_modo^(0+384),w
 30619  259D  1D03               	btfss	3,2
 30620  259E  2DAA               	goto	l16182
 30621                           
 30622                           ;func.c: 459: start_timer(1000);
 30623  259F  30E8               	movlw	232
 30624  25A0  0140               	movlb	0	; select bank0
 30625  25A1  00AB               	movwf	start_timer@t
 30626  25A2  3003               	movlw	3
 30627  25A3  00AC               	movwf	start_timer@t+1
 30628  25A4  31E1  2165  31A5   	fcall	_start_timer
 30629                           
 30630                           ;func.c: 460: cfg.stop_release = 1;
 30631  25A7  0143               	movlb	3	; select bank3
 30632  25A8  1432               	bsf	(_cfg^(0+384)+2),0
 30633                           
 30634                           ;func.c: 461: }
 30635  25A9  2DF9               	goto	l1267
 30636  25AA                     l16182:	
 30637                           
 30638                           ;func.c: 463: else if(modo == CONTINUO_PULSO){
 30639  25AA  3003               	movlw	3
 30640  25AB  065C               	xorwf	_modo^(0+384),w
 30641  25AC  1D03               	btfss	3,2
 30642  25AD  2DF1               	goto	l16194
 30643                           
 30644                           ;func.c: 464: cfg.stop_release = 0;
 30645  25AE  1032               	bcf	(_cfg^(0+384)+2),0
 30646                           
 30647                           ;func.c: 466: escreve_LCD(2,1,n_pecas_str[idioma]);
 30648  25AF  0140               	movlb	0	; select bank0
 30649  25B0  01B5               	clrf	escreve_LCD@coluna
 30650  25B1  0AB5               	incf	escreve_LCD@coluna,f
 30651  25B2  0143               	movlb	3	; select bank3
 30652  25B3  085A               	movf	_idioma^(0+384),w
 30653  25B4  0140               	movlb	0	; select bank0
 30654  25B5  00D5               	movwf	??_op_solda
 30655  25B6  01D6               	clrf	??_op_solda+1
 30656  25B7  0855               	movf	??_op_solda,w
 30657  25B8  00AB               	movwf	___wmul@multiplier
 30658  25B9  0856               	movf	??_op_solda+1,w
 30659  25BA  00AC               	movwf	___wmul@multiplier+1
 30660  25BB  3011               	movlw	17
 30661  25BC  00AD               	movwf	___wmul@multiplicand
 30662  25BD  3000               	movlw	0
 30663  25BE  00AE               	movwf	___wmul@multiplicand+1
 30664  25BF  31D0  20FE  31A5   	fcall	___wmul
 30665  25C2  3078               	movlw	low (_n_pecas_str| (0+32768))
 30666  25C3  0140               	movlb	0	; select bank0
 30667  25C4  00D7               	movwf	??_op_solda+2
 30668  25C5  30E0               	movlw	high (_n_pecas_str| (0+32768))
 30669  25C6  00D8               	movwf	??_op_solda+3
 30670  25C7  082B               	movf	?___wmul,w
 30671  25C8  0757               	addwf	??_op_solda+2,w
 30672  25C9  00B6               	movwf	escreve_LCD@str
 30673  25CA  082C               	movf	?___wmul+1,w
 30674  25CB  3D58               	addwfc	??_op_solda+3,w
 30675  25CC  00B7               	movwf	escreve_LCD@str+1
 30676  25CD  3002               	movlw	2
 30677  25CE  31E7  27C1  31A5   	fcall	_escreve_LCD
 30678                           
 30679                           ;func.c: 467: ltoa(str,n_pecas,10);
 30680  25D1  0143               	movlb	3	; select bank3
 30681  25D2  0823               	movf	(_n_pecas+3)^(0+384),w
 30682  25D3  0140               	movlb	0	; select bank0
 30683  25D4  00CD               	movwf	ltoa@val+3
 30684  25D5  0143               	movlb	3	; select bank3
 30685  25D6  0822               	movf	(_n_pecas+2)^(0+384),w
 30686  25D7  0140               	movlb	0	; select bank0
 30687  25D8  00CC               	movwf	ltoa@val+2
 30688  25D9  0143               	movlb	3	; select bank3
 30689  25DA  0821               	movf	(_n_pecas+1)^(0+384),w
 30690  25DB  0140               	movlb	0	; select bank0
 30691  25DC  00CB               	movwf	ltoa@val+1
 30692  25DD  0143               	movlb	3	; select bank3
 30693  25DE  0820               	movf	_n_pecas^(0+384),w
 30694  25DF  0140               	movlb	0	; select bank0
 30695  25E0  00CA               	movwf	ltoa@val
 30696  25E1  300A               	movlw	10
 30697  25E2  00CE               	movwf	ltoa@base
 30698  25E3  3000               	movlw	0
 30699  25E4  00CF               	movwf	ltoa@base+1
 30700  25E5  305C               	movlw	(low (_str| (0+512)))& (0+255)
 30701  25E6  31D4  24DE  31A5   	fcall	_ltoa
 30702                           
 30703                           ;func.c: 468: Lcd_Write_String(str);
 30704  25E9  305C               	movlw	low _str
 30705  25EA  0140               	movlb	0	; select bank0
 30706  25EB  00B0               	movwf	Lcd_Write_String@a
 30707  25EC  3002               	movlw	high _str
 30708  25ED  00B1               	movwf	Lcd_Write_String@a+1
 30709  25EE  31D1  2171  31A5   	fcall	_Lcd_Write_String
 30710  25F1                     l16194:	
 30711                           ;func.c: 471: }
 30712                           
 30713                           ;func.c: 470: start_timer(t);
 30714                           
 30715                           
 30716                           ;func.c: 472: else{
 30717                           ;func.c: 473: start_timer(t);
 30718  25F1  0140               	movlb	0	; select bank0
 30719  25F2  0854               	movf	op_solda@t+1,w
 30720  25F3  00AC               	movwf	start_timer@t+1
 30721  25F4  0853               	movf	op_solda@t,w
 30722  25F5  00AB               	movwf	start_timer@t
 30723  25F6  31E1  2165  31A5   	fcall	_start_timer
 30724  25F9                     l1267:	
 30725                           ;func.c: 474: }
 30726                           ;func.c: 475: do{
 30727                           
 30728  25F9  0064               	clrwdt	;# 
 30729                           
 30730                           ;func.c: 477: ver_entrada();
 30731  25FA  31CE  26BA  31A5   	fcall	_ver_entrada
 30732                           
 30733                           ;func.c: 478: if(flag_in.emerg){ erro = 250;}
 30734  25FD  0143               	movlb	3	; select bank3
 30735  25FE  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 30736  25FF  2E03               	goto	l1268
 30737  2600  30FA               	movlw	250
 30738  2601  0140               	movlb	0	; select bank0
 30739  2602  2E07               	goto	L60
 30740  2603                     l1268:	
 30741                           
 30742                           ;func.c: 479: else if(PORTDbits.RD7){ erro = 200;}
 30743  2603  0140               	movlb	0	; select bank0
 30744  2604  1F8F               	btfss	15,7	;volatile
 30745  2605  2E0B               	goto	l1270
 30746  2606  30C8               	movlw	200
 30747  2607                     L60:	
 30748  2607  00D5               	movwf	??_op_solda
 30749  2608  0855               	movf	??_op_solda,w
 30750  2609  00E3               	movwf	_erro
 30751  260A  2E4E               	goto	l16222
 30752  260B                     l1270:	
 30753                           
 30754                           ;func.c: 481: else if(flag.isr_pot){erro = 100; conta_erro = 5;}
 30755  260B  0143               	movlb	3	; select bank3
 30756  260C  1FAC               	btfss	_flag^(0+384),7	;volatile
 30757  260D  2E19               	goto	l16206
 30758  260E  3064               	movlw	100
 30759  260F  0140               	movlb	0	; select bank0
 30760  2610  00D5               	movwf	??_op_solda
 30761  2611  0855               	movf	??_op_solda,w
 30762  2612  00E3               	movwf	_erro
 30763  2613  3005               	movlw	5
 30764  2614  00D5               	movwf	??_op_solda
 30765  2615  0855               	movf	??_op_solda,w
 30766  2616  0141               	movlb	1	; select bank1
 30767  2617  00A1               	movwf	op_solda@conta_erro^(0+128)
 30768  2618  2E4E               	goto	l16222
 30769  2619                     l16206:	
 30770                           
 30771                           ;func.c: 482: else if(modo == NORMAL && flag.energia && energia_total >= ener_solda){sta
      +                          tusSolda = FIXANDO;}
 30772  2619  0143               	movlb	3	; select bank3
 30773  261A  085C               	movf	_modo^(0+384),w
 30774  261B  1903               	btfsc	3,2
 30775  261C  1C2C               	btfss	_flag^(0+384),0	;volatile
 30776  261D  2E2D               	goto	l16214
 30777  261E  083F               	movf	(_ener_solda+1)^(0+384),w
 30778  261F  0239               	subwf	(_energia_total+1)^(0+384),w
 30779  2620  1D03               	skipz
 30780  2621  2E24               	goto	u18285
 30781  2622  083E               	movf	_ener_solda^(0+384),w
 30782  2623  0238               	subwf	_energia_total^(0+384),w
 30783  2624                     u18285:	
 30784  2624  1C03               	skipc
 30785  2625  2E2D               	goto	l16214
 30786  2626  3003               	movlw	3
 30787  2627  0140               	movlb	0	; select bank0
 30788  2628  00D5               	movwf	??_op_solda
 30789  2629  0855               	movf	??_op_solda,w
 30790  262A  0143               	movlb	3	; select bank3
 30791  262B  00DB               	movwf	_statusSolda^(0+384)
 30792  262C  2E4E               	goto	l16222
 30793  262D                     l16214:	
 30794                           
 30795                           ;func.c: 483: else{
 30796                           ;func.c: 484: freq_atual = get_freq(4);
 30797  262D  3004               	movlw	4
 30798  262E  31C6  261D  31A5   	fcall	_get_freq
 30799  2631  0140               	movlb	0	; select bank0
 30800  2632  083E               	movf	?_get_freq+1,w
 30801  2633  0143               	movlb	3	; select bank3
 30802  2634  00B5               	movwf	(_freq_atual+1)^(0+384)
 30803  2635  0140               	movlb	0	; select bank0
 30804  2636  083D               	movf	?_get_freq,w
 30805  2637  0143               	movlb	3	; select bank3
 30806  2638  00B4               	movwf	_freq_atual^(0+384)
 30807                           
 30808                           ;func.c: 485: erro = ver_freq(freq_atual);
 30809  2639  0835               	movf	(_freq_atual+1)^(0+384),w
 30810  263A  0140               	movlb	0	; select bank0
 30811  263B  00C7               	movwf	ver_freq@f+1
 30812  263C  0143               	movlb	3	; select bank3
 30813  263D  0834               	movf	_freq_atual^(0+384),w
 30814  263E  0140               	movlb	0	; select bank0
 30815  263F  00C6               	movwf	ver_freq@f
 30816  2640  31D6  260E  31A5   	fcall	_ver_freq
 30817  2643  0140               	movlb	0	; select bank0
 30818  2644  00D5               	movwf	??_op_solda
 30819  2645  0855               	movf	??_op_solda,w
 30820  2646  00E3               	movwf	_erro
 30821                           
 30822                           ;func.c: 486: if(ciclador)escreve_freq();
 30823  2647  0143               	movlb	3	; select bank3
 30824  2648  0861               	movf	_ciclador^(0+384),w
 30825  2649  1903               	btfsc	3,2
 30826  264A  2E4E               	goto	l16222
 30827  264B  31D3  23D2  31A5   	fcall	_escreve_freq
 30828  264E                     l16222:	
 30829                           
 30830                           ;func.c: 487: }
 30831                           ;func.c: 489: if(erro > 0){
 30832  264E  0140               	movlb	0	; select bank0
 30833  264F  0863               	movf	_erro,w
 30834  2650  1903               	btfsc	3,2
 30835  2651  2E64               	goto	l1277
 30836                           
 30837                           ;func.c: 490: conta_erro++;
 30838  2652  3001               	movlw	1
 30839  2653  00D5               	movwf	??_op_solda
 30840  2654  0855               	movf	??_op_solda,w
 30841  2655  0141               	movlb	1	; select bank1
 30842  2656  07A1               	addwf	op_solda@conta_erro^(0+128),f
 30843                           
 30844                           ;func.c: 491: if(conta_erro > 5) {
 30845  2657  3006               	movlw	6
 30846  2658  0221               	subwf	op_solda@conta_erro^(0+128),w
 30847  2659  1C03               	skipc
 30848  265A  2F30               	goto	l16274
 30849                           
 30850                           ;func.c: 492: flag.abortar = 1;
 30851  265B  0143               	movlb	3	; select bank3
 30852  265C  172C               	bsf	_flag^(0+384),6	;volatile
 30853                           
 30854                           ;func.c: 493: flag.sussess = 0;
 30855  265D  11AC               	bcf	_flag^(0+384),3	;volatile
 30856                           
 30857                           ;func.c: 494: flag.inicia = 0;
 30858  265E  122C               	bcf	_flag^(0+384),4	;volatile
 30859                           
 30860                           ;func.c: 495: LATDbits.LATD6 = 0;
 30861  265F  0140               	movlb	0	; select bank0
 30862  2660  1319               	bcf	25,6	;volatile
 30863                           
 30864                           ;func.c: 496: statusSolda = PARADO;
 30865  2661  0143               	movlb	3	; select bank3
 30866  2662  01DB               	clrf	_statusSolda^(0+384)
 30867                           
 30868                           ;func.c: 497: }
 30869                           ;func.c: 498: }
 30870  2663  2F30               	goto	l16274
 30871  2664                     l1277:	
 30872                           
 30873                           ;func.c: 499: else{
 30874                           ;func.c: 500: if(cfg.stop_release){
 30875  2664  0143               	movlb	3	; select bank3
 30876  2665  1C32               	btfss	(_cfg^(0+384)+2),0
 30877  2666  2E75               	goto	l16240
 30878                           
 30879                           ;func.c: 501: if ((cfg.aciona1 && !flag_in.aciona1) || (cfg.aciona2 && !flag_in.aciona2)
      +                          ){
 30880  2667  1CB0               	btfss	_cfg^(0+384),1
 30881  2668  2E6B               	goto	l1285
 30882  2669  1CCC               	btfss	_flag_in^(0+384),1	;volatile
 30883  266A  2E6E               	goto	l16238
 30884  266B                     l1285:	
 30885  266B  1930               	btfsc	_cfg^(0+384),2
 30886  266C  194C               	btfsc	_flag_in^(0+384),2	;volatile
 30887  266D  2F2E               	goto	l1286
 30888  266E                     l16238:	
 30889                           
 30890                           ;func.c: 502: statusSolda = FIXANDO;
 30891  266E  3003               	movlw	3
 30892  266F  0140               	movlb	0	; select bank0
 30893  2670  00D5               	movwf	??_op_solda
 30894  2671  0855               	movf	??_op_solda,w
 30895  2672  0143               	movlb	3	; select bank3
 30896  2673  00DB               	movwf	_statusSolda^(0+384)
 30897                           
 30898                           ;func.c: 503: }
 30899                           ;func.c: 504: }
 30900  2674  2F2E               	goto	l1286
 30901  2675                     l16240:	
 30902                           
 30903                           ;func.c: 505: else if (modo == CONTINUO_PULSO){
 30904  2675  3003               	movlw	3
 30905  2676  065C               	xorwf	_modo^(0+384),w
 30906  2677  1D03               	btfss	3,2
 30907  2678  2F2E               	goto	l1286
 30908                           
 30909                           ;func.c: 507: if ((cfg.aciona1 && flag_in.aciona1) || (cfg.aciona2 && flag_in.aciona2)){
 30910  2679  1CB0               	btfss	_cfg^(0+384),1
 30911  267A  2E7D               	goto	l1292
 30912  267B  18CC               	btfsc	_flag_in^(0+384),1	;volatile
 30913  267C  2E80               	goto	l16248
 30914  267D                     l1292:	
 30915  267D  1930               	btfsc	_cfg^(0+384),2
 30916  267E  1D4C               	btfss	_flag_in^(0+384),2	;volatile
 30917  267F  2F2C               	goto	l16272
 30918  2680                     l16248:	
 30919                           
 30920                           ;func.c: 509: if(subida_acionamento == 0){
 30921  2680  0141               	movlb	1	; select bank1
 30922  2681  0820               	movf	op_solda@subida_acionamento^(0+128),w
 30923  2682  1D03               	btfss	3,2
 30924  2683  2F2E               	goto	l1286
 30925                           
 30926                           ;func.c: 511: subida_acionamento = 1;
 30927  2684  01A0               	clrf	op_solda@subida_acionamento^(0+128)
 30928  2685  0AA0               	incf	op_solda@subida_acionamento^(0+128),f
 30929                           
 30930                           ;func.c: 512: stop_timer();
 30931  2686  3190  2000  31A5   	fcall	_stop_timer
 30932                           
 30933                           ;func.c: 513: t1ms_solda_acum += (unsigned long)t1ms_ISR;
 30934  2689  0143               	movlb	3	; select bank3
 30935  268A  0848               	movf	_t1ms_ISR^(0+384),w
 30936  268B  0144               	movlb	4	; select bank4
 30937  268C  07A4               	addwf	_t1ms_solda_acum^(0+512),f
 30938  268D  0143               	movlb	3	; select bank3
 30939  268E  0849               	movf	(_t1ms_ISR+1)^(0+384),w
 30940  268F  0144               	movlb	4	; select bank4
 30941  2690  3DA5               	addwfc	(_t1ms_solda_acum+1)^(0+512),f
 30942  2691  3000               	movlw	0
 30943  2692  3DA6               	addwfc	(_t1ms_solda_acum+2)^(0+512),f
 30944  2693  3DA7               	addwfc	(_t1ms_solda_acum+3)^(0+512),f
 30945                           
 30946                           ;func.c: 514: if(energia_total > 1000){
 30947  2694  3003               	movlw	3
 30948  2695  0143               	movlb	3	; select bank3
 30949  2696  0239               	subwf	(_energia_total+1)^(0+384),w
 30950  2697  30E9               	movlw	233
 30951  2698  1903               	skipnz
 30952  2699  0238               	subwf	_energia_total^(0+384),w
 30953  269A  1C03               	skipc
 30954  269B  2EA6               	goto	l16260
 30955                           
 30956                           ;func.c: 515: energia_total_kJ++;
 30957  269C  3001               	movlw	1
 30958  269D  0144               	movlb	4	; select bank4
 30959  269E  07CC               	addwf	_energia_total_kJ^(0+512),f
 30960  269F  3000               	movlw	0
 30961  26A0  3DCD               	addwfc	(_energia_total_kJ+1)^(0+512),f
 30962                           
 30963                           ;func.c: 516: energia_total -= 1000;
 30964  26A1  30E8               	movlw	232
 30965  26A2  0143               	movlb	3	; select bank3
 30966  26A3  02B8               	subwf	_energia_total^(0+384),f
 30967  26A4  3003               	movlw	3
 30968  26A5  3BB9               	subwfb	(_energia_total+1)^(0+384),f
 30969  26A6                     l16260:	
 30970                           
 30971                           ;func.c: 517: }
 30972                           ;func.c: 518: salva_EEPROM32(++n_pecas,5);
 30973  26A6  3001               	movlw	1
 30974  26A7  07A0               	addwf	_n_pecas^(0+384),f
 30975  26A8  3000               	movlw	0
 30976  26A9  3DA1               	addwfc	(_n_pecas+1)^(0+384),f
 30977  26AA  3000               	movlw	0
 30978  26AB  3DA2               	addwfc	(_n_pecas+2)^(0+384),f
 30979  26AC  3000               	movlw	0
 30980  26AD  3DA3               	addwfc	(_n_pecas+3)^(0+384),f
 30981  26AE  0823               	movf	(_n_pecas+3)^(0+384),w
 30982  26AF  0140               	movlb	0	; select bank0
 30983  26B0  00B1               	movwf	salva_EEPROM32@valor+3
 30984  26B1  0143               	movlb	3	; select bank3
 30985  26B2  0822               	movf	(_n_pecas+2)^(0+384),w
 30986  26B3  0140               	movlb	0	; select bank0
 30987  26B4  00B0               	movwf	salva_EEPROM32@valor+2
 30988  26B5  0143               	movlb	3	; select bank3
 30989  26B6  0821               	movf	(_n_pecas+1)^(0+384),w
 30990  26B7  0140               	movlb	0	; select bank0
 30991  26B8  00AF               	movwf	salva_EEPROM32@valor+1
 30992  26B9  0143               	movlb	3	; select bank3
 30993  26BA  0820               	movf	_n_pecas^(0+384),w
 30994  26BB  0140               	movlb	0	; select bank0
 30995  26BC  00AE               	movwf	salva_EEPROM32@valor
 30996  26BD  3005               	movlw	5
 30997  26BE  00D5               	movwf	??_op_solda
 30998  26BF  0855               	movf	??_op_solda,w
 30999  26C0  00B2               	movwf	salva_EEPROM32@address
 31000  26C1  31CD  2527  31A5   	fcall	_salva_EEPROM32
 31001                           
 31002                           ;func.c: 519: salva_EEPROM32(++n_pecas_l,1);
 31003  26C4  3001               	movlw	1
 31004  26C5  0144               	movlb	4	; select bank4
 31005  26C6  07B0               	addwf	_n_pecas_l^(0+512),f
 31006  26C7  3000               	movlw	0
 31007  26C8  3DB1               	addwfc	(_n_pecas_l+1)^(0+512),f
 31008  26C9  3000               	movlw	0
 31009  26CA  3DB2               	addwfc	(_n_pecas_l+2)^(0+512),f
 31010  26CB  3000               	movlw	0
 31011  26CC  3DB3               	addwfc	(_n_pecas_l+3)^(0+512),f
 31012  26CD  0833               	movf	(_n_pecas_l+3)^(0+512),w
 31013  26CE  0140               	movlb	0	; select bank0
 31014  26CF  00B1               	movwf	salva_EEPROM32@valor+3
 31015  26D0  0144               	movlb	4	; select bank4
 31016  26D1  0832               	movf	(_n_pecas_l+2)^(0+512),w
 31017  26D2  0140               	movlb	0	; select bank0
 31018  26D3  00B0               	movwf	salva_EEPROM32@valor+2
 31019  26D4  0144               	movlb	4	; select bank4
 31020  26D5  0831               	movf	(_n_pecas_l+1)^(0+512),w
 31021  26D6  0140               	movlb	0	; select bank0
 31022  26D7  00AF               	movwf	salva_EEPROM32@valor+1
 31023  26D8  0144               	movlb	4	; select bank4
 31024  26D9  0830               	movf	_n_pecas_l^(0+512),w
 31025  26DA  0140               	movlb	0	; select bank0
 31026  26DB  00AE               	movwf	salva_EEPROM32@valor
 31027  26DC  01B2               	clrf	salva_EEPROM32@address
 31028  26DD  0AB2               	incf	salva_EEPROM32@address,f
 31029  26DE  31CD  2527  31A5   	fcall	_salva_EEPROM32
 31030                           
 31031                           ;func.c: 521: escreve_LCD(2,1,n_pecas_str[idioma]);
 31032  26E1  0140               	movlb	0	; select bank0
 31033  26E2  01B5               	clrf	escreve_LCD@coluna
 31034  26E3  0AB5               	incf	escreve_LCD@coluna,f
 31035  26E4  0143               	movlb	3	; select bank3
 31036  26E5  085A               	movf	_idioma^(0+384),w
 31037  26E6  0140               	movlb	0	; select bank0
 31038  26E7  00D5               	movwf	??_op_solda
 31039  26E8  01D6               	clrf	??_op_solda+1
 31040  26E9  0855               	movf	??_op_solda,w
 31041  26EA  00AB               	movwf	___wmul@multiplier
 31042  26EB  0856               	movf	??_op_solda+1,w
 31043  26EC  00AC               	movwf	___wmul@multiplier+1
 31044  26ED  3011               	movlw	17
 31045  26EE  00AD               	movwf	___wmul@multiplicand
 31046  26EF  3000               	movlw	0
 31047  26F0  00AE               	movwf	___wmul@multiplicand+1
 31048  26F1  31D0  20FE  31A5   	fcall	___wmul
 31049  26F4  3078               	movlw	low (_n_pecas_str| (0+32768))
 31050  26F5  0140               	movlb	0	; select bank0
 31051  26F6  00D7               	movwf	??_op_solda+2
 31052  26F7  30E0               	movlw	high (_n_pecas_str| (0+32768))
 31053  26F8  00D8               	movwf	??_op_solda+3
 31054  26F9  082B               	movf	?___wmul,w
 31055  26FA  0757               	addwf	??_op_solda+2,w
 31056  26FB  00B6               	movwf	escreve_LCD@str
 31057  26FC  082C               	movf	?___wmul+1,w
 31058  26FD  3D58               	addwfc	??_op_solda+3,w
 31059  26FE  00B7               	movwf	escreve_LCD@str+1
 31060  26FF  3002               	movlw	2
 31061  2700  31E7  27C1  31A5   	fcall	_escreve_LCD
 31062                           
 31063                           ;func.c: 522: ltoa(str,n_pecas,10);
 31064  2703  0143               	movlb	3	; select bank3
 31065  2704  0823               	movf	(_n_pecas+3)^(0+384),w
 31066  2705  0140               	movlb	0	; select bank0
 31067  2706  00CD               	movwf	ltoa@val+3
 31068  2707  0143               	movlb	3	; select bank3
 31069  2708  0822               	movf	(_n_pecas+2)^(0+384),w
 31070  2709  0140               	movlb	0	; select bank0
 31071  270A  00CC               	movwf	ltoa@val+2
 31072  270B  0143               	movlb	3	; select bank3
 31073  270C  0821               	movf	(_n_pecas+1)^(0+384),w
 31074  270D  0140               	movlb	0	; select bank0
 31075  270E  00CB               	movwf	ltoa@val+1
 31076  270F  0143               	movlb	3	; select bank3
 31077  2710  0820               	movf	_n_pecas^(0+384),w
 31078  2711  0140               	movlb	0	; select bank0
 31079  2712  00CA               	movwf	ltoa@val
 31080  2713  300A               	movlw	10
 31081  2714  00CE               	movwf	ltoa@base
 31082  2715  3000               	movlw	0
 31083  2716  00CF               	movwf	ltoa@base+1
 31084  2717  305C               	movlw	(low (_str| (0+512)))& (0+255)
 31085  2718  31D4  24DE  31A5   	fcall	_ltoa
 31086                           
 31087                           ;func.c: 523: Lcd_Write_String(str);
 31088  271B  305C               	movlw	low _str
 31089  271C  0140               	movlb	0	; select bank0
 31090  271D  00B0               	movwf	Lcd_Write_String@a
 31091  271E  3002               	movlw	high _str
 31092  271F  00B1               	movwf	Lcd_Write_String@a+1
 31093  2720  31D1  2171  31A5   	fcall	_Lcd_Write_String
 31094                           
 31095                           ;func.c: 525: start_timer(t);
 31096  2723  0140               	movlb	0	; select bank0
 31097  2724  0854               	movf	op_solda@t+1,w
 31098  2725  00AC               	movwf	start_timer@t+1
 31099  2726  0853               	movf	op_solda@t,w
 31100  2727  00AB               	movwf	start_timer@t
 31101  2728  31E1  2165  31A5   	fcall	_start_timer
 31102                           
 31103                           ;func.c: 526: }
 31104                           ;func.c: 527: }
 31105  272B  2F2E               	goto	l1286
 31106  272C                     l16272:	
 31107                           
 31108                           ;func.c: 528: else{
 31109                           ;func.c: 530: subida_acionamento = 0;
 31110  272C  0141               	movlb	1	; select bank1
 31111  272D  01A0               	clrf	op_solda@subida_acionamento^(0+128)
 31112  272E                     l1286:	
 31113                           
 31114                           ;func.c: 531: }
 31115                           ;func.c: 532: }
 31116                           ;func.c: 533: conta_erro = 0;
 31117  272E  0141               	movlb	1	; select bank1
 31118  272F  01A1               	clrf	op_solda@conta_erro^(0+128)
 31119  2730                     l16274:	
 31120                           
 31121                           ;func.c: 534: }
 31122                           ;func.c: 536: if(!T5CONbits.TMR5ON){
 31123  2730  0144               	movlb	4	; select bank4
 31124  2731  181A               	btfsc	26,0	;volatile
 31125  2732  2F62               	goto	l16288
 31126                           
 31127                           ;func.c: 537: if(modo == CONTINUO){
 31128  2733  3002               	movlw	2
 31129  2734  0143               	movlb	3	; select bank3
 31130  2735  065C               	xorwf	_modo^(0+384),w
 31131  2736  1D03               	btfss	3,2
 31132  2737  2F5C               	goto	l16286
 31133                           
 31134                           ;func.c: 538: start_timer(1000);
 31135  2738  30E8               	movlw	232
 31136  2739  0140               	movlb	0	; select bank0
 31137  273A  00AB               	movwf	start_timer@t
 31138  273B  3003               	movlw	3
 31139  273C  00AC               	movwf	start_timer@t+1
 31140  273D  31E1  2165  31A5   	fcall	_start_timer
 31141                           
 31142                           ;func.c: 539: t1ms_solda_acum += 1000UL;
 31143  2740  30E8               	movlw	232
 31144  2741  0144               	movlb	4	; select bank4
 31145  2742  07A4               	addwf	_t1ms_solda_acum^(0+512),f
 31146  2743  3003               	movlw	3
 31147  2744  3DA5               	addwfc	(_t1ms_solda_acum+1)^(0+512),f
 31148  2745  3000               	movlw	0
 31149  2746  3DA6               	addwfc	(_t1ms_solda_acum+2)^(0+512),f
 31150  2747  3000               	movlw	0
 31151  2748  3DA7               	addwfc	(_t1ms_solda_acum+3)^(0+512),f
 31152                           
 31153                           ;func.c: 541: if(energia_total > 1000){
 31154  2749  3003               	movlw	3
 31155  274A  0143               	movlb	3	; select bank3
 31156  274B  0239               	subwf	(_energia_total+1)^(0+384),w
 31157  274C  30E9               	movlw	233
 31158  274D  1903               	skipnz
 31159  274E  0238               	subwf	_energia_total^(0+384),w
 31160  274F  1C03               	skipc
 31161  2750  2F62               	goto	l16288
 31162                           
 31163                           ;func.c: 542: energia_total_kJ++;
 31164  2751  3001               	movlw	1
 31165  2752  0144               	movlb	4	; select bank4
 31166  2753  07CC               	addwf	_energia_total_kJ^(0+512),f
 31167  2754  3000               	movlw	0
 31168  2755  3DCD               	addwfc	(_energia_total_kJ+1)^(0+512),f
 31169                           
 31170                           ;func.c: 543: energia_total -= 1000;
 31171  2756  30E8               	movlw	232
 31172  2757  0143               	movlb	3	; select bank3
 31173  2758  02B8               	subwf	_energia_total^(0+384),f
 31174  2759  3003               	movlw	3
 31175  275A  3BB9               	subwfb	(_energia_total+1)^(0+384),f
 31176                           
 31177                           ;func.c: 544: }
 31178                           ;func.c: 545: }
 31179  275B  2F62               	goto	l16288
 31180  275C                     l16286:	
 31181                           
 31182                           ;func.c: 546: else{
 31183                           ;func.c: 547: statusSolda = FIXANDO;
 31184  275C  3003               	movlw	3
 31185  275D  0140               	movlb	0	; select bank0
 31186  275E  00D5               	movwf	??_op_solda
 31187  275F  0855               	movf	??_op_solda,w
 31188  2760  0143               	movlb	3	; select bank3
 31189  2761  00DB               	movwf	_statusSolda^(0+384)
 31190  2762                     l16288:	
 31191                           
 31192                           ;func.c: 548: }
 31193                           ;func.c: 549: }
 31194                           ;func.c: 552: }while(statusSolda == SOLDANDO && !flag.abortar);
 31195  2762  3002               	movlw	2
 31196  2763  0143               	movlb	3	; select bank3
 31197  2764  065B               	xorwf	_statusSolda^(0+384),w
 31198  2765  1D03               	btfss	3,2
 31199  2766  2F69               	goto	l16292
 31200  2767  1F2C               	btfss	_flag^(0+384),6	;volatile
 31201  2768  2DF9               	goto	l1267
 31202  2769                     l16292:	
 31203                           
 31204                           ;func.c: 554: if(modo == NORMAL || modo == CONTINUO || flag.abortar) {
 31205  2769  085C               	movf	_modo^(0+384),w
 31206  276A  1903               	btfsc	3,2
 31207  276B  2F72               	goto	l16298
 31208  276C  3002               	movlw	2
 31209  276D  065C               	xorwf	_modo^(0+384),w
 31210  276E  1903               	btfsc	3,2
 31211  276F  2F72               	goto	l16298
 31212  2770  1F2C               	btfss	_flag^(0+384),6	;volatile
 31213  2771  2F81               	goto	l16308
 31214  2772                     l16298:	
 31215                           
 31216                           ;func.c: 555: status_gerador(STATUS_HF,0);
 31217  2772  3000               	movlw	0
 31218  2773  0140               	movlb	0	; select bank0
 31219  2774  00B0               	movwf	status_gerador@b
 31220  2775  00B1               	movwf	status_gerador@b+1
 31221  2776  3006               	movlw	6
 31222  2777  31CC  24C4  31A5   	fcall	_status_gerador
 31223                           
 31224                           ;func.c: 556: flag.US = 0;
 31225  277A  0143               	movlb	3	; select bank3
 31226  277B  12AC               	bcf	_flag^(0+384),5	;volatile
 31227                           
 31228                           ;func.c: 557: led.HF = 0;
 31229  277C  1065               	bcf	_led^(0+384),0	;volatile
 31230                           
 31231                           ;func.c: 558: LATDbits.LATD6 = 0;
 31232  277D  0140               	movlb	0	; select bank0
 31233  277E  1319               	bcf	25,6	;volatile
 31234                           
 31235                           ;func.c: 559: statusSolda = PARADO;
 31236  277F  0143               	movlb	3	; select bank3
 31237  2780  01DB               	clrf	_statusSolda^(0+384)
 31238  2781                     l16308:	
 31239                           
 31240                           ;func.c: 560: }
 31241                           ;func.c: 562: stop_timer();
 31242  2781  3190  2000  31A5   	fcall	_stop_timer
 31243                           
 31244                           ;func.c: 563: t1ms_solda = t1ms_ISR;
 31245  2784  0143               	movlb	3	; select bank3
 31246  2785  0849               	movf	(_t1ms_ISR+1)^(0+384),w
 31247  2786  00C7               	movwf	(_t1ms_solda+1)^(0+384)
 31248  2787  0848               	movf	_t1ms_ISR^(0+384),w
 31249  2788  00C6               	movwf	_t1ms_solda^(0+384)
 31250                           
 31251                           ;func.c: 565: t1ms_solda_acum += ((unsigned long)t1ms_solda);
 31252  2789  0846               	movf	_t1ms_solda^(0+384),w
 31253  278A  0144               	movlb	4	; select bank4
 31254  278B  07A4               	addwf	_t1ms_solda_acum^(0+512),f
 31255  278C  0143               	movlb	3	; select bank3
 31256  278D  0847               	movf	(_t1ms_solda+1)^(0+384),w
 31257  278E  0144               	movlb	4	; select bank4
 31258  278F  3DA5               	addwfc	(_t1ms_solda_acum+1)^(0+512),f
 31259  2790  3000               	movlw	0
 31260  2791  3DA6               	addwfc	(_t1ms_solda_acum+2)^(0+512),f
 31261  2792  3DA7               	addwfc	(_t1ms_solda_acum+3)^(0+512),f
 31262                           
 31263                           ;func.c: 566: if(t1ms_solda_acum > 100UL){
 31264  2793  0827               	movf	(_t1ms_solda_acum+3)^(0+512),w
 31265  2794  1D03               	btfss	3,2
 31266  2795  2FA0               	goto	l16316
 31267  2796  0826               	movf	(_t1ms_solda_acum+2)^(0+512),w
 31268  2797  1D03               	btfss	3,2
 31269  2798  2FA0               	goto	l16316
 31270  2799  0825               	movf	(_t1ms_solda_acum+1)^(0+512),w
 31271  279A  1D03               	btfss	3,2
 31272  279B  2FA0               	goto	l16316
 31273  279C  3065               	movlw	101
 31274  279D  0224               	subwf	_t1ms_solda_acum^(0+512),w
 31275  279E  1C03               	btfss	3,0
 31276  279F  0008               	return
 31277  27A0                     l16316:	
 31278                           
 31279                           ;func.c: 567: t100ms_solda_cont = (t1ms_solda_acum/100UL);
 31280  27A0  3000               	movlw	0
 31281  27A1  0140               	movlb	0	; select bank0
 31282  27A2  00B2               	movwf	___lldiv@divisor+3
 31283  27A3  3000               	movlw	0
 31284  27A4  00B1               	movwf	___lldiv@divisor+2
 31285  27A5  3000               	movlw	0
 31286  27A6  00B0               	movwf	___lldiv@divisor+1
 31287  27A7  3064               	movlw	100
 31288  27A8  00AF               	movwf	___lldiv@divisor
 31289  27A9  0144               	movlb	4	; select bank4
 31290  27AA  0827               	movf	(_t1ms_solda_acum+3)^(0+512),w
 31291  27AB  0140               	movlb	0	; select bank0
 31292  27AC  00B6               	movwf	___lldiv@dividend+3
 31293  27AD  0144               	movlb	4	; select bank4
 31294  27AE  0826               	movf	(_t1ms_solda_acum+2)^(0+512),w
 31295  27AF  0140               	movlb	0	; select bank0
 31296  27B0  00B5               	movwf	___lldiv@dividend+2
 31297  27B1  0144               	movlb	4	; select bank4
 31298  27B2  0825               	movf	(_t1ms_solda_acum+1)^(0+512),w
 31299  27B3  0140               	movlb	0	; select bank0
 31300  27B4  00B4               	movwf	___lldiv@dividend+1
 31301  27B5  0144               	movlb	4	; select bank4
 31302  27B6  0824               	movf	_t1ms_solda_acum^(0+512),w
 31303  27B7  0140               	movlb	0	; select bank0
 31304  27B8  00B3               	movwf	___lldiv@dividend
 31305  27B9  31CB  236E  31A5   	fcall	___lldiv
 31306  27BC  0140               	movlb	0	; select bank0
 31307  27BD  0832               	movf	?___lldiv+3,w
 31308  27BE  0144               	movlb	4	; select bank4
 31309  27BF  00AB               	movwf	(_t100ms_solda_cont+3)^(0+512)
 31310  27C0  0140               	movlb	0	; select bank0
 31311  27C1  0831               	movf	?___lldiv+2,w
 31312  27C2  0144               	movlb	4	; select bank4
 31313  27C3  00AA               	movwf	(_t100ms_solda_cont+2)^(0+512)
 31314  27C4  0140               	movlb	0	; select bank0
 31315  27C5  0830               	movf	?___lldiv+1,w
 31316  27C6  0144               	movlb	4	; select bank4
 31317  27C7  00A9               	movwf	(_t100ms_solda_cont+1)^(0+512)
 31318  27C8  0140               	movlb	0	; select bank0
 31319  27C9  082F               	movf	?___lldiv,w
 31320  27CA  0144               	movlb	4	; select bank4
 31321  27CB  00A8               	movwf	_t100ms_solda_cont^(0+512)
 31322                           
 31323                           ;func.c: 568: t100ms_solda += t100ms_solda_cont;
 31324  27CC  0828               	movf	_t100ms_solda_cont^(0+512),w
 31325  27CD  07AC               	addwf	_t100ms_solda^(0+512),f
 31326  27CE  0829               	movf	(_t100ms_solda_cont+1)^(0+512),w
 31327  27CF  3DAD               	addwfc	(_t100ms_solda+1)^(0+512),f
 31328  27D0  082A               	movf	(_t100ms_solda_cont+2)^(0+512),w
 31329  27D1  3DAE               	addwfc	(_t100ms_solda+2)^(0+512),f
 31330  27D2  082B               	movf	(_t100ms_solda_cont+3)^(0+512),w
 31331  27D3  3DAF               	addwfc	(_t100ms_solda+3)^(0+512),f
 31332                           
 31333                           ;func.c: 569: t1ms_solda_acum %= 100UL;
 31334  27D4  3000               	movlw	0
 31335  27D5  0140               	movlb	0	; select bank0
 31336  27D6  00AE               	movwf	___llmod@divisor+3
 31337  27D7  3000               	movlw	0
 31338  27D8  00AD               	movwf	___llmod@divisor+2
 31339  27D9  3000               	movlw	0
 31340  27DA  00AC               	movwf	___llmod@divisor+1
 31341  27DB  3064               	movlw	100
 31342  27DC  00AB               	movwf	___llmod@divisor
 31343  27DD  0144               	movlb	4	; select bank4
 31344  27DE  0827               	movf	(_t1ms_solda_acum+3)^(0+512),w
 31345  27DF  0140               	movlb	0	; select bank0
 31346  27E0  00B2               	movwf	___llmod@dividend+3
 31347  27E1  0144               	movlb	4	; select bank4
 31348  27E2  0826               	movf	(_t1ms_solda_acum+2)^(0+512),w
 31349  27E3  0140               	movlb	0	; select bank0
 31350  27E4  00B1               	movwf	___llmod@dividend+2
 31351  27E5  0144               	movlb	4	; select bank4
 31352  27E6  0825               	movf	(_t1ms_solda_acum+1)^(0+512),w
 31353  27E7  0140               	movlb	0	; select bank0
 31354  27E8  00B0               	movwf	___llmod@dividend+1
 31355  27E9  0144               	movlb	4	; select bank4
 31356  27EA  0824               	movf	_t1ms_solda_acum^(0+512),w
 31357  27EB  0140               	movlb	0	; select bank0
 31358  27EC  00AF               	movwf	___llmod@dividend
 31359  27ED  31D7  2778         	fcall	___llmod
 31360  27EF  0140               	movlb	0	; select bank0
 31361  27F0  082E               	movf	?___llmod+3,w
 31362  27F1  0144               	movlb	4	; select bank4
 31363  27F2  00A7               	movwf	(_t1ms_solda_acum+3)^(0+512)
 31364  27F3  0140               	movlb	0	; select bank0
 31365  27F4  082D               	movf	?___llmod+2,w
 31366  27F5  0144               	movlb	4	; select bank4
 31367  27F6  00A6               	movwf	(_t1ms_solda_acum+2)^(0+512)
 31368  27F7  0140               	movlb	0	; select bank0
 31369  27F8  082C               	movf	?___llmod+1,w
 31370  27F9  0144               	movlb	4	; select bank4
 31371  27FA  00A5               	movwf	(_t1ms_solda_acum+1)^(0+512)
 31372  27FB  0140               	movlb	0	; select bank0
 31373  27FC  082B               	movf	?___llmod,w
 31374  27FD  0144               	movlb	4	; select bank4
 31375  27FE  00A4               	movwf	_t1ms_solda_acum^(0+512)
 31376  27FF  0008               	return
 31377  2800                     __end_of_op_solda:	
 31378                           
 31379                           	psect	text78
 31380  560E                     __ptext78:	
 31381 ;; *************** function _ver_freq *****************
 31382 ;; Defined at:
 31383 ;;		line 233 in file "func.c"
 31384 ;; Parameters:    Size  Location     Type
 31385 ;;  f               2   38[BANK0 ] unsigned int 
 31386 ;; Auto vars:     Size  Location     Type
 31387 ;;		None
 31388 ;; Return value:  Size  Location     Type
 31389 ;;                  1    wreg      unsigned char 
 31390 ;; Registers used:
 31391 ;;		wreg
 31392 ;; Tracked objects:
 31393 ;;		On entry : 0/0
 31394 ;;		On exit  : 0/0
 31395 ;;		Unchanged: 0/0
 31396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31400 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31401 ;;Total ram usage:        2 bytes
 31402 ;; Hardware stack levels used:    1
 31403 ;; Hardware stack levels required when called:    3
 31404 ;; This function calls:
 31405 ;;		Nothing
 31406 ;; This function is called by:
 31407 ;;		_main
 31408 ;;		_op_solda
 31409 ;;		_trata_dados
 31410 ;;		_teste_US
 31411 ;; This function uses a non-reentrant model
 31412 ;;
 31413                           
 31414                           
 31415                           ;psect for function _ver_freq
 31416  560E                     _ver_freq:	
 31417                           
 31418                           ;func.c: 234: if (f > limite_24)
 31419                           
 31420                           ;incstack = 0
 31421                           ; Regs used in _ver_freq: [wreg]
 31422  560E  0140               	movlb	0	; select bank0
 31423  560F  0847               	movf	ver_freq@f+1,w
 31424  5610  0144               	movlb	4	; select bank4
 31425  5611  0243               	subwf	(_limite_24+1)^(0+512),w
 31426  5612  1D03               	skipz
 31427  5613  2E18               	goto	u17555
 31428  5614  0140               	movlb	0	; select bank0
 31429  5615  0846               	movf	ver_freq@f,w
 31430  5616  0144               	movlb	4	; select bank4
 31431  5617  0242               	subwf	_limite_24^(0+512),w
 31432  5618                     u17555:	
 31433  5618  1803               	skipnc
 31434  5619  2E1C               	goto	l15696
 31435                           
 31436                           ;func.c: 235: return 24;
 31437  561A  3018               	movlw	24
 31438  561B  0008               	return
 31439  561C                     l15696:	
 31440                           
 31441                           ;func.c: 236: else if(f < limite_16)
 31442  561C  0841               	movf	(_limite_16+1)^(0+512),w
 31443  561D  0140               	movlb	0	; select bank0
 31444  561E  0247               	subwf	ver_freq@f+1,w
 31445  561F  1D03               	skipz
 31446  5620  2E25               	goto	u17565
 31447  5621  0144               	movlb	4	; select bank4
 31448  5622  0840               	movf	_limite_16^(0+512),w
 31449  5623  0140               	movlb	0	; select bank0
 31450  5624  0246               	subwf	ver_freq@f,w
 31451  5625                     u17565:	
 31452  5625  1803               	skipnc
 31453  5626  2E29               	goto	l15704
 31454                           
 31455                           ;func.c: 237: return 16;
 31456  5627  3010               	movlw	16
 31457  5628  0008               	return
 31458  5629                     l15704:	
 31459                           
 31460                           ;func.c: 238: else if(f > limite_22)
 31461  5629  0847               	movf	ver_freq@f+1,w
 31462  562A  0144               	movlb	4	; select bank4
 31463  562B  023F               	subwf	(_limite_22+1)^(0+512),w
 31464  562C  1D03               	skipz
 31465  562D  2E32               	goto	u17575
 31466  562E  0140               	movlb	0	; select bank0
 31467  562F  0846               	movf	ver_freq@f,w
 31468  5630  0144               	movlb	4	; select bank4
 31469  5631  023E               	subwf	_limite_22^(0+512),w
 31470  5632                     u17575:	
 31471  5632  1803               	skipnc
 31472  5633  2E36               	goto	l15712
 31473                           
 31474                           ;func.c: 239: return 22;
 31475  5634  3016               	movlw	22
 31476  5635  0008               	return
 31477  5636                     l15712:	
 31478                           
 31479                           ;func.c: 240: else if(f < limite_17)
 31480  5636  083D               	movf	(_limite_17+1)^(0+512),w
 31481  5637  0140               	movlb	0	; select bank0
 31482  5638  0247               	subwf	ver_freq@f+1,w
 31483  5639  1D03               	skipz
 31484  563A  2E3F               	goto	u17585
 31485  563B  0144               	movlb	4	; select bank4
 31486  563C  083C               	movf	_limite_17^(0+512),w
 31487  563D  0140               	movlb	0	; select bank0
 31488  563E  0246               	subwf	ver_freq@f,w
 31489  563F                     u17585:	
 31490  563F  1803               	skipnc
 31491  5640  2E43               	goto	l15720
 31492                           
 31493                           ;func.c: 241: return 17;
 31494  5641  3011               	movlw	17
 31495  5642  0008               	return
 31496  5643                     l15720:	
 31497                           
 31498                           ;func.c: 242: else
 31499                           ;func.c: 243: return 0;
 31500  5643  3000               	movlw	0
 31501  5644  0008               	return
 31502  5645                     __end_of_ver_freq:	
 31503                           
 31504                           	psect	text79
 31505  4CC4                     __ptext79:	
 31506 ;; *************** function _status_gerador *****************
 31507 ;; Defined at:
 31508 ;;		line 2113 in file "func.c"
 31509 ;; Parameters:    Size  Location     Type
 31510 ;;  x               1    wreg     enum E15193
 31511 ;;  b               2   16[BANK0 ] unsigned int 
 31512 ;; Auto vars:     Size  Location     Type
 31513 ;;  x               1   18[BANK0 ] enum E15193
 31514 ;; Return value:  Size  Location     Type
 31515 ;;                  1    wreg      void 
 31516 ;; Registers used:
 31517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31518 ;; Tracked objects:
 31519 ;;		On entry : 0/0
 31520 ;;		On exit  : 0/0
 31521 ;;		Unchanged: 0/0
 31522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31523 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31524 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31526 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31527 ;;Total ram usage:        3 bytes
 31528 ;; Hardware stack levels used:    1
 31529 ;; Hardware stack levels required when called:    4
 31530 ;; This function calls:
 31531 ;;		_saida
 31532 ;; This function is called by:
 31533 ;;		_main
 31534 ;;		_op_solda
 31535 ;;		_trata_dados
 31536 ;;		_emergencia
 31537 ;;		_ciclar
 31538 ;; This function uses a non-reentrant model
 31539 ;;
 31540                           
 31541                           
 31542                           ;psect for function _status_gerador
 31543  4CC4                     _status_gerador:	
 31544                           
 31545                           ;incstack = 0
 31546                           ; Regs used in _status_gerador: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 31547                           ;status_gerador@x stored from wreg
 31548  4CC4  0140               	movlb	0	; select bank0
 31549  4CC5  00B2               	movwf	status_gerador@x
 31550                           
 31551                           ;func.c: 2114: switch (x){
 31552  4CC6  2D1B               	goto	l15526
 31553  4CC7                     l1879:	
 31554                           ;func.c: 2117: case PNE_DESCE:
 31555                           
 31556                           ;func.c: 2116: break;
 31557                           
 31558                           ;func.c: 2115: case OUT_NC:
 31559                           
 31560                           
 31561                           ;func.c: 2118: if(cfg.pne_desce)
 31562  4CC7  0143               	movlb	3	; select bank3
 31563  4CC8  1E30               	btfss	_cfg^(0+384),4
 31564  4CC9  0008               	return
 31565                           
 31566                           ;func.c: 2119: saida(x,b);
 31567  4CCA  0140               	movlb	0	; select bank0
 31568  4CCB  0831               	movf	status_gerador@b+1,w
 31569  4CCC  00AC               	movwf	saida@b+1
 31570  4CCD  0830               	movf	status_gerador@b,w
 31571  4CCE  00AB               	movwf	saida@b
 31572  4CCF  0832               	movf	status_gerador@x,w
 31573  4CD0  31D1  21CE         	fcall	_saida
 31574                           
 31575                           ;func.c: 2120: break;
 31576  4CD2  0008               	return
 31577  4CD3                     l1881:	
 31578                           ;func.c: 2121: case PNE_SOBE:
 31579                           
 31580                           
 31581                           ;func.c: 2122: if(cfg.pne_sobe)
 31582  4CD3  0143               	movlb	3	; select bank3
 31583  4CD4  1DB0               	btfss	_cfg^(0+384),3
 31584  4CD5  0008               	return
 31585                           
 31586                           ;func.c: 2123: saida(x,b);
 31587  4CD6  0140               	movlb	0	; select bank0
 31588  4CD7  0831               	movf	status_gerador@b+1,w
 31589  4CD8  00AC               	movwf	saida@b+1
 31590  4CD9  0830               	movf	status_gerador@b,w
 31591  4CDA  00AB               	movwf	saida@b
 31592  4CDB  0832               	movf	status_gerador@x,w
 31593  4CDC  31D1  21CE         	fcall	_saida
 31594                           
 31595                           ;func.c: 2124: break;
 31596  4CDE  0008               	return
 31597  4CDF                     l1883:	
 31598                           ;func.c: 2125: case ERRO:
 31599                           
 31600                           
 31601                           ;func.c: 2126: if(cfg.trava_erro)
 31602  4CDF  0143               	movlb	3	; select bank3
 31603  4CE0  1D31               	btfss	(_cfg^(0+384)+1),2
 31604  4CE1  0008               	return
 31605                           
 31606                           ;func.c: 2127: saida(x,b);
 31607  4CE2  0140               	movlb	0	; select bank0
 31608  4CE3  0831               	movf	status_gerador@b+1,w
 31609  4CE4  00AC               	movwf	saida@b+1
 31610  4CE5  0830               	movf	status_gerador@b,w
 31611  4CE6  00AB               	movwf	saida@b
 31612  4CE7  0832               	movf	status_gerador@x,w
 31613  4CE8  31D1  21CE         	fcall	_saida
 31614                           
 31615                           ;func.c: 2128: break;
 31616  4CEA  0008               	return
 31617  4CEB                     l1885:	
 31618                           ;func.c: 2129: case ERRO_ENE:
 31619                           
 31620                           
 31621                           ;func.c: 2130: if(cfg.energ_erro)
 31622  4CEB  0143               	movlb	3	; select bank3
 31623  4CEC  1CB2               	btfss	(_cfg^(0+384)+2),1
 31624  4CED  0008               	return
 31625                           
 31626                           ;func.c: 2131: saida(x,b);
 31627  4CEE  0140               	movlb	0	; select bank0
 31628  4CEF  0831               	movf	status_gerador@b+1,w
 31629  4CF0  00AC               	movwf	saida@b+1
 31630  4CF1  0830               	movf	status_gerador@b,w
 31631  4CF2  00AB               	movwf	saida@b
 31632  4CF3  0832               	movf	status_gerador@x,w
 31633  4CF4  31D1  21CE         	fcall	_saida
 31634                           
 31635                           ;func.c: 2132: break;
 31636  4CF6  0008               	return
 31637  4CF7                     l1887:	
 31638                           ;func.c: 2133: case STATUS_GERADOR:
 31639                           
 31640                           
 31641                           ;func.c: 2134: if(cfg.status_out)
 31642  4CF7  0143               	movlb	3	; select bank3
 31643  4CF8  1EB1               	btfss	(_cfg^(0+384)+1),5
 31644  4CF9  0008               	return
 31645                           
 31646                           ;func.c: 2135: saida(x,b);
 31647  4CFA  0140               	movlb	0	; select bank0
 31648  4CFB  0831               	movf	status_gerador@b+1,w
 31649  4CFC  00AC               	movwf	saida@b+1
 31650  4CFD  0830               	movf	status_gerador@b,w
 31651  4CFE  00AB               	movwf	saida@b
 31652  4CFF  0832               	movf	status_gerador@x,w
 31653  4D00  31D1  21CE         	fcall	_saida
 31654                           
 31655                           ;func.c: 2136: break;
 31656  4D02  0008               	return
 31657  4D03                     l1889:	
 31658                           ;func.c: 2137: case STATUS_HF:
 31659                           
 31660                           
 31661                           ;func.c: 2138: if(cfg.status_hf)
 31662  4D03  0143               	movlb	3	; select bank3
 31663  4D04  1F31               	btfss	(_cfg^(0+384)+1),6
 31664  4D05  0008               	return
 31665                           
 31666                           ;func.c: 2139: saida(x,b);
 31667  4D06  0140               	movlb	0	; select bank0
 31668  4D07  0831               	movf	status_gerador@b+1,w
 31669  4D08  00AC               	movwf	saida@b+1
 31670  4D09  0830               	movf	status_gerador@b,w
 31671  4D0A  00AB               	movwf	saida@b
 31672  4D0B  0832               	movf	status_gerador@x,w
 31673  4D0C  31D1  21CE         	fcall	_saida
 31674                           
 31675                           ;func.c: 2140: break;
 31676  4D0E  0008               	return
 31677  4D0F                     l1891:	
 31678                           ;func.c: 2141: case RST_INV:
 31679                           
 31680                           
 31681                           ;func.c: 2142: if(cfg.rst_inv)
 31682  4D0F  0143               	movlb	3	; select bank3
 31683  4D10  1FB1               	btfss	(_cfg^(0+384)+1),7
 31684  4D11  0008               	return
 31685                           
 31686                           ;func.c: 2143: saida(x,b);
 31687  4D12  0140               	movlb	0	; select bank0
 31688  4D13  0831               	movf	status_gerador@b+1,w
 31689  4D14  00AC               	movwf	saida@b+1
 31690  4D15  0830               	movf	status_gerador@b,w
 31691  4D16  00AB               	movwf	saida@b
 31692  4D17  0832               	movf	status_gerador@x,w
 31693  4D18  31D1  21CE         	fcall	_saida
 31694                           
 31695                           ;func.c: 2145: }
 31696                           
 31697                           ;func.c: 2144: break;
 31698  4D1A  0008               	return
 31699  4D1B                     l15526:	
 31700  4D1B  0140               	movlb	0	; select bank0
 31701  4D1C  0832               	movf	status_gerador@x,w
 31702                           
 31703                           ; Switch size 1, requested type "space"
 31704                           ; Number of cases is 8, Range of values is 0 to 7
 31705                           ; switch strategies available:
 31706                           ; Name         Instructions Cycles
 31707                           ; direct_byte           22     6 (fixed)
 31708                           ; simple_byte           25    13 (average)
 31709                           ; jumptable            260     6 (fixed)
 31710                           ;	Chosen strategy is direct_byte
 31711  4D1D  0084               	movwf	4
 31712  4D1E  3008               	movlw	8
 31713  4D1F  0204               	subwf	4,w
 31714  4D20  1803               	skipnc
 31715  4D21  0008               	return
 31716  4D22  31E1               	movlp	high S18612
 31717  4D23  3504               	lslf	4,w
 31718  4D24  3E45               	addlw	low S18612
 31719  4D25  0082               	movwf	2
 31720  4D26                     l1893:	
 31721  4D26  0008               	return
 31722  4D27                     __end_of_status_gerador:	
 31723                           
 31724                           	psect	swtext6
 31725  6145                     __pswtext6:	
 31726  6145                     S18612:	
 31727  6145  31CD  2D26         	ljmp	l1893
 31728  6147  31CC  2CC7         	ljmp	l1879
 31729  6149  31CC  2CD3         	ljmp	l1881
 31730  614B  31CC  2CDF         	ljmp	l1883
 31731  614D  31CC  2CEB         	ljmp	l1885
 31732  614F  31CC  2CF7         	ljmp	l1887
 31733  6151  31CD  2D03         	ljmp	l1889
 31734  6153  31CD  2D0F         	ljmp	l1891
 31735                           
 31736                           	psect	text80
 31737  461D                     __ptext80:	
 31738 ;; *************** function _get_freq *****************
 31739 ;; Defined at:
 31740 ;;		line 175 in file "func.c"
 31741 ;; Parameters:    Size  Location     Type
 31742 ;;  acumulo         1    wreg     unsigned char 
 31743 ;; Auto vars:     Size  Location     Type
 31744 ;;  acumulo         1   37[BANK0 ] unsigned char 
 31745 ;; Return value:  Size  Location     Type
 31746 ;;                  2   29[BANK0 ] unsigned int 
 31747 ;; Registers used:
 31748 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 31749 ;; Tracked objects:
 31750 ;;		On entry : 0/0
 31751 ;;		On exit  : 0/0
 31752 ;;		Unchanged: 0/0
 31753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31754 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31755 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31756 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31757 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31758 ;;Total ram usage:        9 bytes
 31759 ;; Hardware stack levels used:    1
 31760 ;; Hardware stack levels required when called:    4
 31761 ;; This function calls:
 31762 ;;		_SMT1_GetCapturedPeriod
 31763 ;;		___awmod
 31764 ;;		___lldiv
 31765 ;; This function is called by:
 31766 ;;		_main
 31767 ;;		_set_freq
 31768 ;;		_op_solda
 31769 ;;		_teste_US
 31770 ;; This function uses a non-reentrant model
 31771 ;;
 31772                           
 31773                           
 31774                           ;psect for function _get_freq
 31775  461D                     _get_freq:	
 31776                           
 31777                           ;incstack = 0
 31778                           ; Regs used in _get_freq: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 31779                           ;get_freq@acumulo stored from wreg
 31780  461D  0140               	movlb	0	; select bank0
 31781  461E  00C5               	movwf	get_freq@acumulo
 31782                           
 31783                           ;func.c: 176: static unsigned long p,pp;
 31784                           ;func.c: 177: static unsigned char i;
 31785                           ;func.c: 178: static unsigned char i_arr;
 31786                           ;func.c: 179: p = 0;
 31787  461F  3000               	movlw	0
 31788  4620  0145               	movlb	5	; select bank5
 31789  4621  00C7               	movwf	(get_freq@p+3)^(0+640)
 31790  4622  3000               	movlw	0
 31791  4623  00C6               	movwf	(get_freq@p+2)^(0+640)
 31792  4624  3000               	movlw	0
 31793  4625  00C5               	movwf	(get_freq@p+1)^(0+640)
 31794  4626  3000               	movlw	0
 31795  4627  00C4               	movwf	get_freq@p^(0+640)
 31796                           
 31797                           ;func.c: 180: for(i = 0; i<acumulo; i++){
 31798  4628  0143               	movlb	3	; select bank3
 31799  4629  01D8               	clrf	get_freq@i^(0+384)
 31800  462A                     l14414:	
 31801  462A  0140               	movlb	0	; select bank0
 31802  462B  0845               	movf	get_freq@acumulo,w
 31803  462C  0143               	movlb	3	; select bank3
 31804  462D  0258               	subwf	get_freq@i^(0+384),w
 31805  462E  1803               	btfsc	3,0
 31806  462F  2E98               	goto	l14416
 31807                           
 31808                           ;func.c: 181: PIR8bits.SMT1PRAIF = 0;
 31809  4630  014E               	movlb	14	; select bank14
 31810  4631  1094               	bcf	20,1	;volatile
 31811  4632                     l1170:	
 31812                           ;func.c: 182: while(!PIR8bits.SMT1PRAIF);
 31813                           
 31814  4632  1C94               	btfss	20,1	;volatile
 31815  4633  2E32               	goto	l1170
 31816                           
 31817                           ;func.c: 183: pp = 20000000/SMT1_GetCapturedPeriod();
 31818  4634  31E1  2193  31C6   	fcall	_SMT1_GetCapturedPeriod
 31819  4637  0140               	movlb	0	; select bank0
 31820  4638  082E               	movf	?_SMT1_GetCapturedPeriod+3,w
 31821  4639  00B2               	movwf	___lldiv@divisor+3
 31822  463A  082D               	movf	?_SMT1_GetCapturedPeriod+2,w
 31823  463B  00B1               	movwf	___lldiv@divisor+2
 31824  463C  082C               	movf	?_SMT1_GetCapturedPeriod+1,w
 31825  463D  00B0               	movwf	___lldiv@divisor+1
 31826  463E  082B               	movf	?_SMT1_GetCapturedPeriod,w
 31827  463F  00AF               	movwf	___lldiv@divisor
 31828  4640  3001               	movlw	1
 31829  4641  00B6               	movwf	___lldiv@dividend+3
 31830  4642  3031               	movlw	49
 31831  4643  00B5               	movwf	___lldiv@dividend+2
 31832  4644  302D               	movlw	45
 31833  4645  00B4               	movwf	___lldiv@dividend+1
 31834  4646  3000               	movlw	0
 31835  4647  00B3               	movwf	___lldiv@dividend
 31836  4648  31CB  236E  31C6   	fcall	___lldiv
 31837  464B  0140               	movlb	0	; select bank0
 31838  464C  0832               	movf	?___lldiv+3,w
 31839  464D  0145               	movlb	5	; select bank5
 31840  464E  00C3               	movwf	(get_freq@pp+3)^(0+640)
 31841  464F  0140               	movlb	0	; select bank0
 31842  4650  0831               	movf	?___lldiv+2,w
 31843  4651  0145               	movlb	5	; select bank5
 31844  4652  00C2               	movwf	(get_freq@pp+2)^(0+640)
 31845  4653  0140               	movlb	0	; select bank0
 31846  4654  0830               	movf	?___lldiv+1,w
 31847  4655  0145               	movlb	5	; select bank5
 31848  4656  00C1               	movwf	(get_freq@pp+1)^(0+640)
 31849  4657  0140               	movlb	0	; select bank0
 31850  4658  082F               	movf	?___lldiv,w
 31851  4659  0145               	movlb	5	; select bank5
 31852  465A  00C0               	movwf	get_freq@pp^(0+640)
 31853                           
 31854                           ;func.c: 184: freq_atual_arr[i_arr%100] = pp;
 31855  465B  3064               	movlw	100
 31856  465C  0140               	movlb	0	; select bank0
 31857  465D  00B1               	movwf	___awmod@divisor
 31858  465E  3000               	movlw	0
 31859  465F  00B2               	movwf	___awmod@divisor+1
 31860  4660  0143               	movlb	3	; select bank3
 31861  4661  0857               	movf	get_freq@i_arr^(0+384),w
 31862  4662  0140               	movlb	0	; select bank0
 31863  4663  00BF               	movwf	??_get_freq
 31864  4664  01C0               	clrf	??_get_freq+1
 31865  4665  083F               	movf	??_get_freq,w
 31866  4666  00B3               	movwf	___awmod@dividend
 31867  4667  0840               	movf	??_get_freq+1,w
 31868  4668  00B4               	movwf	___awmod@dividend+1
 31869  4669  31C8  20FE  31C6   	fcall	___awmod
 31870  466C  0140               	movlb	0	; select bank0
 31871  466D  0831               	movf	?___awmod,w
 31872  466E  00C1               	movwf	??_get_freq+2
 31873  466F  0832               	movf	?___awmod+1,w
 31874  4670  00C2               	movwf	??_get_freq+3
 31875  4671  35C1               	lslf	??_get_freq+2,f
 31876  4672  0DC2               	rlf	??_get_freq+3,f
 31877  4673  3028               	movlw	40
 31878  4674  00C3               	movwf	??_get_freq+4
 31879  4675  302F               	movlw	47
 31880  4676  00C4               	movwf	??_get_freq+5
 31881  4677  0841               	movf	??_get_freq+2,w
 31882  4678  0743               	addwf	??_get_freq+4,w
 31883  4679  0086               	movwf	6
 31884  467A  0842               	movf	??_get_freq+3,w
 31885  467B  3D44               	addwfc	??_get_freq+5,w
 31886  467C  0087               	movwf	7
 31887  467D  0145               	movlb	5	; select bank5
 31888  467E  0840               	movf	get_freq@pp^(0+640),w
 31889  467F  3FC0               	movwi [0]fsr1
 31890  4680  0841               	movf	(get_freq@pp+1)^(0+640),w
 31891  4681  3FC1               	movwi [1]fsr1
 31892                           
 31893                           ;func.c: 185: i_arr++;
 31894  4682  3001               	movlw	1
 31895  4683  0140               	movlb	0	; select bank0
 31896  4684  00BF               	movwf	??_get_freq
 31897  4685  083F               	movf	??_get_freq,w
 31898  4686  0143               	movlb	3	; select bank3
 31899  4687  07D7               	addwf	get_freq@i_arr^(0+384),f
 31900                           
 31901                           ;func.c: 186: p += pp;
 31902  4688  0145               	movlb	5	; select bank5
 31903  4689  0840               	movf	get_freq@pp^(0+640),w
 31904  468A  07C4               	addwf	get_freq@p^(0+640),f
 31905  468B  0841               	movf	(get_freq@pp+1)^(0+640),w
 31906  468C  3DC5               	addwfc	(get_freq@p+1)^(0+640),f
 31907  468D  0842               	movf	(get_freq@pp+2)^(0+640),w
 31908  468E  3DC6               	addwfc	(get_freq@p+2)^(0+640),f
 31909  468F  0843               	movf	(get_freq@pp+3)^(0+640),w
 31910  4690  3DC7               	addwfc	(get_freq@p+3)^(0+640),f
 31911  4691  3001               	movlw	1
 31912  4692  0140               	movlb	0	; select bank0
 31913  4693  00BF               	movwf	??_get_freq
 31914  4694  083F               	movf	??_get_freq,w
 31915  4695  0143               	movlb	3	; select bank3
 31916  4696  07D8               	addwf	get_freq@i^(0+384),f
 31917  4697  2E2A               	goto	l14414
 31918  4698                     l14416:	
 31919                           
 31920                           ;func.c: 187: }
 31921                           ;func.c: 188: return (unsigned int)(p/acumulo);
 31922  4698  0140               	movlb	0	; select bank0
 31923  4699  0845               	movf	get_freq@acumulo,w
 31924  469A  00BF               	movwf	??_get_freq
 31925  469B  01C0               	clrf	??_get_freq+1
 31926  469C  01C1               	clrf	??_get_freq+2
 31927  469D  01C2               	clrf	??_get_freq+3
 31928  469E  0842               	movf	??_get_freq+3,w
 31929  469F  00B2               	movwf	___lldiv@divisor+3
 31930  46A0  0841               	movf	??_get_freq+2,w
 31931  46A1  00B1               	movwf	___lldiv@divisor+2
 31932  46A2  0840               	movf	??_get_freq+1,w
 31933  46A3  00B0               	movwf	___lldiv@divisor+1
 31934  46A4  083F               	movf	??_get_freq,w
 31935  46A5  00AF               	movwf	___lldiv@divisor
 31936  46A6  0145               	movlb	5	; select bank5
 31937  46A7  0847               	movf	(get_freq@p+3)^(0+640),w
 31938  46A8  0140               	movlb	0	; select bank0
 31939  46A9  00B6               	movwf	___lldiv@dividend+3
 31940  46AA  0145               	movlb	5	; select bank5
 31941  46AB  0846               	movf	(get_freq@p+2)^(0+640),w
 31942  46AC  0140               	movlb	0	; select bank0
 31943  46AD  00B5               	movwf	___lldiv@dividend+2
 31944  46AE  0145               	movlb	5	; select bank5
 31945  46AF  0845               	movf	(get_freq@p+1)^(0+640),w
 31946  46B0  0140               	movlb	0	; select bank0
 31947  46B1  00B4               	movwf	___lldiv@dividend+1
 31948  46B2  0145               	movlb	5	; select bank5
 31949  46B3  0844               	movf	get_freq@p^(0+640),w
 31950  46B4  0140               	movlb	0	; select bank0
 31951  46B5  00B3               	movwf	___lldiv@dividend
 31952  46B6  31CB  236E         	fcall	___lldiv
 31953  46B8  0140               	movlb	0	; select bank0
 31954  46B9  0830               	movf	?___lldiv+1,w
 31955  46BA  00BE               	movwf	?_get_freq+1
 31956  46BB  082F               	movf	?___lldiv,w
 31957  46BC  00BD               	movwf	?_get_freq
 31958  46BD  0008               	return
 31959  46BE                     __end_of_get_freq:	
 31960                           
 31961                           	psect	text81
 31962  48FE                     __ptext81:	
 31963 ;; *************** function ___awmod *****************
 31964 ;; Defined at:
 31965 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 31966 ;; Parameters:    Size  Location     Type
 31967 ;;  divisor         2   17[BANK0 ] int 
 31968 ;;  dividend        2   19[BANK0 ] int 
 31969 ;; Auto vars:     Size  Location     Type
 31970 ;;  sign            1   23[BANK0 ] unsigned char 
 31971 ;;  counter         1   22[BANK0 ] unsigned char 
 31972 ;; Return value:  Size  Location     Type
 31973 ;;                  2   17[BANK0 ] int 
 31974 ;; Registers used:
 31975 ;;		wreg, status,2, status,0
 31976 ;; Tracked objects:
 31977 ;;		On entry : 0/0
 31978 ;;		On exit  : 0/0
 31979 ;;		Unchanged: 0/0
 31980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 31981 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31982 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31984 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 31985 ;;Total ram usage:        7 bytes
 31986 ;; Hardware stack levels used:    1
 31987 ;; Hardware stack levels required when called:    3
 31988 ;; This function calls:
 31989 ;;		Nothing
 31990 ;; This function is called by:
 31991 ;;		_get_freq
 31992 ;;		_ini_ee_tempos
 31993 ;; This function uses a non-reentrant model
 31994 ;;
 31995                           
 31996                           
 31997                           ;psect for function ___awmod
 31998  48FE                     ___awmod:	
 31999                           
 32000                           ;incstack = 0
 32001                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 32002  48FE  0140               	movlb	0	; select bank0
 32003  48FF  01B7               	clrf	___awmod@sign
 32004  4900  1FB4               	btfss	___awmod@dividend+1,7
 32005  4901  2909               	goto	l14204
 32006  4902  09B3               	comf	___awmod@dividend,f
 32007  4903  09B4               	comf	___awmod@dividend+1,f
 32008  4904  0AB3               	incf	___awmod@dividend,f
 32009  4905  1903               	skipnz
 32010  4906  0AB4               	incf	___awmod@dividend+1,f
 32011  4907  01B7               	clrf	___awmod@sign
 32012  4908  0AB7               	incf	___awmod@sign,f
 32013  4909                     l14204:	
 32014  4909  1FB2               	btfss	___awmod@divisor+1,7
 32015  490A  2910               	goto	l14208
 32016  490B  09B1               	comf	___awmod@divisor,f
 32017  490C  09B2               	comf	___awmod@divisor+1,f
 32018  490D  0AB1               	incf	___awmod@divisor,f
 32019  490E  1903               	skipnz
 32020  490F  0AB2               	incf	___awmod@divisor+1,f
 32021  4910                     l14208:	
 32022  4910  0831               	movf	___awmod@divisor,w
 32023  4911  0432               	iorwf	___awmod@divisor+1,w
 32024  4912  1903               	btfsc	3,2
 32025  4913  2937               	goto	l14226
 32026  4914  01B6               	clrf	___awmod@counter
 32027  4915  0AB6               	incf	___awmod@counter,f
 32028  4916                     l14216:	
 32029  4916  1BB2               	btfsc	___awmod@divisor+1,7
 32030  4917  2922               	goto	l14218
 32031  4918  3001               	movlw	1
 32032  4919                     u14885:	
 32033  4919  35B1               	lslf	___awmod@divisor,f
 32034  491A  0DB2               	rlf	___awmod@divisor+1,f
 32035  491B  0B89               	decfsz	9,f
 32036  491C  2919               	goto	u14885
 32037  491D  3001               	movlw	1
 32038  491E  00B5               	movwf	??___awmod
 32039  491F  0835               	movf	??___awmod,w
 32040  4920  07B6               	addwf	___awmod@counter,f
 32041  4921  2916               	goto	l14216
 32042  4922                     l14218:	
 32043  4922  0832               	movf	___awmod@divisor+1,w
 32044  4923  0234               	subwf	___awmod@dividend+1,w
 32045  4924  1D03               	skipz
 32046  4925  2928               	goto	u14905
 32047  4926  0831               	movf	___awmod@divisor,w
 32048  4927  0233               	subwf	___awmod@dividend,w
 32049  4928                     u14905:	
 32050  4928  1C03               	skipc
 32051  4929  292E               	goto	l14222
 32052  492A  0831               	movf	___awmod@divisor,w
 32053  492B  02B3               	subwf	___awmod@dividend,f
 32054  492C  0832               	movf	___awmod@divisor+1,w
 32055  492D  3BB4               	subwfb	___awmod@dividend+1,f
 32056  492E                     l14222:	
 32057  492E  3001               	movlw	1
 32058  492F                     u14915:	
 32059  492F  36B2               	lsrf	___awmod@divisor+1,f
 32060  4930  0CB1               	rrf	___awmod@divisor,f
 32061  4931  0B89               	decfsz	9,f
 32062  4932  292F               	goto	u14915
 32063  4933  3001               	movlw	1
 32064  4934  02B6               	subwf	___awmod@counter,f
 32065  4935  1D03               	btfss	3,2
 32066  4936  2922               	goto	l14218
 32067  4937                     l14226:	
 32068  4937  0837               	movf	___awmod@sign,w
 32069  4938  1903               	btfsc	3,2
 32070  4939  293F               	goto	l14230
 32071  493A  09B3               	comf	___awmod@dividend,f
 32072  493B  09B4               	comf	___awmod@dividend+1,f
 32073  493C  0AB3               	incf	___awmod@dividend,f
 32074  493D  1903               	skipnz
 32075  493E  0AB4               	incf	___awmod@dividend+1,f
 32076  493F                     l14230:	
 32077  493F  0834               	movf	___awmod@dividend+1,w
 32078  4940  00B2               	movwf	?___awmod+1
 32079  4941  0833               	movf	___awmod@dividend,w
 32080  4942  00B1               	movwf	?___awmod
 32081  4943  0008               	return
 32082  4944                     __end_of___awmod:	
 32083                           
 32084                           	psect	text82
 32085  6193                     __ptext82:	
 32086 ;; *************** function _SMT1_GetCapturedPeriod *****************
 32087 ;; Defined at:
 32088 ;;		line 2230 in file "func.c"
 32089 ;; Parameters:    Size  Location     Type
 32090 ;;		None
 32091 ;; Auto vars:     Size  Location     Type
 32092 ;;		None
 32093 ;; Return value:  Size  Location     Type
 32094 ;;                  4   11[BANK0 ] unsigned long 
 32095 ;; Registers used:
 32096 ;;		None
 32097 ;; Tracked objects:
 32098 ;;		On entry : 0/0
 32099 ;;		On exit  : 0/0
 32100 ;;		Unchanged: 0/0
 32101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32102 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32106 ;;Total ram usage:        4 bytes
 32107 ;; Hardware stack levels used:    1
 32108 ;; Hardware stack levels required when called:    3
 32109 ;; This function calls:
 32110 ;;		Nothing
 32111 ;; This function is called by:
 32112 ;;		_get_freq
 32113 ;; This function uses a non-reentrant model
 32114 ;;
 32115                           
 32116                           
 32117                           ;psect for function _SMT1_GetCapturedPeriod
 32118  6193                     _SMT1_GetCapturedPeriod:	
 32119                           
 32120                           ;func.c: 2232: return (SMT1CPR);
 32121                           
 32122                           ;incstack = 0
 32123                           ; Regs used in _SMT1_GetCapturedPeriod: []
 32124  6193  0149               	movlb	9	; select bank9
 32125  6194  080F               	movf	15,w	;volatile
 32126  6195  0140               	movlb	0	; select bank0
 32127  6196  00AB               	movwf	?_SMT1_GetCapturedPeriod
 32128  6197  0149               	movlb	9	; select bank9
 32129  6198  0810               	movf	16,w	;volatile
 32130  6199  0140               	movlb	0	; select bank0
 32131  619A  00AC               	movwf	?_SMT1_GetCapturedPeriod+1
 32132  619B  0149               	movlb	9	; select bank9
 32133  619C  0811               	movf	17,w	;volatile
 32134  619D  0140               	movlb	0	; select bank0
 32135  619E  00AD               	movwf	?_SMT1_GetCapturedPeriod+2
 32136  619F  01AE               	clrf	?_SMT1_GetCapturedPeriod+3
 32137  61A0  0008               	return
 32138  61A1                     __end_of_SMT1_GetCapturedPeriod:	
 32139                           
 32140                           	psect	text83
 32141  53D2                     __ptext83:	
 32142 ;; *************** function _escreve_freq *****************
 32143 ;; Defined at:
 32144 ;;		line 3014 in file "func.c"
 32145 ;; Parameters:    Size  Location     Type
 32146 ;;		None
 32147 ;; Auto vars:     Size  Location     Type
 32148 ;;		None
 32149 ;; Return value:  Size  Location     Type
 32150 ;;                  1    wreg      void 
 32151 ;; Registers used:
 32152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 32153 ;; Tracked objects:
 32154 ;;		On entry : 0/0
 32155 ;;		On exit  : 0/0
 32156 ;;		Unchanged: 0/0
 32157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32162 ;;Total ram usage:        0 bytes
 32163 ;; Hardware stack levels used:    1
 32164 ;; Hardware stack levels required when called:    6
 32165 ;; This function calls:
 32166 ;;		_Lcd_Set_Cursor
 32167 ;;		_Lcd_Write_String
 32168 ;;		_ltoa
 32169 ;; This function is called by:
 32170 ;;		_op_solda
 32171 ;;		_ciclar
 32172 ;; This function uses a non-reentrant model
 32173 ;;
 32174                           
 32175                           
 32176                           ;psect for function _escreve_freq
 32177  53D2                     _escreve_freq:	
 32178                           
 32179                           ;func.c: 3015: Lcd_Set_Cursor(2,1);
 32180                           
 32181                           ;incstack = 0
 32182                           ; Regs used in _escreve_freq: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 32183  53D2  0140               	movlb	0	; select bank0
 32184  53D3  01AE               	clrf	Lcd_Set_Cursor@b
 32185  53D4  0AAE               	incf	Lcd_Set_Cursor@b,f
 32186  53D5  3002               	movlw	2
 32187  53D6  31D5  25D8  31D3   	fcall	_Lcd_Set_Cursor
 32188                           
 32189                           ;func.c: 3016: ltoa(str,freq_atual,10);
 32190  53D9  0143               	movlb	3	; select bank3
 32191  53DA  0834               	movf	_freq_atual^(0+384),w
 32192  53DB  0140               	movlb	0	; select bank0
 32193  53DC  00CA               	movwf	ltoa@val
 32194  53DD  0143               	movlb	3	; select bank3
 32195  53DE  0835               	movf	(_freq_atual+1)^(0+384),w
 32196  53DF  0140               	movlb	0	; select bank0
 32197  53E0  00CB               	movwf	ltoa@val+1
 32198  53E1  01CC               	clrf	ltoa@val+2
 32199  53E2  01CD               	clrf	ltoa@val+3
 32200  53E3  300A               	movlw	10
 32201  53E4  00CE               	movwf	ltoa@base
 32202  53E5  3000               	movlw	0
 32203  53E6  00CF               	movwf	ltoa@base+1
 32204  53E7  305C               	movlw	(low (_str| (0+512)))& (0+255)
 32205  53E8  31D4  24DE  31D3   	fcall	_ltoa
 32206                           
 32207                           ;func.c: 3017: Lcd_Write_String(str);
 32208  53EB  305C               	movlw	low _str
 32209  53EC  0140               	movlb	0	; select bank0
 32210  53ED  00B0               	movwf	Lcd_Write_String@a
 32211  53EE  3002               	movlw	high _str
 32212  53EF  00B1               	movwf	Lcd_Write_String@a+1
 32213  53F0  31D1  2171  31D3   	fcall	_Lcd_Write_String
 32214                           
 32215                           ;func.c: 3018: Lcd_Write_String(" Hz   ");
 32216  53F3  30DF               	movlw	low (STR_49| (0+32768))
 32217  53F4  0140               	movlb	0	; select bank0
 32218  53F5  00B0               	movwf	Lcd_Write_String@a
 32219  53F6  30E8               	movlw	high (STR_49| (0+32768))
 32220  53F7  00B1               	movwf	Lcd_Write_String@a+1
 32221  53F8  31D1  2171         	fcall	_Lcd_Write_String
 32222  53FA  0008               	return
 32223  53FB                     __end_of_escreve_freq:	
 32224                           
 32225                           	psect	text84
 32226  3C8F                     __ptext84:	
 32227 ;; *************** function _op_fixar *****************
 32228 ;; Defined at:
 32229 ;;		line 573 in file "func.c"
 32230 ;; Parameters:    Size  Location     Type
 32231 ;;  t               2   26[BANK0 ] unsigned int 
 32232 ;; Auto vars:     Size  Location     Type
 32233 ;;  conta_erro      1   33[BANK0 ] unsigned char 
 32234 ;;  e               1   32[BANK0 ] unsigned char 
 32235 ;; Return value:  Size  Location     Type
 32236 ;;                  1    wreg      void 
 32237 ;; Registers used:
 32238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 32239 ;; Tracked objects:
 32240 ;;		On entry : 0/0
 32241 ;;		On exit  : 0/0
 32242 ;;		Unchanged: 0/0
 32243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32244 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32245 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32246 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32247 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32248 ;;Total ram usage:        8 bytes
 32249 ;; Hardware stack levels used:    1
 32250 ;; Hardware stack levels required when called:    7
 32251 ;; This function calls:
 32252 ;;		___wmul
 32253 ;;		_escreve_LCD
 32254 ;;		_saida
 32255 ;;		_salva_n_pecas
 32256 ;;		_start_timer
 32257 ;;		_stop_timer
 32258 ;;		_ver_entrada
 32259 ;; This function is called by:
 32260 ;;		_main
 32261 ;;		_ciclar
 32262 ;; This function uses a non-reentrant model
 32263 ;;
 32264                           
 32265                           
 32266                           ;psect for function _op_fixar
 32267  3C8F                     _op_fixar:	
 32268                           
 32269                           ;func.c: 574: if(!flag.sussess) {
 32270                           
 32271                           ;incstack = 0
 32272                           ; Regs used in _op_fixar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 32273  3C8F  0143               	movlb	3	; select bank3
 32274  3C90  19AC               	btfsc	_flag^(0+384),3	;volatile
 32275  3C91  2CA3               	goto	l16338
 32276                           
 32277                           ;func.c: 575: if(cfg.pne_desce)
 32278  3C92  1E30               	btfss	_cfg^(0+384),4
 32279  3C93  2C9B               	goto	l16328
 32280                           
 32281                           ;func.c: 576: saida(PNE_DESCE,0);
 32282  3C94  3000               	movlw	0
 32283  3C95  0140               	movlb	0	; select bank0
 32284  3C96  00AB               	movwf	saida@b
 32285  3C97  00AC               	movwf	saida@b+1
 32286  3C98  3001               	movlw	1
 32287  3C99  31D1  21CE         	fcall	_saida
 32288  3C9B                     l16328:	
 32289                           
 32290                           ;func.c: 577: flag.US = 0;
 32291  3C9B  0143               	movlb	3	; select bank3
 32292  3C9C  12AC               	bcf	_flag^(0+384),5	;volatile
 32293                           
 32294                           ;func.c: 578: led.HF = 0;
 32295  3C9D  1065               	bcf	_led^(0+384),0	;volatile
 32296                           
 32297                           ;func.c: 579: LATDbits.LATD6 = 0;
 32298  3C9E  0140               	movlb	0	; select bank0
 32299  3C9F  1319               	bcf	25,6	;volatile
 32300                           
 32301                           ;func.c: 580: statusSolda = PARADO;
 32302  3CA0  0143               	movlb	3	; select bank3
 32303  3CA1  01DB               	clrf	_statusSolda^(0+384)
 32304                           
 32305                           ;func.c: 581: return;
 32306  3CA2  0008               	return
 32307  3CA3                     l16338:	
 32308                           
 32309                           ;func.c: 582: }
 32310                           ;func.c: 584: escreve_LCD(1,1,fixando_str[idioma]);
 32311  3CA3  0140               	movlb	0	; select bank0
 32312  3CA4  01B5               	clrf	escreve_LCD@coluna
 32313  3CA5  0AB5               	incf	escreve_LCD@coluna,f
 32314  3CA6  0143               	movlb	3	; select bank3
 32315  3CA7  085A               	movf	_idioma^(0+384),w
 32316  3CA8  0140               	movlb	0	; select bank0
 32317  3CA9  00BC               	movwf	??_op_fixar
 32318  3CAA  01BD               	clrf	??_op_fixar+1
 32319  3CAB  083C               	movf	??_op_fixar,w
 32320  3CAC  00AB               	movwf	___wmul@multiplier
 32321  3CAD  083D               	movf	??_op_fixar+1,w
 32322  3CAE  00AC               	movwf	___wmul@multiplier+1
 32323  3CAF  3011               	movlw	17
 32324  3CB0  00AD               	movwf	___wmul@multiplicand
 32325  3CB1  3000               	movlw	0
 32326  3CB2  00AE               	movwf	___wmul@multiplicand+1
 32327  3CB3  31D0  20FE  31BC   	fcall	___wmul
 32328  3CB6  308C               	movlw	low (_fixando_str| (0+32768))
 32329  3CB7  0140               	movlb	0	; select bank0
 32330  3CB8  00BE               	movwf	??_op_fixar+2
 32331  3CB9  30DD               	movlw	high (_fixando_str| (0+32768))
 32332  3CBA  00BF               	movwf	??_op_fixar+3
 32333  3CBB  082B               	movf	?___wmul,w
 32334  3CBC  073E               	addwf	??_op_fixar+2,w
 32335  3CBD  00B6               	movwf	escreve_LCD@str
 32336  3CBE  082C               	movf	?___wmul+1,w
 32337  3CBF  3D3F               	addwfc	??_op_fixar+3,w
 32338  3CC0  00B7               	movwf	escreve_LCD@str+1
 32339  3CC1  3001               	movlw	1
 32340  3CC2  31E7  27C1  31BC   	fcall	_escreve_LCD
 32341                           
 32342                           ;func.c: 585: char conta_erro = 0,e = 0;
 32343  3CC5  0140               	movlb	0	; select bank0
 32344  3CC6  01C1               	clrf	op_fixar@conta_erro
 32345  3CC7  01C0               	clrf	op_fixar@e
 32346                           
 32347                           ;func.c: 586: statusSolda = FIXANDO;
 32348  3CC8  3003               	movlw	3
 32349  3CC9  00BC               	movwf	??_op_fixar
 32350  3CCA  083C               	movf	??_op_fixar,w
 32351  3CCB  0143               	movlb	3	; select bank3
 32352  3CCC  00DB               	movwf	_statusSolda^(0+384)
 32353                           
 32354                           ;func.c: 588: start_timer(t);
 32355  3CCD  0140               	movlb	0	; select bank0
 32356  3CCE  083B               	movf	op_fixar@t+1,w
 32357  3CCF  00AC               	movwf	start_timer@t+1
 32358  3CD0  083A               	movf	op_fixar@t,w
 32359  3CD1  00AB               	movwf	start_timer@t
 32360  3CD2  31E1  2165  31BC   	fcall	_start_timer
 32361                           
 32362                           ;func.c: 590: if(modo == RAPIDO){
 32363  3CD5  0143               	movlb	3	; select bank3
 32364  3CD6  035C               	decf	_modo^(0+384),w
 32365  3CD7  1D03               	btfss	3,2
 32366  3CD8  2D0E               	goto	l16368
 32367                           
 32368                           ;func.c: 593: if(cfg.pne_desce)
 32369  3CD9  1E30               	btfss	_cfg^(0+384),4
 32370  3CDA  2CE3               	goto	l16354
 32371                           
 32372                           ;func.c: 594: saida(PNE_DESCE,0);
 32373  3CDB  3000               	movlw	0
 32374  3CDC  0140               	movlb	0	; select bank0
 32375  3CDD  00AB               	movwf	saida@b
 32376  3CDE  00AC               	movwf	saida@b+1
 32377  3CDF  3001               	movlw	1
 32378  3CE0  31D1  21CE  31BC   	fcall	_saida
 32379  3CE3                     l16354:	
 32380                           
 32381                           ;func.c: 595: if(flag.sussess){
 32382  3CE3  0143               	movlb	3	; select bank3
 32383  3CE4  1DAC               	btfss	_flag^(0+384),3	;volatile
 32384  3CE5  2D0E               	goto	l16368
 32385                           
 32386                           ;func.c: 596: if(flag.regressivo && cont_pecas >0){
 32387  3CE6  1D2C               	btfss	_flag^(0+384),2	;volatile
 32388  3CE7  2D08               	goto	l1315
 32389  3CE8  0827               	movf	(_cont_pecas+3)^(0+384),w
 32390  3CE9  0426               	iorwf	(_cont_pecas+2)^(0+384),w
 32391  3CEA  0425               	iorwf	(_cont_pecas+1)^(0+384),w
 32392  3CEB  0424               	iorwf	_cont_pecas^(0+384),w
 32393  3CEC  1903               	skipnz
 32394  3CED  2D08               	goto	l1315
 32395                           
 32396                           ;func.c: 597: cont_pecas--;
 32397  3CEE  3001               	movlw	1
 32398  3CEF  0140               	movlb	0	; select bank0
 32399  3CF0  00BC               	movwf	??_op_fixar
 32400  3CF1  3000               	movlw	0
 32401  3CF2  00BD               	movwf	??_op_fixar+1
 32402  3CF3  3000               	movlw	0
 32403  3CF4  00BE               	movwf	??_op_fixar+2
 32404  3CF5  3000               	movlw	0
 32405  3CF6  00BF               	movwf	??_op_fixar+3
 32406  3CF7  083C               	movf	??_op_fixar,w
 32407  3CF8  0143               	movlb	3	; select bank3
 32408  3CF9  02A4               	subwf	_cont_pecas^(0+384),f
 32409  3CFA  0140               	movlb	0	; select bank0
 32410  3CFB  083D               	movf	??_op_fixar+1,w
 32411  3CFC  0143               	movlb	3	; select bank3
 32412  3CFD  3BA5               	subwfb	(_cont_pecas+1)^(0+384),f
 32413  3CFE  0140               	movlb	0	; select bank0
 32414  3CFF  083E               	movf	??_op_fixar+2,w
 32415  3D00  0143               	movlb	3	; select bank3
 32416  3D01  3BA6               	subwfb	(_cont_pecas+2)^(0+384),f
 32417  3D02  0140               	movlb	0	; select bank0
 32418  3D03  083F               	movf	??_op_fixar+3,w
 32419  3D04  0143               	movlb	3	; select bank3
 32420  3D05  3BA7               	subwfb	(_cont_pecas+3)^(0+384),f
 32421                           
 32422                           ;func.c: 598: flag.zero_cont = 0;
 32423  3D06  12AD               	bcf	(_flag^(0+384)+1),5	;volatile
 32424                           
 32425                           ;func.c: 599: }
 32426  3D07  2D0B               	goto	l16366
 32427  3D08                     l1315:	
 32428                           
 32429                           ;func.c: 600: else if (flag.regressivo){
 32430  3D08  1D2C               	btfss	_flag^(0+384),2	;volatile
 32431  3D09  2D0B               	goto	l16366
 32432                           
 32433                           ;func.c: 601: flag.zero_cont = 1;
 32434  3D0A  16AD               	bsf	(_flag^(0+384)+1),5	;volatile
 32435  3D0B                     l16366:	
 32436                           
 32437                           ;func.c: 602: }
 32438                           ;func.c: 603: salva_n_pecas();
 32439  3D0B  31CC  2415  31BC   	fcall	_salva_n_pecas
 32440  3D0E                     l16368:	
 32441                           
 32442                           ;func.c: 604: }
 32443                           ;func.c: 606: }
 32444                           ;func.c: 612: if(T5CONbits.TMR5ON){
 32445  3D0E  0144               	movlb	4	; select bank4
 32446  3D0F  1C1A               	btfss	26,0	;volatile
 32447  3D10  2D41               	goto	l1318
 32448  3D11                     l1319:	
 32449                           ;func.c: 613: do{
 32450                           
 32451  3D11  0064               	clrwdt	;# 
 32452                           
 32453                           ;func.c: 615: ver_entrada();
 32454  3D12  31CE  26BA  31BC   	fcall	_ver_entrada
 32455                           
 32456                           ;func.c: 616: if(flag_in.emerg){ e = 250;}
 32457  3D15  0143               	movlb	3	; select bank3
 32458  3D16  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 32459  3D17  2D1E               	goto	l16376
 32460  3D18  30FA               	movlw	250
 32461  3D19  0140               	movlb	0	; select bank0
 32462  3D1A  00BC               	movwf	??_op_fixar
 32463  3D1B  083C               	movf	??_op_fixar,w
 32464  3D1C  00C0               	movwf	op_fixar@e
 32465  3D1D  2D28               	goto	l16388
 32466  3D1E                     l16376:	
 32467                           
 32468                           ;func.c: 618: else if(modo == RAPIDO && (cfg.aciona1 && flag_in.aciona1) && (cfg.aciona2
      +                           && flag_in.aciona2))
 32469  3D1E  0143               	movlb	3	; select bank3
 32470  3D1F  035C               	decf	_modo^(0+384),w
 32471  3D20  1903               	btfsc	3,2
 32472  3D21  1CB0               	btfss	_cfg^(0+384),1
 32473  3D22  2D28               	goto	l16388
 32474  3D23  18CC               	btfsc	_flag_in^(0+384),1	;volatile
 32475  3D24  1D30               	btfss	_cfg^(0+384),2
 32476  3D25  2D28               	goto	l16388
 32477  3D26  194C               	btfsc	_flag_in^(0+384),2	;volatile
 32478  3D27  0008               	return
 32479  3D28                     l16388:	
 32480                           ;func.c: 619: return;
 32481                           
 32482                           
 32483                           ;func.c: 622: if(e > 0){
 32484  3D28  0140               	movlb	0	; select bank0
 32485  3D29  0840               	movf	op_fixar@e,w
 32486  3D2A  1903               	btfsc	3,2
 32487  3D2B  2D39               	goto	l16398
 32488                           
 32489                           ;func.c: 623: conta_erro++;
 32490  3D2C  3001               	movlw	1
 32491  3D2D  00BC               	movwf	??_op_fixar
 32492  3D2E  083C               	movf	??_op_fixar,w
 32493  3D2F  07C1               	addwf	op_fixar@conta_erro,f
 32494                           
 32495                           ;func.c: 624: if(conta_erro > 5){
 32496  3D30  3006               	movlw	6
 32497  3D31  0241               	subwf	op_fixar@conta_erro,w
 32498  3D32  1C03               	skipc
 32499  3D33  2D3B               	goto	l16400
 32500                           
 32501                           ;func.c: 625: flag.abortar = 1;
 32502  3D34  0143               	movlb	3	; select bank3
 32503  3D35  172C               	bsf	_flag^(0+384),6	;volatile
 32504                           
 32505                           ;func.c: 626: flag.sussess = 0;
 32506  3D36  11AC               	bcf	_flag^(0+384),3	;volatile
 32507                           
 32508                           ;func.c: 627: statusSolda = PARADO;
 32509  3D37  01DB               	clrf	_statusSolda^(0+384)
 32510                           
 32511                           ;func.c: 628: }
 32512                           ;func.c: 629: }
 32513  3D38  2D3B               	goto	l16400
 32514  3D39                     l16398:	
 32515                           
 32516                           ;func.c: 630: else{
 32517                           ;func.c: 631: conta_erro = 0;
 32518  3D39  0140               	movlb	0	; select bank0
 32519  3D3A  01C1               	clrf	op_fixar@conta_erro
 32520  3D3B                     l16400:	
 32521                           
 32522                           ;func.c: 632: }
 32523                           ;func.c: 633: }while(!flag.abortar && T5CONbits.TMR5ON);
 32524  3D3B  0143               	movlb	3	; select bank3
 32525  3D3C  1B2C               	btfsc	_flag^(0+384),6	;volatile
 32526  3D3D  2D41               	goto	l1318
 32527  3D3E  0144               	movlb	4	; select bank4
 32528  3D3F  181A               	btfsc	26,0	;volatile
 32529  3D40  2D11               	goto	l1319
 32530  3D41                     l1318:	
 32531                           
 32532                           ;func.c: 634: }
 32533                           ;func.c: 636: if(!T5CONbits.TMR5ON || flag.abortar){
 32534  3D41  0144               	movlb	4	; select bank4
 32535  3D42  1C1A               	btfss	26,0	;volatile
 32536  3D43  2D47               	goto	l1331
 32537  3D44  0143               	movlb	3	; select bank3
 32538  3D45  1F2C               	btfss	_flag^(0+384),6	;volatile
 32539  3D46  2D4E               	goto	l16408
 32540  3D47                     l1331:	
 32541                           
 32542                           ;func.c: 637: flag.US = 0;
 32543  3D47  0143               	movlb	3	; select bank3
 32544  3D48  12AC               	bcf	_flag^(0+384),5	;volatile
 32545                           
 32546                           ;func.c: 638: led.HF = 0;
 32547  3D49  1065               	bcf	_led^(0+384),0	;volatile
 32548                           
 32549                           ;func.c: 639: LATDbits.LATD6 = 0;
 32550  3D4A  0140               	movlb	0	; select bank0
 32551  3D4B  1319               	bcf	25,6	;volatile
 32552                           
 32553                           ;func.c: 640: statusSolda = PARADO;
 32554  3D4C  0143               	movlb	3	; select bank3
 32555  3D4D  01DB               	clrf	_statusSolda^(0+384)
 32556  3D4E                     l16408:	
 32557                           
 32558                           ;func.c: 641: }
 32559                           ;func.c: 642: stop_timer();
 32560  3D4E  3190  2000  31BC   	fcall	_stop_timer
 32561                           
 32562                           ;func.c: 644: if(modo == NORMAL || modo == CONTINUO){
 32563  3D51  0143               	movlb	3	; select bank3
 32564  3D52  085C               	movf	_modo^(0+384),w
 32565  3D53  1903               	btfsc	3,2
 32566  3D54  2D59               	goto	l1334
 32567  3D55  3002               	movlw	2
 32568  3D56  065C               	xorwf	_modo^(0+384),w
 32569  3D57  1D03               	btfss	3,2
 32570  3D58  0008               	return
 32571  3D59                     l1334:	
 32572                           
 32573                           ;func.c: 645: if(cfg.pne_desce){
 32574  3D59  1E30               	btfss	_cfg^(0+384),4
 32575  3D5A  0008               	return
 32576                           
 32577                           ;func.c: 646: saida(PNE_DESCE,0);
 32578  3D5B  3000               	movlw	0
 32579  3D5C  0140               	movlb	0	; select bank0
 32580  3D5D  00AB               	movwf	saida@b
 32581  3D5E  00AC               	movwf	saida@b+1
 32582  3D5F  3001               	movlw	1
 32583  3D60  31D1  21CE         	fcall	_saida
 32584                           
 32585                           ;func.c: 647: }
 32586                           ;func.c: 648: }
 32587  3D62  0008               	return
 32588  3D63                     __end_of_op_fixar:	
 32589                           
 32590                           	psect	text85
 32591  4C15                     __ptext85:	
 32592 ;; *************** function _salva_n_pecas *****************
 32593 ;; Defined at:
 32594 ;;		line 1354 in file "func.c"
 32595 ;; Parameters:    Size  Location     Type
 32596 ;;		None
 32597 ;; Auto vars:     Size  Location     Type
 32598 ;;		None
 32599 ;; Return value:  Size  Location     Type
 32600 ;;                  1    wreg      void 
 32601 ;; Registers used:
 32602 ;;		wreg, status,2, status,0, pclath, cstack
 32603 ;; Tracked objects:
 32604 ;;		On entry : 0/0
 32605 ;;		On exit  : 0/0
 32606 ;;		Unchanged: 0/0
 32607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32610 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32611 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32612 ;;Total ram usage:        1 bytes
 32613 ;; Hardware stack levels used:    1
 32614 ;; Hardware stack levels required when called:    5
 32615 ;; This function calls:
 32616 ;;		_salva_EEPROM32
 32617 ;; This function is called by:
 32618 ;;		_op_fixar
 32619 ;;		_trata_dados
 32620 ;; This function uses a non-reentrant model
 32621 ;;
 32622                           
 32623                           
 32624                           ;psect for function _salva_n_pecas
 32625  4C15                     _salva_n_pecas:	
 32626                           
 32627                           ;func.c: 1355: if(!ciclador){
 32628                           
 32629                           ;incstack = 0
 32630                           ; Regs used in _salva_n_pecas: [wreg+status,2+status,0+pclath+cstack]
 32631  4C15  0143               	movlb	3	; select bank3
 32632  4C16  0861               	movf	_ciclador^(0+384),w
 32633  4C17  1D03               	btfss	3,2
 32634  4C18  0008               	return
 32635                           
 32636                           ;func.c: 1356: salva_EEPROM32(++n_pecas,5);
 32637  4C19  3001               	movlw	1
 32638  4C1A  07A0               	addwf	_n_pecas^(0+384),f
 32639  4C1B  3000               	movlw	0
 32640  4C1C  3DA1               	addwfc	(_n_pecas+1)^(0+384),f
 32641  4C1D  3000               	movlw	0
 32642  4C1E  3DA2               	addwfc	(_n_pecas+2)^(0+384),f
 32643  4C1F  3000               	movlw	0
 32644  4C20  3DA3               	addwfc	(_n_pecas+3)^(0+384),f
 32645  4C21  0823               	movf	(_n_pecas+3)^(0+384),w
 32646  4C22  0140               	movlb	0	; select bank0
 32647  4C23  00B1               	movwf	salva_EEPROM32@valor+3
 32648  4C24  0143               	movlb	3	; select bank3
 32649  4C25  0822               	movf	(_n_pecas+2)^(0+384),w
 32650  4C26  0140               	movlb	0	; select bank0
 32651  4C27  00B0               	movwf	salva_EEPROM32@valor+2
 32652  4C28  0143               	movlb	3	; select bank3
 32653  4C29  0821               	movf	(_n_pecas+1)^(0+384),w
 32654  4C2A  0140               	movlb	0	; select bank0
 32655  4C2B  00AF               	movwf	salva_EEPROM32@valor+1
 32656  4C2C  0143               	movlb	3	; select bank3
 32657  4C2D  0820               	movf	_n_pecas^(0+384),w
 32658  4C2E  0140               	movlb	0	; select bank0
 32659  4C2F  00AE               	movwf	salva_EEPROM32@valor
 32660  4C30  3005               	movlw	5
 32661  4C31  00B5               	movwf	??_salva_n_pecas
 32662  4C32  0835               	movf	??_salva_n_pecas,w
 32663  4C33  00B2               	movwf	salva_EEPROM32@address
 32664  4C34  31CD  2527  31CC   	fcall	_salva_EEPROM32
 32665                           
 32666                           ;func.c: 1357: salva_EEPROM32(++n_pecas_l,1);
 32667  4C37  3001               	movlw	1
 32668  4C38  0144               	movlb	4	; select bank4
 32669  4C39  07B0               	addwf	_n_pecas_l^(0+512),f
 32670  4C3A  3000               	movlw	0
 32671  4C3B  3DB1               	addwfc	(_n_pecas_l+1)^(0+512),f
 32672  4C3C  3000               	movlw	0
 32673  4C3D  3DB2               	addwfc	(_n_pecas_l+2)^(0+512),f
 32674  4C3E  3000               	movlw	0
 32675  4C3F  3DB3               	addwfc	(_n_pecas_l+3)^(0+512),f
 32676  4C40  0833               	movf	(_n_pecas_l+3)^(0+512),w
 32677  4C41  0140               	movlb	0	; select bank0
 32678  4C42  00B1               	movwf	salva_EEPROM32@valor+3
 32679  4C43  0144               	movlb	4	; select bank4
 32680  4C44  0832               	movf	(_n_pecas_l+2)^(0+512),w
 32681  4C45  0140               	movlb	0	; select bank0
 32682  4C46  00B0               	movwf	salva_EEPROM32@valor+2
 32683  4C47  0144               	movlb	4	; select bank4
 32684  4C48  0831               	movf	(_n_pecas_l+1)^(0+512),w
 32685  4C49  0140               	movlb	0	; select bank0
 32686  4C4A  00AF               	movwf	salva_EEPROM32@valor+1
 32687  4C4B  0144               	movlb	4	; select bank4
 32688  4C4C  0830               	movf	_n_pecas_l^(0+512),w
 32689  4C4D  0140               	movlb	0	; select bank0
 32690  4C4E  00AE               	movwf	salva_EEPROM32@valor
 32691  4C4F  01B2               	clrf	salva_EEPROM32@address
 32692  4C50  0AB2               	incf	salva_EEPROM32@address,f
 32693  4C51  31CD  2527  31CC   	fcall	_salva_EEPROM32
 32694                           
 32695                           ;func.c: 1358: salva_EEPROM32(t100ms_solda,220);
 32696  4C54  0144               	movlb	4	; select bank4
 32697  4C55  082F               	movf	(_t100ms_solda+3)^(0+512),w
 32698  4C56  0140               	movlb	0	; select bank0
 32699  4C57  00B1               	movwf	salva_EEPROM32@valor+3
 32700  4C58  0144               	movlb	4	; select bank4
 32701  4C59  082E               	movf	(_t100ms_solda+2)^(0+512),w
 32702  4C5A  0140               	movlb	0	; select bank0
 32703  4C5B  00B0               	movwf	salva_EEPROM32@valor+2
 32704  4C5C  0144               	movlb	4	; select bank4
 32705  4C5D  082D               	movf	(_t100ms_solda+1)^(0+512),w
 32706  4C5E  0140               	movlb	0	; select bank0
 32707  4C5F  00AF               	movwf	salva_EEPROM32@valor+1
 32708  4C60  0144               	movlb	4	; select bank4
 32709  4C61  082C               	movf	_t100ms_solda^(0+512),w
 32710  4C62  0140               	movlb	0	; select bank0
 32711  4C63  00AE               	movwf	salva_EEPROM32@valor
 32712  4C64  30DC               	movlw	220
 32713  4C65  00B5               	movwf	??_salva_n_pecas
 32714  4C66  0835               	movf	??_salva_n_pecas,w
 32715  4C67  00B2               	movwf	salva_EEPROM32@address
 32716  4C68  31CD  2527         	fcall	_salva_EEPROM32
 32717  4C6A  0008               	return
 32718  4C6B                     __end_of_salva_n_pecas:	
 32719                           
 32720                           	psect	text86
 32721  4D27                     __ptext86:	
 32722 ;; *************** function _salva_EEPROM32 *****************
 32723 ;; Defined at:
 32724 ;;		line 344 in file "func.c"
 32725 ;; Parameters:    Size  Location     Type
 32726 ;;  valor           4   14[BANK0 ] unsigned long 
 32727 ;;  address         1   18[BANK0 ] unsigned char 
 32728 ;; Auto vars:     Size  Location     Type
 32729 ;;		None
 32730 ;; Return value:  Size  Location     Type
 32731 ;;                  1    wreg      void 
 32732 ;; Registers used:
 32733 ;;		wreg, status,2, status,0, pclath, cstack
 32734 ;; Tracked objects:
 32735 ;;		On entry : 0/0
 32736 ;;		On exit  : 0/0
 32737 ;;		Unchanged: 0/0
 32738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32739 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32741 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32742 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32743 ;;Total ram usage:        7 bytes
 32744 ;; Hardware stack levels used:    1
 32745 ;; Hardware stack levels required when called:    4
 32746 ;; This function calls:
 32747 ;;		_eeprom_write
 32748 ;; This function is called by:
 32749 ;;		_op_solda
 32750 ;;		_salva_n_pecas
 32751 ;;		_telas
 32752 ;;		_func_rst
 32753 ;;		_ini_ee_tempos
 32754 ;;		_rotina_tela
 32755 ;; This function uses a non-reentrant model
 32756 ;;
 32757                           
 32758                           
 32759                           ;psect for function _salva_EEPROM32
 32760  4D27                     _salva_EEPROM32:	
 32761                           
 32762                           ;func.c: 345: ee.value = valor;
 32763                           
 32764                           ;incstack = 0
 32765                           ; Regs used in _salva_EEPROM32: [wreg+status,2+status,0+pclath+cstack]
 32766  4D27  0140               	movlb	0	; select bank0
 32767  4D28  0831               	movf	salva_EEPROM32@valor+3,w
 32768  4D29  0143               	movlb	3	; select bank3
 32769  4D2A  00AB               	movwf	(_ee+3)^(0+384)	;volatile
 32770  4D2B  0140               	movlb	0	; select bank0
 32771  4D2C  0830               	movf	salva_EEPROM32@valor+2,w
 32772  4D2D  0143               	movlb	3	; select bank3
 32773  4D2E  00AA               	movwf	(_ee+2)^(0+384)	;volatile
 32774  4D2F  0140               	movlb	0	; select bank0
 32775  4D30  082F               	movf	salva_EEPROM32@valor+1,w
 32776  4D31  0143               	movlb	3	; select bank3
 32777  4D32  00A9               	movwf	(_ee+1)^(0+384)	;volatile
 32778  4D33  0140               	movlb	0	; select bank0
 32779  4D34  082E               	movf	salva_EEPROM32@valor,w
 32780  4D35  0143               	movlb	3	; select bank3
 32781  4D36  00A8               	movwf	_ee^(0+384)	;volatile
 32782                           
 32783                           ;func.c: 346: eeprom_write((address),ee.byte0);
 32784  4D37  0828               	movf	_ee^(0+384),w	;volatile
 32785  4D38  0140               	movlb	0	; select bank0
 32786  4D39  00B3               	movwf	??_salva_EEPROM32
 32787  4D3A  0833               	movf	??_salva_EEPROM32,w
 32788  4D3B  00AB               	movwf	eeprom_write@value
 32789  4D3C  0832               	movf	salva_EEPROM32@address,w
 32790  4D3D  31D2  2299  31CD   	fcall	_eeprom_write
 32791                           
 32792                           ;func.c: 347: _delay((unsigned long)((1)*(20000000/4000.0)));
 32793  4D40  3007               	movlw	7
 32794  4D41  0140               	movlb	0	; select bank0
 32795  4D42  00B3               	movwf	??_salva_EEPROM32
 32796  4D43  307D               	movlw	125
 32797  4D44                     u20837:	
 32798  4D44  0B89               	decfsz	9,f
 32799  4D45  2D44               	goto	u20837
 32800  4D46  0BB3               	decfsz	??_salva_EEPROM32,f
 32801  4D47  2D44               	goto	u20837
 32802                           
 32803                           ;func.c: 348: eeprom_write((++address),ee.byte1);
 32804  4D48  0143               	movlb	3	; select bank3
 32805  4D49  0829               	movf	(_ee^(0+384)+1),w	;volatile
 32806  4D4A  0140               	movlb	0	; select bank0
 32807  4D4B  00B3               	movwf	??_salva_EEPROM32
 32808  4D4C  0833               	movf	??_salva_EEPROM32,w
 32809  4D4D  00AB               	movwf	eeprom_write@value
 32810  4D4E  3001               	movlw	1
 32811  4D4F  00B4               	movwf	??_salva_EEPROM32+1
 32812  4D50  0834               	movf	??_salva_EEPROM32+1,w
 32813  4D51  07B2               	addwf	salva_EEPROM32@address,f
 32814  4D52  0832               	movf	salva_EEPROM32@address,w
 32815  4D53  31D2  2299  31CD   	fcall	_eeprom_write
 32816                           
 32817                           ;func.c: 349: _delay((unsigned long)((1)*(20000000/4000.0)));
 32818  4D56  3007               	movlw	7
 32819  4D57  0140               	movlb	0	; select bank0
 32820  4D58  00B3               	movwf	??_salva_EEPROM32
 32821  4D59  307D               	movlw	125
 32822  4D5A                     u20847:	
 32823  4D5A  0B89               	decfsz	9,f
 32824  4D5B  2D5A               	goto	u20847
 32825  4D5C  0BB3               	decfsz	??_salva_EEPROM32,f
 32826  4D5D  2D5A               	goto	u20847
 32827                           
 32828                           ;func.c: 350: eeprom_write((++address),ee.byte2);
 32829  4D5E  0143               	movlb	3	; select bank3
 32830  4D5F  082A               	movf	(_ee^(0+384)+2),w	;volatile
 32831  4D60  0140               	movlb	0	; select bank0
 32832  4D61  00B3               	movwf	??_salva_EEPROM32
 32833  4D62  0833               	movf	??_salva_EEPROM32,w
 32834  4D63  00AB               	movwf	eeprom_write@value
 32835  4D64  3001               	movlw	1
 32836  4D65  00B4               	movwf	??_salva_EEPROM32+1
 32837  4D66  0834               	movf	??_salva_EEPROM32+1,w
 32838  4D67  07B2               	addwf	salva_EEPROM32@address,f
 32839  4D68  0832               	movf	salva_EEPROM32@address,w
 32840  4D69  31D2  2299  31CD   	fcall	_eeprom_write
 32841                           
 32842                           ;func.c: 351: _delay((unsigned long)((1)*(20000000/4000.0)));
 32843  4D6C  3007               	movlw	7
 32844  4D6D  0140               	movlb	0	; select bank0
 32845  4D6E  00B3               	movwf	??_salva_EEPROM32
 32846  4D6F  307D               	movlw	125
 32847  4D70                     u20857:	
 32848  4D70  0B89               	decfsz	9,f
 32849  4D71  2D70               	goto	u20857
 32850  4D72  0BB3               	decfsz	??_salva_EEPROM32,f
 32851  4D73  2D70               	goto	u20857
 32852                           
 32853                           ;func.c: 352: eeprom_write((++address),ee.byte3);
 32854  4D74  0143               	movlb	3	; select bank3
 32855  4D75  082B               	movf	(_ee^(0+384)+3),w	;volatile
 32856  4D76  0140               	movlb	0	; select bank0
 32857  4D77  00B3               	movwf	??_salva_EEPROM32
 32858  4D78  0833               	movf	??_salva_EEPROM32,w
 32859  4D79  00AB               	movwf	eeprom_write@value
 32860  4D7A  3001               	movlw	1
 32861  4D7B  00B4               	movwf	??_salva_EEPROM32+1
 32862  4D7C  0834               	movf	??_salva_EEPROM32+1,w
 32863  4D7D  07B2               	addwf	salva_EEPROM32@address,f
 32864  4D7E  0832               	movf	salva_EEPROM32@address,w
 32865  4D7F  31D2  2299  31CD   	fcall	_eeprom_write
 32866                           
 32867                           ;func.c: 353: _delay((unsigned long)((1)*(20000000/4000.0)));
 32868  4D82  3007               	movlw	7
 32869  4D83  0140               	movlb	0	; select bank0
 32870  4D84  00B3               	movwf	??_salva_EEPROM32
 32871  4D85  307D               	movlw	125
 32872  4D86                     u20867:	
 32873  4D86  0B89               	decfsz	9,f
 32874  4D87  2D86               	goto	u20867
 32875  4D88  0BB3               	decfsz	??_salva_EEPROM32,f
 32876  4D89  2D86               	goto	u20867
 32877  4D8A  0008               	return
 32878  4D8B                     __end_of_salva_EEPROM32:	
 32879                           
 32880                           	psect	text87
 32881  334C                     __ptext87:	
 32882 ;; *************** function _op_desce *****************
 32883 ;; Defined at:
 32884 ;;		line 368 in file "func.c"
 32885 ;; Parameters:    Size  Location     Type
 32886 ;;  t               2   51[BANK0 ] unsigned int 
 32887 ;; Auto vars:     Size  Location     Type
 32888 ;;		None
 32889 ;; Return value:  Size  Location     Type
 32890 ;;                  1    wreg      void 
 32891 ;; Registers used:
 32892 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 32893 ;; Tracked objects:
 32894 ;;		On entry : 0/0
 32895 ;;		On exit  : 0/0
 32896 ;;		Unchanged: 0/0
 32897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 32898 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32901 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 32902 ;;Total ram usage:        6 bytes
 32903 ;; Hardware stack levels used:    1
 32904 ;; Hardware stack levels required when called:    7
 32905 ;; This function calls:
 32906 ;;		_Lcd_Write_Char
 32907 ;;		_Lcd_Write_String
 32908 ;;		___wmul
 32909 ;;		_escreve_LCD
 32910 ;;		_ltoa
 32911 ;;		_saida
 32912 ;;		_start_timer
 32913 ;;		_stop_timer
 32914 ;;		_ver_entrada
 32915 ;; This function is called by:
 32916 ;;		_main
 32917 ;;		_ciclar
 32918 ;; This function uses a non-reentrant model
 32919 ;;
 32920                           
 32921                           
 32922                           ;psect for function _op_desce
 32923  334C                     _op_desce:	
 32924                           
 32925                           ;func.c: 370: if(!flag.sussess) {
 32926                           
 32927                           ;incstack = 0
 32928                           ; Regs used in _op_desce: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 32929  334C  0143               	movlb	3	; select bank3
 32930  334D  19AC               	btfsc	_flag^(0+384),3	;volatile
 32931  334E  2B56               	goto	l16072
 32932                           
 32933                           ;func.c: 371: flag.US = 0;
 32934  334F  12AC               	bcf	_flag^(0+384),5	;volatile
 32935                           
 32936                           ;func.c: 372: led.HF = 0;
 32937  3350  1065               	bcf	_led^(0+384),0	;volatile
 32938                           
 32939                           ;func.c: 373: LATDbits.LATD6 = 0;
 32940  3351  0140               	movlb	0	; select bank0
 32941  3352  1319               	bcf	25,6	;volatile
 32942                           
 32943                           ;func.c: 374: statusSolda = PARADO;
 32944  3353  0143               	movlb	3	; select bank3
 32945  3354  01DB               	clrf	_statusSolda^(0+384)
 32946                           
 32947                           ;func.c: 375: return;
 32948  3355  0008               	return
 32949  3356                     l16072:	
 32950                           ;func.c: 376: }
 32951                           
 32952                           
 32953                           ;func.c: 377: else if (statusSolda == FIXANDO){
 32954  3356  3003               	movlw	3
 32955  3357  065B               	xorwf	_statusSolda^(0+384),w
 32956  3358  1903               	btfsc	3,2
 32957  3359  0008               	return
 32958                           
 32959                           ;func.c: 379: }
 32960                           ;func.c: 381: if(!ciclador){
 32961                           
 32962                           ;func.c: 378: return;
 32963  335A  0861               	movf	_ciclador^(0+384),w
 32964  335B  1D03               	btfss	3,2
 32965  335C  2C29               	goto	l16102
 32966                           
 32967                           ;func.c: 382: escreve_LCD(1,1,descendo_str[idioma]);
 32968  335D  0140               	movlb	0	; select bank0
 32969  335E  01B5               	clrf	escreve_LCD@coluna
 32970  335F  0AB5               	incf	escreve_LCD@coluna,f
 32971  3360  0143               	movlb	3	; select bank3
 32972  3361  085A               	movf	_idioma^(0+384),w
 32973  3362  0140               	movlb	0	; select bank0
 32974  3363  00D5               	movwf	??_op_desce
 32975  3364  01D6               	clrf	??_op_desce+1
 32976  3365  0855               	movf	??_op_desce,w
 32977  3366  00AB               	movwf	___wmul@multiplier
 32978  3367  0856               	movf	??_op_desce+1,w
 32979  3368  00AC               	movwf	___wmul@multiplier+1
 32980  3369  3011               	movlw	17
 32981  336A  00AD               	movwf	___wmul@multiplicand
 32982  336B  3000               	movlw	0
 32983  336C  00AE               	movwf	___wmul@multiplicand+1
 32984  336D  31D0  20FE  31B3   	fcall	___wmul
 32985  3370  30D0               	movlw	low (_descendo_str| (0+32768))
 32986  3371  0140               	movlb	0	; select bank0
 32987  3372  00D7               	movwf	??_op_desce+2
 32988  3373  30DD               	movlw	high (_descendo_str| (0+32768))
 32989  3374  00D8               	movwf	??_op_desce+3
 32990  3375  082B               	movf	?___wmul,w
 32991  3376  0757               	addwf	??_op_desce+2,w
 32992  3377  00B6               	movwf	escreve_LCD@str
 32993  3378  082C               	movf	?___wmul+1,w
 32994  3379  3D58               	addwfc	??_op_desce+3,w
 32995  337A  00B7               	movwf	escreve_LCD@str+1
 32996  337B  3001               	movlw	1
 32997  337C  31E7  27C1  31B3   	fcall	_escreve_LCD
 32998                           
 32999                           ;func.c: 383: if (modo == RAPIDO){
 33000  337F  0143               	movlb	3	; select bank3
 33001  3380  035C               	decf	_modo^(0+384),w
 33002  3381  1D03               	btfss	3,2
 33003  3382  2BEA               	goto	l16096
 33004                           
 33005                           ;func.c: 384: escreve_LCD(2,1,n_pecas_str[idioma]);
 33006  3383  0140               	movlb	0	; select bank0
 33007  3384  01B5               	clrf	escreve_LCD@coluna
 33008  3385  0AB5               	incf	escreve_LCD@coluna,f
 33009  3386  0143               	movlb	3	; select bank3
 33010  3387  085A               	movf	_idioma^(0+384),w
 33011  3388  0140               	movlb	0	; select bank0
 33012  3389  00D5               	movwf	??_op_desce
 33013  338A  01D6               	clrf	??_op_desce+1
 33014  338B  0855               	movf	??_op_desce,w
 33015  338C  00AB               	movwf	___wmul@multiplier
 33016  338D  0856               	movf	??_op_desce+1,w
 33017  338E  00AC               	movwf	___wmul@multiplier+1
 33018  338F  3011               	movlw	17
 33019  3390  00AD               	movwf	___wmul@multiplicand
 33020  3391  3000               	movlw	0
 33021  3392  00AE               	movwf	___wmul@multiplicand+1
 33022  3393  31D0  20FE  31B3   	fcall	___wmul
 33023  3396  3078               	movlw	low (_n_pecas_str| (0+32768))
 33024  3397  0140               	movlb	0	; select bank0
 33025  3398  00D7               	movwf	??_op_desce+2
 33026  3399  30E0               	movlw	high (_n_pecas_str| (0+32768))
 33027  339A  00D8               	movwf	??_op_desce+3
 33028  339B  082B               	movf	?___wmul,w
 33029  339C  0757               	addwf	??_op_desce+2,w
 33030  339D  00B6               	movwf	escreve_LCD@str
 33031  339E  082C               	movf	?___wmul+1,w
 33032  339F  3D58               	addwfc	??_op_desce+3,w
 33033  33A0  00B7               	movwf	escreve_LCD@str+1
 33034  33A1  3002               	movlw	2
 33035  33A2  31E7  27C1  31B3   	fcall	_escreve_LCD
 33036                           
 33037                           ;func.c: 386: if(flag.regressivo)
 33038  33A5  0143               	movlb	3	; select bank3
 33039  33A6  1D2C               	btfss	_flag^(0+384),2	;volatile
 33040  33A7  2BB6               	goto	l16088
 33041                           
 33042                           ;func.c: 387: num = cont_pecas;
 33043  33A8  0827               	movf	(_cont_pecas+3)^(0+384),w
 33044  33A9  0144               	movlb	4	; select bank4
 33045  33AA  00A3               	movwf	(_num+3)^(0+512)
 33046  33AB  0143               	movlb	3	; select bank3
 33047  33AC  0826               	movf	(_cont_pecas+2)^(0+384),w
 33048  33AD  0144               	movlb	4	; select bank4
 33049  33AE  00A2               	movwf	(_num+2)^(0+512)
 33050  33AF  0143               	movlb	3	; select bank3
 33051  33B0  0825               	movf	(_cont_pecas+1)^(0+384),w
 33052  33B1  0144               	movlb	4	; select bank4
 33053  33B2  00A1               	movwf	(_num+1)^(0+512)
 33054  33B3  0143               	movlb	3	; select bank3
 33055  33B4  0824               	movf	_cont_pecas^(0+384),w
 33056  33B5  2BC4               	goto	L61
 33057  33B6                     l16088:	
 33058                           
 33059                           ;func.c: 388: else
 33060                           ;func.c: 389: num = n_pecas;
 33061  33B6  0143               	movlb	3	; select bank3
 33062  33B7  0823               	movf	(_n_pecas+3)^(0+384),w
 33063  33B8  0144               	movlb	4	; select bank4
 33064  33B9  00A3               	movwf	(_num+3)^(0+512)
 33065  33BA  0143               	movlb	3	; select bank3
 33066  33BB  0822               	movf	(_n_pecas+2)^(0+384),w
 33067  33BC  0144               	movlb	4	; select bank4
 33068  33BD  00A2               	movwf	(_num+2)^(0+512)
 33069  33BE  0143               	movlb	3	; select bank3
 33070  33BF  0821               	movf	(_n_pecas+1)^(0+384),w
 33071  33C0  0144               	movlb	4	; select bank4
 33072  33C1  00A1               	movwf	(_num+1)^(0+512)
 33073  33C2  0143               	movlb	3	; select bank3
 33074  33C3  0820               	movf	_n_pecas^(0+384),w
 33075  33C4                     L61:	
 33076  33C4  0144               	movlb	4	; select bank4
 33077  33C5  00A0               	movwf	_num^(0+512)
 33078                           
 33079                           ;func.c: 390: ltoa(str,num,10);
 33080  33C6  0823               	movf	(_num+3)^(0+512),w
 33081  33C7  0140               	movlb	0	; select bank0
 33082  33C8  00CD               	movwf	ltoa@val+3
 33083  33C9  0144               	movlb	4	; select bank4
 33084  33CA  0822               	movf	(_num+2)^(0+512),w
 33085  33CB  0140               	movlb	0	; select bank0
 33086  33CC  00CC               	movwf	ltoa@val+2
 33087  33CD  0144               	movlb	4	; select bank4
 33088  33CE  0821               	movf	(_num+1)^(0+512),w
 33089  33CF  0140               	movlb	0	; select bank0
 33090  33D0  00CB               	movwf	ltoa@val+1
 33091  33D1  0144               	movlb	4	; select bank4
 33092  33D2  0820               	movf	_num^(0+512),w
 33093  33D3  0140               	movlb	0	; select bank0
 33094  33D4  00CA               	movwf	ltoa@val
 33095  33D5  300A               	movlw	10
 33096  33D6  00CE               	movwf	ltoa@base
 33097  33D7  3000               	movlw	0
 33098  33D8  00CF               	movwf	ltoa@base+1
 33099  33D9  305C               	movlw	(low (_str| (0+512)))& (0+255)
 33100  33DA  31D4  24DE  31B3   	fcall	_ltoa
 33101                           
 33102                           ;func.c: 391: Lcd_Write_String(str);
 33103  33DD  305C               	movlw	low _str
 33104  33DE  0140               	movlb	0	; select bank0
 33105  33DF  00B0               	movwf	Lcd_Write_String@a
 33106  33E0  3002               	movlw	high _str
 33107  33E1  00B1               	movwf	Lcd_Write_String@a+1
 33108  33E2  31D1  2171  31B3   	fcall	_Lcd_Write_String
 33109                           
 33110                           ;func.c: 392: Lcd_Write_Char(' ');
 33111  33E5  3020               	movlw	32
 33112  33E6  31D4  2482  31B3   	fcall	_Lcd_Write_Char
 33113                           
 33114                           ;func.c: 393: }
 33115  33E9  2C29               	goto	l16102
 33116  33EA                     l16096:	
 33117                           
 33118                           ;func.c: 394: else if(modo == CONTINUO){
 33119  33EA  3002               	movlw	2
 33120  33EB  0143               	movlb	3	; select bank3
 33121  33EC  065C               	xorwf	_modo^(0+384),w
 33122  33ED  1D03               	btfss	3,2
 33123  33EE  2C07               	goto	l16100
 33124                           
 33125                           ;func.c: 395: escreve_LCD(2,1,solda_cont_str[idioma]);
 33126  33EF  0140               	movlb	0	; select bank0
 33127  33F0  01B5               	clrf	escreve_LCD@coluna
 33128  33F1  0AB5               	incf	escreve_LCD@coluna,f
 33129  33F2  0143               	movlb	3	; select bank3
 33130  33F3  085A               	movf	_idioma^(0+384),w
 33131  33F4  0140               	movlb	0	; select bank0
 33132  33F5  00D5               	movwf	??_op_desce
 33133  33F6  01D6               	clrf	??_op_desce+1
 33134  33F7  0855               	movf	??_op_desce,w
 33135  33F8  00AB               	movwf	___wmul@multiplier
 33136  33F9  0856               	movf	??_op_desce+1,w
 33137  33FA  00AC               	movwf	___wmul@multiplier+1
 33138  33FB  3011               	movlw	17
 33139  33FC  00AD               	movwf	___wmul@multiplicand
 33140  33FD  3000               	movlw	0
 33141  33FE  00AE               	movwf	___wmul@multiplicand+1
 33142  33FF  31D0  20FE  31B3   	fcall	___wmul
 33143  3402  3048               	movlw	low (_solda_cont_str| (0+32768))
 33144  3403  0140               	movlb	0	; select bank0
 33145  3404  00D7               	movwf	??_op_desce+2
 33146  3405  30DD               	movlw	high (_solda_cont_str| (0+32768))
 33147  3406  2C1E               	goto	L62
 33148  3407                     l16100:	
 33149                           ;func.c: 396: }
 33150                           
 33151                           
 33152                           ;func.c: 397: else{
 33153                           ;func.c: 398: escreve_LCD(2,1,aguarde_str[idioma]);
 33154  3407  0140               	movlb	0	; select bank0
 33155  3408  01B5               	clrf	escreve_LCD@coluna
 33156  3409  0AB5               	incf	escreve_LCD@coluna,f
 33157  340A  0143               	movlb	3	; select bank3
 33158  340B  085A               	movf	_idioma^(0+384),w
 33159  340C  0140               	movlb	0	; select bank0
 33160  340D  00D5               	movwf	??_op_desce
 33161  340E  01D6               	clrf	??_op_desce+1
 33162  340F  0855               	movf	??_op_desce,w
 33163  3410  00AB               	movwf	___wmul@multiplier
 33164  3411  0856               	movf	??_op_desce+1,w
 33165  3412  00AC               	movwf	___wmul@multiplier+1
 33166  3413  3011               	movlw	17
 33167  3414  00AD               	movwf	___wmul@multiplicand
 33168  3415  3000               	movlw	0
 33169  3416  00AE               	movwf	___wmul@multiplicand+1
 33170  3417  31D0  20FE  31B3   	fcall	___wmul
 33171  341A  306A               	movlw	low (_aguarde_str| (0+32768))
 33172  341B  0140               	movlb	0	; select bank0
 33173  341C  00D7               	movwf	??_op_desce+2
 33174  341D  30DD               	movlw	high (_aguarde_str| (0+32768))
 33175  341E                     L62:	
 33176  341E  00D8               	movwf	??_op_desce+3
 33177  341F  082B               	movf	?___wmul,w
 33178  3420  0757               	addwf	??_op_desce+2,w
 33179  3421  00B6               	movwf	escreve_LCD@str
 33180  3422  082C               	movf	?___wmul+1,w
 33181  3423  3D58               	addwfc	??_op_desce+3,w
 33182  3424  00B7               	movwf	escreve_LCD@str+1
 33183  3425  3002               	movlw	2
 33184  3426  31E7  27C1  31B3   	fcall	_escreve_LCD
 33185  3429                     l16102:	
 33186                           
 33187                           ;func.c: 399: }
 33188                           ;func.c: 400: }
 33189                           ;func.c: 401: statusSolda = DESCENDO;
 33190  3429  0143               	movlb	3	; select bank3
 33191  342A  01DB               	clrf	_statusSolda^(0+384)
 33192  342B  0ADB               	incf	_statusSolda^(0+384),f
 33193                           
 33194                           ;func.c: 402: if(cfg.pne_desce){
 33195  342C  1E30               	btfss	_cfg^(0+384),4
 33196  342D  0008               	return
 33197                           
 33198                           ;func.c: 403: saida(PNE_DESCE,1);
 33199  342E  3001               	movlw	1
 33200  342F  0140               	movlb	0	; select bank0
 33201  3430  00AB               	movwf	saida@b
 33202  3431  3000               	movlw	0
 33203  3432  00AC               	movwf	saida@b+1
 33204  3433  3001               	movlw	1
 33205  3434  31D1  21CE  31B3   	fcall	_saida
 33206                           
 33207                           ;func.c: 404: start_timer(t);
 33208  3437  0140               	movlb	0	; select bank0
 33209  3438  0854               	movf	op_desce@t+1,w
 33210  3439  00AC               	movwf	start_timer@t+1
 33211  343A  0853               	movf	op_desce@t,w
 33212  343B  00AB               	movwf	start_timer@t
 33213  343C  31E1  2165  31B3   	fcall	_start_timer
 33214  343F                     l1247:	
 33215                           ;func.c: 405: do{
 33216                           
 33217  343F  0064               	clrwdt	;# 
 33218                           
 33219                           ;func.c: 407: ver_entrada();
 33220  3440  31CE  26BA  31B3   	fcall	_ver_entrada
 33221                           
 33222                           ;func.c: 408: if (ciclador){
 33223  3443  0143               	movlb	3	; select bank3
 33224  3444  0861               	movf	_ciclador^(0+384),w
 33225  3445  1D03               	btfss	3,2
 33226                           
 33227                           ;func.c: 409: flag.inicia = 1;
 33228  3446  162C               	bsf	_flag^(0+384),4	;volatile
 33229                           
 33230                           ;func.c: 410: }
 33231                           ;func.c: 412: if(flag_in.emerg){
 33232  3447  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 33233  3448  2C50               	goto	l1249
 33234                           
 33235                           ;func.c: 413: erro = 250;
 33236  3449  30FA               	movlw	250
 33237  344A  0140               	movlb	0	; select bank0
 33238  344B  00D5               	movwf	??_op_desce
 33239  344C  0855               	movf	??_op_desce,w
 33240  344D  00E3               	movwf	_erro
 33241                           
 33242                           ;func.c: 414: flag.inicia = 0;
 33243  344E  0143               	movlb	3	; select bank3
 33244  344F  2C57               	goto	l1253
 33245  3450                     l1249:	
 33246                           ;func.c: 418: }
 33247                           
 33248                           ;func.c: 417: statusSolda = PARADO;
 33249                           
 33250                           ;func.c: 416: saida(PNE_DESCE,0);
 33251                           
 33252                           ;func.c: 415: flag.sussess = 0;
 33253                           
 33254                           
 33255                           ;func.c: 419: else if((cfg.aciona1 &&!flag_in.aciona1) || (cfg.aciona2 && !flag_in.acion
      +                          a2)){
 33256  3450  1CB0               	btfss	_cfg^(0+384),1
 33257  3451  2C54               	goto	l1255
 33258  3452  1CCC               	btfss	_flag_in^(0+384),1	;volatile
 33259  3453  2C57               	goto	l1253
 33260  3454                     l1255:	
 33261  3454  1930               	btfsc	_cfg^(0+384),2
 33262  3455  194C               	btfsc	_flag_in^(0+384),2	;volatile
 33263  3456  2C63               	goto	l16134
 33264  3457                     l1253:	
 33265                           
 33266                           ;func.c: 420: flag.inicia = 0;
 33267  3457  122C               	bcf	_flag^(0+384),4	;volatile
 33268                           
 33269                           ;func.c: 421: flag.sussess = 0;
 33270  3458  11AC               	bcf	_flag^(0+384),3	;volatile
 33271                           
 33272                           ;func.c: 422: saida(PNE_DESCE,0);
 33273  3459  3000               	movlw	0
 33274  345A  0140               	movlb	0	; select bank0
 33275  345B  00AB               	movwf	saida@b
 33276  345C  00AC               	movwf	saida@b+1
 33277  345D  3001               	movlw	1
 33278  345E  31D1  21CE  31B3   	fcall	_saida
 33279                           
 33280                           ;func.c: 423: statusSolda = PARADO;
 33281  3461  0143               	movlb	3	; select bank3
 33282  3462  01DB               	clrf	_statusSolda^(0+384)
 33283  3463                     l16134:	
 33284                           
 33285                           ;func.c: 424: }
 33286                           ;func.c: 426: }while(flag.inicia && T5CONbits.TMR5ON);
 33287  3463  1E2C               	btfss	_flag^(0+384),4	;volatile
 33288  3464  2C68               	goto	l16138
 33289  3465  0144               	movlb	4	; select bank4
 33290  3466  181A               	btfsc	26,0	;volatile
 33291  3467  2C3F               	goto	l1247
 33292  3468                     l16138:	
 33293                           
 33294                           ;func.c: 427: stop_timer();
 33295  3468  3190  2000         	fcall	_stop_timer
 33296  346A  0008               	return
 33297  346B                     __end_of_op_desce:	
 33298                           
 33299                           	psect	text88
 33300  4EBA                     __ptext88:	
 33301 ;; *************** function _ver_entrada *****************
 33302 ;; Defined at:
 33303 ;;		line 925 in file "func.c"
 33304 ;; Parameters:    Size  Location     Type
 33305 ;;		None
 33306 ;; Auto vars:     Size  Location     Type
 33307 ;;		None
 33308 ;; Return value:  Size  Location     Type
 33309 ;;                  1    wreg      void 
 33310 ;; Registers used:
 33311 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 33312 ;; Tracked objects:
 33313 ;;		On entry : 0/0
 33314 ;;		On exit  : 0/0
 33315 ;;		Unchanged: 0/0
 33316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33320 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33321 ;;Total ram usage:        1 bytes
 33322 ;; Hardware stack levels used:    1
 33323 ;; Hardware stack levels required when called:    4
 33324 ;; This function calls:
 33325 ;;		_ISR_entrada
 33326 ;; This function is called by:
 33327 ;;		_main
 33328 ;;		_op_desce
 33329 ;;		_op_solda
 33330 ;;		_op_fixar
 33331 ;;		_liberar
 33332 ;;		_emergencia
 33333 ;;		_teste_pneumatico
 33334 ;;		_teste_US
 33335 ;; This function uses a non-reentrant model
 33336 ;;
 33337                           
 33338                           
 33339                           ;psect for function _ver_entrada
 33340  4EBA                     _ver_entrada:	
 33341                           
 33342                           ;func.c: 926: static char temp = 0;
 33343                           ;func.c: 927: ISR_entrada(IN1);
 33344                           
 33345                           ;incstack = 0
 33346                           ; Regs used in _ver_entrada: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 33347  4EBA  3001               	movlw	1
 33348  4EBB  31C0  20D1  31CE   	fcall	_ISR_entrada
 33349                           
 33350                           ;func.c: 928: ISR_entrada(IN2);
 33351  4EBE  3002               	movlw	2
 33352  4EBF  31C0  20D1  31CE   	fcall	_ISR_entrada
 33353                           
 33354                           ;func.c: 929: ISR_entrada(IN3);
 33355  4EC2  3003               	movlw	3
 33356  4EC3  31C0  20D1  31CE   	fcall	_ISR_entrada
 33357                           
 33358                           ;func.c: 930: ISR_entrada(IN4);
 33359  4EC6  3004               	movlw	4
 33360  4EC7  31C0  20D1  31CE   	fcall	_ISR_entrada
 33361                           
 33362                           ;func.c: 931: ISR_entrada(IN5);
 33363  4ECA  3005               	movlw	5
 33364  4ECB  31C0  20D1  31CE   	fcall	_ISR_entrada
 33365                           
 33366                           ;func.c: 933: if (cfg.emergencia && flag_in.emerg){
 33367  4ECE  0143               	movlb	3	; select bank3
 33368  4ECF  1830               	btfsc	_cfg^(0+384),0
 33369  4ED0  1C4C               	btfss	_flag_in^(0+384),0	;volatile
 33370  4ED1  2ED5               	goto	l1444
 33371                           
 33372                           ;func.c: 934: flag.inicia = 0;
 33373  4ED2  122C               	bcf	_flag^(0+384),4	;volatile
 33374                           
 33375                           ;func.c: 935: flag.abortar = 1;
 33376  4ED3  172C               	bsf	_flag^(0+384),6	;volatile
 33377                           
 33378                           ;func.c: 936: }
 33379  4ED4  0008               	return
 33380  4ED5                     l1444:	
 33381                           
 33382                           ;func.c: 937: else if(cfg.aciona1 && cfg.aciona2){
 33383  4ED5  18B0               	btfsc	_cfg^(0+384),1
 33384  4ED6  1D30               	btfss	_cfg^(0+384),2
 33385  4ED7  2F15               	goto	l1446
 33386                           
 33387                           ;func.c: 938: if(temp == 0 && (flag_in.aciona1 || flag_in.aciona2)){
 33388  4ED8  0856               	movf	ver_entrada@temp^(0+384),w
 33389  4ED9  1D03               	btfss	3,2
 33390  4EDA  2EF0               	goto	l15566
 33391  4EDB  18CC               	btfsc	_flag_in^(0+384),1	;volatile
 33392  4EDC  2EDF               	goto	l15558
 33393  4EDD  1D4C               	btfss	_flag_in^(0+384),2	;volatile
 33394  4EDE  2EF0               	goto	l15566
 33395  4EDF                     l15558:	
 33396                           
 33397                           ;func.c: 939: t10ms = 0;
 33398  4EDF  0140               	movlb	0	; select bank0
 33399  4EE0  01DE               	clrf	_t10ms
 33400  4EE1  01DF               	clrf	_t10ms+1
 33401                           
 33402                           ;func.c: 940: if(flag_in.aciona1) temp = 1;
 33403  4EE2  0143               	movlb	3	; select bank3
 33404  4EE3  1CCC               	btfss	_flag_in^(0+384),1	;volatile
 33405  4EE4  2EE7               	goto	l1450
 33406  4EE5  01D6               	clrf	ver_entrada@temp^(0+384)
 33407  4EE6  0AD6               	incf	ver_entrada@temp^(0+384),f
 33408  4EE7                     l1450:	
 33409                           
 33410                           ;func.c: 941: if(flag_in.aciona2) temp = 2;
 33411  4EE7  1D4C               	btfss	_flag_in^(0+384),2	;volatile
 33412  4EE8  0008               	return
 33413  4EE9  3002               	movlw	2
 33414  4EEA  0140               	movlb	0	; select bank0
 33415  4EEB  00B2               	movwf	??_ver_entrada
 33416  4EEC  0832               	movf	??_ver_entrada,w
 33417  4EED  0143               	movlb	3	; select bank3
 33418  4EEE  00D6               	movwf	ver_entrada@temp^(0+384)
 33419                           
 33420                           ;func.c: 942: }
 33421  4EEF  0008               	return
 33422  4EF0                     l15566:	
 33423                           
 33424                           ;func.c: 943: else if(temp > 0 && flag_in.aciona1 && flag_in.aciona2 && t10ms < 50){
 33425  4EF0  0856               	movf	ver_entrada@temp^(0+384),w
 33426  4EF1  1D03               	btfss	3,2
 33427  4EF2  1CCC               	btfss	_flag_in^(0+384),1	;volatile
 33428  4EF3  2F01               	goto	l15576
 33429  4EF4  1D4C               	btfss	_flag_in^(0+384),2	;volatile
 33430  4EF5  2F01               	goto	l15576
 33431  4EF6  3000               	movlw	0
 33432  4EF7  0140               	movlb	0	; select bank0
 33433  4EF8  025F               	subwf	_t10ms+1,w
 33434  4EF9  3032               	movlw	50
 33435  4EFA  1903               	skipnz
 33436  4EFB  025E               	subwf	_t10ms,w
 33437  4EFC  1803               	skipnc
 33438  4EFD  2F01               	goto	l15576
 33439                           
 33440                           ;func.c: 944: flag.inicia = 1;
 33441  4EFE  0143               	movlb	3	; select bank3
 33442  4EFF  162C               	bsf	_flag^(0+384),4	;volatile
 33443                           
 33444                           ;func.c: 945: }
 33445  4F00  0008               	return
 33446  4F01                     l15576:	
 33447                           
 33448                           ;func.c: 946: else if (temp > 0 && !flag_in.aciona1 && !flag_in.aciona2 && t10ms > 50){
 33449  4F01  0143               	movlb	3	; select bank3
 33450  4F02  0856               	movf	ver_entrada@temp^(0+384),w
 33451  4F03  1903               	btfsc	3,2
 33452  4F04  0008               	return
 33453  4F05  18CC               	btfsc	_flag_in^(0+384),1	;volatile
 33454  4F06  0008               	return
 33455  4F07  194C               	btfsc	_flag_in^(0+384),2	;volatile
 33456  4F08  0008               	return
 33457  4F09  3000               	movlw	0
 33458  4F0A  0140               	movlb	0	; select bank0
 33459  4F0B  025F               	subwf	_t10ms+1,w
 33460  4F0C  3033               	movlw	51
 33461  4F0D  1903               	skipnz
 33462  4F0E  025E               	subwf	_t10ms,w
 33463  4F0F  1C03               	skipc
 33464  4F10  0008               	return
 33465                           
 33466                           ;func.c: 947: flag.inicia = 0;
 33467  4F11  0143               	movlb	3	; select bank3
 33468  4F12  122C               	bcf	_flag^(0+384),4	;volatile
 33469                           
 33470                           ;func.c: 948: temp = 0;
 33471  4F13  01D6               	clrf	ver_entrada@temp^(0+384)
 33472                           
 33473                           ;func.c: 949: }
 33474                           ;func.c: 950: }
 33475  4F14  0008               	return
 33476  4F15                     l1446:	
 33477                           
 33478                           ;func.c: 951: else if(cfg.aciona1 || cfg.aciona2){
 33479  4F15  18B0               	btfsc	_cfg^(0+384),1
 33480  4F16  2F19               	goto	l1459
 33481  4F17  1D30               	btfss	_cfg^(0+384),2
 33482  4F18  0008               	return
 33483  4F19                     l1459:	
 33484                           
 33485                           ;func.c: 952: if(flag_in.aciona1 || flag_in.aciona2){
 33486  4F19  18CC               	btfsc	_flag_in^(0+384),1	;volatile
 33487  4F1A  2F1D               	goto	l1462
 33488  4F1B  1D4C               	btfss	_flag_in^(0+384),2	;volatile
 33489  4F1C  2F1F               	goto	l1460
 33490  4F1D                     l1462:	
 33491                           
 33492                           ;func.c: 953: flag.inicia = 1;
 33493  4F1D  162C               	bsf	_flag^(0+384),4	;volatile
 33494                           
 33495                           ;func.c: 954: }
 33496  4F1E  0008               	return
 33497  4F1F                     l1460:	
 33498                           
 33499                           ;func.c: 955: else{
 33500                           ;func.c: 956: flag.inicia = 0;
 33501  4F1F  122C               	bcf	_flag^(0+384),4	;volatile
 33502  4F20  0008               	return
 33503  4F21                     __end_of_ver_entrada:	
 33504                           
 33505                           	psect	text89
 33506  40D1                     __ptext89:	
 33507 ;; *************** function _ISR_entrada *****************
 33508 ;; Defined at:
 33509 ;;		line 870 in file "func.c"
 33510 ;; Parameters:    Size  Location     Type
 33511 ;;  ch              1    wreg     enum E15184
 33512 ;; Auto vars:     Size  Location     Type
 33513 ;;  ch              1   13[BANK0 ] enum E15184
 33514 ;;  b               2   16[BANK0 ] unsigned int 
 33515 ;;  x               1   15[BANK0 ] unsigned char 
 33516 ;;  p               1   14[BANK0 ] unsigned char 
 33517 ;; Return value:  Size  Location     Type
 33518 ;;                  1    wreg      void 
 33519 ;; Registers used:
 33520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
 33521 ;; Tracked objects:
 33522 ;;		On entry : 0/0
 33523 ;;		On exit  : 0/0
 33524 ;;		Unchanged: 0/0
 33525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33527 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33529 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33530 ;;Total ram usage:        7 bytes
 33531 ;; Hardware stack levels used:    1
 33532 ;; Hardware stack levels required when called:    3
 33533 ;; This function calls:
 33534 ;;		Nothing
 33535 ;; This function is called by:
 33536 ;;		_ver_entrada
 33537 ;; This function uses a non-reentrant model
 33538 ;;
 33539                           
 33540                           
 33541                           ;psect for function _ISR_entrada
 33542  40D1                     _ISR_entrada:	
 33543                           
 33544                           ;incstack = 0
 33545                           ; Regs used in _ISR_entrada: [wreg-fsr1h+status,2+status,0]
 33546                           ;ISR_entrada@ch stored from wreg
 33547  40D1  0140               	movlb	0	; select bank0
 33548  40D2  00AD               	movwf	ISR_entrada@ch
 33549                           
 33550                           ;func.c: 871: unsigned char x = in[ch];
 33551  40D3  082D               	movf	ISR_entrada@ch,w
 33552  40D4  3EB8               	addlw	(low (_in| (0+512)))& (0+255)
 33553  40D5  0086               	movwf	6
 33554  40D6  3002               	movlw	2	; select bank5/6
 33555  40D7  0087               	movwf	7
 33556  40D8  0801               	movf	1,w
 33557  40D9  00AB               	movwf	??_ISR_entrada
 33558  40DA  082B               	movf	??_ISR_entrada,w
 33559  40DB  00AF               	movwf	ISR_entrada@x
 33560                           
 33561                           ;func.c: 872: unsigned char p = PORTA;
 33562  40DC  080C               	movf	12,w	;volatile
 33563  40DD  00AB               	movwf	??_ISR_entrada
 33564  40DE  082B               	movf	??_ISR_entrada,w
 33565  40DF  00AE               	movwf	ISR_entrada@p
 33566                           
 33567                           ;func.c: 873: unsigned b = p & byte_in[x];
 33568  40E0  082F               	movf	ISR_entrada@x,w
 33569  40E1  3EA8               	addlw	(low (_byte_in| (0+512)))& (0+255)
 33570  40E2  0086               	movwf	6
 33571  40E3  3002               	movlw	2	; select bank5/6
 33572  40E4  0087               	movwf	7
 33573  40E5  0801               	movf	1,w
 33574  40E6  052E               	andwf	ISR_entrada@p,w
 33575  40E7  00AB               	movwf	??_ISR_entrada
 33576  40E8  01AC               	clrf	??_ISR_entrada+1
 33577  40E9  082B               	movf	??_ISR_entrada,w
 33578  40EA  00B0               	movwf	ISR_entrada@b
 33579  40EB  082C               	movf	??_ISR_entrada+1,w
 33580  40EC  00B1               	movwf	ISR_entrada@b+1
 33581                           
 33582                           ;func.c: 874: switch(x){
 33583  40ED  293C               	goto	l14996
 33584  40EE                     l1407:	
 33585                           ;func.c: 875: case EMERGENCIA:
 33586                           
 33587                           
 33588                           ;func.c: 876: if(cfg.emergencia){
 33589  40EE  0143               	movlb	3	; select bank3
 33590  40EF  1C30               	btfss	_cfg^(0+384),0
 33591  40F0  28FC               	goto	l1408
 33592                           
 33593                           ;func.c: 877: if(!b) flag_in.emerg = 1;
 33594  40F1  0140               	movlb	0	; select bank0
 33595  40F2  0830               	movf	ISR_entrada@b,w
 33596  40F3  0431               	iorwf	ISR_entrada@b+1,w
 33597  40F4  1D03               	btfss	3,2
 33598  40F5  28F9               	goto	l1409
 33599  40F6  0143               	movlb	3	; select bank3
 33600  40F7  144C               	bsf	_flag_in^(0+384),0	;volatile
 33601  40F8  0008               	return
 33602  40F9                     l1409:	
 33603                           
 33604                           ;func.c: 878: else flag_in.emerg = 0;
 33605  40F9  0143               	movlb	3	; select bank3
 33606  40FA  104C               	bcf	_flag_in^(0+384),0	;volatile
 33607                           
 33608                           ;func.c: 879: }
 33609  40FB  0008               	return
 33610  40FC                     l1408:	
 33611                           
 33612                           ;func.c: 880: else flag_in.emerg = 0;
 33613  40FC  104C               	bcf	_flag_in^(0+384),0	;volatile
 33614                           
 33615                           ;func.c: 881: break;
 33616  40FD  0008               	return
 33617  40FE                     l1413:	
 33618                           ;func.c: 882: case ACIONAMENTO1:
 33619                           
 33620                           
 33621                           ;func.c: 883: if(cfg.aciona1){
 33622  40FE  0143               	movlb	3	; select bank3
 33623  40FF  1CB0               	btfss	_cfg^(0+384),1
 33624  4100  290C               	goto	l1414
 33625                           
 33626                           ;func.c: 884: if(b) flag_in.aciona1 = 1;
 33627  4101  0140               	movlb	0	; select bank0
 33628  4102  0830               	movf	ISR_entrada@b,w
 33629  4103  0431               	iorwf	ISR_entrada@b+1,w
 33630  4104  1903               	btfsc	3,2
 33631  4105  2909               	goto	l1415
 33632  4106  0143               	movlb	3	; select bank3
 33633  4107  14CC               	bsf	_flag_in^(0+384),1	;volatile
 33634  4108  0008               	return
 33635  4109                     l1415:	
 33636                           
 33637                           ;func.c: 885: else flag_in.aciona1 = 0;
 33638  4109  0143               	movlb	3	; select bank3
 33639  410A  10CC               	bcf	_flag_in^(0+384),1	;volatile
 33640                           
 33641                           ;func.c: 886: }
 33642  410B  0008               	return
 33643  410C                     l1414:	
 33644                           
 33645                           ;func.c: 887: else flag_in.aciona1 = 0;
 33646  410C  10CC               	bcf	_flag_in^(0+384),1	;volatile
 33647                           
 33648                           ;func.c: 888: break;
 33649  410D  0008               	return
 33650  410E                     l1418:	
 33651                           ;func.c: 889: case ACIONAMENTO2:
 33652                           
 33653                           
 33654                           ;func.c: 890: if(cfg.aciona2){
 33655  410E  0143               	movlb	3	; select bank3
 33656  410F  1D30               	btfss	_cfg^(0+384),2
 33657  4110  291C               	goto	l1419
 33658                           
 33659                           ;func.c: 891: if(b) flag_in.aciona2 = 1;
 33660  4111  0140               	movlb	0	; select bank0
 33661  4112  0830               	movf	ISR_entrada@b,w
 33662  4113  0431               	iorwf	ISR_entrada@b+1,w
 33663  4114  1903               	btfsc	3,2
 33664  4115  2919               	goto	l1420
 33665  4116  0143               	movlb	3	; select bank3
 33666  4117  154C               	bsf	_flag_in^(0+384),2	;volatile
 33667  4118  0008               	return
 33668  4119                     l1420:	
 33669                           
 33670                           ;func.c: 892: else flag_in.aciona2 = 0;
 33671  4119  0143               	movlb	3	; select bank3
 33672  411A  114C               	bcf	_flag_in^(0+384),2	;volatile
 33673                           
 33674                           ;func.c: 893: }
 33675  411B  0008               	return
 33676  411C                     l1419:	
 33677                           
 33678                           ;func.c: 894: else flag_in.aciona2 = 0;
 33679  411C  114C               	bcf	_flag_in^(0+384),2	;volatile
 33680                           
 33681                           ;func.c: 895: break;
 33682  411D  0008               	return
 33683  411E                     l1423:	
 33684                           ;func.c: 896: case RESET:
 33685                           
 33686                           
 33687                           ;func.c: 897: if(cfg.reset){
 33688  411E  0143               	movlb	3	; select bank3
 33689  411F  1DB1               	btfss	(_cfg^(0+384)+1),3
 33690  4120  292C               	goto	l1424
 33691                           
 33692                           ;func.c: 898: if(b) flag_in.liberar = 1;
 33693  4121  0140               	movlb	0	; select bank0
 33694  4122  0830               	movf	ISR_entrada@b,w
 33695  4123  0431               	iorwf	ISR_entrada@b+1,w
 33696  4124  1903               	btfsc	3,2
 33697  4125  2929               	goto	l1425
 33698  4126  0143               	movlb	3	; select bank3
 33699  4127  164C               	bsf	_flag_in^(0+384),4	;volatile
 33700  4128  0008               	return
 33701  4129                     l1425:	
 33702                           
 33703                           ;func.c: 899: else flag_in.liberar = 0;
 33704  4129  0143               	movlb	3	; select bank3
 33705  412A  124C               	bcf	_flag_in^(0+384),4	;volatile
 33706                           
 33707                           ;func.c: 900: }
 33708  412B  0008               	return
 33709  412C                     l1424:	
 33710                           
 33711                           ;func.c: 901: else flag_in.liberar = 0;
 33712  412C  124C               	bcf	_flag_in^(0+384),4	;volatile
 33713                           
 33714                           ;func.c: 902: break;
 33715  412D  0008               	return
 33716  412E                     l1428:	
 33717                           ;func.c: 903: case METAL:
 33718                           
 33719                           
 33720                           ;func.c: 904: if(cfg.metal){
 33721  412E  0143               	movlb	3	; select bank3
 33722  412F  1E31               	btfss	(_cfg^(0+384)+1),4
 33723  4130  0008               	return
 33724                           
 33725                           ;func.c: 905: if(b) flag_in.metal = 1;
 33726  4131  0140               	movlb	0	; select bank0
 33727  4132  0830               	movf	ISR_entrada@b,w
 33728  4133  0431               	iorwf	ISR_entrada@b+1,w
 33729  4134  1903               	btfsc	3,2
 33730  4135  2939               	goto	l1430
 33731  4136  0143               	movlb	3	; select bank3
 33732  4137  154D               	bsf	(_flag_in^(0+384)+1),2	;volatile
 33733  4138  0008               	return
 33734  4139                     l1430:	
 33735                           
 33736                           ;func.c: 906: else flag_in.metal = 0;
 33737  4139  0143               	movlb	3	; select bank3
 33738  413A  114D               	bcf	(_flag_in^(0+384)+1),2	;volatile
 33739                           
 33740                           ;func.c: 917: }
 33741                           
 33742                           ;func.c: 916: break;
 33743                           
 33744                           ;func.c: 915: case SENSOR_HOLD:
 33745                           
 33746                           ;func.c: 914: break;
 33747                           
 33748                           ;func.c: 913: case SENSOR_PNE_RC:
 33749                           
 33750                           ;func.c: 912: break;
 33751                           
 33752                           ;func.c: 911: case SENSOR_PNE_AV:
 33753                           
 33754                           ;func.c: 910: break;
 33755                           
 33756                           ;func.c: 909: case SENSOR_PECA:
 33757                           
 33758                           ;func.c: 907: }
 33759                           ;func.c: 908: break;
 33760  413B  0008               	return
 33761  413C                     l14996:	
 33762  413C  0140               	movlb	0	; select bank0
 33763  413D  082F               	movf	ISR_entrada@x,w
 33764                           
 33765                           ; Switch size 1, requested type "space"
 33766                           ; Number of cases is 9, Range of values is 1 to 9
 33767                           ; switch strategies available:
 33768                           ; Name         Instructions Cycles
 33769                           ; direct_byte           27     9 (fixed)
 33770                           ; simple_byte           28    15 (average)
 33771                           ; jumptable            263     9 (fixed)
 33772                           ;	Chosen strategy is direct_byte
 33773  413E  3EFF               	addlw	-1
 33774  413F  1C03               	skipc
 33775  4140  0008               	return
 33776  4141  0084               	movwf	4
 33777  4142  3009               	movlw	9
 33778  4143  0204               	subwf	4,w
 33779  4144  1803               	skipnc
 33780  4145  0008               	return
 33781  4146  31E1               	movlp	high S18614
 33782  4147  3504               	lslf	4,w
 33783  4148  3E00               	addlw	low S18614
 33784  4149  0082               	movwf	2
 33785  414A                     l1436:	
 33786  414A  0008               	return
 33787  414B                     __end_of_ISR_entrada:	
 33788                           
 33789                           	psect	swtext7
 33790  6100                     __pswtext7:	
 33791  6100                     S18614:	
 33792  6100  31C0  28EE         	ljmp	l1407
 33793  6102  31C0  28FE         	ljmp	l1413
 33794  6104  31C1  290E         	ljmp	l1418
 33795  6106  31C1  291E         	ljmp	l1423
 33796  6108  31C1  292E         	ljmp	l1428
 33797  610A  31C1  294A         	ljmp	l1436
 33798  610C  31C1  294A         	ljmp	l1436
 33799  610E  31C1  294A         	ljmp	l1436
 33800  6110  31C1  294A         	ljmp	l1436
 33801                           
 33802                           	psect	text90
 33803  51CE                     __ptext90:	
 33804 ;; *************** function _saida *****************
 33805 ;; Defined at:
 33806 ;;		line 1221 in file "func.c"
 33807 ;; Parameters:    Size  Location     Type
 33808 ;;  x               1    wreg     enum E15193
 33809 ;;  b               2   11[BANK0 ] unsigned int 
 33810 ;; Auto vars:     Size  Location     Type
 33811 ;;  x               1   15[BANK0 ] enum E15193
 33812 ;;  port            1   14[BANK0 ] unsigned char 
 33813 ;; Return value:  Size  Location     Type
 33814 ;;                  1    wreg      void 
 33815 ;; Registers used:
 33816 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 33817 ;; Tracked objects:
 33818 ;;		On entry : 0/0
 33819 ;;		On exit  : 0/0
 33820 ;;		Unchanged: 0/0
 33821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33822 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33823 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33824 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33825 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33826 ;;Total ram usage:        5 bytes
 33827 ;; Hardware stack levels used:    1
 33828 ;; Hardware stack levels required when called:    3
 33829 ;; This function calls:
 33830 ;;		Nothing
 33831 ;; This function is called by:
 33832 ;;		_op_desce
 33833 ;;		_op_fixar
 33834 ;;		_rst_inversor
 33835 ;;		_teste_pneumatico
 33836 ;;		_status_gerador
 33837 ;;		_ciclarPneumatico
 33838 ;; This function uses a non-reentrant model
 33839 ;;
 33840                           
 33841                           
 33842                           ;psect for function _saida
 33843  51CE                     _saida:	
 33844                           
 33845                           ;incstack = 0
 33846                           ; Regs used in _saida: [wreg+fsr1l+fsr1h+status,2+status,0]
 33847                           ;saida@x stored from wreg
 33848  51CE  0140               	movlb	0	; select bank0
 33849  51CF  00AF               	movwf	saida@x
 33850                           
 33851                           ;func.c: 1222: char port = LATC;
 33852  51D0  0818               	movf	24,w	;volatile
 33853  51D1  00AD               	movwf	??_saida
 33854  51D2  082D               	movf	??_saida,w
 33855  51D3  00AE               	movwf	saida@port
 33856                           
 33857                           ;func.c: 1223: if(!b){
 33858  51D4  082B               	movf	saida@b,w
 33859  51D5  042C               	iorwf	saida@b+1,w
 33860  51D6  1D03               	btfss	3,2
 33861  51D7  29E0               	goto	l14958
 33862                           
 33863                           ;func.c: 1224: LATC = (unsigned char)(port & ~byte_out[x]);
 33864  51D8  082F               	movf	saida@x,w
 33865  51D9  3EA0               	addlw	(low (_byte_out| (0+512)))& (0+255)
 33866  51DA  0086               	movwf	6
 33867  51DB  3002               	movlw	2	; select bank5/6
 33868  51DC  0087               	movwf	7
 33869  51DD  0901               	comf	1,w
 33870  51DE  052E               	andwf	saida@port,w
 33871  51DF  0098               	movwf	24	;volatile
 33872  51E0                     l14958:	
 33873                           
 33874                           ;func.c: 1225: }
 33875                           ;func.c: 1226: if(b){
 33876  51E0  082B               	movf	saida@b,w
 33877  51E1  042C               	iorwf	saida@b+1,w
 33878  51E2  1903               	btfsc	3,2
 33879  51E3  0008               	return
 33880                           
 33881                           ;func.c: 1227: LATC |= byte_out[x];
 33882  51E4  082F               	movf	saida@x,w
 33883  51E5  3EA0               	addlw	(low (_byte_out| (0+512)))& (0+255)
 33884  51E6  0086               	movwf	6
 33885  51E7  3002               	movlw	2	; select bank5/6
 33886  51E8  0087               	movwf	7
 33887  51E9  0801               	movf	1,w
 33888  51EA  00AD               	movwf	??_saida
 33889  51EB  082D               	movf	??_saida,w
 33890  51EC  0498               	iorwf	24,f	;volatile
 33891  51ED  0008               	return
 33892  51EE                     __end_of_saida:	
 33893                           
 33894                           	psect	text91
 33895  54DE                     __ptext91:	
 33896 ;; *************** function _ltoa *****************
 33897 ;; Defined at:
 33898 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
 33899 ;; Parameters:    Size  Location     Type
 33900 ;;  buf             1    wreg     PTR unsigned char 
 33901 ;;		 -> str(20), 
 33902 ;;  val             4   42[BANK0 ] long 
 33903 ;;  base            2   46[BANK0 ] int 
 33904 ;; Auto vars:     Size  Location     Type
 33905 ;;  buf             1   50[BANK0 ] PTR unsigned char 
 33906 ;;		 -> str(20), 
 33907 ;;  cp              1   49[BANK0 ] PTR unsigned char 
 33908 ;;		 -> str(20), 
 33909 ;; Return value:  Size  Location     Type
 33910 ;;                  1    wreg      PTR unsigned char 
 33911 ;; Registers used:
 33912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 33913 ;; Tracked objects:
 33914 ;;		On entry : 0/0
 33915 ;;		On exit  : 0/0
 33916 ;;		Unchanged: 0/0
 33917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 33918 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33919 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33920 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33921 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 33922 ;;Total ram usage:        9 bytes
 33923 ;; Hardware stack levels used:    1
 33924 ;; Hardware stack levels required when called:    5
 33925 ;; This function calls:
 33926 ;;		_ultoa
 33927 ;; This function is called by:
 33928 ;;		_op_desce
 33929 ;;		_op_solda
 33930 ;;		_trata_dados
 33931 ;;		_tela_ultima_solda
 33932 ;;		_tela_inicial
 33933 ;;		_totalCiclos
 33934 ;;		_escreve_tempos
 33935 ;;		_teste_US
 33936 ;;		_ciclar
 33937 ;;		_ciclarPneumatico
 33938 ;;		_escreve_freq
 33939 ;; This function uses a non-reentrant model
 33940 ;;
 33941                           
 33942                           
 33943                           ;psect for function _ltoa
 33944  54DE                     _ltoa:	
 33945                           
 33946                           ;incstack = 0
 33947                           ; Regs used in _ltoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 33948                           ;ltoa@buf stored from wreg
 33949  54DE  0140               	movlb	0	; select bank0
 33950  54DF  00D2               	movwf	ltoa@buf
 33951  54E0  0852               	movf	ltoa@buf,w
 33952  54E1  00D0               	movwf	??_ltoa
 33953  54E2  0850               	movf	??_ltoa,w
 33954  54E3  00D1               	movwf	ltoa@cp
 33955  54E4  1FCD               	btfss	ltoa@val+3,7
 33956  54E5  2CFD               	goto	l14066
 33957  54E6  302D               	movlw	45
 33958  54E7  00D0               	movwf	??_ltoa
 33959  54E8  0852               	movf	ltoa@buf,w
 33960  54E9  0086               	movwf	6
 33961  54EA  3002               	movlw	2	; select bank4/5
 33962  54EB  0087               	movwf	7
 33963  54EC  0850               	movf	??_ltoa,w
 33964  54ED  0081               	movwf	1
 33965  54EE  3001               	movlw	1
 33966  54EF  00D0               	movwf	??_ltoa
 33967  54F0  0850               	movf	??_ltoa,w
 33968  54F1  07D2               	addwf	ltoa@buf,f
 33969  54F2  09CA               	comf	ltoa@val,f
 33970  54F3  09CB               	comf	ltoa@val+1,f
 33971  54F4  09CC               	comf	ltoa@val+2,f
 33972  54F5  09CD               	comf	ltoa@val+3,f
 33973  54F6  0ACA               	incf	ltoa@val,f
 33974  54F7  1903               	skipnz
 33975  54F8  0ACB               	incf	ltoa@val+1,f
 33976  54F9  1903               	skipnz
 33977  54FA  0ACC               	incf	ltoa@val+2,f
 33978  54FB  1903               	skipnz
 33979  54FC  0ACD               	incf	ltoa@val+3,f
 33980  54FD                     l14066:	
 33981  54FD  084D               	movf	ltoa@val+3,w
 33982  54FE  00C0               	movwf	ultoa@val+3
 33983  54FF  084C               	movf	ltoa@val+2,w
 33984  5500  00BF               	movwf	ultoa@val+2
 33985  5501  084B               	movf	ltoa@val+1,w
 33986  5502  00BE               	movwf	ultoa@val+1
 33987  5503  084A               	movf	ltoa@val,w
 33988  5504  00BD               	movwf	ultoa@val
 33989  5505  084F               	movf	ltoa@base+1,w
 33990  5506  00C2               	movwf	ultoa@base+1
 33991  5507  084E               	movf	ltoa@base,w
 33992  5508  00C1               	movwf	ultoa@base
 33993  5509  0852               	movf	ltoa@buf,w
 33994  550A  31C3  23D9         	fcall	_ultoa
 33995  550C  0008               	return
 33996  550D                     __end_of_ltoa:	
 33997                           ;	Return value of _ltoa is never used
 33998                           
 33999                           
 34000                           	psect	text92
 34001  43D9                     __ptext92:	
 34002 ;; *************** function _ultoa *****************
 34003 ;; Defined at:
 34004 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltoa.c"
 34005 ;; Parameters:    Size  Location     Type
 34006 ;;  buf             1    wreg     PTR unsigned char 
 34007 ;;		 -> str(20), 
 34008 ;;  val             4   29[BANK0 ] unsigned long 
 34009 ;;  base            2   33[BANK0 ] int 
 34010 ;; Auto vars:     Size  Location     Type
 34011 ;;  buf             1   41[BANK0 ] PTR unsigned char 
 34012 ;;		 -> str(20), 
 34013 ;;  v               4   36[BANK0 ] unsigned long 
 34014 ;;  c               1   40[BANK0 ] unsigned char 
 34015 ;; Return value:  Size  Location     Type
 34016 ;;                  1    wreg      PTR unsigned char 
 34017 ;; Registers used:
 34018 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 34019 ;; Tracked objects:
 34020 ;;		On entry : 0/0
 34021 ;;		On exit  : 0/0
 34022 ;;		Unchanged: 0/0
 34023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34024 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34025 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34026 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34027 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34028 ;;Total ram usage:       13 bytes
 34029 ;; Hardware stack levels used:    1
 34030 ;; Hardware stack levels required when called:    4
 34031 ;; This function calls:
 34032 ;;		___lldiv
 34033 ;;		___llmod
 34034 ;; This function is called by:
 34035 ;;		_ltoa
 34036 ;; This function uses a non-reentrant model
 34037 ;;
 34038                           
 34039                           
 34040                           ;psect for function _ultoa
 34041  43D9                     _ultoa:	
 34042                           
 34043                           ;incstack = 0
 34044                           ; Regs used in _ultoa: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 34045                           ;ultoa@buf stored from wreg
 34046  43D9  0140               	movlb	0	; select bank0
 34047  43DA  00C9               	movwf	ultoa@buf
 34048  43DB  0840               	movf	ultoa@val+3,w
 34049  43DC  00C7               	movwf	ultoa@v+3
 34050  43DD  083F               	movf	ultoa@val+2,w
 34051  43DE  00C6               	movwf	ultoa@v+2
 34052  43DF  083E               	movf	ultoa@val+1,w
 34053  43E0  00C5               	movwf	ultoa@v+1
 34054  43E1  083D               	movf	ultoa@val,w
 34055  43E2  00C4               	movwf	ultoa@v
 34056  43E3                     l13992:	
 34057  43E3  0841               	movf	ultoa@base,w
 34058  43E4  00AF               	movwf	___lldiv@divisor
 34059  43E5  0842               	movf	ultoa@base+1,w
 34060  43E6  00B0               	movwf	___lldiv@divisor+1
 34061  43E7  0D89               	rlf	9,f
 34062  43E8  3B89               	subwfb	9,f
 34063  43E9  0989               	comf	9,f
 34064  43EA  00B1               	movwf	___lldiv@divisor+2
 34065  43EB  00B2               	movwf	___lldiv@divisor+3
 34066  43EC  0847               	movf	ultoa@v+3,w
 34067  43ED  00B6               	movwf	___lldiv@dividend+3
 34068  43EE  0846               	movf	ultoa@v+2,w
 34069  43EF  00B5               	movwf	___lldiv@dividend+2
 34070  43F0  0845               	movf	ultoa@v+1,w
 34071  43F1  00B4               	movwf	___lldiv@dividend+1
 34072  43F2  0844               	movf	ultoa@v,w
 34073  43F3  00B3               	movwf	___lldiv@dividend
 34074  43F4  31CB  236E  31C3   	fcall	___lldiv
 34075  43F7  0140               	movlb	0	; select bank0
 34076  43F8  0832               	movf	?___lldiv+3,w
 34077  43F9  00C7               	movwf	ultoa@v+3
 34078  43FA  0831               	movf	?___lldiv+2,w
 34079  43FB  00C6               	movwf	ultoa@v+2
 34080  43FC  0830               	movf	?___lldiv+1,w
 34081  43FD  00C5               	movwf	ultoa@v+1
 34082  43FE  082F               	movf	?___lldiv,w
 34083  43FF  00C4               	movwf	ultoa@v
 34084  4400  3001               	movlw	1
 34085  4401  00C3               	movwf	??_ultoa
 34086  4402  0843               	movf	??_ultoa,w
 34087  4403  07C9               	addwf	ultoa@buf,f
 34088  4404  0847               	movf	ultoa@v+3,w
 34089  4405  0446               	iorwf	ultoa@v+2,w
 34090  4406  0445               	iorwf	ultoa@v+1,w
 34091  4407  0444               	iorwf	ultoa@v,w
 34092  4408  1D03               	skipz
 34093  4409  2BE3               	goto	l13992
 34094  440A  0849               	movf	ultoa@buf,w
 34095  440B  0086               	movwf	6
 34096  440C  3002               	movlw	2	; select bank4/5
 34097  440D  0087               	movwf	7
 34098  440E  0181               	clrf	1
 34099  440F  3001               	movlw	1
 34100  4410  02C9               	subwf	ultoa@buf,f
 34101  4411                     l14002:	
 34102  4411  0841               	movf	ultoa@base,w
 34103  4412  00AB               	movwf	___llmod@divisor
 34104  4413  0842               	movf	ultoa@base+1,w
 34105  4414  00AC               	movwf	___llmod@divisor+1
 34106  4415  0D89               	rlf	9,f
 34107  4416  3B89               	subwfb	9,f
 34108  4417  0989               	comf	9,f
 34109  4418  00AD               	movwf	___llmod@divisor+2
 34110  4419  00AE               	movwf	___llmod@divisor+3
 34111  441A  0840               	movf	ultoa@val+3,w
 34112  441B  00B2               	movwf	___llmod@dividend+3
 34113  441C  083F               	movf	ultoa@val+2,w
 34114  441D  00B1               	movwf	___llmod@dividend+2
 34115  441E  083E               	movf	ultoa@val+1,w
 34116  441F  00B0               	movwf	___llmod@dividend+1
 34117  4420  083D               	movf	ultoa@val,w
 34118  4421  00AF               	movwf	___llmod@dividend
 34119  4422  31D7  2778  31C3   	fcall	___llmod
 34120  4425  0140               	movlb	0	; select bank0
 34121  4426  082B               	movf	?___llmod,w
 34122  4427  00C3               	movwf	??_ultoa
 34123  4428  0843               	movf	??_ultoa,w
 34124  4429  00C8               	movwf	ultoa@c
 34125  442A  0841               	movf	ultoa@base,w
 34126  442B  00AF               	movwf	___lldiv@divisor
 34127  442C  0842               	movf	ultoa@base+1,w
 34128  442D  00B0               	movwf	___lldiv@divisor+1
 34129  442E  0D89               	rlf	9,f
 34130  442F  3B89               	subwfb	9,f
 34131  4430  0989               	comf	9,f
 34132  4431  00B1               	movwf	___lldiv@divisor+2
 34133  4432  00B2               	movwf	___lldiv@divisor+3
 34134  4433  0840               	movf	ultoa@val+3,w
 34135  4434  00B6               	movwf	___lldiv@dividend+3
 34136  4435  083F               	movf	ultoa@val+2,w
 34137  4436  00B5               	movwf	___lldiv@dividend+2
 34138  4437  083E               	movf	ultoa@val+1,w
 34139  4438  00B4               	movwf	___lldiv@dividend+1
 34140  4439  083D               	movf	ultoa@val,w
 34141  443A  00B3               	movwf	___lldiv@dividend
 34142  443B  31CB  236E  31C3   	fcall	___lldiv
 34143  443E  0140               	movlb	0	; select bank0
 34144  443F  0832               	movf	?___lldiv+3,w
 34145  4440  00C0               	movwf	ultoa@val+3
 34146  4441  0831               	movf	?___lldiv+2,w
 34147  4442  00BF               	movwf	ultoa@val+2
 34148  4443  0830               	movf	?___lldiv+1,w
 34149  4444  00BE               	movwf	ultoa@val+1
 34150  4445  082F               	movf	?___lldiv,w
 34151  4446  00BD               	movwf	ultoa@val
 34152  4447  300A               	movlw	10
 34153  4448  0248               	subwf	ultoa@c,w
 34154  4449  1C03               	skipc
 34155  444A  2C4F               	goto	l3196
 34156  444B  3007               	movlw	7
 34157  444C  00C3               	movwf	??_ultoa
 34158  444D  0843               	movf	??_ultoa,w
 34159  444E  07C8               	addwf	ultoa@c,f
 34160  444F                     l3196:	
 34161  444F  3030               	movlw	48
 34162  4450  00C3               	movwf	??_ultoa
 34163  4451  0843               	movf	??_ultoa,w
 34164  4452  07C8               	addwf	ultoa@c,f
 34165  4453  0848               	movf	ultoa@c,w
 34166  4454  00C3               	movwf	??_ultoa
 34167  4455  0849               	movf	ultoa@buf,w
 34168  4456  0086               	movwf	6
 34169  4457  3002               	movlw	2	; select bank4/5
 34170  4458  0087               	movwf	7
 34171  4459  0843               	movf	??_ultoa,w
 34172  445A  0081               	movwf	1
 34173  445B  3001               	movlw	1
 34174  445C  02C9               	subwf	ultoa@buf,f
 34175  445D  0840               	movf	ultoa@val+3,w
 34176  445E  043F               	iorwf	ultoa@val+2,w
 34177  445F  043E               	iorwf	ultoa@val+1,w
 34178  4460  043D               	iorwf	ultoa@val,w
 34179  4461  1903               	btfsc	3,2
 34180  4462  0008               	return
 34181  4463  2C11               	goto	l14002
 34182  4464                     __end_of_ultoa:	
 34183                           ;	Return value of _ultoa is never used
 34184                           
 34185                           
 34186                           	psect	text93
 34187  5778                     __ptext93:	
 34188 ;; *************** function ___llmod *****************
 34189 ;; Defined at:
 34190 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 34191 ;; Parameters:    Size  Location     Type
 34192 ;;  divisor         4   11[BANK0 ] unsigned long 
 34193 ;;  dividend        4   15[BANK0 ] unsigned long 
 34194 ;; Auto vars:     Size  Location     Type
 34195 ;;  counter         1   20[BANK0 ] unsigned char 
 34196 ;; Return value:  Size  Location     Type
 34197 ;;                  4   11[BANK0 ] unsigned long 
 34198 ;; Registers used:
 34199 ;;		wreg, status,2, status,0
 34200 ;; Tracked objects:
 34201 ;;		On entry : 0/0
 34202 ;;		On exit  : 0/0
 34203 ;;		Unchanged: 0/0
 34204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34205 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34206 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34207 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34208 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34209 ;;Total ram usage:       10 bytes
 34210 ;; Hardware stack levels used:    1
 34211 ;; Hardware stack levels required when called:    3
 34212 ;; This function calls:
 34213 ;;		Nothing
 34214 ;; This function is called by:
 34215 ;;		_op_solda
 34216 ;;		_tela_ultima_solda
 34217 ;;		_totalCiclos
 34218 ;;		_ultoa
 34219 ;; This function uses a non-reentrant model
 34220 ;;
 34221                           
 34222                           
 34223                           ;psect for function ___llmod
 34224  5778                     ___llmod:	
 34225                           
 34226                           ;incstack = 0
 34227                           ; Regs used in ___llmod: [wreg+status,2+status,0]
 34228  5778  0140               	movlb	0	; select bank0
 34229  5779  082E               	movf	___llmod@divisor+3,w
 34230  577A  042D               	iorwf	___llmod@divisor+2,w
 34231  577B  042C               	iorwf	___llmod@divisor+1,w
 34232  577C  042B               	iorwf	___llmod@divisor,w
 34233  577D  1903               	skipnz
 34234  577E  2FB2               	goto	l13902
 34235  577F  01B4               	clrf	___llmod@counter
 34236  5780  0AB4               	incf	___llmod@counter,f
 34237  5781                     l13892:	
 34238  5781  1BAE               	btfsc	___llmod@divisor+3,7
 34239  5782  2F8F               	goto	l13894
 34240  5783  3001               	movlw	1
 34241  5784                     u14315:	
 34242  5784  35AB               	lslf	___llmod@divisor,f
 34243  5785  0DAC               	rlf	___llmod@divisor+1,f
 34244  5786  0DAD               	rlf	___llmod@divisor+2,f
 34245  5787  0DAE               	rlf	___llmod@divisor+3,f
 34246  5788  0B89               	decfsz	9,f
 34247  5789  2F84               	goto	u14315
 34248  578A  3001               	movlw	1
 34249  578B  00B3               	movwf	??___llmod
 34250  578C  0833               	movf	??___llmod,w
 34251  578D  07B4               	addwf	___llmod@counter,f
 34252  578E  2F81               	goto	l13892
 34253  578F                     l13894:	
 34254  578F  082E               	movf	___llmod@divisor+3,w
 34255  5790  0232               	subwf	___llmod@dividend+3,w
 34256  5791  1D03               	skipz
 34257  5792  2F9D               	goto	u14335
 34258  5793  082D               	movf	___llmod@divisor+2,w
 34259  5794  0231               	subwf	___llmod@dividend+2,w
 34260  5795  1D03               	skipz
 34261  5796  2F9D               	goto	u14335
 34262  5797  082C               	movf	___llmod@divisor+1,w
 34263  5798  0230               	subwf	___llmod@dividend+1,w
 34264  5799  1D03               	skipz
 34265  579A  2F9D               	goto	u14335
 34266  579B  082B               	movf	___llmod@divisor,w
 34267  579C  022F               	subwf	___llmod@dividend,w
 34268  579D                     u14335:	
 34269  579D  1C03               	skipc
 34270  579E  2FA7               	goto	l13898
 34271  579F  082B               	movf	___llmod@divisor,w
 34272  57A0  02AF               	subwf	___llmod@dividend,f
 34273  57A1  082C               	movf	___llmod@divisor+1,w
 34274  57A2  3BB0               	subwfb	___llmod@dividend+1,f
 34275  57A3  082D               	movf	___llmod@divisor+2,w
 34276  57A4  3BB1               	subwfb	___llmod@dividend+2,f
 34277  57A5  082E               	movf	___llmod@divisor+3,w
 34278  57A6  3BB2               	subwfb	___llmod@dividend+3,f
 34279  57A7                     l13898:	
 34280  57A7  3001               	movlw	1
 34281  57A8                     u14345:	
 34282  57A8  36AE               	lsrf	___llmod@divisor+3,f
 34283  57A9  0CAD               	rrf	___llmod@divisor+2,f
 34284  57AA  0CAC               	rrf	___llmod@divisor+1,f
 34285  57AB  0CAB               	rrf	___llmod@divisor,f
 34286  57AC  0B89               	decfsz	9,f
 34287  57AD  2FA8               	goto	u14345
 34288  57AE  3001               	movlw	1
 34289  57AF  02B4               	subwf	___llmod@counter,f
 34290  57B0  1D03               	btfss	3,2
 34291  57B1  2F8F               	goto	l13894
 34292  57B2                     l13902:	
 34293  57B2  0832               	movf	___llmod@dividend+3,w
 34294  57B3  00AE               	movwf	?___llmod+3
 34295  57B4  0831               	movf	___llmod@dividend+2,w
 34296  57B5  00AD               	movwf	?___llmod+2
 34297  57B6  0830               	movf	___llmod@dividend+1,w
 34298  57B7  00AC               	movwf	?___llmod+1
 34299  57B8  082F               	movf	___llmod@dividend,w
 34300  57B9  00AB               	movwf	?___llmod
 34301  57BA  0008               	return
 34302  57BB                     __end_of___llmod:	
 34303                           
 34304                           	psect	text94
 34305  4B6E                     __ptext94:	
 34306 ;; *************** function ___lldiv *****************
 34307 ;; Defined at:
 34308 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 34309 ;; Parameters:    Size  Location     Type
 34310 ;;  divisor         4   15[BANK0 ] unsigned long 
 34311 ;;  dividend        4   19[BANK0 ] unsigned long 
 34312 ;; Auto vars:     Size  Location     Type
 34313 ;;  quotient        4   24[BANK0 ] unsigned long 
 34314 ;;  counter         1   28[BANK0 ] unsigned char 
 34315 ;; Return value:  Size  Location     Type
 34316 ;;                  4   15[BANK0 ] unsigned long 
 34317 ;; Registers used:
 34318 ;;		wreg, status,2, status,0
 34319 ;; Tracked objects:
 34320 ;;		On entry : 0/0
 34321 ;;		On exit  : 0/0
 34322 ;;		Unchanged: 0/0
 34323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34324 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34325 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34326 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34327 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34328 ;;Total ram usage:       14 bytes
 34329 ;; Hardware stack levels used:    1
 34330 ;; Hardware stack levels required when called:    3
 34331 ;; This function calls:
 34332 ;;		Nothing
 34333 ;; This function is called by:
 34334 ;;		_get_freq
 34335 ;;		_op_solda
 34336 ;;		_trata_dados
 34337 ;;		_tela_ultima_solda
 34338 ;;		_totalCiclos
 34339 ;;		_ultoa
 34340 ;; This function uses a non-reentrant model
 34341 ;;
 34342                           
 34343                           
 34344                           ;psect for function ___lldiv
 34345  4B6E                     ___lldiv:	
 34346                           
 34347                           ;incstack = 0
 34348                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 34349  4B6E  3000               	movlw	0
 34350  4B6F  0140               	movlb	0	; select bank0
 34351  4B70  00BB               	movwf	___lldiv@quotient+3
 34352  4B71  3000               	movlw	0
 34353  4B72  00BA               	movwf	___lldiv@quotient+2
 34354  4B73  3000               	movlw	0
 34355  4B74  00B9               	movwf	___lldiv@quotient+1
 34356  4B75  3000               	movlw	0
 34357  4B76  00B8               	movwf	___lldiv@quotient
 34358  4B77  0832               	movf	___lldiv@divisor+3,w
 34359  4B78  0431               	iorwf	___lldiv@divisor+2,w
 34360  4B79  0430               	iorwf	___lldiv@divisor+1,w
 34361  4B7A  042F               	iorwf	___lldiv@divisor,w
 34362  4B7B  1903               	skipnz
 34363  4B7C  2BB8               	goto	l13882
 34364  4B7D  01BC               	clrf	___lldiv@counter
 34365  4B7E  0ABC               	incf	___lldiv@counter,f
 34366  4B7F                     l13868:	
 34367  4B7F  1BB2               	btfsc	___lldiv@divisor+3,7
 34368  4B80  2B8D               	goto	l13870
 34369  4B81  3001               	movlw	1
 34370  4B82                     u14245:	
 34371  4B82  35AF               	lslf	___lldiv@divisor,f
 34372  4B83  0DB0               	rlf	___lldiv@divisor+1,f
 34373  4B84  0DB1               	rlf	___lldiv@divisor+2,f
 34374  4B85  0DB2               	rlf	___lldiv@divisor+3,f
 34375  4B86  0B89               	decfsz	9,f
 34376  4B87  2B82               	goto	u14245
 34377  4B88  3001               	movlw	1
 34378  4B89  00B7               	movwf	??___lldiv
 34379  4B8A  0837               	movf	??___lldiv,w
 34380  4B8B  07BC               	addwf	___lldiv@counter,f
 34381  4B8C  2B7F               	goto	l13868
 34382  4B8D                     l13870:	
 34383  4B8D  3001               	movlw	1
 34384  4B8E                     u14265:	
 34385  4B8E  35B8               	lslf	___lldiv@quotient,f
 34386  4B8F  0DB9               	rlf	___lldiv@quotient+1,f
 34387  4B90  0DBA               	rlf	___lldiv@quotient+2,f
 34388  4B91  0DBB               	rlf	___lldiv@quotient+3,f
 34389  4B92  0B89               	decfsz	9,f
 34390  4B93  2B8E               	goto	u14265
 34391  4B94  0832               	movf	___lldiv@divisor+3,w
 34392  4B95  0236               	subwf	___lldiv@dividend+3,w
 34393  4B96  1D03               	skipz
 34394  4B97  2BA2               	goto	u14275
 34395  4B98  0831               	movf	___lldiv@divisor+2,w
 34396  4B99  0235               	subwf	___lldiv@dividend+2,w
 34397  4B9A  1D03               	skipz
 34398  4B9B  2BA2               	goto	u14275
 34399  4B9C  0830               	movf	___lldiv@divisor+1,w
 34400  4B9D  0234               	subwf	___lldiv@dividend+1,w
 34401  4B9E  1D03               	skipz
 34402  4B9F  2BA2               	goto	u14275
 34403  4BA0  082F               	movf	___lldiv@divisor,w
 34404  4BA1  0233               	subwf	___lldiv@dividend,w
 34405  4BA2                     u14275:	
 34406  4BA2  1C03               	skipc
 34407  4BA3  2BAD               	goto	l13878
 34408  4BA4  082F               	movf	___lldiv@divisor,w
 34409  4BA5  02B3               	subwf	___lldiv@dividend,f
 34410  4BA6  0830               	movf	___lldiv@divisor+1,w
 34411  4BA7  3BB4               	subwfb	___lldiv@dividend+1,f
 34412  4BA8  0831               	movf	___lldiv@divisor+2,w
 34413  4BA9  3BB5               	subwfb	___lldiv@dividend+2,f
 34414  4BAA  0832               	movf	___lldiv@divisor+3,w
 34415  4BAB  3BB6               	subwfb	___lldiv@dividend+3,f
 34416  4BAC  1438               	bsf	___lldiv@quotient,0
 34417  4BAD                     l13878:	
 34418  4BAD  3001               	movlw	1
 34419  4BAE                     u14285:	
 34420  4BAE  36B2               	lsrf	___lldiv@divisor+3,f
 34421  4BAF  0CB1               	rrf	___lldiv@divisor+2,f
 34422  4BB0  0CB0               	rrf	___lldiv@divisor+1,f
 34423  4BB1  0CAF               	rrf	___lldiv@divisor,f
 34424  4BB2  0B89               	decfsz	9,f
 34425  4BB3  2BAE               	goto	u14285
 34426  4BB4  3001               	movlw	1
 34427  4BB5  02BC               	subwf	___lldiv@counter,f
 34428  4BB6  1D03               	btfss	3,2
 34429  4BB7  2B8D               	goto	l13870
 34430  4BB8                     l13882:	
 34431  4BB8  083B               	movf	___lldiv@quotient+3,w
 34432  4BB9  00B2               	movwf	?___lldiv+3
 34433  4BBA  083A               	movf	___lldiv@quotient+2,w
 34434  4BBB  00B1               	movwf	?___lldiv+2
 34435  4BBC  0839               	movf	___lldiv@quotient+1,w
 34436  4BBD  00B0               	movwf	?___lldiv+1
 34437  4BBE  0838               	movf	___lldiv@quotient,w
 34438  4BBF  00AF               	movwf	?___lldiv
 34439  4BC0  0008               	return
 34440  4BC1                     __end_of___lldiv:	
 34441                           
 34442                           	psect	text95
 34443  53A9                     __ptext95:	
 34444 ;; *************** function _SYSTEM_Initialize *****************
 34445 ;; Defined at:
 34446 ;;		line 2462 in file "func.c"
 34447 ;; Parameters:    Size  Location     Type
 34448 ;;		None
 34449 ;; Auto vars:     Size  Location     Type
 34450 ;;		None
 34451 ;; Return value:  Size  Location     Type
 34452 ;;                  1    wreg      void 
 34453 ;; Registers used:
 34454 ;;		wreg, status,2, status,0, pclath, cstack
 34455 ;; Tracked objects:
 34456 ;;		On entry : 0/0
 34457 ;;		On exit  : 0/0
 34458 ;;		Unchanged: 0/0
 34459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34464 ;;Total ram usage:        0 bytes
 34465 ;; Hardware stack levels used:    1
 34466 ;; Hardware stack levels required when called:    7
 34467 ;; This function calls:
 34468 ;;		_ADCC_Initialize
 34469 ;;		_CLC1_Initialize
 34470 ;;		_EUSART_Initialize
 34471 ;;		_Inicia_LCD
 34472 ;;		_OSCILLATOR_Initialize
 34473 ;;		_PIN_MANAGER_Initialize
 34474 ;;		_PMD_Initialize
 34475 ;;		_PWM2_Initialize
 34476 ;;		_SMT1_Initialize
 34477 ;;		_SMT2_Initialize
 34478 ;;		_TMR1_Initialize
 34479 ;;		_TMR5_Initialize
 34480 ;;		_TMR6_Initialize
 34481 ;; This function is called by:
 34482 ;;		_main
 34483 ;; This function uses a non-reentrant model
 34484 ;;
 34485                           
 34486                           
 34487                           ;psect for function _SYSTEM_Initialize
 34488  53A9                     _SYSTEM_Initialize:	
 34489                           
 34490                           ;func.c: 2464: PMD_Initialize();
 34491                           
 34492                           ;incstack = 0
 34493                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 34494  53A9  31E2  222D  31D3   	fcall	_PMD_Initialize
 34495                           
 34496                           ;func.c: 2465: PIN_MANAGER_Initialize();
 34497  53AC  31CA  2227  31D3   	fcall	_PIN_MANAGER_Initialize
 34498                           
 34499                           ;func.c: 2466: OSCILLATOR_Initialize();
 34500  53AF  31E2  2212  31D3   	fcall	_OSCILLATOR_Initialize
 34501                           
 34502                           ;func.c: 2467: Inicia_LCD();
 34503  53B2  31E7  2760  31D3   	fcall	_Inicia_LCD
 34504                           
 34505                           ;func.c: 2468: TMR6_Initialize();
 34506  53B5  31E7  2773  31D3   	fcall	_TMR6_Initialize
 34507                           
 34508                           ;func.c: 2469: PWM2_Initialize();
 34509  53B8  31E1  21A1  31D3   	fcall	_PWM2_Initialize
 34510                           
 34511                           ;func.c: 2470: CLC1_Initialize();
 34512  53BB  31E1  2124  31D3   	fcall	_CLC1_Initialize
 34513                           
 34514                           ;func.c: 2471: SMT1_Initialize();
 34515  53BE  31E1  2175  31D3   	fcall	_SMT1_Initialize
 34516                           
 34517                           ;func.c: 2472: SMT2_Initialize();
 34518  53C1  31E1  2155  31D3   	fcall	_SMT2_Initialize
 34519                           
 34520                           ;func.c: 2473: TMR5_Initialize();
 34521  53C4  31E7  27D6  31D3   	fcall	_TMR5_Initialize
 34522                           
 34523                           ;func.c: 2474: TMR1_Initialize();
 34524  53C7  31E7  2799  31D3   	fcall	_TMR1_Initialize
 34525                           
 34526                           ;func.c: 2475: ADCC_Initialize();
 34527  53CA  31C8  20A1  31D3   	fcall	_ADCC_Initialize
 34528                           
 34529                           ;func.c: 2476: EUSART_Initialize();
 34530  53CD  31D4  2455         	fcall	_EUSART_Initialize
 34531                           
 34532                           ;func.c: 2477: INTCONbits.GIE = 1;
 34533  53CF  178B               	bsf	11,7	;volatile
 34534                           
 34535                           ;func.c: 2478: INTCONbits.PEIE = 1;
 34536  53D0  170B               	bsf	11,6	;volatile
 34537  53D1  0008               	return
 34538  53D2                     __end_of_SYSTEM_Initialize:	
 34539                           
 34540                           	psect	text96
 34541  6773                     __ptext96:	
 34542 ;; *************** function _TMR6_Initialize *****************
 34543 ;; Defined at:
 34544 ;;		line 2418 in file "func.c"
 34545 ;; Parameters:    Size  Location     Type
 34546 ;;		None
 34547 ;; Auto vars:     Size  Location     Type
 34548 ;;		None
 34549 ;; Return value:  Size  Location     Type
 34550 ;;                  1    wreg      void 
 34551 ;; Registers used:
 34552 ;;		wreg, status,2, status,0
 34553 ;; Tracked objects:
 34554 ;;		On entry : 0/0
 34555 ;;		On exit  : 0/0
 34556 ;;		Unchanged: 0/0
 34557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34562 ;;Total ram usage:        0 bytes
 34563 ;; Hardware stack levels used:    1
 34564 ;; Hardware stack levels required when called:    3
 34565 ;; This function calls:
 34566 ;;		Nothing
 34567 ;; This function is called by:
 34568 ;;		_SYSTEM_Initialize
 34569 ;; This function uses a non-reentrant model
 34570 ;;
 34571                           
 34572                           
 34573                           ;psect for function _TMR6_Initialize
 34574  6773                     _TMR6_Initialize:	
 34575                           
 34576                           ;func.c: 2423: T6CLKCON = 0x01;
 34577                           
 34578                           ;incstack = 0
 34579                           ; Regs used in _TMR6_Initialize: [wreg+status,2+status,0]
 34580  6773  3001               	movlw	1
 34581  6774  0145               	movlb	5	; select bank5
 34582  6775  009C               	movwf	28	;volatile
 34583                           
 34584                           ;func.c: 2426: T6HLT = 0x00;
 34585  6776  019B               	clrf	27	;volatile
 34586                           
 34587                           ;func.c: 2429: T6RST = 0x00;
 34588  6777  019D               	clrf	29	;volatile
 34589                           
 34590                           ;func.c: 2432: T6PR = 0xFF;
 34591  6778  30FF               	movlw	255
 34592  6779  0099               	movwf	25	;volatile
 34593                           
 34594                           ;func.c: 2435: T6TMR = 0x00;
 34595  677A  0198               	clrf	24	;volatile
 34596                           
 34597                           ;func.c: 2438: PIR4bits.TMR6IF = 0;
 34598  677B  014E               	movlb	14	; select bank14
 34599  677C  1290               	bcf	16,5	;volatile
 34600                           
 34601                           ;func.c: 2439: PIE4bits.TMR6IE = 0;
 34602  677D  129A               	bcf	26,5	;volatile
 34603                           
 34604                           ;func.c: 2442: T6CON = 0x00;
 34605  677E  0145               	movlb	5	; select bank5
 34606  677F  019A               	clrf	26	;volatile
 34607                           
 34608                           ;func.c: 2443: T6CONbits.CKPS = 1;
 34609  6780  081A               	movf	26,w	;volatile
 34610  6781  398F               	andlw	-113
 34611  6782  3810               	iorlw	16
 34612  6783  009A               	movwf	26	;volatile
 34613                           
 34614                           ;func.c: 2444: T6CONbits.ON = 1;
 34615  6784  179A               	bsf	26,7	;volatile
 34616  6785  0008               	return
 34617  6786                     __end_of_TMR6_Initialize:	
 34618                           
 34619                           	psect	text97
 34620  67D6                     __ptext97:	
 34621 ;; *************** function _TMR5_Initialize *****************
 34622 ;; Defined at:
 34623 ;;		line 2377 in file "func.c"
 34624 ;; Parameters:    Size  Location     Type
 34625 ;;		None
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;		None
 34628 ;; Return value:  Size  Location     Type
 34629 ;;                  1    wreg      void 
 34630 ;; Registers used:
 34631 ;;		wreg, status,2
 34632 ;; Tracked objects:
 34633 ;;		On entry : 0/0
 34634 ;;		On exit  : 0/0
 34635 ;;		Unchanged: 0/0
 34636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34641 ;;Total ram usage:        0 bytes
 34642 ;; Hardware stack levels used:    1
 34643 ;; Hardware stack levels required when called:    3
 34644 ;; This function calls:
 34645 ;;		Nothing
 34646 ;; This function is called by:
 34647 ;;		_SYSTEM_Initialize
 34648 ;; This function uses a non-reentrant model
 34649 ;;
 34650                           
 34651                           
 34652                           ;psect for function _TMR5_Initialize
 34653  67D6                     _TMR5_Initialize:	
 34654                           
 34655                           ;func.c: 2379: T5GCON = 0x00;
 34656                           
 34657                           ;incstack = 0
 34658                           ; Regs used in _TMR5_Initialize: [wreg+status,2]
 34659  67D6  0144               	movlb	4	; select bank4
 34660  67D7  019B               	clrf	27	;volatile
 34661                           
 34662                           ;func.c: 2381: T5GATE = 0x00;
 34663  67D8  019C               	clrf	28	;volatile
 34664                           
 34665                           ;func.c: 2383: T5CLK = 0x05;
 34666  67D9  3005               	movlw	5
 34667  67DA  009D               	movwf	29	;volatile
 34668                           
 34669                           ;func.c: 2385: TMR5H = 0xFE;
 34670  67DB  30FE               	movlw	254
 34671  67DC  0099               	movwf	25	;volatile
 34672                           
 34673                           ;func.c: 2387: TMR5L = 0x0C;
 34674  67DD  300C               	movlw	12
 34675  67DE  0098               	movwf	24	;volatile
 34676                           
 34677                           ;func.c: 2389: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 34678  67DF  0819               	movf	25,w	;volatile
 34679  67E0  00B9               	movwf	(_timer5ReloadVal+1)^(0+512)	;volatile
 34680  67E1  0818               	movf	24,w	;volatile
 34681  67E2  00B8               	movwf	_timer5ReloadVal^(0+512)	;volatile
 34682                           
 34683                           ;func.c: 2391: T5CON = 0x03;
 34684  67E3  3003               	movlw	3
 34685  67E4  009A               	movwf	26	;volatile
 34686                           
 34687                           ;func.c: 2393: PIR4bits.TMR5IF = 0;
 34688  67E5  014E               	movlb	14	; select bank14
 34689  67E6  1210               	bcf	16,4	;volatile
 34690                           
 34691                           ;func.c: 2395: PIE4bits.TMR5IE = 1;
 34692  67E7  161A               	bsf	26,4	;volatile
 34693                           
 34694                           ;func.c: 2397: T5CONbits.TMR5ON = 0;
 34695  67E8  0144               	movlb	4	; select bank4
 34696  67E9  101A               	bcf	26,0	;volatile
 34697  67EA  0008               	return
 34698  67EB                     __end_of_TMR5_Initialize:	
 34699                           
 34700                           	psect	text98
 34701  6799                     __ptext98:	
 34702 ;; *************** function _TMR1_Initialize *****************
 34703 ;; Defined at:
 34704 ;;		line 2288 in file "func.c"
 34705 ;; Parameters:    Size  Location     Type
 34706 ;;		None
 34707 ;; Auto vars:     Size  Location     Type
 34708 ;;		None
 34709 ;; Return value:  Size  Location     Type
 34710 ;;                  1    wreg      void 
 34711 ;; Registers used:
 34712 ;;		wreg, status,2
 34713 ;; Tracked objects:
 34714 ;;		On entry : 0/0
 34715 ;;		On exit  : 0/0
 34716 ;;		Unchanged: 0/0
 34717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34722 ;;Total ram usage:        0 bytes
 34723 ;; Hardware stack levels used:    1
 34724 ;; Hardware stack levels required when called:    3
 34725 ;; This function calls:
 34726 ;;		Nothing
 34727 ;; This function is called by:
 34728 ;;		_SYSTEM_Initialize
 34729 ;; This function uses a non-reentrant model
 34730 ;;
 34731                           
 34732                           
 34733                           ;psect for function _TMR1_Initialize
 34734  6799                     _TMR1_Initialize:	
 34735                           
 34736                           ;func.c: 2293: T1GCON = 0x00;
 34737                           
 34738                           ;incstack = 0
 34739                           ; Regs used in _TMR1_Initialize: [wreg+status,2]
 34740  6799  0144               	movlb	4	; select bank4
 34741  679A  018F               	clrf	15	;volatile
 34742                           
 34743                           ;func.c: 2296: T1GATE = 0x00;
 34744  679B  0190               	clrf	16	;volatile
 34745                           
 34746                           ;func.c: 2299: T1CLK = 0x05;
 34747  679C  3005               	movlw	5
 34748  679D  0091               	movwf	17	;volatile
 34749                           
 34750                           ;func.c: 2302: TMR1H = 0xEC;
 34751  679E  30EC               	movlw	236
 34752  679F  008D               	movwf	13	;volatile
 34753                           
 34754                           ;func.c: 2305: TMR1L = 0x77;
 34755  67A0  3077               	movlw	119
 34756  67A1  008C               	movwf	12	;volatile
 34757                           
 34758                           ;func.c: 2308: timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 34759  67A2  080D               	movf	13,w	;volatile
 34760  67A3  00BB               	movwf	(_timer1ReloadVal+1)^(0+512)	;volatile
 34761  67A4  080C               	movf	12,w	;volatile
 34762  67A5  00BA               	movwf	_timer1ReloadVal^(0+512)	;volatile
 34763                           
 34764                           ;func.c: 2311: PIR4bits.TMR1IF = 0;
 34765  67A6  014E               	movlb	14	; select bank14
 34766  67A7  1010               	bcf	16,0	;volatile
 34767                           
 34768                           ;func.c: 2313: PIE4bits.TMR1IE = 1;
 34769  67A8  141A               	bsf	26,0	;volatile
 34770                           
 34771                           ;func.c: 2316: T1CON = 0x07;
 34772  67A9  3007               	movlw	7
 34773  67AA  0144               	movlb	4	; select bank4
 34774  67AB  008E               	movwf	14	;volatile
 34775  67AC  0008               	return
 34776  67AD                     __end_of_TMR1_Initialize:	
 34777                           
 34778                           	psect	text99
 34779  6155                     __ptext99:	
 34780 ;; *************** function _SMT2_Initialize *****************
 34781 ;; Defined at:
 34782 ;;		line 2235 in file "func.c"
 34783 ;; Parameters:    Size  Location     Type
 34784 ;;		None
 34785 ;; Auto vars:     Size  Location     Type
 34786 ;;		None
 34787 ;; Return value:  Size  Location     Type
 34788 ;;                  1    wreg      void 
 34789 ;; Registers used:
 34790 ;;		wreg, status,2
 34791 ;; Tracked objects:
 34792 ;;		On entry : 0/0
 34793 ;;		On exit  : 0/0
 34794 ;;		Unchanged: 0/0
 34795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34800 ;;Total ram usage:        0 bytes
 34801 ;; Hardware stack levels used:    1
 34802 ;; Hardware stack levels required when called:    3
 34803 ;; This function calls:
 34804 ;;		Nothing
 34805 ;; This function is called by:
 34806 ;;		_SYSTEM_Initialize
 34807 ;; This function uses a non-reentrant model
 34808 ;;
 34809                           
 34810                           
 34811                           ;psect for function _SMT2_Initialize
 34812  6155                     _SMT2_Initialize:	
 34813                           
 34814                           ;func.c: 2238: SMT2CON0 = 0x80;
 34815                           
 34816                           ;incstack = 0
 34817                           ; Regs used in _SMT2_Initialize: [wreg+status,2]
 34818  6155  3080               	movlw	128
 34819  6156  014A               	movlb	10	; select bank10
 34820  6157  0098               	movwf	24	;volatile
 34821                           
 34822                           ;func.c: 2241: SMT2CON1 = 0x42;
 34823  6158  3042               	movlw	66
 34824  6159  0099               	movwf	25	;volatile
 34825                           
 34826                           ;func.c: 2244: SMT2STAT = 0x00;
 34827  615A  019A               	clrf	26	;volatile
 34828                           
 34829                           ;func.c: 2247: SMT2CLK = 0x01;
 34830  615B  3001               	movlw	1
 34831  615C  009B               	movwf	27	;volatile
 34832                           
 34833                           ;func.c: 2250: SMT2WIN = 0x00;
 34834  615D  019D               	clrf	29	;volatile
 34835                           
 34836                           ;func.c: 2253: SMT2SIG = 0x15;
 34837  615E  3015               	movlw	21
 34838  615F  009C               	movwf	28	;volatile
 34839                           
 34840                           ;func.c: 2256: SMT2PRU = 0x00;
 34841  6160  0197               	clrf	23	;volatile
 34842                           
 34843                           ;func.c: 2259: SMT2PRH = 0x00;
 34844  6161  0196               	clrf	22	;volatile
 34845                           
 34846                           ;func.c: 2262: SMT2PRL = 0x00;
 34847  6162  0195               	clrf	21	;volatile
 34848                           
 34849                           ;func.c: 2265: SMT2CON1bits.SMT2GO = 1;
 34850  6163  1799               	bsf	25,7	;volatile
 34851  6164  0008               	return
 34852  6165                     __end_of_SMT2_Initialize:	
 34853                           
 34854                           	psect	text100
 34855  6175                     __ptext100:	
 34856 ;; *************** function _SMT1_Initialize *****************
 34857 ;; Defined at:
 34858 ;;		line 2186 in file "func.c"
 34859 ;; Parameters:    Size  Location     Type
 34860 ;;		None
 34861 ;; Auto vars:     Size  Location     Type
 34862 ;;		None
 34863 ;; Return value:  Size  Location     Type
 34864 ;;                  1    wreg      void 
 34865 ;; Registers used:
 34866 ;;		wreg, status,2
 34867 ;; Tracked objects:
 34868 ;;		On entry : 0/0
 34869 ;;		On exit  : 0/0
 34870 ;;		Unchanged: 0/0
 34871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34876 ;;Total ram usage:        0 bytes
 34877 ;; Hardware stack levels used:    1
 34878 ;; Hardware stack levels required when called:    3
 34879 ;; This function calls:
 34880 ;;		Nothing
 34881 ;; This function is called by:
 34882 ;;		_SYSTEM_Initialize
 34883 ;; This function uses a non-reentrant model
 34884 ;;
 34885                           
 34886                           
 34887                           ;psect for function _SMT1_Initialize
 34888  6175                     _SMT1_Initialize:	
 34889                           
 34890                           ;func.c: 2189: SMT1CON0 = 0x80;
 34891                           
 34892                           ;incstack = 0
 34893                           ; Regs used in _SMT1_Initialize: [wreg+status,2]
 34894  6175  3080               	movlw	128
 34895  6176  0149               	movlb	9	; select bank9
 34896  6177  0098               	movwf	24	;volatile
 34897                           
 34898                           ;func.c: 2192: SMT1CON1 = 0x42;
 34899  6178  3042               	movlw	66
 34900  6179  0099               	movwf	25	;volatile
 34901                           
 34902                           ;func.c: 2195: SMT1STAT = 0x00;
 34903  617A  019A               	clrf	26	;volatile
 34904                           
 34905                           ;func.c: 2198: SMT1CLK = 0x01;
 34906  617B  3001               	movlw	1
 34907  617C  009B               	movwf	27	;volatile
 34908                           
 34909                           ;func.c: 2201: SMT1WIN = 0x00;
 34910  617D  019D               	clrf	29	;volatile
 34911                           
 34912                           ;func.c: 2204: SMT1SIG = 0x00;
 34913  617E  019C               	clrf	28	;volatile
 34914                           
 34915                           ;func.c: 2207: SMT1PRU = 0x00;
 34916  617F  0197               	clrf	23	;volatile
 34917                           
 34918                           ;func.c: 2210: SMT1PRH = 0x00;
 34919  6180  0196               	clrf	22	;volatile
 34920                           
 34921                           ;func.c: 2213: SMT1PRL = 0x00;
 34922  6181  0195               	clrf	21	;volatile
 34923                           
 34924                           ;func.c: 2216: SMT1CON1bits.SMT1GO = 1;
 34925  6182  1799               	bsf	25,7	;volatile
 34926  6183  0008               	return
 34927  6184                     __end_of_SMT1_Initialize:	
 34928                           
 34929                           	psect	text101
 34930  61A1                     __ptext101:	
 34931 ;; *************** function _PWM2_Initialize *****************
 34932 ;; Defined at:
 34933 ;;		line 2148 in file "func.c"
 34934 ;; Parameters:    Size  Location     Type
 34935 ;;		None
 34936 ;; Auto vars:     Size  Location     Type
 34937 ;;		None
 34938 ;; Return value:  Size  Location     Type
 34939 ;;                  1    wreg      void 
 34940 ;; Registers used:
 34941 ;;		wreg, status,2, status,0, pclath, cstack
 34942 ;; Tracked objects:
 34943 ;;		On entry : 0/0
 34944 ;;		On exit  : 0/0
 34945 ;;		Unchanged: 0/0
 34946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 34947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 34951 ;;Total ram usage:        0 bytes
 34952 ;; Hardware stack levels used:    1
 34953 ;; Hardware stack levels required when called:    4
 34954 ;; This function calls:
 34955 ;;		_PWM2_LoadDutyValue
 34956 ;; This function is called by:
 34957 ;;		_SYSTEM_Initialize
 34958 ;; This function uses a non-reentrant model
 34959 ;;
 34960                           
 34961                           
 34962                           ;psect for function _PWM2_Initialize
 34963  61A1                     _PWM2_Initialize:	
 34964                           
 34965                           ;func.c: 2153: CCP2CON = 0x8F;
 34966                           
 34967                           ;incstack = 0
 34968                           ; Regs used in _PWM2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 34969  61A1  308F               	movlw	143
 34970  61A2  0146               	movlb	6	; select bank6
 34971  61A3  0092               	movwf	18	;volatile
 34972                           
 34973                           ;func.c: 2155: PWM2_LoadDutyValue(511);
 34974  61A4  30FF               	movlw	255
 34975  61A5  0140               	movlb	0	; select bank0
 34976  61A6  00AB               	movwf	PWM2_LoadDutyValue@dutyValue
 34977  61A7  3001               	movlw	1
 34978  61A8  00AC               	movwf	PWM2_LoadDutyValue@dutyValue+1
 34979  61A9  31D1  2190         	fcall	_PWM2_LoadDutyValue
 34980                           
 34981                           ;func.c: 2164: CCPTMRS0bits.C2TSEL = 0x3;
 34982  61AB  300C               	movlw	12
 34983  61AC  0144               	movlb	4	; select bank4
 34984  61AD  049E               	iorwf	30,f	;volatile
 34985  61AE  0008               	return
 34986  61AF                     __end_of_PWM2_Initialize:	
 34987                           
 34988                           	psect	text102
 34989  5190                     __ptext102:	
 34990 ;; *************** function _PWM2_LoadDutyValue *****************
 34991 ;; Defined at:
 34992 ;;		line 2168 in file "func.c"
 34993 ;; Parameters:    Size  Location     Type
 34994 ;;  dutyValue       2   11[BANK0 ] unsigned int 
 34995 ;; Auto vars:     Size  Location     Type
 34996 ;;		None
 34997 ;; Return value:  Size  Location     Type
 34998 ;;                  1    wreg      void 
 34999 ;; Registers used:
 35000 ;;		wreg, status,2
 35001 ;; Tracked objects:
 35002 ;;		On entry : 0/0
 35003 ;;		On exit  : 0/0
 35004 ;;		Unchanged: 0/0
 35005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35006 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35009 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35010 ;;Total ram usage:        2 bytes
 35011 ;; Hardware stack levels used:    1
 35012 ;; Hardware stack levels required when called:    3
 35013 ;; This function calls:
 35014 ;;		Nothing
 35015 ;; This function is called by:
 35016 ;;		_set_freq
 35017 ;;		_PWM2_Initialize
 35018 ;; This function uses a non-reentrant model
 35019 ;;
 35020                           
 35021                           
 35022                           ;psect for function _PWM2_LoadDutyValue
 35023  5190                     _PWM2_LoadDutyValue:	
 35024                           
 35025                           ;func.c: 2170: dutyValue &= 0x03FF;
 35026                           
 35027                           ;incstack = 0
 35028                           ; Regs used in _PWM2_LoadDutyValue: [wreg+status,2]
 35029  5190  30FF               	movlw	255
 35030  5191  0140               	movlb	0	; select bank0
 35031  5192  05AB               	andwf	PWM2_LoadDutyValue@dutyValue,f
 35032  5193  3003               	movlw	3
 35033  5194  05AC               	andwf	PWM2_LoadDutyValue@dutyValue+1,f
 35034                           
 35035                           ;func.c: 2173: if(CCP2CONbits.CCP2FMT)
 35036  5195  0146               	movlb	6	; select bank6
 35037  5196  1E12               	btfss	18,4	;volatile
 35038  5197  29A6               	goto	l14430
 35039                           
 35040                           ;func.c: 2174: {
 35041                           ;func.c: 2175: dutyValue <<= 6;
 35042  5198  3006               	movlw	6
 35043  5199  0140               	movlb	0	; select bank0
 35044  519A                     u15175:	
 35045  519A  35AB               	lslf	PWM2_LoadDutyValue@dutyValue,f
 35046  519B  0DAC               	rlf	PWM2_LoadDutyValue@dutyValue+1,f
 35047  519C  0B89               	decfsz	9,f
 35048  519D  299A               	goto	u15175
 35049                           
 35050                           ;func.c: 2176: CCPR2H = dutyValue >> 8;
 35051  519E  082C               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 35052  519F  0146               	movlb	6	; select bank6
 35053  51A0  0091               	movwf	17	;volatile
 35054                           
 35055                           ;func.c: 2177: CCPR2L = dutyValue;
 35056  51A1  0140               	movlb	0	; select bank0
 35057  51A2  082B               	movf	PWM2_LoadDutyValue@dutyValue,w
 35058  51A3  0146               	movlb	6	; select bank6
 35059  51A4  0090               	movwf	16	;volatile
 35060                           
 35061                           ;func.c: 2178: }
 35062  51A5  0008               	return
 35063  51A6                     l14430:	
 35064                           
 35065                           ;func.c: 2179: else
 35066                           ;func.c: 2180: {
 35067                           ;func.c: 2181: CCPR2H = dutyValue >> 8;
 35068  51A6  0140               	movlb	0	; select bank0
 35069  51A7  082C               	movf	PWM2_LoadDutyValue@dutyValue+1,w
 35070  51A8  0146               	movlb	6	; select bank6
 35071  51A9  0091               	movwf	17	;volatile
 35072                           
 35073                           ;func.c: 2182: CCPR2L = dutyValue;
 35074  51AA  0140               	movlb	0	; select bank0
 35075  51AB  082B               	movf	PWM2_LoadDutyValue@dutyValue,w
 35076  51AC  0146               	movlb	6	; select bank6
 35077  51AD  0090               	movwf	16	;volatile
 35078  51AE  0008               	return
 35079  51AF                     __end_of_PWM2_LoadDutyValue:	
 35080                           
 35081                           	psect	text103
 35082  622D                     __ptext103:	
 35083 ;; *************** function _PMD_Initialize *****************
 35084 ;; Defined at:
 35085 ;;		line 2495 in file "func.c"
 35086 ;; Parameters:    Size  Location     Type
 35087 ;;		None
 35088 ;; Auto vars:     Size  Location     Type
 35089 ;;		None
 35090 ;; Return value:  Size  Location     Type
 35091 ;;                  1    wreg      void 
 35092 ;; Registers used:
 35093 ;;		status,2
 35094 ;; Tracked objects:
 35095 ;;		On entry : 0/0
 35096 ;;		On exit  : 0/0
 35097 ;;		Unchanged: 0/0
 35098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35103 ;;Total ram usage:        0 bytes
 35104 ;; Hardware stack levels used:    1
 35105 ;; Hardware stack levels required when called:    3
 35106 ;; This function calls:
 35107 ;;		Nothing
 35108 ;; This function is called by:
 35109 ;;		_SYSTEM_Initialize
 35110 ;; This function uses a non-reentrant model
 35111 ;;
 35112                           
 35113                           
 35114                           ;psect for function _PMD_Initialize
 35115  622D                     _PMD_Initialize:	
 35116                           
 35117                           ;func.c: 2498: PMD0 = 0x00;
 35118                           
 35119                           ;incstack = 0
 35120                           ; Regs used in _PMD_Initialize: [status,2]
 35121  622D  014F               	movlb	15	; select bank15
 35122  622E  0196               	clrf	22	;volatile
 35123                           
 35124                           ;func.c: 2500: PMD1 = 0x00;
 35125  622F  0197               	clrf	23	;volatile
 35126                           
 35127                           ;func.c: 2502: PMD2 = 0x00;
 35128  6230  0198               	clrf	24	;volatile
 35129                           
 35130                           ;func.c: 2504: PMD3 = 0x00;
 35131  6231  0199               	clrf	25	;volatile
 35132                           
 35133                           ;func.c: 2506: PMD4 = 0x00;
 35134  6232  019A               	clrf	26	;volatile
 35135                           
 35136                           ;func.c: 2508: PMD5 = 0x00;
 35137  6233  019B               	clrf	27	;volatile
 35138  6234  0008               	return
 35139  6235                     __end_of_PMD_Initialize:	
 35140                           
 35141                           	psect	text104
 35142  4A27                     __ptext104:	
 35143 ;; *************** function _PIN_MANAGER_Initialize *****************
 35144 ;; Defined at:
 35145 ;;		line 76 in file "func.c"
 35146 ;; Parameters:    Size  Location     Type
 35147 ;;		None
 35148 ;; Auto vars:     Size  Location     Type
 35149 ;;		None
 35150 ;; Return value:  Size  Location     Type
 35151 ;;                  1    wreg      void 
 35152 ;; Registers used:
 35153 ;;		wreg, status,2, status,0
 35154 ;; Tracked objects:
 35155 ;;		On entry : 0/0
 35156 ;;		On exit  : 0/0
 35157 ;;		Unchanged: 0/0
 35158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35163 ;;Total ram usage:        0 bytes
 35164 ;; Hardware stack levels used:    1
 35165 ;; Hardware stack levels required when called:    3
 35166 ;; This function calls:
 35167 ;;		Nothing
 35168 ;; This function is called by:
 35169 ;;		_SYSTEM_Initialize
 35170 ;; This function uses a non-reentrant model
 35171 ;;
 35172                           
 35173                           
 35174                           ;psect for function _PIN_MANAGER_Initialize
 35175  4A27                     _PIN_MANAGER_Initialize:	
 35176                           
 35177                           ;func.c: 81: LATE = 0x00;
 35178                           
 35179                           ;incstack = 0
 35180                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 35181  4A27  0140               	movlb	0	; select bank0
 35182  4A28  019A               	clrf	26	;volatile
 35183                           
 35184                           ;func.c: 82: LATD = 0x00;
 35185  4A29  0199               	clrf	25	;volatile
 35186                           
 35187                           ;func.c: 83: LATA = 0x00;
 35188  4A2A  0196               	clrf	22	;volatile
 35189                           
 35190                           ;func.c: 84: LATB = 0x00;
 35191  4A2B  0197               	clrf	23	;volatile
 35192                           
 35193                           ;func.c: 85: LATC = 0x00;
 35194  4A2C  0198               	clrf	24	;volatile
 35195                           
 35196                           ;func.c: 90: TRISE = 0x00;
 35197  4A2D  0195               	clrf	21	;volatile
 35198                           
 35199                           ;func.c: 91: TRISA = 0xFF;
 35200  4A2E  30FF               	movlw	255
 35201  4A2F  0091               	movwf	17	;volatile
 35202                           
 35203                           ;func.c: 92: TRISB = 0x00;
 35204  4A30  0192               	clrf	18	;volatile
 35205                           
 35206                           ;func.c: 93: TRISC = 0x84;
 35207  4A31  3084               	movlw	132
 35208  4A32  0093               	movwf	19	;volatile
 35209                           
 35210                           ;func.c: 94: TRISD = 0xB8;
 35211  4A33  30B8               	movlw	184
 35212  4A34  0094               	movwf	20	;volatile
 35213                           
 35214                           ;func.c: 99: ANSELD = 0x00;
 35215  4A35  017E               	movlb	62	; select bank62
 35216  4A36  01D9               	clrf	89	;volatile
 35217                           
 35218                           ;func.c: 100: ANSELC = 0x00;
 35219  4A37  01CE               	clrf	78	;volatile
 35220                           
 35221                           ;func.c: 101: ANSELB = 0x00;
 35222  4A38  01C3               	clrf	67	;volatile
 35223                           
 35224                           ;func.c: 102: ANSELE = 0x00;
 35225  4A39  01E4               	clrf	100	;volatile
 35226                           
 35227                           ;func.c: 103: ANSELA = 0x00;
 35228  4A3A  01B8               	clrf	56	;volatile
 35229                           
 35230                           ;func.c: 108: WPUD = 0x00;
 35231  4A3B  01DA               	clrf	90	;volatile
 35232                           
 35233                           ;func.c: 109: WPUE = 0x00;
 35234  4A3C  01E5               	clrf	101	;volatile
 35235                           
 35236                           ;func.c: 110: WPUB = 0x00;
 35237  4A3D  01C4               	clrf	68	;volatile
 35238                           
 35239                           ;func.c: 111: WPUA = 0x00;
 35240  4A3E  01B9               	clrf	57	;volatile
 35241                           
 35242                           ;func.c: 112: WPUC = 0x00;
 35243  4A3F  01CF               	clrf	79	;volatile
 35244                           
 35245                           ;func.c: 117: ODCONE = 0x00;
 35246  4A40  01E6               	clrf	102	;volatile
 35247                           
 35248                           ;func.c: 118: ODCONA = 0x00;
 35249  4A41  01BA               	clrf	58	;volatile
 35250                           
 35251                           ;func.c: 119: ODCONB = 0x00;
 35252  4A42  01C5               	clrf	69	;volatile
 35253                           
 35254                           ;func.c: 120: ODCONC = 0x00;
 35255  4A43  01D0               	clrf	80	;volatile
 35256                           
 35257                           ;func.c: 121: ODCOND = 0x00;
 35258  4A44  01DB               	clrf	91	;volatile
 35259                           
 35260                           ;func.c: 127: IOCAFbits.IOCAF1 = 0;
 35261  4A45  10BF               	bcf	63,1	;volatile
 35262                           
 35263                           ;func.c: 129: IOCAFbits.IOCAF2 = 0;
 35264  4A46  113F               	bcf	63,2	;volatile
 35265                           
 35266                           ;func.c: 131: IOCAFbits.IOCAF3 = 0;
 35267  4A47  11BF               	bcf	63,3	;volatile
 35268                           
 35269                           ;func.c: 133: IOCAFbits.IOCAF4 = 0;
 35270  4A48  123F               	bcf	63,4	;volatile
 35271                           
 35272                           ;func.c: 135: IOCAFbits.IOCAF5 = 0;
 35273  4A49  12BF               	bcf	63,5	;volatile
 35274                           
 35275                           ;func.c: 137: IOCANbits.IOCAN1 = 0;
 35276  4A4A  10BE               	bcf	62,1	;volatile
 35277                           
 35278                           ;func.c: 139: IOCANbits.IOCAN2 = 0;
 35279  4A4B  113E               	bcf	62,2	;volatile
 35280                           
 35281                           ;func.c: 141: IOCANbits.IOCAN3 = 0;
 35282  4A4C  11BE               	bcf	62,3	;volatile
 35283                           
 35284                           ;func.c: 143: IOCANbits.IOCAN4 = 0;
 35285  4A4D  123E               	bcf	62,4	;volatile
 35286                           
 35287                           ;func.c: 145: IOCANbits.IOCAN5 = 0;
 35288  4A4E  12BE               	bcf	62,5	;volatile
 35289                           
 35290                           ;func.c: 147: IOCAPbits.IOCAP1 = 0;
 35291  4A4F  10BD               	bcf	61,1	;volatile
 35292                           
 35293                           ;func.c: 149: IOCAPbits.IOCAP2 = 0;
 35294  4A50  113D               	bcf	61,2	;volatile
 35295                           
 35296                           ;func.c: 151: IOCAPbits.IOCAP3 = 0;
 35297  4A51  11BD               	bcf	61,3	;volatile
 35298                           
 35299                           ;func.c: 153: IOCAPbits.IOCAP4 = 0;
 35300  4A52  123D               	bcf	61,4	;volatile
 35301                           
 35302                           ;func.c: 155: IOCAPbits.IOCAP5 = 0;
 35303  4A53  12BD               	bcf	61,5	;volatile
 35304                           
 35305                           ;func.c: 158: PIE0bits.IOCIE = 0;
 35306  4A54  014E               	movlb	14	; select bank14
 35307  4A55  1216               	bcf	22,4	;volatile
 35308                           
 35309                           ;func.c: 160: RXPPSbits.RXPPS = 0x17;
 35310  4A56  017D               	movlb	61	; select bank61
 35311  4A57  084B               	movf	75,w	;volatile
 35312  4A58  39E0               	andlw	-32
 35313  4A59  3817               	iorlw	23
 35314  4A5A  00CB               	movwf	75	;volatile
 35315                           
 35316                           ;func.c: 161: RC1PPS = 0x0A;
 35317  4A5B  300A               	movlw	10
 35318  4A5C  017E               	movlb	62	; select bank62
 35319  4A5D  00A1               	movwf	33	;volatile
 35320                           
 35321                           ;func.c: 162: RC6PPS = 0x10;
 35322  4A5E  3010               	movlw	16
 35323  4A5F  00A6               	movwf	38	;volatile
 35324                           
 35325                           ;func.c: 163: CCP1PPSbits.CCP1PPS = 0x12;
 35326  4A60  017D               	movlb	61	; select bank61
 35327  4A61  0821               	movf	33,w	;volatile
 35328  4A62  39E0               	andlw	-32
 35329  4A63  3812               	iorlw	18
 35330  4A64  00A1               	movwf	33	;volatile
 35331                           
 35332                           ;func.c: 165: SMT1SIGPPSbits.SMT1SIGPPS = 0x12;
 35333  4A65  082A               	movf	42,w	;volatile
 35334  4A66  39E0               	andlw	-32
 35335  4A67  3812               	iorlw	18
 35336  4A68  00AA               	movwf	42	;volatile
 35337                           
 35338                           ;func.c: 166: SMT1WINPPSbits.SMT1WINPPS = 0x12;
 35339  4A69  0829               	movf	41,w	;volatile
 35340  4A6A  39E0               	andlw	-32
 35341  4A6B  3812               	iorlw	18
 35342  4A6C  00A9               	movwf	41	;volatile
 35343                           
 35344                           ;func.c: 168: SMT2SIGPPSbits.SMT2SIGPPS = 0x12;
 35345  4A6D  082C               	movf	44,w	;volatile
 35346  4A6E  39E0               	andlw	-32
 35347  4A6F  3812               	iorlw	18
 35348  4A70  00AC               	movwf	44	;volatile
 35349                           
 35350                           ;func.c: 169: SMT2WINPPSbits.SMT2WINPPS = 0x12;
 35351  4A71  082B               	movf	43,w	;volatile
 35352  4A72  39E0               	andlw	-32
 35353  4A73  3812               	iorlw	18
 35354  4A74  00AB               	movwf	43	;volatile
 35355                           
 35356                           ;func.c: 171: CLCIN0PPSbits.CLCIN0PPS = 0x00;
 35357  4A75  30E0               	movlw	-32
 35358  4A76  05BB               	andwf	59,f	;volatile
 35359  4A77  0008               	return
 35360  4A78                     __end_of_PIN_MANAGER_Initialize:	
 35361                           
 35362                           	psect	text105
 35363  6212                     __ptext105:	
 35364 ;; *************** function _OSCILLATOR_Initialize *****************
 35365 ;; Defined at:
 35366 ;;		line 2481 in file "func.c"
 35367 ;; Parameters:    Size  Location     Type
 35368 ;;		None
 35369 ;; Auto vars:     Size  Location     Type
 35370 ;;		None
 35371 ;; Return value:  Size  Location     Type
 35372 ;;                  1    wreg      void 
 35373 ;; Registers used:
 35374 ;;		wreg, status,2
 35375 ;; Tracked objects:
 35376 ;;		On entry : 0/0
 35377 ;;		On exit  : 0/0
 35378 ;;		Unchanged: 0/0
 35379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35384 ;;Total ram usage:        0 bytes
 35385 ;; Hardware stack levels used:    1
 35386 ;; Hardware stack levels required when called:    3
 35387 ;; This function calls:
 35388 ;;		Nothing
 35389 ;; This function is called by:
 35390 ;;		_SYSTEM_Initialize
 35391 ;; This function uses a non-reentrant model
 35392 ;;
 35393                           
 35394                           
 35395                           ;psect for function _OSCILLATOR_Initialize
 35396  6212                     _OSCILLATOR_Initialize:	
 35397                           
 35398                           ;func.c: 2484: OSCCON1 = 0x70;
 35399                           
 35400                           ;incstack = 0
 35401                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 35402  6212  3070               	movlw	112
 35403  6213  0151               	movlb	17	; select bank17
 35404  6214  008D               	movwf	13	;volatile
 35405                           
 35406                           ;func.c: 2486: OSCCON3 = 0x00;
 35407  6215  018F               	clrf	15	;volatile
 35408                           
 35409                           ;func.c: 2488: OSCEN = 0x00;
 35410  6216  0191               	clrf	17	;volatile
 35411                           
 35412                           ;func.c: 2490: OSCFRQ = 0x06;
 35413  6217  3006               	movlw	6
 35414  6218  0093               	movwf	19	;volatile
 35415                           
 35416                           ;func.c: 2492: OSCTUNE = 0x00;
 35417  6219  0192               	clrf	18	;volatile
 35418  621A  0008               	return
 35419  621B                     __end_of_OSCILLATOR_Initialize:	
 35420                           
 35421                           	psect	text106
 35422  6760                     __ptext106:	
 35423 ;; *************** function _Inicia_LCD *****************
 35424 ;; Defined at:
 35425 ;;		line 151 in file "lcd.c"
 35426 ;; Parameters:    Size  Location     Type
 35427 ;;		None
 35428 ;; Auto vars:     Size  Location     Type
 35429 ;;		None
 35430 ;; Return value:  Size  Location     Type
 35431 ;;                  1    wreg      void 
 35432 ;; Registers used:
 35433 ;;		wreg, status,2, status,0, pclath, cstack
 35434 ;; Tracked objects:
 35435 ;;		On entry : 0/0
 35436 ;;		On exit  : 0/0
 35437 ;;		Unchanged: 0/0
 35438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35442 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35443 ;;Total ram usage:        1 bytes
 35444 ;; Hardware stack levels used:    1
 35445 ;; Hardware stack levels required when called:    6
 35446 ;; This function calls:
 35447 ;;		_Lcd_Clear
 35448 ;;		_Lcd_Init
 35449 ;; This function is called by:
 35450 ;;		_main
 35451 ;;		_trata_dados
 35452 ;;		_SYSTEM_Initialize
 35453 ;; This function uses a non-reentrant model
 35454 ;;
 35455                           
 35456                           
 35457                           ;psect for function _Inicia_LCD
 35458  6760                     _Inicia_LCD:	
 35459                           
 35460                           ;lcd.c: 152: LATBbits.LATB6=0;
 35461                           
 35462                           ;incstack = 0
 35463                           ; Regs used in _Inicia_LCD: [wreg+status,2+status,0+pclath+cstack]
 35464  6760  0140               	movlb	0	; select bank0
 35465  6761  1317               	bcf	23,6	;volatile
 35466                           
 35467                           ;lcd.c: 154: Lcd_Init();
 35468  6762  31CA  2278  31E7   	fcall	_Lcd_Init
 35469                           
 35470                           ;lcd.c: 155: Lcd_Clear();
 35471  6765  31E1  21DF  31E7   	fcall	_Lcd_Clear
 35472                           
 35473                           ;lcd.c: 185: LATBbits.LATB6 = 1;
 35474  6768  0140               	movlb	0	; select bank0
 35475  6769  1717               	bsf	23,6	;volatile
 35476                           
 35477                           ;lcd.c: 186: _delay((unsigned long)((1)*(20000000/4000.0)));
 35478  676A  3007               	movlw	7
 35479  676B  0140               	movlb	0	; select bank0
 35480  676C  00AF               	movwf	??_Inicia_LCD
 35481  676D  307D               	movlw	125
 35482  676E                     u20877:	
 35483  676E  0B89               	decfsz	9,f
 35484  676F  2F6E               	goto	u20877
 35485  6770  0BAF               	decfsz	??_Inicia_LCD,f
 35486  6771  2F6E               	goto	u20877
 35487  6772  0008               	return
 35488  6773                     __end_of_Inicia_LCD:	
 35489                           
 35490                           	psect	text107
 35491  4A78                     __ptext107:	
 35492 ;; *************** function _Lcd_Init *****************
 35493 ;; Defined at:
 35494 ;;		line 67 in file "lcd.c"
 35495 ;; Parameters:    Size  Location     Type
 35496 ;;		None
 35497 ;; Auto vars:     Size  Location     Type
 35498 ;;		None
 35499 ;; Return value:  Size  Location     Type
 35500 ;;                  1    wreg      void 
 35501 ;; Registers used:
 35502 ;;		wreg, status,2, status,0, pclath, cstack
 35503 ;; Tracked objects:
 35504 ;;		On entry : 0/0
 35505 ;;		On exit  : 0/0
 35506 ;;		Unchanged: 0/0
 35507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35510 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35511 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35512 ;;Total ram usage:        1 bytes
 35513 ;; Hardware stack levels used:    1
 35514 ;; Hardware stack levels required when called:    5
 35515 ;; This function calls:
 35516 ;;		_Lcd_Cmd
 35517 ;;		_Lcd_Port
 35518 ;; This function is called by:
 35519 ;;		_Inicia_LCD
 35520 ;; This function uses a non-reentrant model
 35521 ;;
 35522                           
 35523                           
 35524                           ;psect for function _Lcd_Init
 35525  4A78                     _Lcd_Init:	
 35526                           
 35527                           ;lcd.c: 69: TRISBbits.TRISB6 = 0;
 35528                           
 35529                           ;incstack = 0
 35530                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 35531  4A78  0140               	movlb	0	; select bank0
 35532  4A79  1312               	bcf	18,6	;volatile
 35533                           
 35534                           ;lcd.c: 70: TRISBbits.TRISB4 = 0;
 35535  4A7A  1212               	bcf	18,4	;volatile
 35536                           
 35537                           ;lcd.c: 71: TRISBbits.TRISB5 = 0;
 35538  4A7B  1292               	bcf	18,5	;volatile
 35539                           
 35540                           ;lcd.c: 72: TRISBbits.TRISB0 = 0;
 35541  4A7C  1012               	bcf	18,0	;volatile
 35542                           
 35543                           ;lcd.c: 73: TRISBbits.TRISB1 = 0;
 35544  4A7D  1092               	bcf	18,1	;volatile
 35545                           
 35546                           ;lcd.c: 74: TRISBbits.TRISB2 = 0;
 35547  4A7E  1112               	bcf	18,2	;volatile
 35548                           
 35549                           ;lcd.c: 75: TRISBbits.TRISB3 = 0;
 35550  4A7F  1192               	bcf	18,3	;volatile
 35551                           
 35552                           ;lcd.c: 76: LATBbits.LATB6 = 0;
 35553  4A80  1317               	bcf	23,6	;volatile
 35554                           
 35555                           ;lcd.c: 77: Lcd_Port(0x00);
 35556  4A81  3000               	movlw	0
 35557  4A82  31D0  2099  31CA   	fcall	_Lcd_Port
 35558                           
 35559                           ;lcd.c: 78: _delay((unsigned long)((20)*(20000000/4000.0)));
 35560  4A85  3082               	movlw	130
 35561  4A86  0140               	movlb	0	; select bank0
 35562  4A87  00AE               	movwf	??_Lcd_Init
 35563  4A88  30DD               	movlw	221
 35564  4A89                     u20887:	
 35565  4A89  0B89               	decfsz	9,f
 35566  4A8A  2A89               	goto	u20887
 35567  4A8B  0BAE               	decfsz	??_Lcd_Init,f
 35568  4A8C  2A89               	goto	u20887
 35569  4A8D  3200               	nop2
 35570                           
 35571                           ;lcd.c: 79: Lcd_Cmd(0x03);
 35572  4A8E  3003               	movlw	3
 35573  4A8F  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35574                           
 35575                           ;lcd.c: 80: _delay((unsigned long)((5)*(20000000/4000.0)));
 35576  4A92  3021               	movlw	33
 35577  4A93  0140               	movlb	0	; select bank0
 35578  4A94  00AE               	movwf	??_Lcd_Init
 35579  4A95  3076               	movlw	118
 35580  4A96                     u20897:	
 35581  4A96  0B89               	decfsz	9,f
 35582  4A97  2A96               	goto	u20897
 35583  4A98  0BAE               	decfsz	??_Lcd_Init,f
 35584  4A99  2A96               	goto	u20897
 35585  4A9A  0000               	nop
 35586                           
 35587                           ;lcd.c: 81: Lcd_Cmd(0x03);
 35588  4A9B  3003               	movlw	3
 35589  4A9C  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35590                           
 35591                           ;lcd.c: 82: _delay((unsigned long)((11)*(20000000/4000.0)));
 35592  4A9F  3048               	movlw	72
 35593  4AA0  0140               	movlb	0	; select bank0
 35594  4AA1  00AE               	movwf	??_Lcd_Init
 35595  4AA2  306C               	movlw	108
 35596  4AA3                     u20907:	
 35597  4AA3  0B89               	decfsz	9,f
 35598  4AA4  2AA3               	goto	u20907
 35599  4AA5  0BAE               	decfsz	??_Lcd_Init,f
 35600  4AA6  2AA3               	goto	u20907
 35601  4AA7  0000               	nop
 35602                           
 35603                           ;lcd.c: 83: Lcd_Cmd(0x03);
 35604  4AA8  3003               	movlw	3
 35605  4AA9  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35606                           
 35607                           ;lcd.c: 85: Lcd_Cmd(0x02);
 35608  4AAC  3002               	movlw	2
 35609  4AAD  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35610                           
 35611                           ;lcd.c: 86: Lcd_Cmd(0x02);
 35612  4AB0  3002               	movlw	2
 35613  4AB1  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35614                           
 35615                           ;lcd.c: 87: Lcd_Cmd(0x08);
 35616  4AB4  3008               	movlw	8
 35617  4AB5  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35618                           
 35619                           ;lcd.c: 88: Lcd_Cmd(0x00);
 35620  4AB8  3000               	movlw	0
 35621  4AB9  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35622                           
 35623                           ;lcd.c: 89: Lcd_Cmd(0x0C);
 35624  4ABC  300C               	movlw	12
 35625  4ABD  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35626                           
 35627                           ;lcd.c: 90: Lcd_Cmd(0x00);
 35628  4AC0  3000               	movlw	0
 35629  4AC1  31D0  20B0  31CA   	fcall	_Lcd_Cmd
 35630                           
 35631                           ;lcd.c: 91: Lcd_Cmd(0x06);
 35632  4AC4  3006               	movlw	6
 35633  4AC5  31D0  20B0         	fcall	_Lcd_Cmd
 35634                           
 35635                           ;lcd.c: 92: LATBbits.LATB6=1;
 35636  4AC7  0140               	movlb	0	; select bank0
 35637  4AC8  1717               	bsf	23,6	;volatile
 35638  4AC9  0008               	return
 35639  4ACA                     __end_of_Lcd_Init:	
 35640                           
 35641                           	psect	text108
 35642  5455                     __ptext108:	
 35643 ;; *************** function _EUSART_Initialize *****************
 35644 ;; Defined at:
 35645 ;;		line 18 in file "eusart.c"
 35646 ;; Parameters:    Size  Location     Type
 35647 ;;		None
 35648 ;; Auto vars:     Size  Location     Type
 35649 ;;		None
 35650 ;; Return value:  Size  Location     Type
 35651 ;;                  1    wreg      void 
 35652 ;; Registers used:
 35653 ;;		wreg, status,2, status,0, pclath, cstack
 35654 ;; Tracked objects:
 35655 ;;		On entry : 0/0
 35656 ;;		On exit  : 0/0
 35657 ;;		Unchanged: 0/0
 35658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35662 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35663 ;;Total ram usage:        1 bytes
 35664 ;; Hardware stack levels used:    1
 35665 ;; Hardware stack levels required when called:    4
 35666 ;; This function calls:
 35667 ;;		_EUSART_SetRxInterruptHandler
 35668 ;;		_EUSART_SetTxInterruptHandler
 35669 ;; This function is called by:
 35670 ;;		_SYSTEM_Initialize
 35671 ;; This function uses a non-reentrant model
 35672 ;;
 35673                           
 35674                           
 35675                           ;psect for function _EUSART_Initialize
 35676  5455                     _EUSART_Initialize:	
 35677                           
 35678                           ;eusart.c: 21: PIE3bits.RCIE = 0;
 35679                           
 35680                           ;incstack = 0
 35681                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 35682  5455  014E               	movlb	14	; select bank14
 35683  5456  1299               	bcf	25,5	;volatile
 35684                           
 35685                           ;eusart.c: 22: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 35686  5457  30E2               	movlw	low _EUSART_Receive_ISR
 35687  5458  0140               	movlb	0	; select bank0
 35688  5459  00AB               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
 35689  545A  3050               	movlw	high _EUSART_Receive_ISR
 35690  545B  00AC               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
 35691  545C  31E2  2224  31D4   	fcall	_EUSART_SetRxInterruptHandler
 35692                           
 35693                           ;eusart.c: 23: PIE3bits.TXIE = 0;
 35694  545F  014E               	movlb	14	; select bank14
 35695  5460  1219               	bcf	25,4	;volatile
 35696                           
 35697                           ;eusart.c: 24: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 35698  5461  3053               	movlw	low _EUSART_Transmit_ISR
 35699  5462  0140               	movlb	0	; select bank0
 35700  5463  00AB               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
 35701  5464  3051               	movlw	high _EUSART_Transmit_ISR
 35702  5465  00AC               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
 35703  5466  31E2  221B         	fcall	_EUSART_SetTxInterruptHandler
 35704                           
 35705                           ;eusart.c: 28: BAUD1CON = 0x08;
 35706  5468  3008               	movlw	8
 35707  5469  0142               	movlb	2	; select bank2
 35708  546A  009F               	movwf	31	;volatile
 35709                           
 35710                           ;eusart.c: 31: RC1STA = 0x90;
 35711  546B  3090               	movlw	144
 35712  546C  009D               	movwf	29	;volatile
 35713                           
 35714                           ;eusart.c: 34: TX1STA = 0x24;
 35715  546D  3024               	movlw	36
 35716  546E  009E               	movwf	30	;volatile
 35717                           
 35718                           ;eusart.c: 37: SP1BRGL = 0x08;
 35719  546F  3008               	movlw	8
 35720  5470  009B               	movwf	27	;volatile
 35721                           
 35722                           ;eusart.c: 40: SP1BRGH = 0x02;
 35723  5471  3002               	movlw	2
 35724  5472  009C               	movwf	28	;volatile
 35725                           
 35726                           ;eusart.c: 44: eusartTxHead = 0;
 35727  5473  0143               	movlb	3	; select bank3
 35728  5474  01D3               	clrf	_eusartTxHead^(0+384)	;volatile
 35729                           
 35730                           ;eusart.c: 45: eusartTxTail = 0;
 35731  5475  01D2               	clrf	_eusartTxTail^(0+384)	;volatile
 35732                           
 35733                           ;eusart.c: 46: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 35734  5476  3020               	movlw	32
 35735  5477  0140               	movlb	0	; select bank0
 35736  5478  00AD               	movwf	??_EUSART_Initialize
 35737  5479  082D               	movf	??_EUSART_Initialize,w
 35738  547A  0143               	movlb	3	; select bank3
 35739  547B  00D1               	movwf	_eusartTxBufferRemaining^(0+384)	;volatile
 35740                           
 35741                           ;eusart.c: 48: eusartRxHead = 0;
 35742  547C  01D0               	clrf	_eusartRxHead^(0+384)	;volatile
 35743                           
 35744                           ;eusart.c: 49: eusartRxTail = 0;
 35745  547D  01CF               	clrf	_eusartRxTail^(0+384)	;volatile
 35746                           
 35747                           ;eusart.c: 50: eusartRxCount = 0;
 35748  547E  01CE               	clrf	_eusartRxCount^(0+384)	;volatile
 35749                           
 35750                           ;eusart.c: 53: PIE3bits.RCIE = 1;
 35751  547F  014E               	movlb	14	; select bank14
 35752  5480  1699               	bsf	25,5	;volatile
 35753  5481  0008               	return
 35754  5482                     __end_of_EUSART_Initialize:	
 35755                           
 35756                           	psect	text109
 35757  621B                     __ptext109:	
 35758 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 35759 ;; Defined at:
 35760 ;;		line 165 in file "eusart.c"
 35761 ;; Parameters:    Size  Location     Type
 35762 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
 35763 ;;		 -> EUSART_Transmit_ISR(1), 
 35764 ;; Auto vars:     Size  Location     Type
 35765 ;;		None
 35766 ;; Return value:  Size  Location     Type
 35767 ;;                  1    wreg      void 
 35768 ;; Registers used:
 35769 ;;		wreg
 35770 ;; Tracked objects:
 35771 ;;		On entry : 0/0
 35772 ;;		On exit  : 0/0
 35773 ;;		Unchanged: 0/0
 35774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35778 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35779 ;;Total ram usage:        2 bytes
 35780 ;; Hardware stack levels used:    1
 35781 ;; Hardware stack levels required when called:    3
 35782 ;; This function calls:
 35783 ;;		Nothing
 35784 ;; This function is called by:
 35785 ;;		_EUSART_Initialize
 35786 ;; This function uses a non-reentrant model
 35787 ;;
 35788                           
 35789                           
 35790                           ;psect for function _EUSART_SetTxInterruptHandler
 35791  621B                     _EUSART_SetTxInterruptHandler:	
 35792                           
 35793                           ;eusart.c: 166: EUSART_TxDefaultInterruptHandler = interruptHandler;
 35794                           
 35795                           ;incstack = 0
 35796                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 35797  621B  0140               	movlb	0	; select bank0
 35798  621C  082C               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
 35799  621D  0144               	movlb	4	; select bank4
 35800  621E  00B7               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+512)
 35801  621F  0140               	movlb	0	; select bank0
 35802  6220  082B               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
 35803  6221  0144               	movlb	4	; select bank4
 35804  6222  00B6               	movwf	_EUSART_TxDefaultInterruptHandler^(0+512)
 35805  6223  0008               	return
 35806  6224                     __end_of_EUSART_SetTxInterruptHandler:	
 35807                           
 35808                           	psect	text110
 35809  6224                     __ptext110:	
 35810 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 35811 ;; Defined at:
 35812 ;;		line 169 in file "eusart.c"
 35813 ;; Parameters:    Size  Location     Type
 35814 ;;  interruptHan    2   11[BANK0 ] PTR FTN()void 
 35815 ;;		 -> EUSART_Receive_ISR(1), 
 35816 ;; Auto vars:     Size  Location     Type
 35817 ;;		None
 35818 ;; Return value:  Size  Location     Type
 35819 ;;                  1    wreg      void 
 35820 ;; Registers used:
 35821 ;;		wreg
 35822 ;; Tracked objects:
 35823 ;;		On entry : 0/0
 35824 ;;		On exit  : 0/0
 35825 ;;		Unchanged: 0/0
 35826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35827 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35830 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35831 ;;Total ram usage:        2 bytes
 35832 ;; Hardware stack levels used:    1
 35833 ;; Hardware stack levels required when called:    3
 35834 ;; This function calls:
 35835 ;;		Nothing
 35836 ;; This function is called by:
 35837 ;;		_EUSART_Initialize
 35838 ;; This function uses a non-reentrant model
 35839 ;;
 35840                           
 35841                           
 35842                           ;psect for function _EUSART_SetRxInterruptHandler
 35843  6224                     _EUSART_SetRxInterruptHandler:	
 35844                           
 35845                           ;eusart.c: 170: EUSART_RxDefaultInterruptHandler = interruptHandler;
 35846                           
 35847                           ;incstack = 0
 35848                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 35849  6224  0140               	movlb	0	; select bank0
 35850  6225  082C               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
 35851  6226  0144               	movlb	4	; select bank4
 35852  6227  00B5               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512)
 35853  6228  0140               	movlb	0	; select bank0
 35854  6229  082B               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
 35855  622A  0144               	movlb	4	; select bank4
 35856  622B  00B4               	movwf	_EUSART_RxDefaultInterruptHandler^(0+512)
 35857  622C  0008               	return
 35858  622D                     __end_of_EUSART_SetRxInterruptHandler:	
 35859                           
 35860                           	psect	text111
 35861  6124                     __ptext111:	
 35862 ;; *************** function _CLC1_Initialize *****************
 35863 ;; Defined at:
 35864 ;;		line 2511 in file "func.c"
 35865 ;; Parameters:    Size  Location     Type
 35866 ;;		None
 35867 ;; Auto vars:     Size  Location     Type
 35868 ;;		None
 35869 ;; Return value:  Size  Location     Type
 35870 ;;                  1    wreg      void 
 35871 ;; Registers used:
 35872 ;;		wreg, status,2
 35873 ;; Tracked objects:
 35874 ;;		On entry : 0/0
 35875 ;;		On exit  : 0/0
 35876 ;;		Unchanged: 0/0
 35877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35882 ;;Total ram usage:        0 bytes
 35883 ;; Hardware stack levels used:    1
 35884 ;; Hardware stack levels required when called:    3
 35885 ;; This function calls:
 35886 ;;		Nothing
 35887 ;; This function is called by:
 35888 ;;		_SYSTEM_Initialize
 35889 ;; This function uses a non-reentrant model
 35890 ;;
 35891                           
 35892                           
 35893                           ;psect for function _CLC1_Initialize
 35894  6124                     _CLC1_Initialize:	
 35895                           
 35896                           ;func.c: 2512: CLC1POL = 0x00;
 35897                           
 35898                           ;incstack = 0
 35899                           ; Regs used in _CLC1_Initialize: [wreg+status,2]
 35900  6124  017C               	movlb	60	; select bank60
 35901  6125  0191               	clrf	17	;volatile
 35902                           
 35903                           ;func.c: 2513: CLC1SEL0 = 0x00;
 35904  6126  0192               	clrf	18	;volatile
 35905                           
 35906                           ;func.c: 2514: CLC1SEL1 = 0x00;
 35907  6127  0193               	clrf	19	;volatile
 35908                           
 35909                           ;func.c: 2515: CLC1SEL2 = 0x00;
 35910  6128  0194               	clrf	20	;volatile
 35911                           
 35912                           ;func.c: 2516: CLC1SEL3 = 0x00;
 35913  6129  0195               	clrf	21	;volatile
 35914                           
 35915                           ;func.c: 2517: CLC1GLS0 = 0xAA;
 35916  612A  30AA               	movlw	170
 35917  612B  0096               	movwf	22	;volatile
 35918                           
 35919                           ;func.c: 2518: CLC1GLS1 = 0xAA;
 35920  612C  30AA               	movlw	170
 35921  612D  0097               	movwf	23	;volatile
 35922                           
 35923                           ;func.c: 2519: CLC1GLS2 = 0xAA;
 35924  612E  30AA               	movlw	170
 35925  612F  0098               	movwf	24	;volatile
 35926                           
 35927                           ;func.c: 2520: CLC1GLS3 = 0xAA;
 35928  6130  30AA               	movlw	170
 35929  6131  0099               	movwf	25	;volatile
 35930                           
 35931                           ;func.c: 2521: CLC1CON = 0x80;
 35932  6132  3080               	movlw	128
 35933  6133  0090               	movwf	16	;volatile
 35934  6134  0008               	return
 35935  6135                     __end_of_CLC1_Initialize:	
 35936                           
 35937                           	psect	text112
 35938  48A1                     __ptext112:	
 35939 ;; *************** function _ADCC_Initialize *****************
 35940 ;; Defined at:
 35941 ;;		line 2524 in file "func.c"
 35942 ;; Parameters:    Size  Location     Type
 35943 ;;		None
 35944 ;; Auto vars:     Size  Location     Type
 35945 ;;		None
 35946 ;; Return value:  Size  Location     Type
 35947 ;;                  1    wreg      void 
 35948 ;; Registers used:
 35949 ;;		wreg, status,2
 35950 ;; Tracked objects:
 35951 ;;		On entry : 0/0
 35952 ;;		On exit  : 0/0
 35953 ;;		Unchanged: 0/0
 35954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 35955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 35959 ;;Total ram usage:        0 bytes
 35960 ;; Hardware stack levels used:    1
 35961 ;; Hardware stack levels required when called:    3
 35962 ;; This function calls:
 35963 ;;		Nothing
 35964 ;; This function is called by:
 35965 ;;		_SYSTEM_Initialize
 35966 ;; This function uses a non-reentrant model
 35967 ;;
 35968                           
 35969                           
 35970                           ;psect for function _ADCC_Initialize
 35971  48A1                     _ADCC_Initialize:	
 35972                           
 35973                           ;func.c: 2528: ADLTHL = 0x00;
 35974                           
 35975                           ;incstack = 0
 35976                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 35977  48A1  0142               	movlb	2	; select bank2
 35978  48A2  018E               	clrf	14	;volatile
 35979                           
 35980                           ;func.c: 2530: ADLTHH = 0x00;
 35981  48A3  018F               	clrf	15	;volatile
 35982                           
 35983                           ;func.c: 2532: ADUTHL = 0x00;
 35984  48A4  0190               	clrf	16	;volatile
 35985                           
 35986                           ;func.c: 2534: ADUTHH = 0x00;
 35987  48A5  0191               	clrf	17	;volatile
 35988                           
 35989                           ;func.c: 2536: ADSTPTL = 0x00;
 35990  48A6  0192               	clrf	18	;volatile
 35991                           
 35992                           ;func.c: 2538: ADSTPTH = 0x00;
 35993  48A7  0193               	clrf	19	;volatile
 35994                           
 35995                           ;func.c: 2540: ADRPT = 0x00;
 35996  48A8  018D               	clrf	13	;volatile
 35997                           
 35998                           ;func.c: 2542: ADPCH = 0x00;
 35999  48A9  0141               	movlb	1	; select bank1
 36000  48AA  019E               	clrf	30	;volatile
 36001                           
 36002                           ;func.c: 2544: ADCAP = 0x00;
 36003  48AB  019B               	clrf	27	;volatile
 36004                           
 36005                           ;func.c: 2546: ADCON1 = 0x00;
 36006  48AC  0194               	clrf	20	;volatile
 36007                           
 36008                           ;func.c: 2548: ADCON2 = 0x00;
 36009  48AD  0195               	clrf	21	;volatile
 36010                           
 36011                           ;func.c: 2550: ADCON3 = 0x00;
 36012  48AE  0196               	clrf	22	;volatile
 36013                           
 36014                           ;func.c: 2552: ADSTAT = 0x00;
 36015  48AF  0197               	clrf	23	;volatile
 36016                           
 36017                           ;func.c: 2554: ADREF = 0x00;
 36018  48B0  019A               	clrf	26	;volatile
 36019                           
 36020                           ;func.c: 2556: ADACT = 0x00;
 36021  48B1  0199               	clrf	25	;volatile
 36022                           
 36023                           ;func.c: 2558: ADCLK = 0x00;
 36024  48B2  0198               	clrf	24	;volatile
 36025                           
 36026                           ;func.c: 2560: ADCON0 = 0x94;
 36027  48B3  3094               	movlw	148
 36028  48B4  0093               	movwf	19	;volatile
 36029                           
 36030                           ;func.c: 2562: FVRCONbits.TSEN = 1;
 36031  48B5  0152               	movlb	18	; select bank18
 36032  48B6  168C               	bsf	12,5	;volatile
 36033                           
 36034                           ;func.c: 2563: FVRCONbits.TSRNG = 1;
 36035  48B7  160C               	bsf	12,4	;volatile
 36036  48B8  0008               	return
 36037  48B9                     __end_of_ADCC_Initialize:	
 36038                           
 36039                           	psect	text113
 36040  3F1B                     __ptext113:	
 36041 ;; *************** function _Autenticar *****************
 36042 ;; Defined at:
 36043 ;;		line 129 in file "login.c"
 36044 ;; Parameters:    Size  Location     Type
 36045 ;;		None
 36046 ;; Auto vars:     Size  Location     Type
 36047 ;;  senha           5    0[BANK1 ] unsigned char [5]
 36048 ;;  coluna          1    6[BANK1 ] unsigned char 
 36049 ;;  bt_a            1    5[BANK1 ] unsigned char 
 36050 ;; Return value:  Size  Location     Type
 36051 ;;                  1    wreg      unsigned char 
 36052 ;; Registers used:
 36053 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 36054 ;; Tracked objects:
 36055 ;;		On entry : 0/0
 36056 ;;		On exit  : 0/0
 36057 ;;		Unchanged: 0/0
 36058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36060 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36061 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36062 ;;      Totals:         0       2       7       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36063 ;;Total ram usage:        9 bytes
 36064 ;; Hardware stack levels used:    1
 36065 ;; Hardware stack levels required when called:    9
 36066 ;; This function calls:
 36067 ;;		_EditSenhaUser
 36068 ;;		_LoadSenhaGerador
 36069 ;;		_LoadSenhaUser
 36070 ;;		_liberar_tecla
 36071 ;;		_printTelaSenha
 36072 ;;		_teclado
 36073 ;;		_verifSenhas
 36074 ;; This function is called by:
 36075 ;;		_main
 36076 ;; This function uses a non-reentrant model
 36077 ;;
 36078                           
 36079                           
 36080                           ;psect for function _Autenticar
 36081  3F1B                     _Autenticar:	
 36082                           
 36083                           ;incstack = 0
 36084                           ; Regs used in _Autenticar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 36085  3F1B  3001               	movlw	1
 36086  3F1C  0008               	return
 36087  3F1D                     u19810:	
 36088                           ;login.c: 133: char senha[5] = {'0','0','0','0',0};
 36089                           
 36090  3F1D  0016               	moviw fsr1++
 36091  3F1E  001A               	movwi fsr0++
 36092  3F1F  0BD7               	decfsz	??_Autenticar,f
 36093  3F20  2F1D               	goto	u19810
 36094                           
 36095                           ;login.c: 134: char coluna = 0;
 36096  3F21  0141               	movlb	1	; select bank1
 36097  3F22  01A6               	clrf	Autenticar@coluna^(0+128)
 36098                           
 36099                           ;login.c: 135: char bt_a;
 36100                           ;login.c: 137: LoadSenhaGerador();
 36101  3F23  31D2  22BE  31BF   	fcall	_LoadSenhaGerador
 36102                           
 36103                           ;login.c: 138: LoadSenhaUser();
 36104  3F26  31D2  2274  31BF   	fcall	_LoadSenhaUser
 36105                           
 36106                           ;login.c: 140: printTelaSenha(senha,coluna);
 36107  3F29  0141               	movlb	1	; select bank1
 36108  3F2A  0826               	movf	Autenticar@coluna^(0+128),w
 36109  3F2B  0140               	movlb	0	; select bank0
 36110  3F2C  00D7               	movwf	??_Autenticar
 36111  3F2D  0857               	movf	??_Autenticar,w
 36112  3F2E  00C9               	movwf	printTelaSenha@col
 36113  3F2F  30A0               	movlw	(low (Autenticar@senha| 0))& (0+255)
 36114  3F30  31C9  21DA  31BF   	fcall	_printTelaSenha
 36115                           
 36116                           ;login.c: 141: _delay((unsigned long)((500)*(20000000/4000.0)));
 36117  3F33  300D               	movlw	13
 36118  3F34  0140               	movlb	0	; select bank0
 36119  3F35  00D8               	movwf	??_Autenticar+1
 36120  3F36  30AF               	movlw	175
 36121  3F37  00D7               	movwf	??_Autenticar
 36122  3F38  30B6               	movlw	182
 36123  3F39                     u20917:	
 36124  3F39  0B89               	decfsz	9,f
 36125  3F3A  2F39               	goto	u20917
 36126  3F3B  0BD7               	decfsz	??_Autenticar,f
 36127  3F3C  2F39               	goto	u20917
 36128  3F3D  0BD8               	decfsz	??_Autenticar+1,f
 36129  3F3E  2F39               	goto	u20917
 36130  3F3F  0000               	nop
 36131                           
 36132                           ;login.c: 145: switch(bt_a){
 36133  3F40  2FDF               	goto	l17720
 36134  3F41                     l17722:	
 36135                           ;login.c: 146: case 9:
 36136                           
 36137                           
 36138                           ;login.c: 147: liberar_tecla(bt_a,0);
 36139  3F41  3000               	movlw	0
 36140  3F42  0140               	movlb	0	; select bank0
 36141  3F43  00B3               	movwf	liberar_tecla@t
 36142  3F44  00B4               	movwf	liberar_tecla@t+1
 36143  3F45  0141               	movlb	1	; select bank1
 36144  3F46  0825               	movf	Autenticar@bt_a^(0+128),w
 36145  3F47  31D7  2735         	fcall	_liberar_tecla
 36146                           
 36147                           ;login.c: 148: return -1;
 36148  3F49  30FF               	movlw	255
 36149  3F4A  0008               	return
 36150  3F4B                     l17728:	
 36151                           ;login.c: 150: case 33:
 36152                           
 36153                           
 36154                           ;login.c: 151: liberar_tecla(bt_a,0);
 36155  3F4B  3000               	movlw	0
 36156  3F4C  0140               	movlb	0	; select bank0
 36157  3F4D  00B3               	movwf	liberar_tecla@t
 36158  3F4E  00B4               	movwf	liberar_tecla@t+1
 36159  3F4F  0141               	movlb	1	; select bank1
 36160  3F50  0825               	movf	Autenticar@bt_a^(0+128),w
 36161  3F51  31D7  2735  31BF   	fcall	_liberar_tecla
 36162                           
 36163                           ;login.c: 152: if(verifSenhas(senha)){
 36164  3F54  30A0               	movlw	(low (Autenticar@senha| 0))& (0+255)
 36165  3F55  31D4  2428  31BF   	fcall	_verifSenhas
 36166  3F58  3A00               	xorlw	0
 36167  3F59  1903               	skipnz
 36168  3F5A  2F68               	goto	l17740
 36169                           
 36170                           ;login.c: 153: EditSenhaUser();
 36171  3F5B  31BA  22FA  31BF   	fcall	_EditSenhaUser
 36172                           
 36173                           ;login.c: 154: liberar_tecla(bt_a,0);
 36174  3F5E  3000               	movlw	0
 36175  3F5F  0140               	movlb	0	; select bank0
 36176  3F60  00B3               	movwf	liberar_tecla@t
 36177  3F61  00B4               	movwf	liberar_tecla@t+1
 36178  3F62  0141               	movlb	1	; select bank1
 36179  3F63  0825               	movf	Autenticar@bt_a^(0+128),w
 36180  3F64  31D7  2735         	fcall	_liberar_tecla
 36181                           
 36182                           ;login.c: 155: return 1;
 36183  3F66  3001               	movlw	1
 36184  3F67  0008               	return
 36185  3F68                     l17740:	
 36186                           
 36187                           ;login.c: 156: }
 36188                           ;login.c: 157: return 0;
 36189  3F68  3000               	movlw	0
 36190  3F69  0008               	return
 36191  3F6A                     l17744:	
 36192                           ;login.c: 159: case 18:
 36193                           
 36194                           
 36195                           ;login.c: 160: liberar_tecla(bt_a,0);
 36196  3F6A  3000               	movlw	0
 36197  3F6B  0140               	movlb	0	; select bank0
 36198  3F6C  00B3               	movwf	liberar_tecla@t
 36199  3F6D  00B4               	movwf	liberar_tecla@t+1
 36200  3F6E  0141               	movlb	1	; select bank1
 36201  3F6F  0825               	movf	Autenticar@bt_a^(0+128),w
 36202  3F70  31D7  2735  31BF   	fcall	_liberar_tecla
 36203                           
 36204                           ;login.c: 161: if(verifSenhas(senha)){
 36205  3F73  30A0               	movlw	(low (Autenticar@senha| 0))& (0+255)
 36206  3F74  31D4  2428  31BF   	fcall	_verifSenhas
 36207  3F77  3A00               	xorlw	0
 36208  3F78  1903               	skipnz
 36209  3F79  2F7C               	goto	l17754
 36210                           
 36211                           ;login.c: 162: return 1;
 36212  3F7A  3001               	movlw	1
 36213  3F7B  0008               	return
 36214  3F7C                     l17754:	
 36215                           ;login.c: 163: }
 36216                           
 36217                           
 36218                           ;login.c: 164: else{
 36219                           ;login.c: 165: return 0;
 36220  3F7C  3000               	movlw	0
 36221  3F7D  0008               	return
 36222  3F7E                     l17758:	
 36223                           ;login.c: 166: }
 36224                           ;login.c: 168: case 17:
 36225                           
 36226                           
 36227                           ;login.c: 169: if(senha[coluna] < '9'){
 36228  3F7E  0141               	movlb	1	; select bank1
 36229  3F7F  0826               	movf	Autenticar@coluna^(0+128),w
 36230  3F80  3EA0               	addlw	(low (Autenticar@senha| 0))& (0+255)
 36231  3F81  0086               	movwf	6
 36232  3F82  0187               	clrf	7
 36233  3F83  3039               	movlw	57
 36234  3F84  0201               	subwf	1,w
 36235  3F85  1803               	skipnc
 36236  3F86  2F93               	goto	l17762
 36237                           
 36238                           ;login.c: 170: senha[coluna]++;
 36239  3F87  3001               	movlw	1
 36240  3F88  0140               	movlb	0	; select bank0
 36241  3F89  00D7               	movwf	??_Autenticar
 36242  3F8A  0141               	movlb	1	; select bank1
 36243  3F8B  0826               	movf	Autenticar@coluna^(0+128),w
 36244  3F8C  3EA0               	addlw	(low (Autenticar@senha| 0))& (0+255)
 36245  3F8D  0086               	movwf	6
 36246  3F8E  0187               	clrf	7
 36247  3F8F  0140               	movlb	0	; select bank0
 36248  3F90  0857               	movf	??_Autenticar,w
 36249  3F91  0781               	addwf	1,f
 36250                           
 36251                           ;login.c: 171: }
 36252  3F92  2FB0               	goto	l17774
 36253  3F93                     l17762:	
 36254                           
 36255                           ;login.c: 172: else {
 36256                           ;login.c: 173: senha[coluna] = '0';
 36257  3F93  3030               	movlw	48
 36258  3F94  2FA6               	goto	L63
 36259  3F95                     l17768:	
 36260                           ;login.c: 179: case 20:
 36261                           
 36262                           ;login.c: 177: break;
 36263                           
 36264                           ;login.c: 176: liberar_tecla(bt_a,0);
 36265                           
 36266                           ;login.c: 174: }
 36267                           ;login.c: 175: printTelaSenha(senha,coluna);
 36268                           
 36269                           
 36270                           ;login.c: 180: if(senha[coluna] > '0'){
 36271  3F95  0141               	movlb	1	; select bank1
 36272  3F96  0826               	movf	Autenticar@coluna^(0+128),w
 36273  3F97  3EA0               	addlw	(low (Autenticar@senha| 0))& (0+255)
 36274  3F98  0086               	movwf	6
 36275  3F99  0187               	clrf	7
 36276  3F9A  3031               	movlw	49
 36277  3F9B  0201               	subwf	1,w
 36278  3F9C  1C03               	skipc
 36279  3F9D  2FA5               	goto	l17772
 36280                           
 36281                           ;login.c: 181: senha[coluna]--;
 36282  3F9E  0826               	movf	Autenticar@coluna^(0+128),w
 36283  3F9F  3EA0               	addlw	(low (Autenticar@senha| 0))& (0+255)
 36284  3FA0  0086               	movwf	6
 36285  3FA1  0187               	clrf	7
 36286  3FA2  3001               	movlw	1
 36287  3FA3  0281               	subwf	1,f
 36288                           
 36289                           ;login.c: 182: }
 36290  3FA4  2FB0               	goto	l17774
 36291  3FA5                     l17772:	
 36292                           
 36293                           ;login.c: 183: else {
 36294                           ;login.c: 184: senha[coluna] = '9';
 36295  3FA5  3039               	movlw	57
 36296  3FA6                     L63:	
 36297  3FA6  0140               	movlb	0	; select bank0
 36298  3FA7  00D7               	movwf	??_Autenticar
 36299  3FA8  0141               	movlb	1	; select bank1
 36300  3FA9  0826               	movf	Autenticar@coluna^(0+128),w
 36301  3FAA  3EA0               	addlw	(low (Autenticar@senha| 0))& (0+255)
 36302  3FAB  0086               	movwf	6
 36303  3FAC  0187               	clrf	7
 36304  3FAD  0140               	movlb	0	; select bank0
 36305  3FAE  0857               	movf	??_Autenticar,w
 36306  3FAF  0081               	movwf	1
 36307  3FB0                     l17774:	
 36308                           
 36309                           ;login.c: 185: }
 36310                           ;login.c: 186: printTelaSenha(senha,coluna);
 36311  3FB0  0141               	movlb	1	; select bank1
 36312  3FB1  2FCD               	goto	l17794
 36313  3FB2                     l17778:	
 36314                           ;login.c: 190: case 34:
 36315                           
 36316                           ;login.c: 188: break;
 36317                           
 36318                           ;login.c: 187: liberar_tecla(bt_a,0);
 36319                           
 36320                           
 36321                           ;login.c: 191: if(coluna < 3){
 36322  3FB2  3003               	movlw	3
 36323  3FB3  0141               	movlb	1	; select bank1
 36324  3FB4  0226               	subwf	Autenticar@coluna^(0+128),w
 36325  3FB5  1803               	skipnc
 36326  3FB6  2FBE               	goto	l17782
 36327                           
 36328                           ;login.c: 192: coluna++;
 36329  3FB7  3001               	movlw	1
 36330  3FB8  0140               	movlb	0	; select bank0
 36331  3FB9  00D7               	movwf	??_Autenticar
 36332  3FBA  0857               	movf	??_Autenticar,w
 36333  3FBB  0141               	movlb	1	; select bank1
 36334  3FBC  07A6               	addwf	Autenticar@coluna^(0+128),f
 36335                           
 36336                           ;login.c: 193: }
 36337  3FBD  2FCD               	goto	l17794
 36338  3FBE                     l17782:	
 36339                           
 36340                           ;login.c: 194: else {
 36341                           ;login.c: 195: coluna = 0;
 36342  3FBE  01A6               	clrf	Autenticar@coluna^(0+128)
 36343  3FBF  2FCD               	goto	l17794
 36344  3FC0                     l17788:	
 36345                           ;login.c: 201: case 10:
 36346                           
 36347                           ;login.c: 199: break;
 36348                           
 36349                           ;login.c: 198: liberar_tecla(bt_a,0);
 36350                           
 36351                           ;login.c: 196: }
 36352                           ;login.c: 197: printTelaSenha(senha,coluna);
 36353                           
 36354                           
 36355                           ;login.c: 202: if(coluna > 0){
 36356  3FC0  0141               	movlb	1	; select bank1
 36357  3FC1  0826               	movf	Autenticar@coluna^(0+128),w
 36358  3FC2  1903               	btfsc	3,2
 36359  3FC3  2FC7               	goto	l17792
 36360                           
 36361                           ;login.c: 203: coluna--;
 36362  3FC4  3001               	movlw	1
 36363  3FC5  02A6               	subwf	Autenticar@coluna^(0+128),f
 36364                           
 36365                           ;login.c: 204: }
 36366  3FC6  2FCD               	goto	l17794
 36367  3FC7                     l17792:	
 36368                           
 36369                           ;login.c: 205: else {
 36370                           ;login.c: 206: coluna = 3;
 36371  3FC7  3003               	movlw	3
 36372  3FC8  0140               	movlb	0	; select bank0
 36373  3FC9  00D7               	movwf	??_Autenticar
 36374  3FCA  0857               	movf	??_Autenticar,w
 36375  3FCB  0141               	movlb	1	; select bank1
 36376  3FCC  00A6               	movwf	Autenticar@coluna^(0+128)
 36377  3FCD                     l17794:	
 36378                           
 36379                           ;login.c: 207: }
 36380                           ;login.c: 208: printTelaSenha(senha,coluna);
 36381  3FCD  0826               	movf	Autenticar@coluna^(0+128),w
 36382  3FCE  0140               	movlb	0	; select bank0
 36383  3FCF  00D7               	movwf	??_Autenticar
 36384  3FD0  0857               	movf	??_Autenticar,w
 36385  3FD1  00C9               	movwf	printTelaSenha@col
 36386  3FD2  30A0               	movlw	(low (Autenticar@senha| 0))& (0+255)
 36387  3FD3  31C9  21DA  31BF   	fcall	_printTelaSenha
 36388                           
 36389                           ;login.c: 209: liberar_tecla(bt_a,0);
 36390  3FD6  3000               	movlw	0
 36391  3FD7  0140               	movlb	0	; select bank0
 36392  3FD8  00B3               	movwf	liberar_tecla@t
 36393  3FD9  00B4               	movwf	liberar_tecla@t+1
 36394  3FDA  0141               	movlb	1	; select bank1
 36395  3FDB  0825               	movf	Autenticar@bt_a^(0+128),w
 36396  3FDC  31D7  2735  31BF   	fcall	_liberar_tecla
 36397  3FDF                     l17720:	
 36398                           ;login.c: 143: do{
 36399                           
 36400                           ;login.c: 211: }
 36401                           
 36402                           ;login.c: 210: break;
 36403                           
 36404                           
 36405                           ;login.c: 144: bt_a = teclado();
 36406  3FDF  31C2  22CC  31BF   	fcall	_teclado
 36407  3FE2  0140               	movlb	0	; select bank0
 36408  3FE3  00D7               	movwf	??_Autenticar
 36409  3FE4  0857               	movf	??_Autenticar,w
 36410  3FE5  0141               	movlb	1	; select bank1
 36411  3FE6  00A5               	movwf	Autenticar@bt_a^(0+128)
 36412  3FE7  0141               	movlb	1	; select bank1
 36413  3FE8  0825               	movf	Autenticar@bt_a^(0+128),w
 36414                           
 36415                           ; Switch size 1, requested type "space"
 36416                           ; Number of cases is 7, Range of values is 9 to 34
 36417                           ; switch strategies available:
 36418                           ; Name         Instructions Cycles
 36419                           ; simple_byte           22    12 (average)
 36420                           ; direct_byte           61     9 (fixed)
 36421                           ; jumptable            263     9 (fixed)
 36422                           ;	Chosen strategy is simple_byte
 36423  3FE9  3A09               	xorlw	9	; case 9
 36424  3FEA  1903               	skipnz
 36425  3FEB  2F41               	goto	l17722
 36426  3FEC  3A03               	xorlw	3	; case 10
 36427  3FED  1903               	skipnz
 36428  3FEE  2FC0               	goto	l17788
 36429  3FEF  3A1B               	xorlw	27	; case 17
 36430  3FF0  1903               	skipnz
 36431  3FF1  2F7E               	goto	l17758
 36432  3FF2  3A03               	xorlw	3	; case 18
 36433  3FF3  1903               	skipnz
 36434  3FF4  2F6A               	goto	l17744
 36435  3FF5  3A06               	xorlw	6	; case 20
 36436  3FF6  1903               	skipnz
 36437  3FF7  2F95               	goto	l17768
 36438  3FF8  3A35               	xorlw	53	; case 33
 36439  3FF9  1903               	skipnz
 36440  3FFA  2F4B               	goto	l17728
 36441  3FFB  3A03               	xorlw	3	; case 34
 36442  3FFC  1903               	skipnz
 36443  3FFD  2FB2               	goto	l17778
 36444  3FFE  2FDF               	goto	l17720
 36445                           
 36446                           ;login.c: 212: }while(1);
 36447  3FFF  2FDF               	goto	l17720
 36448  4000                     __end_of_Autenticar:	
 36449                           ;login.c: 214: return 0;
 36450                           
 36451                           
 36452                           	psect	text114
 36453  5428                     __ptext114:	
 36454 ;; *************** function _verifSenhas *****************
 36455 ;; Defined at:
 36456 ;;		line 123 in file "login.c"
 36457 ;; Parameters:    Size  Location     Type
 36458 ;;  sh              1    wreg     PTR unsigned char 
 36459 ;;		 -> Autenticar@senha(5), 
 36460 ;; Auto vars:     Size  Location     Type
 36461 ;;  sh              1   16[BANK0 ] PTR unsigned char 
 36462 ;;		 -> Autenticar@senha(5), 
 36463 ;; Return value:  Size  Location     Type
 36464 ;;                  1    wreg      unsigned char 
 36465 ;; Registers used:
 36466 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 36467 ;; Tracked objects:
 36468 ;;		On entry : 0/0
 36469 ;;		On exit  : 0/0
 36470 ;;		Unchanged: 0/0
 36471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36473 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36475 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36476 ;;Total ram usage:        1 bytes
 36477 ;; Hardware stack levels used:    1
 36478 ;; Hardware stack levels required when called:    4
 36479 ;; This function calls:
 36480 ;;		_strcmp
 36481 ;; This function is called by:
 36482 ;;		_Autenticar
 36483 ;; This function uses a non-reentrant model
 36484 ;;
 36485                           
 36486                           
 36487                           ;psect for function _verifSenhas
 36488  5428                     _verifSenhas:	
 36489                           
 36490                           ;incstack = 0
 36491                           ; Regs used in _verifSenhas: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 36492                           ;verifSenhas@sh stored from wreg
 36493  5428  0140               	movlb	0	; select bank0
 36494  5429  00B0               	movwf	verifSenhas@sh
 36495                           
 36496                           ;login.c: 124: if((strcmp(sh,senha_padrao) == 0) || (strcmp(sh,senha_gerador) == 0)|| (s
      +                          trcmp(sh,senha_user) == 0))
 36497  542A  30D3               	movlw	low (_senha_padrao| (0+32768))
 36498  542B  00AB               	movwf	strcmp@s2
 36499  542C  30E0               	movlw	high (_senha_padrao| (0+32768))
 36500  542D  00AC               	movwf	strcmp@s2+1
 36501  542E  0830               	movf	verifSenhas@sh,w
 36502  542F  31D3  2331  31D4   	fcall	_strcmp
 36503  5432  0140               	movlb	0	; select bank0
 36504  5433  082B               	movf	?_strcmp,w
 36505  5434  042C               	iorwf	?_strcmp+1,w
 36506  5435  1903               	btfsc	3,2
 36507  5436  2C51               	goto	l17148
 36508  5437  30DC               	movlw	low _senha_gerador
 36509  5438  00AB               	movwf	strcmp@s2
 36510  5439  3002               	movlw	high _senha_gerador
 36511  543A  00AC               	movwf	strcmp@s2+1
 36512  543B  0830               	movf	verifSenhas@sh,w
 36513  543C  31D3  2331  31D4   	fcall	_strcmp
 36514  543F  0140               	movlb	0	; select bank0
 36515  5440  082B               	movf	?_strcmp,w
 36516  5441  042C               	iorwf	?_strcmp+1,w
 36517  5442  1903               	btfsc	3,2
 36518  5443  2C51               	goto	l17148
 36519  5444  30D7               	movlw	low _senha_user
 36520  5445  00AB               	movwf	strcmp@s2
 36521  5446  3002               	movlw	high _senha_user
 36522  5447  00AC               	movwf	strcmp@s2+1
 36523  5448  0830               	movf	verifSenhas@sh,w
 36524  5449  31D3  2331  31D4   	fcall	_strcmp
 36525  544C  0140               	movlb	0	; select bank0
 36526  544D  082B               	movf	?_strcmp,w
 36527  544E  042C               	iorwf	?_strcmp+1,w
 36528  544F  1D03               	btfss	3,2
 36529  5450  2C53               	goto	l17152
 36530  5451                     l17148:	
 36531                           
 36532                           ;login.c: 125: return 1;
 36533  5451  3001               	movlw	1
 36534  5452  0008               	return
 36535  5453                     l17152:	
 36536                           
 36537                           ;login.c: 126: return 0;
 36538  5453  3000               	movlw	0
 36539  5454  0008               	return
 36540  5455                     __end_of_verifSenhas:	
 36541                           
 36542                           	psect	text115
 36543  5331                     __ptext115:	
 36544 ;; *************** function _strcmp *****************
 36545 ;; Defined at:
 36546 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 36547 ;; Parameters:    Size  Location     Type
 36548 ;;  s1              1    wreg     PTR const unsigned char 
 36549 ;;		 -> Autenticar@senha(5), 
 36550 ;;  s2              2   11[BANK0 ] PTR const unsigned char 
 36551 ;;		 -> senha_padrao(5), senha_gerador(5), senha_user(5), 
 36552 ;; Auto vars:     Size  Location     Type
 36553 ;;  s1              1   15[BANK0 ] PTR const unsigned char 
 36554 ;;		 -> Autenticar@senha(5), 
 36555 ;;  r               1   14[BANK0 ] char 
 36556 ;; Return value:  Size  Location     Type
 36557 ;;                  2   11[BANK0 ] int 
 36558 ;; Registers used:
 36559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 36560 ;; Tracked objects:
 36561 ;;		On entry : 0/0
 36562 ;;		On exit  : 0/0
 36563 ;;		Unchanged: 0/0
 36564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36565 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36566 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36568 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36569 ;;Total ram usage:        5 bytes
 36570 ;; Hardware stack levels used:    1
 36571 ;; Hardware stack levels required when called:    3
 36572 ;; This function calls:
 36573 ;;		Nothing
 36574 ;; This function is called by:
 36575 ;;		_verifSenhas
 36576 ;; This function uses a non-reentrant model
 36577 ;;
 36578                           
 36579                           
 36580                           ;psect for function _strcmp
 36581  5331                     _strcmp:	
 36582                           
 36583                           ;incstack = 0
 36584                           ; Regs used in _strcmp: [wreg-fsr1h+status,2+status,0+pclath]
 36585                           ;strcmp@s1 stored from wreg
 36586  5331  0140               	movlb	0	; select bank0
 36587  5332  00AF               	movwf	strcmp@s1
 36588  5333  2B3C               	goto	l15812
 36589  5334                     l15810:	
 36590  5334  3001               	movlw	1
 36591  5335  00AD               	movwf	??_strcmp
 36592  5336  082D               	movf	??_strcmp,w
 36593  5337  07AF               	addwf	strcmp@s1,f
 36594  5338  3001               	movlw	1
 36595  5339  07AB               	addwf	strcmp@s2,f
 36596  533A  3000               	movlw	0
 36597  533B  3DAC               	addwfc	strcmp@s2+1,f
 36598  533C                     l15812:	
 36599  533C  082F               	movf	strcmp@s1,w
 36600  533D  0086               	movwf	6
 36601  533E  0187               	clrf	7
 36602  533F  082B               	movf	strcmp@s2,w
 36603  5340  0084               	movwf	4
 36604  5341  082C               	movf	strcmp@s2+1,w
 36605  5342  0085               	movwf	5
 36606  5343  0800               	movf	0,w	;code access
 36607  5344  3AFF               	xorlw	255
 36608  5345  3E01               	addlw	1
 36609  5346  0701               	addwf	1,w
 36610  5347  00AD               	movwf	??_strcmp
 36611  5348  082D               	movf	??_strcmp,w
 36612  5349  00AE               	movwf	strcmp@r
 36613  534A  082E               	movf	strcmp@r,w
 36614  534B  1D03               	btfss	3,2
 36615  534C  2B53               	goto	l15816
 36616  534D  082F               	movf	strcmp@s1,w
 36617  534E  0086               	movwf	6
 36618  534F  0187               	clrf	7
 36619  5350  0801               	movf	1,w
 36620  5351  1D03               	btfss	3,2
 36621  5352  2B34               	goto	l15810
 36622  5353                     l15816:	
 36623  5353  082E               	movf	strcmp@r,w
 36624  5354  00AB               	movwf	?_strcmp
 36625  5355  01AC               	clrf	?_strcmp+1
 36626  5356  1BAB               	btfsc	?_strcmp,7
 36627  5357  03AC               	decf	?_strcmp+1,f
 36628  5358  0008               	return
 36629  5359                     __end_of_strcmp:	
 36630                           
 36631                           	psect	text116
 36632  49DA                     __ptext116:	
 36633 ;; *************** function _printTelaSenha *****************
 36634 ;; Defined at:
 36635 ;;		line 32 in file "login.c"
 36636 ;; Parameters:    Size  Location     Type
 36637 ;;  s               1    wreg     PTR unsigned char 
 36638 ;;		 -> Autenticar@senha(5), 
 36639 ;;  col             1   41[BANK0 ] unsigned char 
 36640 ;; Auto vars:     Size  Location     Type
 36641 ;;  s               1   46[BANK0 ] PTR unsigned char 
 36642 ;;		 -> Autenticar@senha(5), 
 36643 ;; Return value:  Size  Location     Type
 36644 ;;                  1    wreg      void 
 36645 ;; Registers used:
 36646 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 36647 ;; Tracked objects:
 36648 ;;		On entry : 0/0
 36649 ;;		On exit  : 0/0
 36650 ;;		Unchanged: 0/0
 36651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36652 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36654 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36655 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36656 ;;Total ram usage:        6 bytes
 36657 ;; Hardware stack levels used:    1
 36658 ;; Hardware stack levels required when called:    7
 36659 ;; This function calls:
 36660 ;;		_Lcd_Clear
 36661 ;;		_Lcd_Write_String
 36662 ;;		___wmul
 36663 ;;		_escreve_LCD
 36664 ;;		_sprintf
 36665 ;; This function is called by:
 36666 ;;		_Autenticar
 36667 ;; This function uses a non-reentrant model
 36668 ;;
 36669                           
 36670                           
 36671                           ;psect for function _printTelaSenha
 36672  49DA                     _printTelaSenha:	
 36673                           
 36674                           ;incstack = 0
 36675                           ; Regs used in _printTelaSenha: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 36676                           ;printTelaSenha@s stored from wreg
 36677  49DA  0140               	movlb	0	; select bank0
 36678  49DB  00CE               	movwf	printTelaSenha@s
 36679                           
 36680                           ;login.c: 33: Lcd_Clear();
 36681  49DC  31E1  21DF  31C9   	fcall	_Lcd_Clear
 36682                           
 36683                           ;login.c: 34: escreve_LCD(1,1,menu_senha_str[idioma]);
 36684  49DF  0140               	movlb	0	; select bank0
 36685  49E0  01B5               	clrf	escreve_LCD@coluna
 36686  49E1  0AB5               	incf	escreve_LCD@coluna,f
 36687  49E2  0143               	movlb	3	; select bank3
 36688  49E3  085A               	movf	_idioma^(0+384),w
 36689  49E4  0140               	movlb	0	; select bank0
 36690  49E5  00CA               	movwf	??_printTelaSenha
 36691  49E6  01CB               	clrf	??_printTelaSenha+1
 36692  49E7  084A               	movf	??_printTelaSenha,w
 36693  49E8  00AB               	movwf	___wmul@multiplier
 36694  49E9  084B               	movf	??_printTelaSenha+1,w
 36695  49EA  00AC               	movwf	___wmul@multiplier+1
 36696  49EB  3011               	movlw	17
 36697  49EC  00AD               	movwf	___wmul@multiplicand
 36698  49ED  3000               	movlw	0
 36699  49EE  00AE               	movwf	___wmul@multiplicand+1
 36700  49EF  31D0  20FE  31C9   	fcall	___wmul
 36701  49F2  3018               	movlw	low (_menu_senha_str| (0+32768))
 36702  49F3  0140               	movlb	0	; select bank0
 36703  49F4  00CC               	movwf	??_printTelaSenha+2
 36704  49F5  30DA               	movlw	high (_menu_senha_str| (0+32768))
 36705  49F6  00CD               	movwf	??_printTelaSenha+3
 36706  49F7  082B               	movf	?___wmul,w
 36707  49F8  074C               	addwf	??_printTelaSenha+2,w
 36708  49F9  00B6               	movwf	escreve_LCD@str
 36709  49FA  082C               	movf	?___wmul+1,w
 36710  49FB  3D4D               	addwfc	??_printTelaSenha+3,w
 36711  49FC  00B7               	movwf	escreve_LCD@str+1
 36712  49FD  3001               	movlw	1
 36713  49FE  31E7  27C1  31C9   	fcall	_escreve_LCD
 36714                           
 36715                           ;login.c: 35: sprintf(str, "-%i:",col+1);
 36716  4A01  305C               	movlw	low _str
 36717  4A02  0140               	movlb	0	; select bank0
 36718  4A03  00B9               	movwf	sprintf@sp
 36719  4A04  3002               	movlw	high _str
 36720  4A05  00BA               	movwf	sprintf@sp+1
 36721  4A06  30EC               	movlw	low (STR_50| (0+32768))
 36722  4A07  00BB               	movwf	sprintf@f
 36723  4A08  30E8               	movlw	high (STR_50| (0+32768))
 36724  4A09  00BC               	movwf	sprintf@f+1
 36725  4A0A  0849               	movf	printTelaSenha@col,w
 36726  4A0B  3E01               	addlw	1
 36727  4A0C  00BD               	movwf	?_sprintf+4
 36728  4A0D  3000               	movlw	0
 36729  4A0E  1803               	skipnc
 36730  4A0F  3001               	movlw	1
 36731  4A10  00BE               	movwf	?_sprintf+5
 36732  4A11  31BB  23C4  31C9   	fcall	_sprintf
 36733                           
 36734                           ;login.c: 36: Lcd_Write_String(str);
 36735  4A14  305C               	movlw	low _str
 36736  4A15  0140               	movlb	0	; select bank0
 36737  4A16  00B0               	movwf	Lcd_Write_String@a
 36738  4A17  3002               	movlw	high _str
 36739  4A18  00B1               	movwf	Lcd_Write_String@a+1
 36740  4A19  31D1  2171  31C9   	fcall	_Lcd_Write_String
 36741                           
 36742                           ;login.c: 37: escreve_LCD(2,1,s);
 36743  4A1C  0140               	movlb	0	; select bank0
 36744  4A1D  01B5               	clrf	escreve_LCD@coluna
 36745  4A1E  0AB5               	incf	escreve_LCD@coluna,f
 36746  4A1F  084E               	movf	printTelaSenha@s,w
 36747  4A20  00B6               	movwf	escreve_LCD@str
 36748  4A21  3000               	movlw	0
 36749  4A22  00B7               	movwf	escreve_LCD@str+1
 36750  4A23  3002               	movlw	2
 36751  4A24  31E7  27C1         	fcall	_escreve_LCD
 36752  4A26  0008               	return
 36753  4A27                     __end_of_printTelaSenha:	
 36754                           
 36755                           	psect	text117
 36756  52BE                     __ptext117:	
 36757 ;; *************** function _LoadSenhaGerador *****************
 36758 ;; Defined at:
 36759 ;;		line 17 in file "login.c"
 36760 ;; Parameters:    Size  Location     Type
 36761 ;;		None
 36762 ;; Auto vars:     Size  Location     Type
 36763 ;;		None
 36764 ;; Return value:  Size  Location     Type
 36765 ;;                  1    wreg      void 
 36766 ;; Registers used:
 36767 ;;		wreg, status,2, pclath, cstack
 36768 ;; Tracked objects:
 36769 ;;		On entry : 0/0
 36770 ;;		On exit  : 0/0
 36771 ;;		Unchanged: 0/0
 36772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36775 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36776 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36777 ;;Total ram usage:        1 bytes
 36778 ;; Hardware stack levels used:    1
 36779 ;; Hardware stack levels required when called:    4
 36780 ;; This function calls:
 36781 ;;		_eeprom_read
 36782 ;; This function is called by:
 36783 ;;		_Autenticar
 36784 ;; This function uses a non-reentrant model
 36785 ;;
 36786                           
 36787                           
 36788                           ;psect for function _LoadSenhaGerador
 36789  52BE                     _LoadSenhaGerador:	
 36790                           
 36791                           ;login.c: 25: senha_gerador[0] = eeprom_read(234);
 36792                           
 36793                           ;incstack = 0
 36794                           ; Regs used in _LoadSenhaGerador: [wreg+status,2+pclath+cstack]
 36795  52BE  30EA               	movlw	234
 36796  52BF  31E1  2112  31D2   	fcall	_eeprom_read
 36797  52C2  0140               	movlb	0	; select bank0
 36798  52C3  00AC               	movwf	??_LoadSenhaGerador
 36799  52C4  082C               	movf	??_LoadSenhaGerador,w
 36800  52C5  0145               	movlb	5	; select bank5
 36801  52C6  00DC               	movwf	_senha_gerador^(0+640)
 36802                           
 36803                           ;login.c: 26: senha_gerador[1] = eeprom_read(235);
 36804  52C7  30EB               	movlw	235
 36805  52C8  31E1  2112  31D2   	fcall	_eeprom_read
 36806  52CB  0140               	movlb	0	; select bank0
 36807  52CC  00AC               	movwf	??_LoadSenhaGerador
 36808  52CD  082C               	movf	??_LoadSenhaGerador,w
 36809  52CE  0145               	movlb	5	; select bank5
 36810  52CF  00DD               	movwf	(_senha_gerador^(0+640)+1)
 36811                           
 36812                           ;login.c: 27: senha_gerador[2] = eeprom_read(236);
 36813  52D0  30EC               	movlw	236
 36814  52D1  31E1  2112  31D2   	fcall	_eeprom_read
 36815  52D4  0140               	movlb	0	; select bank0
 36816  52D5  00AC               	movwf	??_LoadSenhaGerador
 36817  52D6  082C               	movf	??_LoadSenhaGerador,w
 36818  52D7  0145               	movlb	5	; select bank5
 36819  52D8  00DE               	movwf	(_senha_gerador^(0+640)+2)
 36820                           
 36821                           ;login.c: 28: senha_gerador[3] = eeprom_read(237);
 36822  52D9  30ED               	movlw	237
 36823  52DA  31E1  2112         	fcall	_eeprom_read
 36824  52DC  0140               	movlb	0	; select bank0
 36825  52DD  00AC               	movwf	??_LoadSenhaGerador
 36826  52DE  082C               	movf	??_LoadSenhaGerador,w
 36827  52DF  0145               	movlb	5	; select bank5
 36828  52E0  00DF               	movwf	(_senha_gerador^(0+640)+3)
 36829                           
 36830                           ;login.c: 29: senha_gerador[4] = 0;
 36831  52E1  01E0               	clrf	(_senha_gerador^(0+640)+4)
 36832  52E2  0008               	return
 36833  52E3                     __end_of_LoadSenhaGerador:	
 36834                           
 36835                           	psect	text118
 36836  3AFA                     __ptext118:	
 36837 ;; *************** function _EditSenhaUser *****************
 36838 ;; Defined at:
 36839 ;;		line 50 in file "login.c"
 36840 ;; Parameters:    Size  Location     Type
 36841 ;;		None
 36842 ;; Auto vars:     Size  Location     Type
 36843 ;;  senha           5   48[BANK0 ] unsigned char [5]
 36844 ;;  coluna          1   54[BANK0 ] unsigned char 
 36845 ;;  bt_a            1   53[BANK0 ] unsigned char 
 36846 ;; Return value:  Size  Location     Type
 36847 ;;                  1    wreg      void 
 36848 ;; Registers used:
 36849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 36850 ;; Tracked objects:
 36851 ;;		On entry : 0/0
 36852 ;;		On exit  : 0/0
 36853 ;;		Unchanged: 0/0
 36854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 36855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36856 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36857 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36858 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 36859 ;;Total ram usage:        8 bytes
 36860 ;; Hardware stack levels used:    1
 36861 ;; Hardware stack levels required when called:    8
 36862 ;; This function calls:
 36863 ;;		_LoadSenhaUser
 36864 ;;		_eeprom_write
 36865 ;;		_liberar_tecla
 36866 ;;		_printTelaEditarSenha
 36867 ;;		_sprintf
 36868 ;;		_teclado
 36869 ;; This function is called by:
 36870 ;;		_Autenticar
 36871 ;; This function uses a non-reentrant model
 36872 ;;
 36873                           
 36874                           
 36875                           ;psect for function _EditSenhaUser
 36876  3AFA                     _EditSenhaUser:	
 36877                           
 36878                           ;login.c: 51: char senha[5];
 36879                           ;login.c: 52: char coluna = 0;
 36880                           
 36881                           ;incstack = 0
 36882                           ; Regs used in _EditSenhaUser: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 36883  3AFA  0140               	movlb	0	; select bank0
 36884  3AFB  01D6               	clrf	EditSenhaUser@coluna
 36885                           
 36886                           ;login.c: 53: char bt_a;
 36887                           ;login.c: 55: LoadSenhaUser();
 36888  3AFC  31D2  2274  31BA   	fcall	_LoadSenhaUser
 36889                           
 36890                           ;login.c: 56: sprintf(senha,senha_user);
 36891  3AFF  3050               	movlw	low EditSenhaUser@senha
 36892  3B00  0140               	movlb	0	; select bank0
 36893  3B01  00B9               	movwf	sprintf@sp
 36894  3B02  3000               	movlw	high EditSenhaUser@senha
 36895  3B03  00BA               	movwf	sprintf@sp+1
 36896  3B04  30D7               	movlw	low _senha_user
 36897  3B05  00BB               	movwf	sprintf@f
 36898  3B06  3002               	movlw	high _senha_user
 36899  3B07  00BC               	movwf	sprintf@f+1
 36900  3B08  31BB  23C4  31BA   	fcall	_sprintf
 36901                           
 36902                           ;login.c: 57: printTelaEditarSenha(senha,coluna);
 36903  3B0B  0140               	movlb	0	; select bank0
 36904  3B0C  0856               	movf	EditSenhaUser@coluna,w
 36905  3B0D  00CF               	movwf	??_EditSenhaUser
 36906  3B0E  084F               	movf	??_EditSenhaUser,w
 36907  3B0F  00C9               	movwf	printTelaEditarSenha@col
 36908  3B10  3050               	movlw	(low (EditSenhaUser@senha| 0))& (0+255)
 36909  3B11  31C9  218D  31BA   	fcall	_printTelaEditarSenha
 36910                           
 36911                           ;login.c: 61: switch(bt_a){
 36912  3B14  2BA7               	goto	l17076
 36913  3B15                     l17078:	
 36914                           ;login.c: 62: case 9:
 36915                           
 36916                           
 36917                           ;login.c: 63: liberar_tecla(bt_a,0);
 36918  3B15  3000               	movlw	0
 36919  3B16  00B3               	movwf	liberar_tecla@t
 36920  3B17  00B4               	movwf	liberar_tecla@t+1
 36921  3B18  0855               	movf	EditSenhaUser@bt_a,w
 36922  3B19  31D7  2735         	fcall	_liberar_tecla
 36923                           
 36924                           ;login.c: 64: return;
 36925  3B1B  0008               	return
 36926  3B1C                     l17082:	
 36927                           ;login.c: 66: case 18:
 36928                           
 36929                           
 36930                           ;login.c: 67: liberar_tecla(bt_a,0);
 36931  3B1C  3000               	movlw	0
 36932  3B1D  0140               	movlb	0	; select bank0
 36933  3B1E  00B3               	movwf	liberar_tecla@t
 36934  3B1F  00B4               	movwf	liberar_tecla@t+1
 36935  3B20  0855               	movf	EditSenhaUser@bt_a,w
 36936  3B21  31D7  2735  31BA   	fcall	_liberar_tecla
 36937                           
 36938                           ;login.c: 68: sprintf(senha_user,senha);
 36939  3B24  30D7               	movlw	low _senha_user
 36940  3B25  0140               	movlb	0	; select bank0
 36941  3B26  00B9               	movwf	sprintf@sp
 36942  3B27  3002               	movlw	high _senha_user
 36943  3B28  00BA               	movwf	sprintf@sp+1
 36944  3B29  3050               	movlw	low EditSenhaUser@senha
 36945  3B2A  00BB               	movwf	sprintf@f
 36946  3B2B  3000               	movlw	high EditSenhaUser@senha
 36947  3B2C  00BC               	movwf	sprintf@f+1
 36948  3B2D  31BB  23C4  31BA   	fcall	_sprintf
 36949                           
 36950                           ;login.c: 69: eeprom_write(230,senha[0]);
 36951  3B30  0140               	movlb	0	; select bank0
 36952  3B31  0850               	movf	EditSenhaUser@senha,w
 36953  3B32  00CF               	movwf	??_EditSenhaUser
 36954  3B33  084F               	movf	??_EditSenhaUser,w
 36955  3B34  00AB               	movwf	eeprom_write@value
 36956  3B35  30E6               	movlw	230
 36957  3B36  31D2  2299  31BA   	fcall	_eeprom_write
 36958                           
 36959                           ;login.c: 70: eeprom_write(231,senha[1]);
 36960  3B39  0140               	movlb	0	; select bank0
 36961  3B3A  0851               	movf	EditSenhaUser@senha+1,w
 36962  3B3B  00CF               	movwf	??_EditSenhaUser
 36963  3B3C  084F               	movf	??_EditSenhaUser,w
 36964  3B3D  00AB               	movwf	eeprom_write@value
 36965  3B3E  30E7               	movlw	231
 36966  3B3F  31D2  2299  31BA   	fcall	_eeprom_write
 36967                           
 36968                           ;login.c: 71: eeprom_write(232,senha[2]);
 36969  3B42  0140               	movlb	0	; select bank0
 36970  3B43  0852               	movf	EditSenhaUser@senha+2,w
 36971  3B44  00CF               	movwf	??_EditSenhaUser
 36972  3B45  084F               	movf	??_EditSenhaUser,w
 36973  3B46  00AB               	movwf	eeprom_write@value
 36974  3B47  30E8               	movlw	232
 36975  3B48  31D2  2299  31BA   	fcall	_eeprom_write
 36976                           
 36977                           ;login.c: 72: eeprom_write(233,senha[3]);
 36978  3B4B  0140               	movlb	0	; select bank0
 36979  3B4C  0853               	movf	EditSenhaUser@senha+3,w
 36980  3B4D  00CF               	movwf	??_EditSenhaUser
 36981  3B4E  084F               	movf	??_EditSenhaUser,w
 36982  3B4F  00AB               	movwf	eeprom_write@value
 36983  3B50  30E9               	movlw	233
 36984  3B51  31D2  2299         	fcall	_eeprom_write
 36985                           
 36986                           ;login.c: 73: senha[4] = 0;
 36987  3B53  0140               	movlb	0	; select bank0
 36988  3B54  01D4               	clrf	EditSenhaUser@senha+4
 36989                           
 36990                           ;login.c: 74: return;
 36991  3B55  0008               	return
 36992  3B56                     l17098:	
 36993                           ;login.c: 76: case 17:
 36994                           
 36995                           
 36996                           ;login.c: 77: if(senha[coluna] < '9'){
 36997  3B56  0856               	movf	EditSenhaUser@coluna,w
 36998  3B57  3E50               	addlw	(low (EditSenhaUser@senha| 0))& (0+255)
 36999  3B58  0086               	movwf	6
 37000  3B59  0187               	clrf	7
 37001  3B5A  3039               	movlw	57
 37002  3B5B  0201               	subwf	1,w
 37003  3B5C  1803               	skipnc
 37004  3B5D  2B77               	goto	l17112
 37005                           
 37006                           ;login.c: 78: senha[coluna]++;
 37007  3B5E  3001               	movlw	1
 37008  3B5F  00CF               	movwf	??_EditSenhaUser
 37009  3B60  0856               	movf	EditSenhaUser@coluna,w
 37010  3B61  3E50               	addlw	(low (EditSenhaUser@senha| 0))& (0+255)
 37011  3B62  0086               	movwf	6
 37012  3B63  0187               	clrf	7
 37013  3B64  084F               	movf	??_EditSenhaUser,w
 37014  3B65  0781               	addwf	1,f
 37015  3B66  2B97               	goto	l17134
 37016  3B67                     l17108:	
 37017                           ;login.c: 87: case 20:
 37018                           
 37019                           ;login.c: 85: break;
 37020                           
 37021                           ;login.c: 84: liberar_tecla(bt_a,0);
 37022                           
 37023                           ;login.c: 82: }
 37024                           ;login.c: 83: printTelaEditarSenha(senha,coluna);
 37025                           
 37026                           ;login.c: 80: else {
 37027                           ;login.c: 81: senha[coluna] = '0';
 37028                           
 37029                           ;login.c: 79: }
 37030                           
 37031                           
 37032                           ;login.c: 88: if(senha[coluna] > '0'){
 37033  3B67  0140               	movlb	0	; select bank0
 37034  3B68  0856               	movf	EditSenhaUser@coluna,w
 37035  3B69  3E50               	addlw	(low (EditSenhaUser@senha| 0))& (0+255)
 37036  3B6A  0086               	movwf	6
 37037  3B6B  0187               	clrf	7
 37038  3B6C  3031               	movlw	49
 37039  3B6D  0201               	subwf	1,w
 37040  3B6E  1C03               	skipc
 37041  3B6F  2B77               	goto	l17112
 37042                           
 37043                           ;login.c: 89: senha[coluna]--;
 37044  3B70  0856               	movf	EditSenhaUser@coluna,w
 37045  3B71  3E50               	addlw	(low (EditSenhaUser@senha| 0))& (0+255)
 37046  3B72  0086               	movwf	6
 37047  3B73  0187               	clrf	7
 37048  3B74  3001               	movlw	1
 37049  3B75  0281               	subwf	1,f
 37050                           
 37051                           ;login.c: 90: }
 37052  3B76  2B97               	goto	l17134
 37053  3B77                     l17112:	
 37054                           
 37055                           ;login.c: 91: else {
 37056                           ;login.c: 92: senha[coluna] = '0';
 37057  3B77  3030               	movlw	48
 37058  3B78  00CF               	movwf	??_EditSenhaUser
 37059  3B79  0856               	movf	EditSenhaUser@coluna,w
 37060  3B7A  3E50               	addlw	(low (EditSenhaUser@senha| 0))& (0+255)
 37061  3B7B  0086               	movwf	6
 37062  3B7C  0187               	clrf	7
 37063  3B7D  084F               	movf	??_EditSenhaUser,w
 37064  3B7E  0081               	movwf	1
 37065  3B7F  2B97               	goto	l17134
 37066  3B80                     l17118:	
 37067                           ;login.c: 98: case 34:
 37068                           
 37069                           ;login.c: 96: break;
 37070                           
 37071                           ;login.c: 95: liberar_tecla(bt_a,0);
 37072                           
 37073                           ;login.c: 93: }
 37074                           ;login.c: 94: printTelaEditarSenha(senha,coluna);
 37075                           
 37076                           
 37077                           ;login.c: 99: if(coluna < 3){
 37078  3B80  3003               	movlw	3
 37079  3B81  0140               	movlb	0	; select bank0
 37080  3B82  0256               	subwf	EditSenhaUser@coluna,w
 37081  3B83  1803               	skipnc
 37082  3B84  2B8A               	goto	l17122
 37083                           
 37084                           ;login.c: 100: coluna++;
 37085  3B85  3001               	movlw	1
 37086  3B86  00CF               	movwf	??_EditSenhaUser
 37087  3B87  084F               	movf	??_EditSenhaUser,w
 37088  3B88  07D6               	addwf	EditSenhaUser@coluna,f
 37089                           
 37090                           ;login.c: 101: }
 37091  3B89  2B97               	goto	l17134
 37092  3B8A                     l17122:	
 37093                           
 37094                           ;login.c: 102: else {
 37095                           ;login.c: 103: coluna = 0;
 37096  3B8A  01D6               	clrf	EditSenhaUser@coluna
 37097  3B8B  2B97               	goto	l17134
 37098  3B8C                     l17128:	
 37099                           ;login.c: 109: case 10:
 37100                           
 37101                           ;login.c: 107: break;
 37102                           
 37103                           ;login.c: 106: liberar_tecla(bt_a,0);
 37104                           
 37105                           ;login.c: 104: }
 37106                           ;login.c: 105: printTelaEditarSenha(senha,coluna);
 37107                           
 37108                           
 37109                           ;login.c: 110: if(coluna > 0){
 37110  3B8C  0140               	movlb	0	; select bank0
 37111  3B8D  0856               	movf	EditSenhaUser@coluna,w
 37112  3B8E  1903               	btfsc	3,2
 37113  3B8F  2B93               	goto	l17132
 37114                           
 37115                           ;login.c: 111: coluna--;
 37116  3B90  3001               	movlw	1
 37117  3B91  02D6               	subwf	EditSenhaUser@coluna,f
 37118                           
 37119                           ;login.c: 112: }
 37120  3B92  2B97               	goto	l17134
 37121  3B93                     l17132:	
 37122                           
 37123                           ;login.c: 113: else {
 37124                           ;login.c: 114: coluna = 3;
 37125  3B93  3003               	movlw	3
 37126  3B94  00CF               	movwf	??_EditSenhaUser
 37127  3B95  084F               	movf	??_EditSenhaUser,w
 37128  3B96  00D6               	movwf	EditSenhaUser@coluna
 37129  3B97                     l17134:	
 37130                           
 37131                           ;login.c: 115: }
 37132                           ;login.c: 116: printTelaEditarSenha(senha,coluna);
 37133  3B97  0856               	movf	EditSenhaUser@coluna,w
 37134  3B98  00CF               	movwf	??_EditSenhaUser
 37135  3B99  084F               	movf	??_EditSenhaUser,w
 37136  3B9A  00C9               	movwf	printTelaEditarSenha@col
 37137  3B9B  3050               	movlw	(low (EditSenhaUser@senha| 0))& (0+255)
 37138  3B9C  31C9  218D  31BA   	fcall	_printTelaEditarSenha
 37139                           
 37140                           ;login.c: 117: liberar_tecla(bt_a,0);
 37141  3B9F  3000               	movlw	0
 37142  3BA0  0140               	movlb	0	; select bank0
 37143  3BA1  00B3               	movwf	liberar_tecla@t
 37144  3BA2  00B4               	movwf	liberar_tecla@t+1
 37145  3BA3  0855               	movf	EditSenhaUser@bt_a,w
 37146  3BA4  31D7  2735  31BA   	fcall	_liberar_tecla
 37147  3BA7                     l17076:	
 37148                           ;login.c: 59: do{
 37149                           
 37150                           ;login.c: 119: }
 37151                           
 37152                           ;login.c: 118: break;
 37153                           
 37154                           
 37155                           ;login.c: 60: bt_a = teclado();
 37156  3BA7  31C2  22CC  31BA   	fcall	_teclado
 37157  3BAA  0140               	movlb	0	; select bank0
 37158  3BAB  00CF               	movwf	??_EditSenhaUser
 37159  3BAC  084F               	movf	??_EditSenhaUser,w
 37160  3BAD  00D5               	movwf	EditSenhaUser@bt_a
 37161  3BAE  0140               	movlb	0	; select bank0
 37162  3BAF  0855               	movf	EditSenhaUser@bt_a,w
 37163                           
 37164                           ; Switch size 1, requested type "space"
 37165                           ; Number of cases is 6, Range of values is 9 to 34
 37166                           ; switch strategies available:
 37167                           ; Name         Instructions Cycles
 37168                           ; simple_byte           19    10 (average)
 37169                           ; direct_byte           61     9 (fixed)
 37170                           ; jumptable            263     9 (fixed)
 37171                           ;	Chosen strategy is simple_byte
 37172  3BB0  3A09               	xorlw	9	; case 9
 37173  3BB1  1903               	skipnz
 37174  3BB2  2B15               	goto	l17078
 37175  3BB3  3A03               	xorlw	3	; case 10
 37176  3BB4  1903               	skipnz
 37177  3BB5  2B8C               	goto	l17128
 37178  3BB6  3A1B               	xorlw	27	; case 17
 37179  3BB7  1903               	skipnz
 37180  3BB8  2B56               	goto	l17098
 37181  3BB9  3A03               	xorlw	3	; case 18
 37182  3BBA  1903               	skipnz
 37183  3BBB  2B1C               	goto	l17082
 37184  3BBC  3A06               	xorlw	6	; case 20
 37185  3BBD  1903               	skipnz
 37186  3BBE  2B67               	goto	l17108
 37187  3BBF  3A36               	xorlw	54	; case 34
 37188  3BC0  1903               	skipnz
 37189  3BC1  2B80               	goto	l17118
 37190  3BC2  2BA7               	goto	l17076
 37191                           
 37192                           ;login.c: 120: }while(1);
 37193  3BC3  2BA7               	goto	l17076
 37194  3BC4                     __end_of_EditSenhaUser:	
 37195                           
 37196                           	psect	text119
 37197  498D                     __ptext119:	
 37198 ;; *************** function _printTelaEditarSenha *****************
 37199 ;; Defined at:
 37200 ;;		line 42 in file "login.c"
 37201 ;; Parameters:    Size  Location     Type
 37202 ;;  s               1    wreg     PTR unsigned char 
 37203 ;;		 -> EditSenhaUser@senha(5), 
 37204 ;;  col             1   41[BANK0 ] unsigned char 
 37205 ;; Auto vars:     Size  Location     Type
 37206 ;;  s               1   46[BANK0 ] PTR unsigned char 
 37207 ;;		 -> EditSenhaUser@senha(5), 
 37208 ;; Return value:  Size  Location     Type
 37209 ;;                  1    wreg      void 
 37210 ;; Registers used:
 37211 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 37212 ;; Tracked objects:
 37213 ;;		On entry : 0/0
 37214 ;;		On exit  : 0/0
 37215 ;;		Unchanged: 0/0
 37216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37217 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37219 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37220 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37221 ;;Total ram usage:        6 bytes
 37222 ;; Hardware stack levels used:    1
 37223 ;; Hardware stack levels required when called:    7
 37224 ;; This function calls:
 37225 ;;		_Lcd_Clear
 37226 ;;		_Lcd_Write_String
 37227 ;;		___wmul
 37228 ;;		_escreve_LCD
 37229 ;;		_sprintf
 37230 ;; This function is called by:
 37231 ;;		_EditSenhaUser
 37232 ;; This function uses a non-reentrant model
 37233 ;;
 37234                           
 37235                           
 37236                           ;psect for function _printTelaEditarSenha
 37237  498D                     _printTelaEditarSenha:	
 37238                           
 37239                           ;incstack = 0
 37240                           ; Regs used in _printTelaEditarSenha: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 37241                           ;printTelaEditarSenha@s stored from wreg
 37242  498D  0140               	movlb	0	; select bank0
 37243  498E  00CE               	movwf	printTelaEditarSenha@s
 37244                           
 37245                           ;login.c: 43: Lcd_Clear();
 37246  498F  31E1  21DF  31C9   	fcall	_Lcd_Clear
 37247                           
 37248                           ;login.c: 44: escreve_LCD(1,1,edit_senha_str[idioma]);
 37249  4992  0140               	movlb	0	; select bank0
 37250  4993  01B5               	clrf	escreve_LCD@coluna
 37251  4994  0AB5               	incf	escreve_LCD@coluna,f
 37252  4995  0143               	movlb	3	; select bank3
 37253  4996  085A               	movf	_idioma^(0+384),w
 37254  4997  0140               	movlb	0	; select bank0
 37255  4998  00CA               	movwf	??_printTelaEditarSenha
 37256  4999  01CB               	clrf	??_printTelaEditarSenha+1
 37257  499A  084A               	movf	??_printTelaEditarSenha,w
 37258  499B  00AB               	movwf	___wmul@multiplier
 37259  499C  084B               	movf	??_printTelaEditarSenha+1,w
 37260  499D  00AC               	movwf	___wmul@multiplier+1
 37261  499E  3011               	movlw	17
 37262  499F  00AD               	movwf	___wmul@multiplicand
 37263  49A0  3000               	movlw	0
 37264  49A1  00AE               	movwf	___wmul@multiplicand+1
 37265  49A2  31D0  20FE  31C9   	fcall	___wmul
 37266  49A5  30F6               	movlw	low (_edit_senha_str| (0+32768))
 37267  49A6  0140               	movlb	0	; select bank0
 37268  49A7  00CC               	movwf	??_printTelaEditarSenha+2
 37269  49A8  30D9               	movlw	high (_edit_senha_str| (0+32768))
 37270  49A9  00CD               	movwf	??_printTelaEditarSenha+3
 37271  49AA  082B               	movf	?___wmul,w
 37272  49AB  074C               	addwf	??_printTelaEditarSenha+2,w
 37273  49AC  00B6               	movwf	escreve_LCD@str
 37274  49AD  082C               	movf	?___wmul+1,w
 37275  49AE  3D4D               	addwfc	??_printTelaEditarSenha+3,w
 37276  49AF  00B7               	movwf	escreve_LCD@str+1
 37277  49B0  3001               	movlw	1
 37278  49B1  31E7  27C1  31C9   	fcall	_escreve_LCD
 37279                           
 37280                           ;login.c: 45: sprintf(str, "-%i:",col+1);
 37281  49B4  305C               	movlw	low _str
 37282  49B5  0140               	movlb	0	; select bank0
 37283  49B6  00B9               	movwf	sprintf@sp
 37284  49B7  3002               	movlw	high _str
 37285  49B8  00BA               	movwf	sprintf@sp+1
 37286  49B9  30EC               	movlw	low (STR_50| (0+32768))
 37287  49BA  00BB               	movwf	sprintf@f
 37288  49BB  30E8               	movlw	high (STR_50| (0+32768))
 37289  49BC  00BC               	movwf	sprintf@f+1
 37290  49BD  0849               	movf	printTelaEditarSenha@col,w
 37291  49BE  3E01               	addlw	1
 37292  49BF  00BD               	movwf	?_sprintf+4
 37293  49C0  3000               	movlw	0
 37294  49C1  1803               	skipnc
 37295  49C2  3001               	movlw	1
 37296  49C3  00BE               	movwf	?_sprintf+5
 37297  49C4  31BB  23C4  31C9   	fcall	_sprintf
 37298                           
 37299                           ;login.c: 46: Lcd_Write_String(str);
 37300  49C7  305C               	movlw	low _str
 37301  49C8  0140               	movlb	0	; select bank0
 37302  49C9  00B0               	movwf	Lcd_Write_String@a
 37303  49CA  3002               	movlw	high _str
 37304  49CB  00B1               	movwf	Lcd_Write_String@a+1
 37305  49CC  31D1  2171  31C9   	fcall	_Lcd_Write_String
 37306                           
 37307                           ;login.c: 47: escreve_LCD(2,1,s);
 37308  49CF  0140               	movlb	0	; select bank0
 37309  49D0  01B5               	clrf	escreve_LCD@coluna
 37310  49D1  0AB5               	incf	escreve_LCD@coluna,f
 37311  49D2  084E               	movf	printTelaEditarSenha@s,w
 37312  49D3  00B6               	movwf	escreve_LCD@str
 37313  49D4  3000               	movlw	0
 37314  49D5  00B7               	movwf	escreve_LCD@str+1
 37315  49D6  3002               	movlw	2
 37316  49D7  31E7  27C1         	fcall	_escreve_LCD
 37317  49D9  0008               	return
 37318  49DA                     __end_of_printTelaEditarSenha:	
 37319                           
 37320                           	psect	text120
 37321  3BC4                     __ptext120:	
 37322 ;; *************** function _sprintf *****************
 37323 ;; Defined at:
 37324 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 37325 ;; Parameters:    Size  Location     Type
 37326 ;;  sp              2   25[BANK0 ] PTR unsigned char 
 37327 ;;		 -> EditSenhaUser@senha(5), senha_user(5), str(20), 
 37328 ;;  f               2   27[BANK0 ] PTR const unsigned char 
 37329 ;;		 -> EditSenhaUser@senha(5), STR_51(5), STR_50(5), senha_user(5), 
 37330 ;; Auto vars:     Size  Location     Type
 37331 ;;  tmpval          4    0        struct .
 37332 ;;  val             2   38[BANK0 ] unsigned int 
 37333 ;;  cp              2    0        PTR const unsigned char 
 37334 ;;  len             2    0        unsigned int 
 37335 ;;  c               1   40[BANK0 ] char 
 37336 ;;  prec            1   37[BANK0 ] char 
 37337 ;;  flag            1   36[BANK0 ] unsigned char 
 37338 ;;  ap              1   35[BANK0 ] PTR void [1]
 37339 ;;		 -> ?_sprintf(2), 
 37340 ;; Return value:  Size  Location     Type
 37341 ;;                  2   25[BANK0 ] int 
 37342 ;; Registers used:
 37343 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 37344 ;; Tracked objects:
 37345 ;;		On entry : 0/0
 37346 ;;		On exit  : 0/0
 37347 ;;		Unchanged: 0/0
 37348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37349 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37350 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37351 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37352 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37353 ;;Total ram usage:       16 bytes
 37354 ;; Hardware stack levels used:    1
 37355 ;; Hardware stack levels required when called:    4
 37356 ;; This function calls:
 37357 ;;		___lwdiv
 37358 ;;		___lwmod
 37359 ;; This function is called by:
 37360 ;;		_printTelaSenha
 37361 ;;		_printTelaEditarSenha
 37362 ;;		_EditSenhaUser
 37363 ;; This function uses a non-reentrant model
 37364 ;;
 37365                           
 37366                           
 37367                           ;psect for function _sprintf
 37368  3BC4                     _sprintf:	
 37369                           
 37370                           ;doprnt.c: 494: va_list ap;
 37371                           ;doprnt.c: 499: signed char c;
 37372                           ;doprnt.c: 506: signed char prec;
 37373                           ;doprnt.c: 508: unsigned char flag;
 37374                           ;doprnt.c: 523: union {
 37375                           ;doprnt.c: 524: unsigned long vd;
 37376                           ;doprnt.c: 525: double integ;
 37377                           ;doprnt.c: 526: } tmpval;
 37378                           ;doprnt.c: 528: unsigned int val;
 37379                           ;doprnt.c: 529: unsigned len;
 37380                           ;doprnt.c: 530: const char * cp;
 37381                           ;doprnt.c: 533: *ap = __va_start();
 37382                           
 37383                           ;incstack = 0
 37384                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 37385  3BC4  303D               	movlw	(low ((?_sprintf| 0+4)))& (0+255)
 37386  3BC5  0140               	movlb	0	; select bank0
 37387  3BC6  00BF               	movwf	??_sprintf
 37388  3BC7  083F               	movf	??_sprintf,w
 37389  3BC8  00C3               	movwf	sprintf@ap
 37390                           
 37391                           ;doprnt.c: 635: switch(c = *f++) {
 37392  3BC9  2BD4               	goto	l15356
 37393  3BCA                     l15310:	
 37394                           ;doprnt.c: 802: default:
 37395                           
 37396                           ;doprnt.c: 698: case 'i':
 37397                           ;doprnt.c: 699: break;
 37398                           
 37399                           ;doprnt.c: 697: case 'd':
 37400                           
 37401                           ;doprnt.c: 638: goto alldone;
 37402                           
 37403                           ;doprnt.c: 637: case 0:
 37404                           
 37405                           
 37406                           ;doprnt.c: 809: ((*sp++ = (c)));
 37407  3BCA  0839               	movf	sprintf@sp,w
 37408  3BCB  0086               	movwf	6
 37409  3BCC  083A               	movf	sprintf@sp+1,w
 37410  3BCD  0087               	movwf	7
 37411  3BCE  0848               	movf	sprintf@c,w
 37412  3BCF  0081               	movwf	1
 37413  3BD0  3001               	movlw	1
 37414  3BD1  07B9               	addwf	sprintf@sp,f
 37415  3BD2  3000               	movlw	0
 37416  3BD3  3DBA               	addwfc	sprintf@sp+1,f
 37417  3BD4                     l15356:	
 37418                           ;doprnt.c: 536: while(c = *f++) {
 37419                           
 37420                           ;doprnt.c: 810: continue;
 37421                           
 37422  3BD4  083C               	movf	sprintf@f+1,w
 37423  3BD5  00C0               	movwf	??_sprintf+1
 37424  3BD6  083B               	movf	sprintf@f,w
 37425  3BD7  00BF               	movwf	??_sprintf
 37426  3BD8  0ABB               	incf	sprintf@f,f
 37427  3BD9  1903               	skipnz
 37428  3BDA  0ABC               	incf	sprintf@f+1,f
 37429  3BDB  083F               	movf	??_sprintf,w
 37430  3BDC  0084               	movwf	4
 37431  3BDD  0840               	movf	??_sprintf+1,w
 37432  3BDE  0085               	movwf	5
 37433  3BDF  0800               	movf	0,w	;code access
 37434  3BE0  00C1               	movwf	??_sprintf+2
 37435  3BE1  0841               	movf	??_sprintf+2,w
 37436  3BE2  00C8               	movwf	sprintf@c
 37437  3BE3  0848               	movf	sprintf@c,w
 37438  3BE4  1903               	btfsc	3,2
 37439  3BE5  2C89               	goto	l15358
 37440                           
 37441                           ;doprnt.c: 538: if(c != '%')
 37442  3BE6  3025               	movlw	37
 37443  3BE7  0648               	xorwf	sprintf@c,w
 37444  3BE8  1D03               	btfss	3,2
 37445  3BE9  2BCA               	goto	l15310
 37446                           
 37447                           ;doprnt.c: 543: }
 37448                           ;doprnt.c: 548: flag = 0;
 37449                           
 37450                           ;doprnt.c: 542: continue;
 37451                           
 37452                           ;doprnt.c: 540: {
 37453                           ;doprnt.c: 541: ((*sp++ = (c)));
 37454  3BEA  01C4               	clrf	sprintf@flag
 37455                           
 37456                           ;doprnt.c: 822: }
 37457  3BEB  083C               	movf	sprintf@f+1,w
 37458  3BEC  00C0               	movwf	??_sprintf+1
 37459  3BED  083B               	movf	sprintf@f,w
 37460  3BEE  00BF               	movwf	??_sprintf
 37461  3BEF  0ABB               	incf	sprintf@f,f
 37462  3BF0  1903               	skipnz
 37463  3BF1  0ABC               	incf	sprintf@f+1,f
 37464  3BF2  083F               	movf	??_sprintf,w
 37465  3BF3  0084               	movwf	4
 37466  3BF4  0840               	movf	??_sprintf+1,w
 37467  3BF5  0085               	movwf	5
 37468  3BF6  0800               	movf	0,w	;code access
 37469  3BF7  00C8               	movwf	sprintf@c
 37470                           
 37471                           ; Switch size 1, requested type "space"
 37472                           ; Number of cases is 3, Range of values is 0 to 105
 37473                           ; switch strategies available:
 37474                           ; Name         Instructions Cycles
 37475                           ; simple_byte           10     6 (average)
 37476                           ; direct_byte          218     6 (fixed)
 37477                           ; jumptable            260     6 (fixed)
 37478                           ;	Chosen strategy is simple_byte
 37479  3BF8  3A00               	xorlw	0	; case 0
 37480  3BF9  1903               	skipnz
 37481  3BFA  2C89               	goto	l15358
 37482  3BFB  3A64               	xorlw	100	; case 100
 37483  3BFC  1903               	skipnz
 37484  3BFD  2C02               	goto	l15318
 37485  3BFE  3A0D               	xorlw	13	; case 105
 37486  3BFF  1903               	skipnz
 37487  3C00  2C02               	goto	l15318
 37488  3C01  2BCA               	goto	l15310
 37489  3C02                     l15318:	
 37490                           
 37491                           ;doprnt.c: 1253: {
 37492                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 37493  3C02  0843               	movf	sprintf@ap,w
 37494  3C03  0086               	movwf	6
 37495  3C04  0187               	clrf	7
 37496  3C05  3F40               	moviw [0]fsr1
 37497  3C06  00C6               	movwf	sprintf@val
 37498  3C07  3F41               	moviw [1]fsr1
 37499  3C08  00C7               	movwf	sprintf@val+1
 37500  3C09  3002               	movlw	2
 37501  3C0A  00BF               	movwf	??_sprintf
 37502  3C0B  083F               	movf	??_sprintf,w
 37503  3C0C  07C3               	addwf	sprintf@ap,f
 37504                           
 37505                           ;doprnt.c: 1261: if((int)val < 0) {
 37506  3C0D  1FC7               	btfss	sprintf@val+1,7
 37507  3C0E  2C18               	goto	l15328
 37508                           
 37509                           ;doprnt.c: 1262: flag |= 0x03;
 37510  3C0F  3003               	movlw	3
 37511  3C10  00BF               	movwf	??_sprintf
 37512  3C11  083F               	movf	??_sprintf,w
 37513  3C12  04C4               	iorwf	sprintf@flag,f
 37514                           
 37515                           ;doprnt.c: 1263: val = -val;
 37516  3C13  09C6               	comf	sprintf@val,f
 37517  3C14  09C7               	comf	sprintf@val+1,f
 37518  3C15  0AC6               	incf	sprintf@val,f
 37519  3C16  1903               	skipnz
 37520  3C17  0AC7               	incf	sprintf@val+1,f
 37521  3C18                     l15328:	
 37522                           
 37523                           ;doprnt.c: 1264: }
 37524                           ;doprnt.c: 1266: }
 37525                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 37526  3C18  01C8               	clrf	sprintf@c
 37527  3C19  0AC8               	incf	sprintf@c,f
 37528  3C1A  3005               	movlw	5
 37529  3C1B  0648               	xorwf	sprintf@c,w
 37530  3C1C  1903               	btfsc	3,2
 37531  3C1D  2C3D               	goto	l15340
 37532  3C1E                     l15334:	
 37533                           
 37534                           ;doprnt.c: 1306: if(val < dpowers[c])
 37535  3C1E  0848               	movf	sprintf@c,w
 37536  3C1F  00BF               	movwf	??_sprintf
 37537  3C20  01C0               	clrf	??_sprintf+1
 37538  3C21  35BF               	lslf	??_sprintf,f
 37539  3C22  0DC0               	rlf	??_sprintf+1,f
 37540  3C23  30AB               	movlw	low (_dpowers| (0+32768))
 37541  3C24  073F               	addwf	??_sprintf,w
 37542  3C25  0084               	movwf	4
 37543  3C26  30E8               	movlw	high (_dpowers| (0+32768))
 37544  3C27  3D40               	addwfc	??_sprintf+1,w
 37545  3C28  0085               	movwf	5
 37546  3C29  3F00               	moviw [0]fsr0
 37547  3C2A  00C1               	movwf	??_sprintf+2
 37548  3C2B  3F01               	moviw [1]fsr0
 37549  3C2C  00C2               	movwf	??_sprintf+3
 37550  3C2D  0842               	movf	??_sprintf+3,w
 37551  3C2E  0247               	subwf	sprintf@val+1,w
 37552  3C2F  1D03               	skipz
 37553  3C30  2C33               	goto	u16815
 37554  3C31  0841               	movf	??_sprintf+2,w
 37555  3C32  0246               	subwf	sprintf@val,w
 37556  3C33                     u16815:	
 37557  3C33  1C03               	btfss	3,0
 37558  3C34  2C3D               	goto	l15340
 37559                           
 37560                           ;doprnt.c: 1307: break;
 37561  3C35  3001               	movlw	1
 37562  3C36  00BF               	movwf	??_sprintf
 37563  3C37  083F               	movf	??_sprintf,w
 37564  3C38  07C8               	addwf	sprintf@c,f
 37565  3C39  3005               	movlw	5
 37566  3C3A  0648               	xorwf	sprintf@c,w
 37567  3C3B  1D03               	btfss	3,2
 37568  3C3C  2C1E               	goto	l15334
 37569  3C3D                     l15340:	
 37570                           
 37571                           ;doprnt.c: 1422: {
 37572                           ;doprnt.c: 1438: if(flag & 0x03)
 37573  3C3D  0844               	movf	sprintf@flag,w
 37574  3C3E  3903               	andlw	3
 37575  3C3F  1903               	btfsc	3,2
 37576  3C40  2C4B               	goto	l15346
 37577                           
 37578                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 37579  3C41  0839               	movf	sprintf@sp,w
 37580  3C42  0086               	movwf	6
 37581  3C43  083A               	movf	sprintf@sp+1,w
 37582  3C44  0087               	movwf	7
 37583  3C45  302D               	movlw	45
 37584  3C46  0081               	movwf	1
 37585  3C47  3001               	movlw	1
 37586  3C48  07B9               	addwf	sprintf@sp,f
 37587  3C49  3000               	movlw	0
 37588  3C4A  3DBA               	addwfc	sprintf@sp+1,f
 37589  3C4B                     l15346:	
 37590                           
 37591                           ;doprnt.c: 1469: }
 37592                           ;doprnt.c: 1472: prec = c;
 37593  3C4B  0848               	movf	sprintf@c,w
 37594  3C4C  00BF               	movwf	??_sprintf
 37595  3C4D  083F               	movf	??_sprintf,w
 37596  3C4E  00C5               	movwf	sprintf@prec
 37597  3C4F                     l15354:	
 37598                           ;doprnt.c: 1474: while(prec--) {
 37599                           
 37600  3C4F  30FF               	movlw	255
 37601  3C50  00BF               	movwf	??_sprintf
 37602  3C51  083F               	movf	??_sprintf,w
 37603  3C52  07C5               	addwf	sprintf@prec,f
 37604  3C53  0A45               	incf	sprintf@prec,w
 37605  3C54  1903               	btfsc	3,2
 37606  3C55  2BD4               	goto	l15356
 37607                           
 37608                           ;doprnt.c: 1478: {
 37609                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 37610  3C56  300A               	movlw	10
 37611  3C57  00B3               	movwf	___lwmod@divisor
 37612  3C58  3000               	movlw	0
 37613  3C59  00B4               	movwf	___lwmod@divisor+1
 37614  3C5A  0845               	movf	sprintf@prec,w
 37615  3C5B  00BF               	movwf	??_sprintf
 37616  3C5C  01C0               	clrf	??_sprintf+1
 37617  3C5D  35BF               	lslf	??_sprintf,f
 37618  3C5E  0DC0               	rlf	??_sprintf+1,f
 37619  3C5F  30AB               	movlw	low (_dpowers| (0+32768))
 37620  3C60  073F               	addwf	??_sprintf,w
 37621  3C61  0084               	movwf	4
 37622  3C62  30E8               	movlw	high (_dpowers| (0+32768))
 37623  3C63  3D40               	addwfc	??_sprintf+1,w
 37624  3C64  0085               	movwf	5
 37625  3C65  3F00               	moviw [0]fsr0
 37626  3C66  00AB               	movwf	___lwdiv@divisor
 37627  3C67  3F01               	moviw [1]fsr0
 37628  3C68  00AC               	movwf	___lwdiv@divisor+1
 37629  3C69  0847               	movf	sprintf@val+1,w
 37630  3C6A  00AE               	movwf	___lwdiv@dividend+1
 37631  3C6B  0846               	movf	sprintf@val,w
 37632  3C6C  00AD               	movwf	___lwdiv@dividend
 37633  3C6D  31D5  25A3  31BB   	fcall	___lwdiv
 37634  3C70  0140               	movlb	0	; select bank0
 37635  3C71  082C               	movf	?___lwdiv+1,w
 37636  3C72  00B6               	movwf	___lwmod@dividend+1
 37637  3C73  082B               	movf	?___lwdiv,w
 37638  3C74  00B5               	movwf	___lwmod@dividend
 37639  3C75  31D3  23FB  31BB   	fcall	___lwmod
 37640  3C78  0140               	movlb	0	; select bank0
 37641  3C79  0833               	movf	?___lwmod,w
 37642  3C7A  3E30               	addlw	48
 37643  3C7B  00C1               	movwf	??_sprintf+2
 37644  3C7C  0841               	movf	??_sprintf+2,w
 37645  3C7D  00C8               	movwf	sprintf@c
 37646                           
 37647                           ;doprnt.c: 1523: }
 37648                           ;doprnt.c: 1524: ((*sp++ = (c)));
 37649  3C7E  0839               	movf	sprintf@sp,w
 37650  3C7F  0086               	movwf	6
 37651  3C80  083A               	movf	sprintf@sp+1,w
 37652  3C81  0087               	movwf	7
 37653  3C82  0848               	movf	sprintf@c,w
 37654  3C83  0081               	movwf	1
 37655  3C84  3001               	movlw	1
 37656  3C85  07B9               	addwf	sprintf@sp,f
 37657  3C86  3000               	movlw	0
 37658  3C87  3DBA               	addwfc	sprintf@sp+1,f
 37659  3C88  2C4F               	goto	l15354
 37660  3C89                     l15358:	
 37661                           ;doprnt.c: 1525: }
 37662                           ;doprnt.c: 1533: }
 37663                           ;doprnt.c: 1535: alldone:
 37664                           
 37665                           
 37666                           ;doprnt.c: 1538: *sp = 0;
 37667  3C89  0839               	movf	sprintf@sp,w
 37668  3C8A  0086               	movwf	6
 37669  3C8B  083A               	movf	sprintf@sp+1,w
 37670  3C8C  0087               	movwf	7
 37671  3C8D  0181               	clrf	1
 37672  3C8E  0008               	return
 37673  3C8F                     __end_of_sprintf:	
 37674                           ;doprnt.c: 1540: return 0;
 37675                           ;	Return value of _sprintf is never used
 37676                           
 37677                           
 37678                           	psect	text121
 37679  53FB                     __ptext121:	
 37680 ;; *************** function ___lwmod *****************
 37681 ;; Defined at:
 37682 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 37683 ;; Parameters:    Size  Location     Type
 37684 ;;  divisor         2   19[BANK0 ] unsigned int 
 37685 ;;  dividend        2   21[BANK0 ] unsigned int 
 37686 ;; Auto vars:     Size  Location     Type
 37687 ;;  counter         1   24[BANK0 ] unsigned char 
 37688 ;; Return value:  Size  Location     Type
 37689 ;;                  2   19[BANK0 ] unsigned int 
 37690 ;; Registers used:
 37691 ;;		wreg, status,2, status,0
 37692 ;; Tracked objects:
 37693 ;;		On entry : 0/0
 37694 ;;		On exit  : 0/0
 37695 ;;		Unchanged: 0/0
 37696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37697 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37698 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37699 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37700 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37701 ;;Total ram usage:        6 bytes
 37702 ;; Hardware stack levels used:    1
 37703 ;; Hardware stack levels required when called:    3
 37704 ;; This function calls:
 37705 ;;		Nothing
 37706 ;; This function is called by:
 37707 ;;		_sprintf
 37708 ;;		_utoa
 37709 ;; This function uses a non-reentrant model
 37710 ;;
 37711                           
 37712                           
 37713                           ;psect for function ___lwmod
 37714  53FB                     ___lwmod:	
 37715                           
 37716                           ;incstack = 0
 37717                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 37718  53FB  0140               	movlb	0	; select bank0
 37719  53FC  0833               	movf	___lwmod@divisor,w
 37720  53FD  0434               	iorwf	___lwmod@divisor+1,w
 37721  53FE  1903               	btfsc	3,2
 37722  53FF  2C23               	goto	l14856
 37723  5400  01B8               	clrf	___lwmod@counter
 37724  5401  0AB8               	incf	___lwmod@counter,f
 37725  5402                     l14846:	
 37726  5402  1BB4               	btfsc	___lwmod@divisor+1,7
 37727  5403  2C0E               	goto	l14848
 37728  5404  3001               	movlw	1
 37729  5405                     u16085:	
 37730  5405  35B3               	lslf	___lwmod@divisor,f
 37731  5406  0DB4               	rlf	___lwmod@divisor+1,f
 37732  5407  0B89               	decfsz	9,f
 37733  5408  2C05               	goto	u16085
 37734  5409  3001               	movlw	1
 37735  540A  00B7               	movwf	??___lwmod
 37736  540B  0837               	movf	??___lwmod,w
 37737  540C  07B8               	addwf	___lwmod@counter,f
 37738  540D  2C02               	goto	l14846
 37739  540E                     l14848:	
 37740  540E  0834               	movf	___lwmod@divisor+1,w
 37741  540F  0236               	subwf	___lwmod@dividend+1,w
 37742  5410  1D03               	skipz
 37743  5411  2C14               	goto	u16105
 37744  5412  0833               	movf	___lwmod@divisor,w
 37745  5413  0235               	subwf	___lwmod@dividend,w
 37746  5414                     u16105:	
 37747  5414  1C03               	skipc
 37748  5415  2C1A               	goto	l14852
 37749  5416  0833               	movf	___lwmod@divisor,w
 37750  5417  02B5               	subwf	___lwmod@dividend,f
 37751  5418  0834               	movf	___lwmod@divisor+1,w
 37752  5419  3BB6               	subwfb	___lwmod@dividend+1,f
 37753  541A                     l14852:	
 37754  541A  3001               	movlw	1
 37755  541B                     u16115:	
 37756  541B  36B4               	lsrf	___lwmod@divisor+1,f
 37757  541C  0CB3               	rrf	___lwmod@divisor,f
 37758  541D  0B89               	decfsz	9,f
 37759  541E  2C1B               	goto	u16115
 37760  541F  3001               	movlw	1
 37761  5420  02B8               	subwf	___lwmod@counter,f
 37762  5421  1D03               	btfss	3,2
 37763  5422  2C0E               	goto	l14848
 37764  5423                     l14856:	
 37765  5423  0836               	movf	___lwmod@dividend+1,w
 37766  5424  00B4               	movwf	?___lwmod+1
 37767  5425  0835               	movf	___lwmod@dividend,w
 37768  5426  00B3               	movwf	?___lwmod
 37769  5427  0008               	return
 37770  5428                     __end_of___lwmod:	
 37771                           
 37772                           	psect	text122
 37773  67C1                     __ptext122:	
 37774 ;; *************** function _escreve_LCD *****************
 37775 ;; Defined at:
 37776 ;;		line 188 in file "lcd.c"
 37777 ;; Parameters:    Size  Location     Type
 37778 ;;  linha           1    wreg     unsigned char 
 37779 ;;  coluna          1   21[BANK0 ] unsigned char 
 37780 ;;  str             2   22[BANK0 ] PTR const unsigned char 
 37781 ;;		 -> Autenticar@senha(5), EditSenhaUser@senha(5), edit_senha_str(34), menu_senha_str(34), 
 37782 ;;		 -> STR_42(13), STR_41(13), STR_39(13), STR_37(13), 
 37783 ;;		 -> STR_36(13), STR_33(16), STR_32(15), STR_30(14), 
 37784 ;;		 -> modo_op_str(34), modo_contByPulse_str(34), modo_contnuo_str(34), modo_rapido_str(34), 
 37785 ;;		 -> modo_normal_str(34), STR_23(2), teste_PN1_str(34), str2(20), 
 37786 ;;		 -> str1(20), STR_11(3), STR_10(4), Sonitron_str(14), 
 37787 ;;		 -> tempo_str(34), energia_str(34), emerg2_str(34), Sai_enter_str(34), 
 37788 ;;		 -> zero_cont_str(34), STR_4(2), erro_str(34), erro_ovl_str(34), 
 37789 ;;		 -> STR_3(2), emergencia_str(34), energia_low_str(34), tempo_ovf_str(34), 
 37790 ;;		 -> fixando_str(34), process_str(34), aguarde_str(34), solda_cont_str(34), 
 37791 ;;		 -> n_pecas_str(34), descendo_str(34), erro_senha_str(34), erro_inv_str(34), 
 37792 ;; Auto vars:     Size  Location     Type
 37793 ;;  linha           1   25[BANK0 ] unsigned char 
 37794 ;; Return value:  Size  Location     Type
 37795 ;;                  1    wreg      void 
 37796 ;; Registers used:
 37797 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 37798 ;; Tracked objects:
 37799 ;;		On entry : 0/0
 37800 ;;		On exit  : 0/0
 37801 ;;		Unchanged: 0/0
 37802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37803 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37804 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37805 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37806 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37807 ;;Total ram usage:        5 bytes
 37808 ;; Hardware stack levels used:    1
 37809 ;; Hardware stack levels required when called:    6
 37810 ;; This function calls:
 37811 ;;		_Lcd_Set_Cursor
 37812 ;;		_Lcd_Write_String
 37813 ;; This function is called by:
 37814 ;;		_op_desce
 37815 ;;		_op_solda
 37816 ;;		_op_fixar
 37817 ;;		_trata_dados
 37818 ;;		_trava_erro
 37819 ;;		_emergencia
 37820 ;;		_tela_ultima_solda
 37821 ;;		_tela_inicial
 37822 ;;		_totalCiclos
 37823 ;;		_telas
 37824 ;;		_teste_pneumatico
 37825 ;;		_teste_US
 37826 ;;		_selectModo
 37827 ;;		_printTelaSenha
 37828 ;;		_printTelaEditarSenha
 37829 ;; This function uses a non-reentrant model
 37830 ;;
 37831                           
 37832                           
 37833                           ;psect for function _escreve_LCD
 37834  67C1                     _escreve_LCD:	
 37835                           
 37836                           ;incstack = 0
 37837                           ; Regs used in _escreve_LCD: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 37838                           ;escreve_LCD@linha stored from wreg
 37839  67C1  0140               	movlb	0	; select bank0
 37840  67C2  00B9               	movwf	escreve_LCD@linha
 37841                           
 37842                           ;lcd.c: 189: LATBbits.LATB6=0;
 37843  67C3  1317               	bcf	23,6	;volatile
 37844                           
 37845                           ;lcd.c: 190: Lcd_Set_Cursor(linha,coluna);
 37846  67C4  0835               	movf	escreve_LCD@coluna,w
 37847  67C5  00B8               	movwf	??_escreve_LCD
 37848  67C6  0838               	movf	??_escreve_LCD,w
 37849  67C7  00AE               	movwf	Lcd_Set_Cursor@b
 37850  67C8  0839               	movf	escreve_LCD@linha,w
 37851  67C9  31D5  25D8  31E7   	fcall	_Lcd_Set_Cursor
 37852                           
 37853                           ;lcd.c: 191: Lcd_Write_String(str);
 37854  67CC  0140               	movlb	0	; select bank0
 37855  67CD  0837               	movf	escreve_LCD@str+1,w
 37856  67CE  00B1               	movwf	Lcd_Write_String@a+1
 37857  67CF  0836               	movf	escreve_LCD@str,w
 37858  67D0  00B0               	movwf	Lcd_Write_String@a
 37859  67D1  31D1  2171         	fcall	_Lcd_Write_String
 37860                           
 37861                           ;lcd.c: 192: LATBbits.LATB6=1;
 37862  67D3  0140               	movlb	0	; select bank0
 37863  67D4  1717               	bsf	23,6	;volatile
 37864  67D5  0008               	return
 37865  67D6                     __end_of_escreve_LCD:	
 37866                           
 37867                           	psect	text123
 37868  5171                     __ptext123:	
 37869 ;; *************** function _Lcd_Write_String *****************
 37870 ;; Defined at:
 37871 ;;		line 114 in file "lcd.c"
 37872 ;; Parameters:    Size  Location     Type
 37873 ;;  a               2   16[BANK0 ] PTR const unsigned char 
 37874 ;;		 -> Autenticar@senha(5), EditSenhaUser@senha(5), edit_senha_str(34), menu_senha_str(34), 
 37875 ;;		 -> STR_49(7), STR_48(4), STR_47(6), STR_46(4), 
 37876 ;;		 -> STR_45(6), STR_44(4), STR_43(8), STR_42(13), 
 37877 ;;		 -> STR_41(13), STR_40(4), STR_39(13), STR_38(4), 
 37878 ;;		 -> STR_37(13), STR_36(13), STR_35(5), STR_34(8), 
 37879 ;;		 -> STR_33(16), STR_32(15), STR_31(4), STR_30(14), 
 37880 ;;		 -> modo_op_str(34), modo_contByPulse_str(34), modo_contnuo_str(34), modo_rapido_str(34), 
 37881 ;;		 -> modo_normal_str(34), STR_23(2), teste_PN1_str(34), STR_20(6), 
 37882 ;;		 -> STR_19(6), freq_str(8), STR_18(5), str2(20), 
 37883 ;;		 -> str1(20), freq_ini_str(13), STR_13(4), STR_12(2), 
 37884 ;;		 -> STR_11(3), STR_10(4), Sonitron_str(14), STR_9(4), 
 37885 ;;		 -> STR_8(3), STR_7(4), STR_6(2), tempo_str(34), 
 37886 ;;		 -> STR_5(4), energia_str(34), emerg2_str(34), Sai_enter_str(34), 
 37887 ;;		 -> zero_cont_str(34), STR_4(2), erro_str(34), erro_ovl_str(34), 
 37888 ;;		 -> STR_3(2), emergencia_str(34), energia_low_str(34), tempo_ovf_str(34), 
 37889 ;;		 -> fixando_str(34), process_str(34), aguarde_str(34), solda_cont_str(34), 
 37890 ;;		 -> str(20), n_pecas_str(34), descendo_str(34), erro_senha_str(34), 
 37891 ;;		 -> erro_inv_str(34), 
 37892 ;; Auto vars:     Size  Location     Type
 37893 ;;  i               2   19[BANK0 ] int 
 37894 ;; Return value:  Size  Location     Type
 37895 ;;                  1    wreg      void 
 37896 ;; Registers used:
 37897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 37898 ;; Tracked objects:
 37899 ;;		On entry : 0/0
 37900 ;;		On exit  : 0/0
 37901 ;;		Unchanged: 0/0
 37902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37903 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37904 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37905 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37906 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37907 ;;Total ram usage:        5 bytes
 37908 ;; Hardware stack levels used:    1
 37909 ;; Hardware stack levels required when called:    5
 37910 ;; This function calls:
 37911 ;;		_Lcd_Write_Char
 37912 ;; This function is called by:
 37913 ;;		_op_desce
 37914 ;;		_op_solda
 37915 ;;		_trata_dados
 37916 ;;		_tela_ultima_solda
 37917 ;;		_tela_inicial
 37918 ;;		_totalCiclos
 37919 ;;		_func_enter
 37920 ;;		_teste_US
 37921 ;;		_ciclar
 37922 ;;		_ciclarPneumatico
 37923 ;;		_escreve_freq
 37924 ;;		_escreve_LCD
 37925 ;;		_printTelaSenha
 37926 ;;		_printTelaEditarSenha
 37927 ;; This function uses a non-reentrant model
 37928 ;;
 37929                           
 37930                           
 37931                           ;psect for function _Lcd_Write_String
 37932  5171                     _Lcd_Write_String:	
 37933                           
 37934                           ;lcd.c: 117: LATBbits.LATB6=0;
 37935                           
 37936                           ;incstack = 0
 37937                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 37938  5171  0140               	movlb	0	; select bank0
 37939  5172  1317               	bcf	23,6	;volatile
 37940                           
 37941                           ;lcd.c: 118: int i;
 37942                           ;lcd.c: 119: for(i=0;a[i]!='\0';i++)
 37943  5173  01B3               	clrf	Lcd_Write_String@i
 37944  5174  01B4               	clrf	Lcd_Write_String@i+1
 37945  5175                     l13938:	
 37946  5175  0830               	movf	Lcd_Write_String@a,w
 37947  5176  0733               	addwf	Lcd_Write_String@i,w
 37948  5177  0084               	movwf	4
 37949  5178  0831               	movf	Lcd_Write_String@a+1,w
 37950  5179  3D34               	addwfc	Lcd_Write_String@i+1,w
 37951  517A  0085               	movwf	5
 37952  517B  0012               	moviw fsr0++
 37953  517C  1903               	btfsc	3,2
 37954  517D  298E               	goto	l2257
 37955                           
 37956                           ;lcd.c: 120: Lcd_Write_Char(a[i]);
 37957  517E  0830               	movf	Lcd_Write_String@a,w
 37958  517F  0733               	addwf	Lcd_Write_String@i,w
 37959  5180  0084               	movwf	4
 37960  5181  0831               	movf	Lcd_Write_String@a+1,w
 37961  5182  3D34               	addwfc	Lcd_Write_String@i+1,w
 37962  5183  0085               	movwf	5
 37963  5184  0800               	movf	0,w	;code access
 37964  5185  31D4  2482  31D1   	fcall	_Lcd_Write_Char
 37965  5188  3001               	movlw	1
 37966  5189  0140               	movlb	0	; select bank0
 37967  518A  07B3               	addwf	Lcd_Write_String@i,f
 37968  518B  3000               	movlw	0
 37969  518C  3DB4               	addwfc	Lcd_Write_String@i+1,f
 37970  518D  2975               	goto	l13938
 37971  518E                     l2257:	
 37972                           
 37973                           ;lcd.c: 121: LATBbits.LATB6=1;
 37974  518E  1717               	bsf	23,6	;volatile
 37975  518F  0008               	return
 37976  5190                     __end_of_Lcd_Write_String:	
 37977                           
 37978                           	psect	text124
 37979  5482                     __ptext124:	
 37980 ;; *************** function _Lcd_Write_Char *****************
 37981 ;; Defined at:
 37982 ;;		line 95 in file "lcd.c"
 37983 ;; Parameters:    Size  Location     Type
 37984 ;;  a               1    wreg     unsigned char 
 37985 ;; Auto vars:     Size  Location     Type
 37986 ;;  a               1   15[BANK0 ] unsigned char 
 37987 ;;  y               1   14[BANK0 ] unsigned char 
 37988 ;;  temp            1   13[BANK0 ] unsigned char 
 37989 ;; Return value:  Size  Location     Type
 37990 ;;                  1    wreg      void 
 37991 ;; Registers used:
 37992 ;;		wreg, status,2, status,0, pclath, cstack
 37993 ;; Tracked objects:
 37994 ;;		On entry : 0/0
 37995 ;;		On exit  : 0/0
 37996 ;;		Unchanged: 0/0
 37997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 37998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 37999 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38000 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38001 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38002 ;;Total ram usage:        4 bytes
 38003 ;; Hardware stack levels used:    1
 38004 ;; Hardware stack levels required when called:    4
 38005 ;; This function calls:
 38006 ;;		_Lcd_Port
 38007 ;; This function is called by:
 38008 ;;		_op_desce
 38009 ;;		_tela_inicial
 38010 ;;		_Lcd_Write_String
 38011 ;;		_Lcd_White_Center_String
 38012 ;; This function uses a non-reentrant model
 38013 ;;
 38014                           
 38015                           
 38016                           ;psect for function _Lcd_Write_Char
 38017  5482                     _Lcd_Write_Char:	
 38018                           
 38019                           ;incstack = 0
 38020                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 38021                           ;Lcd_Write_Char@a stored from wreg
 38022  5482  0140               	movlb	0	; select bank0
 38023  5483  00AF               	movwf	Lcd_Write_Char@a
 38024                           
 38025                           ;lcd.c: 97: LATBbits.LATB6 = 0;
 38026  5484  1317               	bcf	23,6	;volatile
 38027                           
 38028                           ;lcd.c: 98: char temp,y;
 38029                           ;lcd.c: 99: temp = a&0x0F;
 38030  5485  082F               	movf	Lcd_Write_Char@a,w
 38031  5486  390F               	andlw	15
 38032  5487  00AC               	movwf	??_Lcd_Write_Char
 38033  5488  082C               	movf	??_Lcd_Write_Char,w
 38034  5489  00AD               	movwf	Lcd_Write_Char@temp
 38035                           
 38036                           ;lcd.c: 100: y = a&0xF0;
 38037  548A  082F               	movf	Lcd_Write_Char@a,w
 38038  548B  39F0               	andlw	240
 38039  548C  00AC               	movwf	??_Lcd_Write_Char
 38040  548D  082C               	movf	??_Lcd_Write_Char,w
 38041  548E  00AE               	movwf	Lcd_Write_Char@y
 38042                           
 38043                           ;lcd.c: 101: LATBbits.LATB4 = 1;
 38044  548F  1617               	bsf	23,4	;volatile
 38045                           
 38046                           ;lcd.c: 102: Lcd_Port(y>>4);
 38047  5490  082E               	movf	Lcd_Write_Char@y,w
 38048  5491  00AC               	movwf	??_Lcd_Write_Char
 38049  5492  3004               	movlw	4
 38050  5493                     u14155:	
 38051  5493  36AC               	lsrf	??_Lcd_Write_Char,f
 38052  5494  0B89               	decfsz	9,f
 38053  5495  2C93               	goto	u14155
 38054  5496  082C               	movf	??_Lcd_Write_Char,w
 38055  5497  31D0  2099  31D4   	fcall	_Lcd_Port
 38056                           
 38057                           ;lcd.c: 103: LATBbits.LATB5 = 1;
 38058  549A  0140               	movlb	0	; select bank0
 38059  549B  1697               	bsf	23,5	;volatile
 38060                           
 38061                           ;lcd.c: 104: _delay((unsigned long)((40)*(20000000/4000000.0)));
 38062  549C  3042               	movlw	66
 38063  549D                     u20927:	
 38064  549D  0B89               	decfsz	9,f
 38065  549E  2C9D               	goto	u20927
 38066  549F  3200               	nop2
 38067                           
 38068                           ;lcd.c: 105: LATBbits.LATB5 = 0;
 38069  54A0  0140               	movlb	0	; select bank0
 38070  54A1  1297               	bcf	23,5	;volatile
 38071                           
 38072                           ;lcd.c: 106: Lcd_Port(temp);
 38073  54A2  082D               	movf	Lcd_Write_Char@temp,w
 38074  54A3  31D0  2099  31D4   	fcall	_Lcd_Port
 38075                           
 38076                           ;lcd.c: 107: LATBbits.LATB5 = 1;
 38077  54A6  0140               	movlb	0	; select bank0
 38078  54A7  1697               	bsf	23,5	;volatile
 38079                           
 38080                           ;lcd.c: 108: _delay((unsigned long)((40)*(20000000/4000000.0)));
 38081  54A8  3042               	movlw	66
 38082  54A9                     u20937:	
 38083  54A9  0B89               	decfsz	9,f
 38084  54AA  2CA9               	goto	u20937
 38085  54AB  3200               	nop2
 38086                           
 38087                           ;lcd.c: 109: LATBbits.LATB5 = 0;
 38088  54AC  0140               	movlb	0	; select bank0
 38089  54AD  1297               	bcf	23,5	;volatile
 38090                           
 38091                           ;lcd.c: 110: LATBbits.LATB6=1;
 38092  54AE  1717               	bsf	23,6	;volatile
 38093  54AF  0008               	return
 38094  54B0                     __end_of_Lcd_Write_Char:	
 38095                           
 38096                           	psect	text125
 38097  55D8                     __ptext125:	
 38098 ;; *************** function _Lcd_Set_Cursor *****************
 38099 ;; Defined at:
 38100 ;;		line 44 in file "lcd.c"
 38101 ;; Parameters:    Size  Location     Type
 38102 ;;  a               1    wreg     unsigned char 
 38103 ;;  b               1   14[BANK0 ] unsigned char 
 38104 ;; Auto vars:     Size  Location     Type
 38105 ;;  a               1   17[BANK0 ] unsigned char 
 38106 ;;  temp            1   20[BANK0 ] unsigned char 
 38107 ;;  y               1   19[BANK0 ] unsigned char 
 38108 ;;  z               1   18[BANK0 ] unsigned char 
 38109 ;; Return value:  Size  Location     Type
 38110 ;;                  1    wreg      void 
 38111 ;; Registers used:
 38112 ;;		wreg, status,2, status,0, pclath, cstack
 38113 ;; Tracked objects:
 38114 ;;		On entry : 0/0
 38115 ;;		On exit  : 0/0
 38116 ;;		Unchanged: 0/0
 38117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38118 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38119 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38120 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38121 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38122 ;;Total ram usage:        7 bytes
 38123 ;; Hardware stack levels used:    1
 38124 ;; Hardware stack levels required when called:    5
 38125 ;; This function calls:
 38126 ;;		_Lcd_Cmd
 38127 ;; This function is called by:
 38128 ;;		_main
 38129 ;;		_func_enter
 38130 ;;		_ciclar
 38131 ;;		_ciclarPneumatico
 38132 ;;		_escreve_freq
 38133 ;;		_Lcd_White_Center_String
 38134 ;;		_escreve_LCD
 38135 ;; This function uses a non-reentrant model
 38136 ;;
 38137                           
 38138                           
 38139                           ;psect for function _Lcd_Set_Cursor
 38140  55D8                     _Lcd_Set_Cursor:	
 38141                           
 38142                           ;incstack = 0
 38143                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 38144                           ;Lcd_Set_Cursor@a stored from wreg
 38145  55D8  0140               	movlb	0	; select bank0
 38146  55D9  00B1               	movwf	Lcd_Set_Cursor@a
 38147                           
 38148                           ;lcd.c: 46: LATBbits.LATB6=0;
 38149  55DA  1317               	bcf	23,6	;volatile
 38150                           
 38151                           ;lcd.c: 47: char temp,z,y;
 38152                           ;lcd.c: 48: if(a == 1)
 38153  55DB  0331               	decf	Lcd_Set_Cursor@a,w
 38154  55DC  1D03               	btfss	3,2
 38155  55DD  2DEA               	goto	l13918
 38156                           
 38157                           ;lcd.c: 49: {
 38158                           ;lcd.c: 50: temp = 0x80 + b - 1;
 38159  55DE  082E               	movf	Lcd_Set_Cursor@b,w
 38160  55DF  3E7F               	addlw	127
 38161  55E0  00AF               	movwf	??_Lcd_Set_Cursor
 38162  55E1  082F               	movf	??_Lcd_Set_Cursor,w
 38163  55E2  00B4               	movwf	Lcd_Set_Cursor@temp
 38164                           
 38165                           ;lcd.c: 51: z = temp>>4;
 38166  55E3  0834               	movf	Lcd_Set_Cursor@temp,w
 38167  55E4  00AF               	movwf	??_Lcd_Set_Cursor
 38168  55E5  3004               	movlw	4
 38169  55E6                     u14375:	
 38170  55E6  36AF               	lsrf	??_Lcd_Set_Cursor,f
 38171  55E7  0B89               	decfsz	9,f
 38172  55E8  2DE6               	goto	u14375
 38173  55E9  2DFA               	goto	L65
 38174  55EA                     l13918:	
 38175                           ;lcd.c: 55: }
 38176                           
 38177                           ;lcd.c: 54: Lcd_Cmd(y);
 38178                           
 38179                           ;lcd.c: 53: Lcd_Cmd(z);
 38180                           
 38181                           ;lcd.c: 52: y = temp & 0x0F;
 38182                           
 38183                           
 38184                           ;lcd.c: 56: else if(a == 2)
 38185  55EA  3002               	movlw	2
 38186  55EB  0140               	movlb	0	; select bank0
 38187  55EC  0631               	xorwf	Lcd_Set_Cursor@a,w
 38188  55ED  1D03               	btfss	3,2
 38189  55EE  2E0B               	goto	l13928
 38190                           
 38191                           ;lcd.c: 57: {
 38192                           ;lcd.c: 58: temp = 0xC0 + b - 1;
 38193  55EF  082E               	movf	Lcd_Set_Cursor@b,w
 38194  55F0  3EBF               	addlw	191
 38195  55F1  00AF               	movwf	??_Lcd_Set_Cursor
 38196  55F2  082F               	movf	??_Lcd_Set_Cursor,w
 38197  55F3  00B4               	movwf	Lcd_Set_Cursor@temp
 38198                           
 38199                           ;lcd.c: 59: z = temp>>4;
 38200  55F4  0834               	movf	Lcd_Set_Cursor@temp,w
 38201  55F5  00AF               	movwf	??_Lcd_Set_Cursor
 38202  55F6  3004               	movlw	4
 38203  55F7                     u14395:	
 38204  55F7  36AF               	lsrf	??_Lcd_Set_Cursor,f
 38205  55F8  0B89               	decfsz	9,f
 38206  55F9  2DF7               	goto	u14395
 38207  55FA                     L65:	
 38208  55FA  082F               	movf	??_Lcd_Set_Cursor,w
 38209  55FB  00B0               	movwf	??_Lcd_Set_Cursor+1
 38210  55FC  0830               	movf	??_Lcd_Set_Cursor+1,w
 38211  55FD  00B2               	movwf	Lcd_Set_Cursor@z
 38212                           
 38213                           ;lcd.c: 60: y = temp & 0x0F;
 38214  55FE  0834               	movf	Lcd_Set_Cursor@temp,w
 38215  55FF  390F               	andlw	15
 38216  5600  00AF               	movwf	??_Lcd_Set_Cursor
 38217  5601  082F               	movf	??_Lcd_Set_Cursor,w
 38218  5602  00B3               	movwf	Lcd_Set_Cursor@y
 38219                           
 38220                           ;lcd.c: 61: Lcd_Cmd(z);
 38221  5603  0832               	movf	Lcd_Set_Cursor@z,w
 38222  5604  31D0  20B0  31D5   	fcall	_Lcd_Cmd
 38223                           
 38224                           ;lcd.c: 62: Lcd_Cmd(y);
 38225  5607  0140               	movlb	0	; select bank0
 38226  5608  0833               	movf	Lcd_Set_Cursor@y,w
 38227  5609  31D0  20B0         	fcall	_Lcd_Cmd
 38228  560B                     l13928:	
 38229                           
 38230                           ;lcd.c: 63: }
 38231                           ;lcd.c: 64: LATBbits.LATB6=1;
 38232  560B  0140               	movlb	0	; select bank0
 38233  560C  1717               	bsf	23,6	;volatile
 38234  560D  0008               	return
 38235  560E                     __end_of_Lcd_Set_Cursor:	
 38236                           
 38237                           	psect	text126
 38238  50FE                     __ptext126:	
 38239 ;; *************** function ___wmul *****************
 38240 ;; Defined at:
 38241 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 38242 ;; Parameters:    Size  Location     Type
 38243 ;;  multiplier      2   11[BANK0 ] unsigned int 
 38244 ;;  multiplicand    2   13[BANK0 ] unsigned int 
 38245 ;; Auto vars:     Size  Location     Type
 38246 ;;  product         2   15[BANK0 ] unsigned int 
 38247 ;; Return value:  Size  Location     Type
 38248 ;;                  2   11[BANK0 ] unsigned int 
 38249 ;; Registers used:
 38250 ;;		wreg, status,2, status,0
 38251 ;; Tracked objects:
 38252 ;;		On entry : 0/0
 38253 ;;		On exit  : 0/0
 38254 ;;		Unchanged: 0/0
 38255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38257 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38259 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38260 ;;Total ram usage:        6 bytes
 38261 ;; Hardware stack levels used:    1
 38262 ;; Hardware stack levels required when called:    3
 38263 ;; This function calls:
 38264 ;;		Nothing
 38265 ;; This function is called by:
 38266 ;;		_main
 38267 ;;		_ini_GERADOR
 38268 ;;		_op_desce
 38269 ;;		_op_solda
 38270 ;;		_op_fixar
 38271 ;;		_trata_dados
 38272 ;;		_trava_erro
 38273 ;;		_emergencia
 38274 ;;		_tela_ultima_solda
 38275 ;;		_tela_inicial
 38276 ;;		_telas
 38277 ;;		_escreve_tempos
 38278 ;;		_teste_pneumatico
 38279 ;;		_teste_US
 38280 ;;		_selectModo
 38281 ;;		_ini_ee_tempos
 38282 ;;		_printTelaSenha
 38283 ;;		_printTelaEditarSenha
 38284 ;;		_eval_poly
 38285 ;; This function uses a non-reentrant model
 38286 ;;
 38287                           
 38288                           
 38289                           ;psect for function ___wmul
 38290  50FE                     ___wmul:	
 38291                           
 38292                           ;incstack = 0
 38293                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 38294  50FE  0140               	movlb	0	; select bank0
 38295  50FF  01AF               	clrf	___wmul@product
 38296  5100  01B0               	clrf	___wmul@product+1
 38297  5101                     l14152:	
 38298  5101  1C2B               	btfss	___wmul@multiplier,0
 38299  5102  2907               	goto	l2812
 38300  5103  082D               	movf	___wmul@multiplicand,w
 38301  5104  07AF               	addwf	___wmul@product,f
 38302  5105  082E               	movf	___wmul@multiplicand+1,w
 38303  5106  3DB0               	addwfc	___wmul@product+1,f
 38304  5107                     l2812:	
 38305  5107  3001               	movlw	1
 38306  5108                     u14705:	
 38307  5108  35AD               	lslf	___wmul@multiplicand,f
 38308  5109  0DAE               	rlf	___wmul@multiplicand+1,f
 38309  510A  0B89               	decfsz	9,f
 38310  510B  2908               	goto	u14705
 38311  510C  3001               	movlw	1
 38312  510D                     u14715:	
 38313  510D  36AC               	lsrf	___wmul@multiplier+1,f
 38314  510E  0CAB               	rrf	___wmul@multiplier,f
 38315  510F  0B89               	decfsz	9,f
 38316  5110  290D               	goto	u14715
 38317  5111  082B               	movf	___wmul@multiplier,w
 38318  5112  042C               	iorwf	___wmul@multiplier+1,w
 38319  5113  1D03               	btfss	3,2
 38320  5114  2901               	goto	l14152
 38321  5115  0830               	movf	___wmul@product+1,w
 38322  5116  00AC               	movwf	?___wmul+1
 38323  5117  082F               	movf	___wmul@product,w
 38324  5118  00AB               	movwf	?___wmul
 38325  5119  0008               	return
 38326  511A                     __end_of___wmul:	
 38327                           
 38328                           	psect	text127
 38329  61DF                     __ptext127:	
 38330 ;; *************** function _Lcd_Clear *****************
 38331 ;; Defined at:
 38332 ;;		line 36 in file "lcd.c"
 38333 ;; Parameters:    Size  Location     Type
 38334 ;;		None
 38335 ;; Auto vars:     Size  Location     Type
 38336 ;;		None
 38337 ;; Return value:  Size  Location     Type
 38338 ;;                  1    wreg      void 
 38339 ;; Registers used:
 38340 ;;		wreg, status,2, status,0, pclath, cstack
 38341 ;; Tracked objects:
 38342 ;;		On entry : 0/0
 38343 ;;		On exit  : 0/0
 38344 ;;		Unchanged: 0/0
 38345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38350 ;;Total ram usage:        0 bytes
 38351 ;; Hardware stack levels used:    1
 38352 ;; Hardware stack levels required when called:    5
 38353 ;; This function calls:
 38354 ;;		_Lcd_Cmd
 38355 ;; This function is called by:
 38356 ;;		_main
 38357 ;;		_trata_dados
 38358 ;;		_tela_ultima_solda
 38359 ;;		_tela_inicial
 38360 ;;		_totalCiclos
 38361 ;;		_telas
 38362 ;;		_func_enter
 38363 ;;		_teste_pneumatico
 38364 ;;		_teste_US
 38365 ;;		_selectModo
 38366 ;;		_ini_ee_tempos
 38367 ;;		_ciclar
 38368 ;;		_ciclarPneumatico
 38369 ;;		_Inicia_LCD
 38370 ;;		_printTelaSenha
 38371 ;;		_printTelaEditarSenha
 38372 ;; This function uses a non-reentrant model
 38373 ;;
 38374                           
 38375                           
 38376                           ;psect for function _Lcd_Clear
 38377  61DF                     _Lcd_Clear:	
 38378                           
 38379                           ;lcd.c: 38: LATBbits.LATB6=0;
 38380                           
 38381                           ;incstack = 0
 38382                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 38383  61DF  0140               	movlb	0	; select bank0
 38384  61E0  1317               	bcf	23,6	;volatile
 38385                           
 38386                           ;lcd.c: 39: Lcd_Cmd(0);
 38387  61E1  3000               	movlw	0
 38388  61E2  31D0  20B0  31E1   	fcall	_Lcd_Cmd
 38389                           
 38390                           ;lcd.c: 40: Lcd_Cmd(1);
 38391  61E5  3001               	movlw	1
 38392  61E6  31D0  20B0         	fcall	_Lcd_Cmd
 38393                           
 38394                           ;lcd.c: 41: LATBbits.LATB6=1;
 38395  61E8  0140               	movlb	0	; select bank0
 38396  61E9  1717               	bsf	23,6	;volatile
 38397  61EA  0008               	return
 38398  61EB                     __end_of_Lcd_Clear:	
 38399                           
 38400                           	psect	text128
 38401  50B0                     __ptext128:	
 38402 ;; *************** function _Lcd_Cmd *****************
 38403 ;; Defined at:
 38404 ;;		line 25 in file "lcd.c"
 38405 ;; Parameters:    Size  Location     Type
 38406 ;;  a               1    wreg     unsigned char 
 38407 ;; Auto vars:     Size  Location     Type
 38408 ;;  a               1   13[BANK0 ] unsigned char 
 38409 ;; Return value:  Size  Location     Type
 38410 ;;                  1    wreg      void 
 38411 ;; Registers used:
 38412 ;;		wreg, status,2, status,0, pclath, cstack
 38413 ;; Tracked objects:
 38414 ;;		On entry : 0/0
 38415 ;;		On exit  : 0/0
 38416 ;;		Unchanged: 0/0
 38417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38419 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38420 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38421 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38422 ;;Total ram usage:        2 bytes
 38423 ;; Hardware stack levels used:    1
 38424 ;; Hardware stack levels required when called:    4
 38425 ;; This function calls:
 38426 ;;		_Lcd_Port
 38427 ;; This function is called by:
 38428 ;;		_Lcd_Clear
 38429 ;;		_Lcd_Set_Cursor
 38430 ;;		_Lcd_Init
 38431 ;;		_Lcd_Shift_Right
 38432 ;;		_Lcd_Shift_Left
 38433 ;; This function uses a non-reentrant model
 38434 ;;
 38435                           
 38436                           
 38437                           ;psect for function _Lcd_Cmd
 38438  50B0                     _Lcd_Cmd:	
 38439                           
 38440                           ;incstack = 0
 38441                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 38442                           ;Lcd_Cmd@a stored from wreg
 38443  50B0  0140               	movlb	0	; select bank0
 38444  50B1  00AD               	movwf	Lcd_Cmd@a
 38445                           
 38446                           ;lcd.c: 27: LATBbits.LATB6=0;
 38447  50B2  1317               	bcf	23,6	;volatile
 38448                           
 38449                           ;lcd.c: 28: LATBbits.LATB4 = 0;
 38450  50B3  1217               	bcf	23,4	;volatile
 38451                           
 38452                           ;lcd.c: 29: Lcd_Port(a);
 38453  50B4  082D               	movf	Lcd_Cmd@a,w
 38454  50B5  31D0  2099  31D0   	fcall	_Lcd_Port
 38455                           
 38456                           ;lcd.c: 30: LATBbits.LATB5 = 1;
 38457  50B8  0140               	movlb	0	; select bank0
 38458  50B9  1697               	bsf	23,5	;volatile
 38459                           
 38460                           ;lcd.c: 31: _delay((unsigned long)((4)*(20000000/4000.0)));
 38461  50BA  301A               	movlw	26
 38462  50BB  0140               	movlb	0	; select bank0
 38463  50BC  00AC               	movwf	??_Lcd_Cmd
 38464  50BD  30F8               	movlw	248
 38465  50BE                     u20947:	
 38466  50BE  0B89               	decfsz	9,f
 38467  50BF  28BE               	goto	u20947
 38468  50C0  0BAC               	decfsz	??_Lcd_Cmd,f
 38469  50C1  28BE               	goto	u20947
 38470  50C2  0000               	nop
 38471                           
 38472                           ;lcd.c: 32: LATBbits.LATB5 = 0;
 38473  50C3  0140               	movlb	0	; select bank0
 38474  50C4  1297               	bcf	23,5	;volatile
 38475                           
 38476                           ;lcd.c: 33: LATBbits.LATB6=1;
 38477  50C5  1717               	bsf	23,6	;volatile
 38478  50C6  0008               	return
 38479  50C7                     __end_of_Lcd_Cmd:	
 38480                           
 38481                           	psect	text129
 38482  5099                     __ptext129:	
 38483 ;; *************** function _Lcd_Port *****************
 38484 ;; Defined at:
 38485 ;;		line 3 in file "lcd.c"
 38486 ;; Parameters:    Size  Location     Type
 38487 ;;  a               1    wreg     unsigned char 
 38488 ;; Auto vars:     Size  Location     Type
 38489 ;;  a               1   11[BANK0 ] unsigned char 
 38490 ;; Return value:  Size  Location     Type
 38491 ;;                  1    wreg      void 
 38492 ;; Registers used:
 38493 ;;		wreg
 38494 ;; Tracked objects:
 38495 ;;		On entry : 0/0
 38496 ;;		On exit  : 0/0
 38497 ;;		Unchanged: 0/0
 38498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38500 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38502 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38503 ;;Total ram usage:        1 bytes
 38504 ;; Hardware stack levels used:    1
 38505 ;; Hardware stack levels required when called:    3
 38506 ;; This function calls:
 38507 ;;		Nothing
 38508 ;; This function is called by:
 38509 ;;		_Lcd_Cmd
 38510 ;;		_Lcd_Init
 38511 ;;		_Lcd_Write_Char
 38512 ;; This function uses a non-reentrant model
 38513 ;;
 38514                           
 38515                           
 38516                           ;psect for function _Lcd_Port
 38517  5099                     _Lcd_Port:	
 38518                           
 38519                           ;incstack = 0
 38520                           ; Regs used in _Lcd_Port: [wreg]
 38521                           ;Lcd_Port@a stored from wreg
 38522  5099  0140               	movlb	0	; select bank0
 38523  509A  00AB               	movwf	Lcd_Port@a
 38524                           
 38525                           ;lcd.c: 5: if(a & 1)
 38526  509B  1C2B               	btfss	Lcd_Port@a,0
 38527  509C  289F               	goto	l2226
 38528                           
 38529                           ;lcd.c: 6: LATBbits.LATB0 = 1;
 38530  509D  1417               	bsf	23,0	;volatile
 38531  509E  28A0               	goto	l13774
 38532  509F                     l2226:	
 38533                           
 38534                           ;lcd.c: 7: else
 38535                           ;lcd.c: 8: LATBbits.LATB0 = 0;
 38536  509F  1017               	bcf	23,0	;volatile
 38537  50A0                     l13774:	
 38538                           
 38539                           ;lcd.c: 10: if(a & 2)
 38540  50A0  1CAB               	btfss	Lcd_Port@a,1
 38541  50A1  28A4               	goto	l2228
 38542                           
 38543                           ;lcd.c: 11: LATBbits.LATB1 = 1;
 38544  50A2  1497               	bsf	23,1	;volatile
 38545  50A3  28A5               	goto	l13778
 38546  50A4                     l2228:	
 38547                           
 38548                           ;lcd.c: 12: else
 38549                           ;lcd.c: 13: LATBbits.LATB1 = 0;
 38550  50A4  1097               	bcf	23,1	;volatile
 38551  50A5                     l13778:	
 38552                           
 38553                           ;lcd.c: 15: if(a & 4)
 38554  50A5  1D2B               	btfss	Lcd_Port@a,2
 38555  50A6  28A9               	goto	l2230
 38556                           
 38557                           ;lcd.c: 16: LATBbits.LATB2 = 1;
 38558  50A7  1517               	bsf	23,2	;volatile
 38559  50A8  28AA               	goto	l13782
 38560  50A9                     l2230:	
 38561                           
 38562                           ;lcd.c: 17: else
 38563                           ;lcd.c: 18: LATBbits.LATB2 = 0;
 38564  50A9  1117               	bcf	23,2	;volatile
 38565  50AA                     l13782:	
 38566                           
 38567                           ;lcd.c: 20: if(a & 8)
 38568  50AA  1DAB               	btfss	Lcd_Port@a,3
 38569  50AB  28AE               	goto	l2232
 38570                           
 38571                           ;lcd.c: 21: LATBbits.LATB3 = 1;
 38572  50AC  1597               	bsf	23,3	;volatile
 38573  50AD  0008               	return
 38574  50AE                     l2232:	
 38575                           
 38576                           ;lcd.c: 22: else
 38577                           ;lcd.c: 23: LATBbits.LATB3 = 0;
 38578  50AE  1197               	bcf	23,3	;volatile
 38579  50AF  0008               	return
 38580  50B0                     __end_of_Lcd_Port:	
 38581                           
 38582                           	psect	text130
 38583  5735                     __ptext130:	
 38584 ;; *************** function _liberar_tecla *****************
 38585 ;; Defined at:
 38586 ;;		line 1429 in file "func.c"
 38587 ;; Parameters:    Size  Location     Type
 38588 ;;  b               1    wreg     unsigned char 
 38589 ;;  t               2   19[BANK0 ] unsigned int 
 38590 ;; Auto vars:     Size  Location     Type
 38591 ;;  b               1   25[BANK0 ] unsigned char 
 38592 ;;  tempo           2   28[BANK0 ] unsigned int 
 38593 ;;  temp            2   26[BANK0 ] unsigned int 
 38594 ;;  tc              1   30[BANK0 ] unsigned char 
 38595 ;; Return value:  Size  Location     Type
 38596 ;;                  2   19[BANK0 ] unsigned int 
 38597 ;; Registers used:
 38598 ;;		wreg, status,2, status,0, pclath, cstack
 38599 ;; Tracked objects:
 38600 ;;		On entry : 0/0
 38601 ;;		On exit  : 0/0
 38602 ;;		Unchanged: 0/0
 38603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38604 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38605 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38606 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38607 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38608 ;;Total ram usage:       12 bytes
 38609 ;; Hardware stack levels used:    1
 38610 ;; Hardware stack levels required when called:    5
 38611 ;; This function calls:
 38612 ;;		___lwdiv
 38613 ;;		_teclado
 38614 ;; This function is called by:
 38615 ;;		_main
 38616 ;;		_func_enter
 38617 ;;		_func_rst
 38618 ;;		_teste_pneumatico
 38619 ;;		_teste_US
 38620 ;;		_selectModo
 38621 ;;		_rotina_tela
 38622 ;;		_EditSenhaUser
 38623 ;;		_Autenticar
 38624 ;; This function uses a non-reentrant model
 38625 ;;
 38626                           
 38627                           
 38628                           ;psect for function _liberar_tecla
 38629  5735                     _liberar_tecla:	
 38630                           
 38631                           ;incstack = 0
 38632                           ; Regs used in _liberar_tecla: [wreg+status,2+status,0+pclath+cstack]
 38633                           ;liberar_tecla@b stored from wreg
 38634  5735  0140               	movlb	0	; select bank0
 38635  5736  00B9               	movwf	liberar_tecla@b
 38636                           
 38637                           ;func.c: 1430: char tc;
 38638                           ;func.c: 1431: unsigned int temp = t10ms, tempo = t/10;
 38639  5737  085F               	movf	_t10ms+1,w
 38640  5738  00BB               	movwf	liberar_tecla@temp+1
 38641  5739  085E               	movf	_t10ms,w
 38642  573A  00BA               	movwf	liberar_tecla@temp
 38643  573B  300A               	movlw	10
 38644  573C  00AB               	movwf	___lwdiv@divisor
 38645  573D  3000               	movlw	0
 38646  573E  00AC               	movwf	___lwdiv@divisor+1
 38647  573F  0834               	movf	liberar_tecla@t+1,w
 38648  5740  00AE               	movwf	___lwdiv@dividend+1
 38649  5741  0833               	movf	liberar_tecla@t,w
 38650  5742  00AD               	movwf	___lwdiv@dividend
 38651  5743  31D5  25A3  31D7   	fcall	___lwdiv
 38652  5746  0140               	movlb	0	; select bank0
 38653  5747  082C               	movf	?___lwdiv+1,w
 38654  5748  00BD               	movwf	liberar_tecla@tempo+1
 38655  5749  082B               	movf	?___lwdiv,w
 38656  574A  00BC               	movwf	liberar_tecla@tempo
 38657  574B                     l1663:	
 38658                           ;func.c: 1433: do{
 38659                           
 38660  574B  0064               	clrwdt	;# 
 38661                           
 38662                           ;func.c: 1435: tc = teclado();
 38663  574C  31C2  22CC  31D7   	fcall	_teclado
 38664  574F  0140               	movlb	0	; select bank0
 38665  5750  00B5               	movwf	??_liberar_tecla
 38666  5751  0835               	movf	??_liberar_tecla,w
 38667  5752  00BE               	movwf	liberar_tecla@tc
 38668                           
 38669                           ;func.c: 1436: if(t && (t10ms - temp >= tempo))
 38670  5753  0833               	movf	liberar_tecla@t,w
 38671  5754  0434               	iorwf	liberar_tecla@t+1,w
 38672  5755  1903               	btfsc	3,2
 38673  5756  2F6F               	goto	l14946
 38674  5757  093A               	comf	liberar_tecla@temp,w
 38675  5758  00B5               	movwf	??_liberar_tecla
 38676  5759  093B               	comf	liberar_tecla@temp+1,w
 38677  575A  00B6               	movwf	??_liberar_tecla+1
 38678  575B  0AB5               	incf	??_liberar_tecla,f
 38679  575C  1903               	skipnz
 38680  575D  0AB6               	incf	??_liberar_tecla+1,f
 38681  575E  085E               	movf	_t10ms,w
 38682  575F  0735               	addwf	??_liberar_tecla,w
 38683  5760  00B7               	movwf	??_liberar_tecla+2
 38684  5761  085F               	movf	_t10ms+1,w
 38685  5762  3D36               	addwfc	??_liberar_tecla+1,w
 38686  5763  00B8               	movwf	??_liberar_tecla+3
 38687  5764  083D               	movf	liberar_tecla@tempo+1,w
 38688  5765  0238               	subwf	??_liberar_tecla+3,w
 38689  5766  1D03               	skipz
 38690  5767  2F6A               	goto	u16225
 38691  5768  083C               	movf	liberar_tecla@tempo,w
 38692  5769  0237               	subwf	??_liberar_tecla+2,w
 38693  576A                     u16225:	
 38694  576A  1C03               	skipc
 38695  576B  2F6F               	goto	l14946
 38696                           
 38697                           ;func.c: 1437: return 0;
 38698  576C  01B3               	clrf	?_liberar_tecla
 38699  576D  01B4               	clrf	?_liberar_tecla+1
 38700  576E  0008               	return
 38701  576F                     l14946:	
 38702                           
 38703                           ;func.c: 1438: }while(b == tc);
 38704  576F  0839               	movf	liberar_tecla@b,w
 38705  5770  063E               	xorwf	liberar_tecla@tc,w
 38706  5771  1903               	skipnz
 38707  5772  2F4B               	goto	l1663
 38708                           
 38709                           ;func.c: 1440: return 1;
 38710  5773  3001               	movlw	1
 38711  5774  00B3               	movwf	?_liberar_tecla
 38712  5775  3000               	movlw	0
 38713  5776  00B4               	movwf	?_liberar_tecla+1
 38714  5777  0008               	return
 38715  5778                     __end_of_liberar_tecla:	
 38716                           
 38717                           	psect	text131
 38718  42CC                     __ptext131:	
 38719 ;; *************** function _teclado *****************
 38720 ;; Defined at:
 38721 ;;		line 1362 in file "func.c"
 38722 ;; Parameters:    Size  Location     Type
 38723 ;;		None
 38724 ;; Auto vars:     Size  Location     Type
 38725 ;;		None
 38726 ;; Return value:  Size  Location     Type
 38727 ;;                  1    wreg      unsigned char 
 38728 ;; Registers used:
 38729 ;;		wreg, status,2, status,0, pclath, cstack
 38730 ;; Tracked objects:
 38731 ;;		On entry : 0/0
 38732 ;;		On exit  : 0/0
 38733 ;;		Unchanged: 0/0
 38734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 38735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38738 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 38739 ;;Total ram usage:        1 bytes
 38740 ;; Hardware stack levels used:    1
 38741 ;; Hardware stack levels required when called:    4
 38742 ;; This function calls:
 38743 ;;		_bip_tecla
 38744 ;;		_start_timer
 38745 ;;		_stop_timer
 38746 ;; This function is called by:
 38747 ;;		_main
 38748 ;;		_trata_dados
 38749 ;;		_trava_erro
 38750 ;;		_emergencia
 38751 ;;		_liberar_tecla
 38752 ;;		_func_enter
 38753 ;;		_teste_pneumatico
 38754 ;;		_teste_US
 38755 ;;		_selectModo
 38756 ;;		_ini_ee_tempos
 38757 ;;		_ciclar
 38758 ;;		_ciclarPneumatico
 38759 ;;		_rotina_tela
 38760 ;;		_EditSenhaUser
 38761 ;;		_Autenticar
 38762 ;; This function uses a non-reentrant model
 38763 ;;
 38764                           
 38765                           
 38766                           ;psect for function _teclado
 38767  42CC                     _teclado:	
 38768                           
 38769                           ;func.c: 1363: static unsigned char b;
 38770                           ;func.c: 1365: if(btt.press){
 38771                           
 38772                           ;incstack = 0
 38773                           ; Regs used in _teclado: [wreg+status,2+status,0+pclath+cstack]
 38774  42CC  0143               	movlb	3	; select bank3
 38775  42CD  1C64               	btfss	_btt^(0+384),0	;volatile
 38776  42CE  2ADF               	goto	l14340
 38777                           
 38778                           ;func.c: 1366: if(b == (PORTD&0b00111111)){
 38779  42CF  303F               	movlw	63
 38780  42D0  0140               	movlb	0	; select bank0
 38781  42D1  050F               	andwf	15,w	;volatile
 38782  42D2  00AD               	movwf	??_teclado
 38783  42D3  082D               	movf	??_teclado,w
 38784  42D4  0143               	movlb	3	; select bank3
 38785  42D5  0655               	xorwf	teclado@b^(0+384),w
 38786  42D6  1D03               	skipz
 38787  42D7  2ADB               	goto	l1634
 38788                           
 38789                           ;func.c: 1368: btt.hold = 1;
 38790  42D8  1564               	bsf	_btt^(0+384),2	;volatile
 38791                           
 38792                           ;func.c: 1369: return b;
 38793  42D9  0855               	movf	teclado@b^(0+384),w
 38794  42DA  0008               	return
 38795  42DB                     l1634:	
 38796                           ;func.c: 1370: }
 38797                           
 38798                           
 38799                           ;func.c: 1371: else{
 38800                           ;func.c: 1373: btt.press = 0;
 38801  42DB  1064               	bcf	_btt^(0+384),0	;volatile
 38802                           
 38803                           ;func.c: 1374: btt.hold = 0;
 38804  42DC  1164               	bcf	_btt^(0+384),2	;volatile
 38805                           
 38806                           ;func.c: 1375: return 0;
 38807  42DD  3000               	movlw	0
 38808  42DE  0008               	return
 38809  42DF                     l14340:	
 38810                           ;func.c: 1376: }
 38811                           ;func.c: 1377: }
 38812                           
 38813                           
 38814                           ;func.c: 1378: else {
 38815                           ;func.c: 1379: b = 0;
 38816  42DF  01D5               	clrf	teclado@b^(0+384)
 38817                           
 38818                           ;func.c: 1380: LATD = 0b00000001;
 38819  42E0  3001               	movlw	1
 38820  42E1  0140               	movlb	0	; select bank0
 38821  42E2  0099               	movwf	25	;volatile
 38822                           
 38823                           ;func.c: 1381: start_timer(50);
 38824  42E3  3032               	movlw	50
 38825  42E4  00AB               	movwf	start_timer@t
 38826  42E5  3000               	movlw	0
 38827  42E6  00AC               	movwf	start_timer@t+1
 38828  42E7  31E1  2165  31C2   	fcall	_start_timer
 38829                           
 38830                           ;func.c: 1382: while(T5CONbits.TMR5ON && !btt.press){
 38831  42EA  2AFF               	goto	l1638
 38832  42EB                     l14346:	
 38833                           
 38834                           ;func.c: 1383: b = (PORTD&0b00111111);
 38835  42EB  0140               	movlb	0	; select bank0
 38836  42EC  080F               	movf	15,w	;volatile
 38837  42ED  393F               	andlw	63
 38838  42EE  00AD               	movwf	??_teclado
 38839  42EF  082D               	movf	??_teclado,w
 38840  42F0  0143               	movlb	3	; select bank3
 38841  42F1  00D5               	movwf	teclado@b^(0+384)
 38842                           
 38843                           ;func.c: 1384: if(b > 8){
 38844  42F2  3009               	movlw	9
 38845  42F3  0255               	subwf	teclado@b^(0+384),w
 38846  42F4  1C03               	skipc
 38847  42F5  2AFF               	goto	l1638
 38848                           
 38849                           ;func.c: 1385: btt.press = 1;
 38850  42F6  1464               	bsf	_btt^(0+384),0	;volatile
 38851                           
 38852                           ;func.c: 1386: bip_tecla();
 38853  42F7  31D2  2251  31C2   	fcall	_bip_tecla
 38854                           
 38855                           ;func.c: 1387: stop_timer();
 38856  42FA  3190  2000         	fcall	_stop_timer
 38857                           
 38858                           ;func.c: 1388: return b;
 38859  42FC  0143               	movlb	3	; select bank3
 38860  42FD  0855               	movf	teclado@b^(0+384),w
 38861  42FE  0008               	return
 38862  42FF                     l1638:	
 38863  42FF  0144               	movlb	4	; select bank4
 38864  4300  1C1A               	btfss	26,0	;volatile
 38865  4301  2B05               	goto	l14360
 38866  4302  0143               	movlb	3	; select bank3
 38867  4303  1C64               	btfss	_btt^(0+384),0	;volatile
 38868  4304  2AEB               	goto	l14346
 38869  4305                     l14360:	
 38870                           
 38871                           ;func.c: 1389: }
 38872                           ;func.c: 1390: }
 38873                           ;func.c: 1392: LATD = 0b00000010;
 38874  4305  3002               	movlw	2
 38875  4306  0140               	movlb	0	; select bank0
 38876  4307  0099               	movwf	25	;volatile
 38877                           
 38878                           ;func.c: 1393: start_timer(50);
 38879  4308  3032               	movlw	50
 38880  4309  00AB               	movwf	start_timer@t
 38881  430A  3000               	movlw	0
 38882  430B  00AC               	movwf	start_timer@t+1
 38883  430C  31E1  2165  31C2   	fcall	_start_timer
 38884                           
 38885                           ;func.c: 1394: while(T5CONbits.TMR5ON && !btt.press){
 38886  430F  2B24               	goto	l1644
 38887  4310                     l14364:	
 38888                           
 38889                           ;func.c: 1395: b = (PORTD&0b00111111);
 38890  4310  0140               	movlb	0	; select bank0
 38891  4311  080F               	movf	15,w	;volatile
 38892  4312  393F               	andlw	63
 38893  4313  00AD               	movwf	??_teclado
 38894  4314  082D               	movf	??_teclado,w
 38895  4315  0143               	movlb	3	; select bank3
 38896  4316  00D5               	movwf	teclado@b^(0+384)
 38897                           
 38898                           ;func.c: 1396: if(b > 8){
 38899  4317  3009               	movlw	9
 38900  4318  0255               	subwf	teclado@b^(0+384),w
 38901  4319  1C03               	skipc
 38902  431A  2B24               	goto	l1644
 38903                           
 38904                           ;func.c: 1397: btt.press = 1;
 38905  431B  1464               	bsf	_btt^(0+384),0	;volatile
 38906                           
 38907                           ;func.c: 1398: bip_tecla();
 38908  431C  31D2  2251  31C2   	fcall	_bip_tecla
 38909                           
 38910                           ;func.c: 1399: stop_timer();
 38911  431F  3190  2000         	fcall	_stop_timer
 38912                           
 38913                           ;func.c: 1400: return b;
 38914  4321  0143               	movlb	3	; select bank3
 38915  4322  0855               	movf	teclado@b^(0+384),w
 38916  4323  0008               	return
 38917  4324                     l1644:	
 38918  4324  0144               	movlb	4	; select bank4
 38919  4325  1C1A               	btfss	26,0	;volatile
 38920  4326  2B2A               	goto	l14378
 38921  4327  0143               	movlb	3	; select bank3
 38922  4328  1C64               	btfss	_btt^(0+384),0	;volatile
 38923  4329  2B10               	goto	l14364
 38924  432A                     l14378:	
 38925                           
 38926                           ;func.c: 1401: }
 38927                           ;func.c: 1402: }
 38928                           ;func.c: 1404: LATD = 0b00000100;
 38929  432A  3004               	movlw	4
 38930  432B  0140               	movlb	0	; select bank0
 38931  432C  0099               	movwf	25	;volatile
 38932                           
 38933                           ;func.c: 1405: start_timer(50);
 38934  432D  3032               	movlw	50
 38935  432E  00AB               	movwf	start_timer@t
 38936  432F  3000               	movlw	0
 38937  4330  00AC               	movwf	start_timer@t+1
 38938  4331  31E1  2165  31C2   	fcall	_start_timer
 38939                           
 38940                           ;func.c: 1406: while(T5CONbits.TMR5ON && !btt.press){
 38941  4334  2B49               	goto	l1650
 38942  4335                     l14382:	
 38943                           
 38944                           ;func.c: 1407: b = (PORTD&0b00111111);
 38945  4335  0140               	movlb	0	; select bank0
 38946  4336  080F               	movf	15,w	;volatile
 38947  4337  393F               	andlw	63
 38948  4338  00AD               	movwf	??_teclado
 38949  4339  082D               	movf	??_teclado,w
 38950  433A  0143               	movlb	3	; select bank3
 38951  433B  00D5               	movwf	teclado@b^(0+384)
 38952                           
 38953                           ;func.c: 1408: if(b > 8){
 38954  433C  3009               	movlw	9
 38955  433D  0255               	subwf	teclado@b^(0+384),w
 38956  433E  1C03               	skipc
 38957  433F  2B49               	goto	l1650
 38958                           
 38959                           ;func.c: 1409: btt.press = 1;
 38960  4340  1464               	bsf	_btt^(0+384),0	;volatile
 38961                           
 38962                           ;func.c: 1410: bip_tecla();
 38963  4341  31D2  2251  31C2   	fcall	_bip_tecla
 38964                           
 38965                           ;func.c: 1411: stop_timer();
 38966  4344  3190  2000         	fcall	_stop_timer
 38967                           
 38968                           ;func.c: 1412: return b;
 38969  4346  0143               	movlb	3	; select bank3
 38970  4347  0855               	movf	teclado@b^(0+384),w
 38971  4348  0008               	return
 38972  4349                     l1650:	
 38973  4349  0144               	movlb	4	; select bank4
 38974  434A  1C1A               	btfss	26,0	;volatile
 38975  434B  2B4F               	goto	l14396
 38976  434C  0143               	movlb	3	; select bank3
 38977  434D  1C64               	btfss	_btt^(0+384),0	;volatile
 38978  434E  2B35               	goto	l14382
 38979  434F                     l14396:	
 38980                           
 38981                           ;func.c: 1413: }
 38982                           ;func.c: 1414: }
 38983                           ;func.c: 1415: }
 38984                           ;func.c: 1416: return b;
 38985  434F  0143               	movlb	3	; select bank3
 38986  4350  0855               	movf	teclado@b^(0+384),w
 38987  4351  0008               	return
 38988  4352                     __end_of_teclado:	
 38989                           
 38990                           	psect	text132
 38991  1000                     __ptext132:	
 38992 ;; *************** function _stop_timer *****************
 38993 ;; Defined at:
 38994 ;;		line 2414 in file "func.c"
 38995 ;; Parameters:    Size  Location     Type
 38996 ;;		None
 38997 ;; Auto vars:     Size  Location     Type
 38998 ;;		None
 38999 ;; Return value:  Size  Location     Type
 39000 ;;                  1    wreg      void 
 39001 ;; Registers used:
 39002 ;;		None
 39003 ;; Tracked objects:
 39004 ;;		On entry : 0/0
 39005 ;;		On exit  : 0/0
 39006 ;;		Unchanged: 0/0
 39007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39012 ;;Total ram usage:        0 bytes
 39013 ;; Hardware stack levels used:    1
 39014 ;; Hardware stack levels required when called:    3
 39015 ;; This function calls:
 39016 ;;		Nothing
 39017 ;; This function is called by:
 39018 ;;		_op_desce
 39019 ;;		_op_solda
 39020 ;;		_op_fixar
 39021 ;;		_teclado
 39022 ;; This function uses a non-reentrant model
 39023 ;;
 39024                           
 39025                           
 39026                           ;psect for function _stop_timer
 39027  1000                     _stop_timer:	
 39028                           
 39029                           ;func.c: 2415: T5CONbits.TMR5ON = 0;
 39030                           
 39031                           ;incstack = 0
 39032                           ; Regs used in _stop_timer: []
 39033  1000  0144               	movlb	4	; select bank4
 39034  1001  101A               	bcf	26,0	;volatile
 39035  1002  0008               	return
 39036  1003                     __end_of_stop_timer:	
 39037                           
 39038                           	psect	text133
 39039  6165                     __ptext133:	
 39040 ;; *************** function _start_timer *****************
 39041 ;; Defined at:
 39042 ;;		line 2408 in file "func.c"
 39043 ;; Parameters:    Size  Location     Type
 39044 ;;  t               2   11[BANK0 ] unsigned int 
 39045 ;; Auto vars:     Size  Location     Type
 39046 ;;		None
 39047 ;; Return value:  Size  Location     Type
 39048 ;;                  1    wreg      void 
 39049 ;; Registers used:
 39050 ;;		wreg, status,2
 39051 ;; Tracked objects:
 39052 ;;		On entry : 0/0
 39053 ;;		On exit  : 0/0
 39054 ;;		Unchanged: 0/0
 39055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39056 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39059 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39060 ;;Total ram usage:        2 bytes
 39061 ;; Hardware stack levels used:    1
 39062 ;; Hardware stack levels required when called:    3
 39063 ;; This function calls:
 39064 ;;		Nothing
 39065 ;; This function is called by:
 39066 ;;		_op_desce
 39067 ;;		_op_solda
 39068 ;;		_op_fixar
 39069 ;;		_teclado
 39070 ;; This function uses a non-reentrant model
 39071 ;;
 39072                           
 39073                           
 39074                           ;psect for function _start_timer
 39075  6165                     _start_timer:	
 39076                           
 39077                           ;func.c: 2409: t1ms_OP = t;
 39078                           
 39079                           ;incstack = 0
 39080                           ; Regs used in _start_timer: [wreg+status,2]
 39081  6165  0140               	movlb	0	; select bank0
 39082  6166  082C               	movf	start_timer@t+1,w
 39083  6167  0144               	movlb	4	; select bank4
 39084  6168  00D5               	movwf	(_t1ms_OP+1)^(0+512)
 39085  6169  0140               	movlb	0	; select bank0
 39086  616A  082B               	movf	start_timer@t,w
 39087  616B  0144               	movlb	4	; select bank4
 39088  616C  00D4               	movwf	_t1ms_OP^(0+512)
 39089                           
 39090                           ;func.c: 2410: t1ms_ISR = 0;
 39091  616D  0143               	movlb	3	; select bank3
 39092  616E  01C8               	clrf	_t1ms_ISR^(0+384)
 39093  616F  01C9               	clrf	(_t1ms_ISR+1)^(0+384)
 39094                           
 39095                           ;func.c: 2411: t1msMM_ISR = 0;
 39096  6170  0144               	movlb	4	; select bank4
 39097  6171  01D6               	clrf	_t1msMM_ISR^(0+512)
 39098  6172  01D7               	clrf	(_t1msMM_ISR+1)^(0+512)
 39099                           
 39100                           ;func.c: 2412: T5CONbits.TMR5ON = 1;
 39101  6173  141A               	bsf	26,0	;volatile
 39102  6174  0008               	return
 39103  6175                     __end_of_start_timer:	
 39104                           
 39105                           	psect	text134
 39106  5251                     __ptext134:	
 39107 ;; *************** function _bip_tecla *****************
 39108 ;; Defined at:
 39109 ;;		line 1419 in file "func.c"
 39110 ;; Parameters:    Size  Location     Type
 39111 ;;		None
 39112 ;; Auto vars:     Size  Location     Type
 39113 ;;		None
 39114 ;; Return value:  Size  Location     Type
 39115 ;;                  1    wreg      void 
 39116 ;; Registers used:
 39117 ;;		wreg
 39118 ;; Tracked objects:
 39119 ;;		On entry : 0/0
 39120 ;;		On exit  : 0/0
 39121 ;;		Unchanged: 0/0
 39122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39125 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39126 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39127 ;;Total ram usage:        2 bytes
 39128 ;; Hardware stack levels used:    1
 39129 ;; Hardware stack levels required when called:    3
 39130 ;; This function calls:
 39131 ;;		Nothing
 39132 ;; This function is called by:
 39133 ;;		_teclado
 39134 ;;		_ini_ee_tempos
 39135 ;; This function uses a non-reentrant model
 39136 ;;
 39137                           
 39138                           
 39139                           ;psect for function _bip_tecla
 39140  5251                     _bip_tecla:	
 39141                           
 39142                           ;func.c: 1420: if(!flag_in.emerg){
 39143                           
 39144                           ;incstack = 0
 39145                           ; Regs used in _bip_tecla: [wreg]
 39146  5251  0143               	movlb	3	; select bank3
 39147  5252  184C               	btfsc	_flag_in^(0+384),0	;volatile
 39148  5253  2A66               	goto	l14128
 39149                           
 39150                           ;func.c: 1421: LATBbits.LATB7 = 1;
 39151  5254  0140               	movlb	0	; select bank0
 39152  5255  1797               	bsf	23,7	;volatile
 39153                           
 39154                           ;func.c: 1422: _delay((unsigned long)((100)*(20000000/4000.0)));
 39155  5256  3003               	movlw	3
 39156  5257  0140               	movlb	0	; select bank0
 39157  5258  00AC               	movwf	??_bip_tecla+1
 39158  5259  308A               	movlw	138
 39159  525A  00AB               	movwf	??_bip_tecla
 39160  525B  3055               	movlw	85
 39161  525C                     u20957:	
 39162  525C  0B89               	decfsz	9,f
 39163  525D  2A5C               	goto	u20957
 39164  525E  0BAB               	decfsz	??_bip_tecla,f
 39165  525F  2A5C               	goto	u20957
 39166  5260  0BAC               	decfsz	??_bip_tecla+1,f
 39167  5261  2A5C               	goto	u20957
 39168  5262  3200               	nop2
 39169                           
 39170                           ;func.c: 1423: LATBbits.LATB7 = 0;
 39171  5263  0140               	movlb	0	; select bank0
 39172  5264  1397               	bcf	23,7	;volatile
 39173                           
 39174                           ;func.c: 1424: }
 39175  5265  0008               	return
 39176  5266                     l14128:	
 39177                           
 39178                           ;func.c: 1425: else
 39179                           ;func.c: 1426: _delay((unsigned long)((100)*(20000000/4000.0)));
 39180  5266  3003               	movlw	3
 39181  5267  0140               	movlb	0	; select bank0
 39182  5268  00AC               	movwf	??_bip_tecla+1
 39183  5269  308A               	movlw	138
 39184  526A  00AB               	movwf	??_bip_tecla
 39185  526B  3055               	movlw	85
 39186  526C                     u20967:	
 39187  526C  0B89               	decfsz	9,f
 39188  526D  2A6C               	goto	u20967
 39189  526E  0BAB               	decfsz	??_bip_tecla,f
 39190  526F  2A6C               	goto	u20967
 39191  5270  0BAC               	decfsz	??_bip_tecla+1,f
 39192  5271  2A6C               	goto	u20967
 39193  5272  3200               	nop2
 39194  5273  0008               	return
 39195  5274                     __end_of_bip_tecla:	
 39196                           
 39197                           	psect	text135
 39198  55A3                     __ptext135:	
 39199 ;; *************** function ___lwdiv *****************
 39200 ;; Defined at:
 39201 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 39202 ;; Parameters:    Size  Location     Type
 39203 ;;  divisor         2   11[BANK0 ] unsigned int 
 39204 ;;  dividend        2   13[BANK0 ] unsigned int 
 39205 ;; Auto vars:     Size  Location     Type
 39206 ;;  quotient        2   17[BANK0 ] unsigned int 
 39207 ;;  counter         1   16[BANK0 ] unsigned char 
 39208 ;; Return value:  Size  Location     Type
 39209 ;;                  2   11[BANK0 ] unsigned int 
 39210 ;; Registers used:
 39211 ;;		wreg, status,2, status,0
 39212 ;; Tracked objects:
 39213 ;;		On entry : 0/0
 39214 ;;		On exit  : 0/0
 39215 ;;		Unchanged: 0/0
 39216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39217 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39218 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39219 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39220 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39221 ;;Total ram usage:        8 bytes
 39222 ;; Hardware stack levels used:    1
 39223 ;; Hardware stack levels required when called:    3
 39224 ;; This function calls:
 39225 ;;		Nothing
 39226 ;; This function is called by:
 39227 ;;		_XC
 39228 ;;		_liberar_tecla
 39229 ;;		_ciclar
 39230 ;;		_ciclarPneumatico
 39231 ;;		_sprintf
 39232 ;;		_utoa
 39233 ;; This function uses a non-reentrant model
 39234 ;;
 39235                           
 39236                           
 39237                           ;psect for function ___lwdiv
 39238  55A3                     ___lwdiv:	
 39239                           
 39240                           ;incstack = 0
 39241                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 39242  55A3  0140               	movlb	0	; select bank0
 39243  55A4  01B1               	clrf	___lwdiv@quotient
 39244  55A5  01B2               	clrf	___lwdiv@quotient+1
 39245  55A6  082B               	movf	___lwdiv@divisor,w
 39246  55A7  042C               	iorwf	___lwdiv@divisor+1,w
 39247  55A8  1903               	btfsc	3,2
 39248  55A9  2DD3               	goto	l14834
 39249  55AA  01B0               	clrf	___lwdiv@counter
 39250  55AB  0AB0               	incf	___lwdiv@counter,f
 39251  55AC                     l14822:	
 39252  55AC  1BAC               	btfsc	___lwdiv@divisor+1,7
 39253  55AD  2DB8               	goto	l14824
 39254  55AE  3001               	movlw	1
 39255  55AF                     u16015:	
 39256  55AF  35AB               	lslf	___lwdiv@divisor,f
 39257  55B0  0DAC               	rlf	___lwdiv@divisor+1,f
 39258  55B1  0B89               	decfsz	9,f
 39259  55B2  2DAF               	goto	u16015
 39260  55B3  3001               	movlw	1
 39261  55B4  00AF               	movwf	??___lwdiv
 39262  55B5  082F               	movf	??___lwdiv,w
 39263  55B6  07B0               	addwf	___lwdiv@counter,f
 39264  55B7  2DAC               	goto	l14822
 39265  55B8                     l14824:	
 39266  55B8  3001               	movlw	1
 39267  55B9                     u16035:	
 39268  55B9  35B1               	lslf	___lwdiv@quotient,f
 39269  55BA  0DB2               	rlf	___lwdiv@quotient+1,f
 39270  55BB  0B89               	decfsz	9,f
 39271  55BC  2DB9               	goto	u16035
 39272  55BD  082C               	movf	___lwdiv@divisor+1,w
 39273  55BE  022E               	subwf	___lwdiv@dividend+1,w
 39274  55BF  1D03               	skipz
 39275  55C0  2DC3               	goto	u16045
 39276  55C1  082B               	movf	___lwdiv@divisor,w
 39277  55C2  022D               	subwf	___lwdiv@dividend,w
 39278  55C3                     u16045:	
 39279  55C3  1C03               	skipc
 39280  55C4  2DCA               	goto	l14830
 39281  55C5  082B               	movf	___lwdiv@divisor,w
 39282  55C6  02AD               	subwf	___lwdiv@dividend,f
 39283  55C7  082C               	movf	___lwdiv@divisor+1,w
 39284  55C8  3BAE               	subwfb	___lwdiv@dividend+1,f
 39285  55C9  1431               	bsf	___lwdiv@quotient,0
 39286  55CA                     l14830:	
 39287  55CA  3001               	movlw	1
 39288  55CB                     u16055:	
 39289  55CB  36AC               	lsrf	___lwdiv@divisor+1,f
 39290  55CC  0CAB               	rrf	___lwdiv@divisor,f
 39291  55CD  0B89               	decfsz	9,f
 39292  55CE  2DCB               	goto	u16055
 39293  55CF  3001               	movlw	1
 39294  55D0  02B0               	subwf	___lwdiv@counter,f
 39295  55D1  1D03               	btfss	3,2
 39296  55D2  2DB8               	goto	l14824
 39297  55D3                     l14834:	
 39298  55D3  0832               	movf	___lwdiv@quotient+1,w
 39299  55D4  00AC               	movwf	?___lwdiv+1
 39300  55D5  0831               	movf	___lwdiv@quotient,w
 39301  55D6  00AB               	movwf	?___lwdiv
 39302  55D7  0008               	return
 39303  55D8                     __end_of___lwdiv:	
 39304                           
 39305                           	psect	text136
 39306  5299                     __ptext136:	
 39307 ;; *************** function _eeprom_write *****************
 39308 ;; Defined at:
 39309 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eewrite.c"
 39310 ;; Parameters:    Size  Location     Type
 39311 ;;  addr            1    wreg     unsigned char 
 39312 ;;  value           1   11[BANK0 ] unsigned char 
 39313 ;; Auto vars:     Size  Location     Type
 39314 ;;  addr            1   12[BANK0 ] unsigned char 
 39315 ;; Return value:  Size  Location     Type
 39316 ;;                  1    wreg      void 
 39317 ;; Registers used:
 39318 ;;		wreg, status,2
 39319 ;; Tracked objects:
 39320 ;;		On entry : 0/0
 39321 ;;		On exit  : 0/0
 39322 ;;		Unchanged: 0/0
 39323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39324 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39325 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39327 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39328 ;;Total ram usage:        2 bytes
 39329 ;; Hardware stack levels used:    1
 39330 ;; Hardware stack levels required when called:    3
 39331 ;; This function calls:
 39332 ;;		Nothing
 39333 ;; This function is called by:
 39334 ;;		_salva_EEPROM
 39335 ;;		_salva_EEPROM32
 39336 ;;		_selectModo
 39337 ;;		_ini_ee_tempos
 39338 ;;		_rotina_tela
 39339 ;;		_EditSenhaUser
 39340 ;; This function uses a non-reentrant model
 39341 ;;
 39342                           
 39343                           
 39344                           ;psect for function _eeprom_write
 39345  5299                     _eeprom_write:	
 39346                           
 39347                           ;incstack = 0
 39348                           ; Regs used in _eeprom_write: [wreg+status,2]
 39349                           ;eeprom_write@addr stored from wreg
 39350  5299  0140               	movlb	0	; select bank0
 39351  529A  00AC               	movwf	eeprom_write@addr
 39352  529B                     l2721:	
 39353  529B  0150               	movlb	16	; select bank16
 39354  529C  189E               	btfsc	30,1	;volsfr
 39355  529D  2A9B               	goto	l2721
 39356  529E  171E               	bsf	30,6	;volsfr
 39357  529F  0140               	movlb	0	; select bank0
 39358  52A0  082C               	movf	eeprom_write@addr,w
 39359  52A1  0150               	movlb	16	; select bank16
 39360  52A2  009A               	movwf	26	;volatile
 39361  52A3  3070               	movlw	112
 39362  52A4  009B               	movwf	27	;volatile
 39363  52A5  019D               	clrf	29	;volatile
 39364  52A6  0140               	movlb	0	; select bank0
 39365  52A7  082B               	movf	eeprom_write@value,w
 39366  52A8  0150               	movlb	16	; select bank16
 39367  52A9  009C               	movwf	28	;volatile
 39368  52AA  0140               	movlb	0	; select bank0
 39369  52AB  1003               	bcf	3,0	;volatile
 39370  52AC  1B8B               	btfsc	11,7	;volatile
 39371  52AD  1403               	bsf	3,0	;volatile
 39372  52AE  138B               	bcf	11,7	;volatile
 39373  52AF  0150               	movlb	16	; select bank16
 39374  52B0  151E               	bsf	30,2	;volsfr
 39375  52B1  3055               	movlw	85
 39376  52B2  009F               	movwf	31	;volsfr
 39377  52B3  30AA               	movlw	170
 39378  52B4  009F               	movwf	31	;volsfr
 39379  52B5  149E               	bsf	30,1	;volsfr
 39380  52B6                     l2725:	
 39381  52B6  189E               	btfsc	30,1	;volsfr
 39382  52B7  2AB6               	goto	l2725
 39383  52B8  111E               	bcf	30,2	;volsfr
 39384  52B9  0140               	movlb	0	; select bank0
 39385  52BA  1C03               	btfss	3,0	;volatile
 39386  52BB  0008               	return
 39387  52BC  178B               	bsf	11,7	;volatile
 39388  52BD  0008               	return
 39389  52BE                     __end_of_eeprom_write:	
 39390                           
 39391                           	psect	text137
 39392  5274                     __ptext137:	
 39393 ;; *************** function _LoadSenhaUser *****************
 39394 ;; Defined at:
 39395 ;;		line 8 in file "login.c"
 39396 ;; Parameters:    Size  Location     Type
 39397 ;;		None
 39398 ;; Auto vars:     Size  Location     Type
 39399 ;;		None
 39400 ;; Return value:  Size  Location     Type
 39401 ;;                  1    wreg      void 
 39402 ;; Registers used:
 39403 ;;		wreg, status,2, pclath, cstack
 39404 ;; Tracked objects:
 39405 ;;		On entry : 0/0
 39406 ;;		On exit  : 0/0
 39407 ;;		Unchanged: 0/0
 39408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39412 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39413 ;;Total ram usage:        1 bytes
 39414 ;; Hardware stack levels used:    1
 39415 ;; Hardware stack levels required when called:    4
 39416 ;; This function calls:
 39417 ;;		_eeprom_read
 39418 ;; This function is called by:
 39419 ;;		_EditSenhaUser
 39420 ;;		_Autenticar
 39421 ;; This function uses a non-reentrant model
 39422 ;;
 39423                           
 39424                           
 39425                           ;psect for function _LoadSenhaUser
 39426  5274                     _LoadSenhaUser:	
 39427                           
 39428                           ;login.c: 10: senha_user[0] = eeprom_read(230);
 39429                           
 39430                           ;incstack = 0
 39431                           ; Regs used in _LoadSenhaUser: [wreg+status,2+pclath+cstack]
 39432  5274  30E6               	movlw	230
 39433  5275  31E1  2112  31D2   	fcall	_eeprom_read
 39434  5278  0140               	movlb	0	; select bank0
 39435  5279  00AC               	movwf	??_LoadSenhaUser
 39436  527A  082C               	movf	??_LoadSenhaUser,w
 39437  527B  0145               	movlb	5	; select bank5
 39438  527C  00D7               	movwf	_senha_user^(0+640)
 39439                           
 39440                           ;login.c: 11: senha_user[1] = eeprom_read(231);
 39441  527D  30E7               	movlw	231
 39442  527E  31E1  2112  31D2   	fcall	_eeprom_read
 39443  5281  0140               	movlb	0	; select bank0
 39444  5282  00AC               	movwf	??_LoadSenhaUser
 39445  5283  082C               	movf	??_LoadSenhaUser,w
 39446  5284  0145               	movlb	5	; select bank5
 39447  5285  00D8               	movwf	(_senha_user^(0+640)+1)
 39448                           
 39449                           ;login.c: 12: senha_user[2] = eeprom_read(232);
 39450  5286  30E8               	movlw	232
 39451  5287  31E1  2112  31D2   	fcall	_eeprom_read
 39452  528A  0140               	movlb	0	; select bank0
 39453  528B  00AC               	movwf	??_LoadSenhaUser
 39454  528C  082C               	movf	??_LoadSenhaUser,w
 39455  528D  0145               	movlb	5	; select bank5
 39456  528E  00D9               	movwf	(_senha_user^(0+640)+2)
 39457                           
 39458                           ;login.c: 13: senha_user[3] = eeprom_read(233);
 39459  528F  30E9               	movlw	233
 39460  5290  31E1  2112         	fcall	_eeprom_read
 39461  5292  0140               	movlb	0	; select bank0
 39462  5293  00AC               	movwf	??_LoadSenhaUser
 39463  5294  082C               	movf	??_LoadSenhaUser,w
 39464  5295  0145               	movlb	5	; select bank5
 39465  5296  00DA               	movwf	(_senha_user^(0+640)+3)
 39466                           
 39467                           ;login.c: 14: senha_user[4] = 0;
 39468  5297  01DB               	clrf	(_senha_user^(0+640)+4)
 39469  5298  0008               	return
 39470  5299                     __end_of_LoadSenhaUser:	
 39471                           
 39472                           	psect	text138
 39473  6112                     __ptext138:	
 39474 ;; *************** function _eeprom_read *****************
 39475 ;; Defined at:
 39476 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic\eeread.c"
 39477 ;; Parameters:    Size  Location     Type
 39478 ;;  addr            1    wreg     unsigned char 
 39479 ;; Auto vars:     Size  Location     Type
 39480 ;;  addr            1   11[BANK0 ] unsigned char 
 39481 ;; Return value:  Size  Location     Type
 39482 ;;                  1    wreg      unsigned char 
 39483 ;; Registers used:
 39484 ;;		wreg
 39485 ;; Tracked objects:
 39486 ;;		On entry : 0/0
 39487 ;;		On exit  : 0/0
 39488 ;;		Unchanged: 0/0
 39489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39494 ;;Total ram usage:        1 bytes
 39495 ;; Hardware stack levels used:    1
 39496 ;; Hardware stack levels required when called:    3
 39497 ;; This function calls:
 39498 ;;		Nothing
 39499 ;; This function is called by:
 39500 ;;		_carrega_EEPROM
 39501 ;;		_carrega_EEPROM32
 39502 ;;		_ini_ee_tempos
 39503 ;;		_LoadSenhaUser
 39504 ;;		_LoadSenhaGerador
 39505 ;; This function uses a non-reentrant model
 39506 ;;
 39507                           
 39508                           
 39509                           ;psect for function _eeprom_read
 39510  6112                     _eeprom_read:	
 39511                           
 39512                           ;incstack = 0
 39513                           ; Regs used in _eeprom_read: [wreg]
 39514                           ;eeprom_read@addr stored from wreg
 39515  6112  0140               	movlb	0	; select bank0
 39516  6113  00AB               	movwf	eeprom_read@addr
 39517  6114  2916               	goto	l2699
 39518  6115                     u14571:	
 39519  6115  0140               	movlb	0	; select bank0
 39520  6116                     l2699:	
 39521  6116  0064               	clrwdt	;# 
 39522  6117  0150               	movlb	16	; select bank16
 39523  6118  189E               	btfsc	30,1	;volsfr
 39524  6119  2915               	goto	u14571
 39525  611A  171E               	bsf	30,6	;volsfr
 39526  611B  0140               	movlb	0	; select bank0
 39527  611C  082B               	movf	eeprom_read@addr,w
 39528  611D  0150               	movlb	16	; select bank16
 39529  611E  009A               	movwf	26	;volatile
 39530  611F  3070               	movlw	112
 39531  6120  009B               	movwf	27	;volatile
 39532  6121  141E               	bsf	30,0	;volsfr
 39533  6122  081C               	movf	28,w	;volatile
 39534  6123  0008               	return
 39535  6124                     __end_of_eeprom_read:	
 39536                           
 39537                           	psect	intentry
 39538  0004                     __pintentry:	
 39539 ;; *************** function _INTERRUPT_InterruptManager *****************
 39540 ;; Defined at:
 39541 ;;		line 4 in file "func.c"
 39542 ;; Parameters:    Size  Location     Type
 39543 ;;		None
 39544 ;; Auto vars:     Size  Location     Type
 39545 ;;  i               1   10[BANK0 ] unsigned char 
 39546 ;; Return value:  Size  Location     Type
 39547 ;;                  1    wreg      void 
 39548 ;; Registers used:
 39549 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 39550 ;; Tracked objects:
 39551 ;;		On entry : 0/0
 39552 ;;		On exit  : 0/0
 39553 ;;		Unchanged: 0/0
 39554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39556 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39557 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39558 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39559 ;;Total ram usage:        5 bytes
 39560 ;; Hardware stack levels used:    1
 39561 ;; Hardware stack levels required when called:    2
 39562 ;; This function calls:
 39563 ;;		Absolute function
 39564 ;;		_EUSART_Receive_ISR
 39565 ;;		_EUSART_Transmit_ISR
 39566 ;;		_TMR1_Reload
 39567 ;;		_TMR5_Reload
 39568 ;;		_load_bar
 39569 ;;		_pontencia_instantanea
 39570 ;;		i1___lwdiv
 39571 ;;		i1_get_duty
 39572 ;;		i1_stop_timer
 39573 ;; This function is called by:
 39574 ;;		Interrupt level 1
 39575 ;; This function uses a non-reentrant model
 39576 ;;
 39577                           
 39578  0004                     _INTERRUPT_InterruptManager:	
 39579                           
 39580                           ;incstack = 0
 39581  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 39582                           
 39583                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 39584  0005  3180               	pagesel	$
 39585  0006  0140               	movlb	0	; select bank0
 39586  0007  087F               	movf	127,w
 39587  0008  00A9               	movwf	??_INTERRUPT_InterruptManager+3
 39588                           
 39589                           ;func.c: 6: if(PIE4bits.TMR5IE == 1 && PIR4bits.TMR5IF == 1){
 39590  0009  014E               	movlb	14	; select bank14
 39591  000A  1A1A               	btfsc	26,4	;volatile
 39592  000B  1E10               	btfss	16,4	;volatile
 39593  000C  2849               	goto	i1l13470
 39594                           
 39595                           ;func.c: 7: t1ms_ISR++;
 39596  000D  3001               	movlw	1
 39597  000E  0143               	movlb	3	; select bank3
 39598  000F  07C8               	addwf	_t1ms_ISR^(0+384),f
 39599  0010  3000               	movlw	0
 39600  0011  3DC9               	addwfc	(_t1ms_ISR+1)^(0+384),f
 39601                           
 39602                           ;func.c: 9: if(t1ms_ISR >= t1ms_OP){
 39603  0012  0144               	movlb	4	; select bank4
 39604  0013  0855               	movf	(_t1ms_OP+1)^(0+512),w
 39605  0014  0143               	movlb	3	; select bank3
 39606  0015  0249               	subwf	(_t1ms_ISR+1)^(0+384),w
 39607  0016  1D03               	skipz
 39608  0017  281C               	goto	u1392_25
 39609  0018  0144               	movlb	4	; select bank4
 39610  0019  0854               	movf	_t1ms_OP^(0+512),w
 39611  001A  0143               	movlb	3	; select bank3
 39612  001B  0248               	subwf	_t1ms_ISR^(0+384),w
 39613  001C                     u1392_25:	
 39614  001C  1C03               	skipc
 39615  001D  2821               	goto	i1l13454
 39616                           
 39617                           ;func.c: 10: stop_timer();
 39618  001E  31A8  2001  3180   	fcall	i1_stop_timer
 39619  0021                     i1l13454:	
 39620                           
 39621                           ;func.c: 11: }
 39622                           ;func.c: 13: if(cfg.metal){
 39623  0021  0143               	movlb	3	; select bank3
 39624  0022  1E31               	btfss	(_cfg^(0+384)+1),4
 39625  0023  2844               	goto	i1l13466
 39626                           
 39627                           ;func.c: 14: if(flag_in.metal){
 39628  0024  1D4D               	btfss	(_flag_in^(0+384)+1),2	;volatile
 39629  0025  2841               	goto	i1l13464
 39630                           
 39631                           ;func.c: 15: t1msMM_ISR++;
 39632  0026  3001               	movlw	1
 39633  0027  0144               	movlb	4	; select bank4
 39634  0028  07D6               	addwf	_t1msMM_ISR^(0+512),f
 39635  0029  3000               	movlw	0
 39636  002A  3DD7               	addwfc	(_t1msMM_ISR+1)^(0+512),f
 39637                           
 39638                           ;func.c: 16: if(t1msMM_ISR >= tmp_metal){
 39639  002B  0143               	movlb	3	; select bank3
 39640  002C  083B               	movf	(_tmp_metal+1)^(0+384),w
 39641  002D  0144               	movlb	4	; select bank4
 39642  002E  0257               	subwf	(_t1msMM_ISR+1)^(0+512),w
 39643  002F  1D03               	skipz
 39644  0030  2835               	goto	u1395_25
 39645  0031  0143               	movlb	3	; select bank3
 39646  0032  083A               	movf	_tmp_metal^(0+384),w
 39647  0033  0144               	movlb	4	; select bank4
 39648  0034  0256               	subwf	_t1msMM_ISR^(0+512),w
 39649  0035                     u1395_25:	
 39650  0035  1C03               	skipc
 39651  0036  2844               	goto	i1l13466
 39652                           
 39653                           ;func.c: 17: statusSolda = FIXANDO;
 39654  0037  3003               	movlw	3
 39655  0038  0140               	movlb	0	; select bank0
 39656  0039  00A6               	movwf	??_INTERRUPT_InterruptManager
 39657  003A  0826               	movf	??_INTERRUPT_InterruptManager,w
 39658  003B  0143               	movlb	3	; select bank3
 39659  003C  00DB               	movwf	_statusSolda^(0+384)
 39660                           
 39661                           ;func.c: 18: stop_timer();
 39662  003D  31A8  2001  3180   	fcall	i1_stop_timer
 39663                           
 39664                           ;func.c: 19: }
 39665                           ;func.c: 20: }
 39666  0040  2844               	goto	i1l13466
 39667  0041                     i1l13464:	
 39668                           
 39669                           ;func.c: 21: else{
 39670                           ;func.c: 22: t1msMM_ISR = 0;
 39671  0041  0144               	movlb	4	; select bank4
 39672  0042  01D6               	clrf	_t1msMM_ISR^(0+512)
 39673  0043  01D7               	clrf	(_t1msMM_ISR+1)^(0+512)
 39674  0044                     i1l13466:	
 39675                           
 39676                           ;func.c: 23: }
 39677                           ;func.c: 24: }
 39678                           ;func.c: 26: TMR5_Reload();
 39679  0044  31E2  2235  3180   	fcall	_TMR5_Reload
 39680                           
 39681                           ;func.c: 27: PIR4bits.TMR5IF = 0;
 39682  0047  014E               	movlb	14	; select bank14
 39683  0048  1210               	bcf	16,4	;volatile
 39684  0049                     i1l13470:	
 39685                           
 39686                           ;func.c: 28: }
 39687                           ;func.c: 29: if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1){
 39688  0049  181A               	btfsc	26,0	;volatile
 39689  004A  1C10               	btfss	16,0	;volatile
 39690  004B  28CB               	goto	i1l1140
 39691                           
 39692                           ;func.c: 30: static char duty_mod_pot;
 39693                           ;func.c: 31: t10ms_global++;
 39694  004C  3001               	movlw	1
 39695  004D  0143               	movlb	3	; select bank3
 39696  004E  07C4               	addwf	_t10ms_global^(0+384),f
 39697  004F  3000               	movlw	0
 39698  0050  3DC5               	addwfc	(_t10ms_global+1)^(0+384),f
 39699                           
 39700                           ;func.c: 32: t10ms++;
 39701  0051  3001               	movlw	1
 39702  0052  0140               	movlb	0	; select bank0
 39703  0053  07DE               	addwf	_t10ms,f
 39704  0054  3000               	movlw	0
 39705  0055  3DDF               	addwfc	_t10ms+1,f
 39706                           
 39707                           ;func.c: 34: bar.value = 0;
 39708  0056  01E0               	clrf	_bar	;volatile
 39709  0057  01E1               	clrf	_bar+1	;volatile
 39710                           
 39711                           ;func.c: 35: if(flag.US){
 39712  0058  0143               	movlb	3	; select bank3
 39713  0059  1EAC               	btfss	_flag^(0+384),5	;volatile
 39714  005A  28C2               	goto	i1l13506
 39715                           
 39716                           ;func.c: 36: amostras++;
 39717  005B  3001               	movlw	1
 39718  005C  0145               	movlb	5	; select bank5
 39719  005D  07D3               	addwf	_amostras^(0+640),f
 39720  005E  3000               	movlw	0
 39721  005F  3DD4               	addwfc	(_amostras+1)^(0+640),f
 39722                           
 39723                           ;func.c: 37: pot_inst = pontencia_instantanea(get_duty());
 39724  0060  31D3  2309  3180   	fcall	i1_get_duty
 39725  0063  31D5  253D  3180   	fcall	_pontencia_instantanea
 39726  0066  0140               	movlb	0	; select bank0
 39727  0067  0821               	movf	?_pontencia_instantanea+1,w
 39728  0068  0144               	movlb	4	; select bank4
 39729  0069  00CF               	movwf	(_pot_inst+1)^(0+512)
 39730  006A  0140               	movlb	0	; select bank0
 39731  006B  0820               	movf	?_pontencia_instantanea,w
 39732  006C  0144               	movlb	4	; select bank4
 39733  006D  00CE               	movwf	_pot_inst^(0+512)
 39734                           
 39735                           ;func.c: 46: if(pot_inst > potencia){
 39736  006E  084F               	movf	(_pot_inst+1)^(0+512),w
 39737  006F  024B               	subwf	(_potencia+1)^(0+512),w
 39738  0070  1D03               	skipz
 39739  0071  2874               	goto	u1399_25
 39740  0072  084E               	movf	_pot_inst^(0+512),w
 39741  0073  024A               	subwf	_potencia^(0+512),w
 39742  0074                     u1399_25:	
 39743  0074  1803               	skipnc
 39744  0075  2882               	goto	i1l13492
 39745                           
 39746                           ;func.c: 47: erro_sobrecarga++;
 39747  0076  3001               	movlw	1
 39748  0077  0140               	movlb	0	; select bank0
 39749  0078  00A6               	movwf	??_INTERRUPT_InterruptManager
 39750  0079  0826               	movf	??_INTERRUPT_InterruptManager,w
 39751  007A  0143               	movlb	3	; select bank3
 39752  007B  07DD               	addwf	_erro_sobrecarga^(0+384),f	;volatile
 39753                           
 39754                           ;func.c: 48: if(erro_sobrecarga > 3)
 39755  007C  3004               	movlw	4
 39756  007D  025D               	subwf	_erro_sobrecarga^(0+384),w	;volatile
 39757  007E  1C03               	skipc
 39758  007F  2888               	goto	i1l13496
 39759                           
 39760                           ;func.c: 49: flag.isr_pot = 1;
 39761  0080  17AC               	bsf	_flag^(0+384),7	;volatile
 39762                           
 39763                           ;func.c: 50: }
 39764  0081  2888               	goto	i1l13496
 39765  0082                     i1l13492:	
 39766                           
 39767                           ;func.c: 51: else if(erro_sobrecarga != 0){
 39768  0082  0143               	movlb	3	; select bank3
 39769  0083  085D               	movf	_erro_sobrecarga^(0+384),w	;volatile
 39770  0084  1903               	btfsc	3,2
 39771  0085  2888               	goto	i1l13496
 39772                           
 39773                           ;func.c: 52: erro_sobrecarga--;
 39774  0086  3001               	movlw	1
 39775  0087  02DD               	subwf	_erro_sobrecarga^(0+384),f	;volatile
 39776  0088                     i1l13496:	
 39777                           
 39778                           ;func.c: 53: }
 39779                           ;func.c: 55: duty_mod_pot = duty/mod_pot;
 39780  0088  0144               	movlb	4	; select bank4
 39781  0089  0847               	movf	(_mod_pot+1)^(0+512),w
 39782  008A  00F7               	movwf	i1___lwdiv@divisor+1
 39783  008B  0846               	movf	_mod_pot^(0+512),w
 39784  008C  00F6               	movwf	i1___lwdiv@divisor
 39785  008D  0143               	movlb	3	; select bank3
 39786  008E  085F               	movf	_duty^(0+384),w
 39787  008F  0140               	movlb	0	; select bank0
 39788  0090  00A6               	movwf	??_INTERRUPT_InterruptManager
 39789  0091  01A7               	clrf	??_INTERRUPT_InterruptManager+1
 39790  0092  0826               	movf	??_INTERRUPT_InterruptManager,w
 39791  0093  00F8               	movwf	i1___lwdiv@dividend
 39792  0094  0827               	movf	??_INTERRUPT_InterruptManager+1,w
 39793  0095  00F9               	movwf	i1___lwdiv@dividend+1
 39794  0096  31D5  256F  3180   	fcall	i1___lwdiv
 39795  0099  0876               	movf	?i1___lwdiv,w
 39796  009A  0140               	movlb	0	; select bank0
 39797  009B  00A8               	movwf	??_INTERRUPT_InterruptManager+2
 39798  009C  0828               	movf	??_INTERRUPT_InterruptManager+2,w
 39799  009D  0143               	movlb	3	; select bank3
 39800  009E  00D9               	movwf	INTERRUPT_InterruptManager@duty_mod_pot^(0+384)
 39801                           
 39802                           ;func.c: 56: for(char i=0; i<duty_mod_pot; i++){
 39803  009F  0140               	movlb	0	; select bank0
 39804  00A0  01AA               	clrf	INTERRUPT_InterruptManager@i
 39805  00A1                     i1l13502:	
 39806  00A1  0143               	movlb	3	; select bank3
 39807  00A2  0859               	movf	INTERRUPT_InterruptManager@duty_mod_pot^(0+384),w
 39808  00A3  0140               	movlb	0	; select bank0
 39809  00A4  022A               	subwf	INTERRUPT_InterruptManager@i,w
 39810  00A5  1803               	btfsc	3,0
 39811  00A6  28BA               	goto	i1l13504
 39812                           
 39813                           ;func.c: 57: bar.value |= (1<<i);
 39814  00A7  3001               	movlw	1
 39815  00A8  00A6               	movwf	??_INTERRUPT_InterruptManager
 39816  00A9  3000               	movlw	0
 39817  00AA  00A7               	movwf	??_INTERRUPT_InterruptManager+1
 39818  00AB  0A2A               	incf	INTERRUPT_InterruptManager@i,w
 39819  00AC  28AF               	goto	u1402_24
 39820  00AD                     u1402_25:	
 39821  00AD  35A6               	lslf	??_INTERRUPT_InterruptManager,f
 39822  00AE  0DA7               	rlf	??_INTERRUPT_InterruptManager+1,f
 39823  00AF                     u1402_24:	
 39824  00AF  0B89               	decfsz	9,f
 39825  00B0  28AD               	goto	u1402_25
 39826  00B1  0826               	movf	??_INTERRUPT_InterruptManager,w
 39827  00B2  04E0               	iorwf	_bar,f	;volatile
 39828  00B3  0827               	movf	??_INTERRUPT_InterruptManager+1,w
 39829  00B4  04E1               	iorwf	_bar+1,f	;volatile
 39830  00B5  3001               	movlw	1
 39831  00B6  00A6               	movwf	??_INTERRUPT_InterruptManager
 39832  00B7  0826               	movf	??_INTERRUPT_InterruptManager,w
 39833  00B8  07AA               	addwf	INTERRUPT_InterruptManager@i,f
 39834  00B9  28A1               	goto	i1l13502
 39835  00BA                     i1l13504:	
 39836                           
 39837                           ;func.c: 58: }
 39838                           ;func.c: 59: energia_total += pot_inst;
 39839  00BA  0144               	movlb	4	; select bank4
 39840  00BB  084E               	movf	_pot_inst^(0+512),w
 39841  00BC  0143               	movlb	3	; select bank3
 39842  00BD  07B8               	addwf	_energia_total^(0+384),f
 39843  00BE  0144               	movlb	4	; select bank4
 39844  00BF  084F               	movf	(_pot_inst+1)^(0+512),w
 39845  00C0  0143               	movlb	3	; select bank3
 39846  00C1  3DB9               	addwfc	(_energia_total+1)^(0+384),f
 39847  00C2                     i1l13506:	
 39848                           
 39849                           ;func.c: 60: }
 39850                           ;func.c: 62: load_bar();
 39851  00C2  31A8  2004  3180   	fcall	_load_bar
 39852                           
 39853                           ;func.c: 63: TMR1_Reload();
 39854  00C5  31E2  223D  3180   	fcall	_TMR1_Reload
 39855                           
 39856                           ;func.c: 64: PIR4bits.TMR1IF = 0;
 39857  00C8  014E               	movlb	14	; select bank14
 39858  00C9  1010               	bcf	16,0	;volatile
 39859                           
 39860                           ;func.c: 65: }
 39861  00CA  28DE               	goto	i1l1154
 39862  00CB                     i1l1140:	
 39863                           
 39864                           ;func.c: 66: else{
 39865                           ;func.c: 67: if(PIE3bits.TXIE == 1 && PIR3bits.TXIF == 1){
 39866  00CB  1A19               	btfsc	25,4	;volatile
 39867  00CC  1E0F               	btfss	15,4	;volatile
 39868  00CD  28D4               	goto	i1l13516
 39869                           
 39870                           ;func.c: 68: EUSART_TxDefaultInterruptHandler();
 39871  00CE  0144               	movlb	4	; select bank4
 39872  00CF  0837               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+512),w
 39873  00D0  008A               	movwf	10
 39874  00D1  0836               	movf	_EUSART_TxDefaultInterruptHandler^(0+512),w
 39875  00D2  000A               	callw
 39876  00D3  3180               	pagesel	$
 39877  00D4                     i1l13516:	
 39878                           
 39879                           ;func.c: 69: }
 39880                           ;func.c: 70: if(PIE3bits.RCIE == 1 && PIR3bits.RCIF == 1){
 39881  00D4  014E               	movlb	14	; select bank14
 39882  00D5  1A99               	btfsc	25,5	;volatile
 39883  00D6  1E8F               	btfss	15,5	;volatile
 39884  00D7  28DE               	goto	i1l1154
 39885                           
 39886                           ;func.c: 71: EUSART_RxDefaultInterruptHandler();
 39887  00D8  0144               	movlb	4	; select bank4
 39888  00D9  0835               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+512),w
 39889  00DA  008A               	movwf	10
 39890  00DB  0834               	movf	_EUSART_RxDefaultInterruptHandler^(0+512),w
 39891  00DC  000A               	callw
 39892  00DD  3180               	pagesel	$
 39893  00DE                     i1l1154:	
 39894  00DE  0140               	movlb	0	; select bank0
 39895  00DF  0829               	movf	??_INTERRUPT_InterruptManager+3,w
 39896  00E0  00FF               	movwf	127
 39897  00E1  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 39898  00E2  0009               	retfie
 39899  00E3                     __end_of_INTERRUPT_InterruptManager:	
 39900                           
 39901                           	psect	text140
 39902  2801                     __ptext140:	
 39903 ;; *************** function i1_stop_timer *****************
 39904 ;; Defined at:
 39905 ;;		line 2414 in file "func.c"
 39906 ;; Parameters:    Size  Location     Type
 39907 ;;		None
 39908 ;; Auto vars:     Size  Location     Type
 39909 ;;		None
 39910 ;; Return value:  Size  Location     Type
 39911 ;;                  1    wreg      void 
 39912 ;; Registers used:
 39913 ;;		None
 39914 ;; Tracked objects:
 39915 ;;		On entry : 0/0
 39916 ;;		On exit  : 0/0
 39917 ;;		Unchanged: 0/0
 39918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39923 ;;Total ram usage:        0 bytes
 39924 ;; Hardware stack levels used:    1
 39925 ;; This function calls:
 39926 ;;		Nothing
 39927 ;; This function is called by:
 39928 ;;		_INTERRUPT_InterruptManager
 39929 ;; This function uses a non-reentrant model
 39930 ;;
 39931                           
 39932                           
 39933                           ;psect for function i1_stop_timer
 39934  2801                     i1_stop_timer:	
 39935                           
 39936                           ;func.c: 2415: T5CONbits.TMR5ON = 0;
 39937                           
 39938                           ;incstack = 0
 39939                           ; Regs used in i1_stop_timer: []
 39940  2801  0144               	movlb	4	; select bank4
 39941  2802  101A               	bcf	26,0	;volatile
 39942  2803  0008               	return
 39943  2804                     __end_ofi1_stop_timer:	
 39944                           
 39945                           	psect	text141
 39946  5309                     __ptext141:	
 39947 ;; *************** function i1_get_duty *****************
 39948 ;; Defined at:
 39949 ;;		line 2284 in file "func.c"
 39950 ;; Parameters:    Size  Location     Type
 39951 ;;		None
 39952 ;; Auto vars:     Size  Location     Type
 39953 ;;		None
 39954 ;; Return value:  Size  Location     Type
 39955 ;;                  1    wreg      unsigned char 
 39956 ;; Registers used:
 39957 ;;		wreg, status,2, status,0, pclath, cstack
 39958 ;; Tracked objects:
 39959 ;;		On entry : 0/0
 39960 ;;		On exit  : 0/0
 39961 ;;		Unchanged: 0/0
 39962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 39963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 39967 ;;Total ram usage:        0 bytes
 39968 ;; Hardware stack levels used:    1
 39969 ;; Hardware stack levels required when called:    1
 39970 ;; This function calls:
 39971 ;;		i1___ltdiv
 39972 ;;		i1___tmul
 39973 ;; This function is called by:
 39974 ;;		_INTERRUPT_InterruptManager
 39975 ;; This function uses a non-reentrant model
 39976 ;;
 39977                           
 39978                           
 39979                           ;psect for function i1_get_duty
 39980  5309                     i1_get_duty:	
 39981                           
 39982                           ;func.c: 2285: return (unsigned char)((SMT2CPW*100)/SMT2CPR);
 39983                           
 39984                           ;incstack = 0
 39985                           ; Regs used in i1_get_duty: [wreg+status,2+status,0+pclath+cstack]
 39986  5309  014A               	movlb	10	; select bank10
 39987  530A  080F               	movf	15,w	;volatile
 39988  530B  0140               	movlb	0	; select bank0
 39989  530C  00A0               	movwf	i1___ltdiv@divisor
 39990  530D  014A               	movlb	10	; select bank10
 39991  530E  0810               	movf	16,w	;volatile
 39992  530F  0140               	movlb	0	; select bank0
 39993  5310  00A1               	movwf	i1___ltdiv@divisor+1
 39994  5311  014A               	movlb	10	; select bank10
 39995  5312  0811               	movf	17,w	;volatile
 39996  5313  0140               	movlb	0	; select bank0
 39997  5314  00A2               	movwf	i1___ltdiv@divisor+2
 39998  5315  014A               	movlb	10	; select bank10
 39999  5316  0812               	movf	18,w	;volatile
 40000  5317  00F0               	movwf	i1___tmul@multiplier
 40001  5318  0813               	movf	19,w	;volatile
 40002  5319  00F1               	movwf	i1___tmul@multiplier+1
 40003  531A  0814               	movf	20,w	;volatile
 40004  531B  00F2               	movwf	i1___tmul@multiplier+2
 40005  531C  3064               	movlw	100
 40006  531D  00F3               	movwf	i1___tmul@multiplicand
 40007  531E  3000               	movlw	0
 40008  531F  00F4               	movwf	i1___tmul@multiplicand+1
 40009  5320  3000               	movlw	0
 40010  5321  00F5               	movwf	i1___tmul@multiplicand+2
 40011  5322  31D2  22E3  31D3   	fcall	i1___tmul
 40012  5325  0870               	movf	?i1___tmul,w
 40013  5326  0140               	movlb	0	; select bank0
 40014  5327  00A3               	movwf	i1___ltdiv@dividend
 40015  5328  0871               	movf	?i1___tmul+1,w
 40016  5329  00A4               	movwf	i1___ltdiv@dividend+1
 40017  532A  0872               	movf	?i1___tmul+2,w
 40018  532B  00A5               	movwf	i1___ltdiv@dividend+2
 40019  532C  31D7  27BB         	fcall	i1___ltdiv
 40020  532E  0140               	movlb	0	; select bank0
 40021  532F  0820               	movf	?i1___ltdiv,w
 40022  5330  0008               	return
 40023  5331                     __end_ofi1_get_duty:	
 40024                           
 40025                           	psect	text142
 40026  52E3                     __ptext142:	
 40027 ;; *************** function i1___tmul *****************
 40028 ;; Defined at:
 40029 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul24.c"
 40030 ;; Parameters:    Size  Location     Type
 40031 ;;  multiplier      3    0[COMMON] unsigned um
 40032 ;;  multiplicand    3    3[COMMON] unsigned um
 40033 ;; Auto vars:     Size  Location     Type
 40034 ;;  __tmul          3    6[COMMON] unsigned um
 40035 ;; Return value:  Size  Location     Type
 40036 ;;                  3    0[COMMON] unsigned um
 40037 ;; Registers used:
 40038 ;;		wreg, status,2, status,0
 40039 ;; Tracked objects:
 40040 ;;		On entry : 0/0
 40041 ;;		On exit  : 0/0
 40042 ;;		Unchanged: 0/0
 40043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40044 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40045 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40047 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40048 ;;Total ram usage:        9 bytes
 40049 ;; Hardware stack levels used:    1
 40050 ;; This function calls:
 40051 ;;		Nothing
 40052 ;; This function is called by:
 40053 ;;		i1_get_duty
 40054 ;; This function uses a non-reentrant model
 40055 ;;
 40056                           
 40057                           
 40058                           ;psect for function i1___tmul
 40059  52E3                     i1___tmul:	
 40060                           
 40061                           ;incstack = 0
 40062                           ; Regs used in i1___tmul: [wreg+status,2+status,0]
 40063  52E3  3000               	movlw	0
 40064  52E4  00F6               	movwf	i1___tmul@product
 40065  52E5  3000               	movlw	0
 40066  52E6  00F7               	movwf	i1___tmul@product+1
 40067  52E7  3000               	movlw	0
 40068  52E8  00F8               	movwf	i1___tmul@product+2
 40069  52E9                     i1l12100:	
 40070  52E9  1C70               	btfss	i1___tmul@multiplier,0
 40071  52EA  2AF1               	goto	i1l12104
 40072  52EB  0873               	movf	i1___tmul@multiplicand,w
 40073  52EC  07F6               	addwf	i1___tmul@product,f
 40074  52ED  0874               	movf	i1___tmul@multiplicand+1,w
 40075  52EE  3DF7               	addwfc	i1___tmul@product+1,f
 40076  52EF  0875               	movf	i1___tmul@multiplicand+2,w
 40077  52F0  3DF8               	addwfc	i1___tmul@product+2,f
 40078  52F1                     i1l12104:	
 40079  52F1  3001               	movlw	1
 40080  52F2                     u1251_25:	
 40081  52F2  35F3               	lslf	i1___tmul@multiplicand,f
 40082  52F3  0DF4               	rlf	i1___tmul@multiplicand+1,f
 40083  52F4  0DF5               	rlf	i1___tmul@multiplicand+2,f
 40084  52F5  0B89               	decfsz	9,f
 40085  52F6  2AF2               	goto	u1251_25
 40086  52F7  3001               	movlw	1
 40087  52F8                     u1252_25:	
 40088  52F8  36F2               	lsrf	i1___tmul@multiplier+2,f
 40089  52F9  0CF1               	rrf	i1___tmul@multiplier+1,f
 40090  52FA  0CF0               	rrf	i1___tmul@multiplier,f
 40091  52FB  0B89               	decfsz	9,f
 40092  52FC  2AF8               	goto	u1252_25
 40093  52FD  0872               	movf	i1___tmul@multiplier+2,w
 40094  52FE  0471               	iorwf	i1___tmul@multiplier+1,w
 40095  52FF  0470               	iorwf	i1___tmul@multiplier,w
 40096  5300  1D03               	skipz
 40097  5301  2AE9               	goto	i1l12100
 40098  5302  0876               	movf	i1___tmul@product,w
 40099  5303  00F0               	movwf	?i1___tmul
 40100  5304  0877               	movf	i1___tmul@product+1,w
 40101  5305  00F1               	movwf	?i1___tmul+1
 40102  5306  0878               	movf	i1___tmul@product+2,w
 40103  5307  00F2               	movwf	?i1___tmul+2
 40104  5308  0008               	return
 40105  5309                     __end_ofi1___tmul:	
 40106                           
 40107                           	psect	text143
 40108  57BB                     __ptext143:	
 40109 ;; *************** function i1___ltdiv *****************
 40110 ;; Defined at:
 40111 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ltdiv.c"
 40112 ;; Parameters:    Size  Location     Type
 40113 ;;  divisor         3    0[BANK0 ] unsigned um
 40114 ;;  dividend        3    3[BANK0 ] unsigned um
 40115 ;; Auto vars:     Size  Location     Type
 40116 ;;  __ltdiv         3   10[COMMON] unsigned um
 40117 ;;  __ltdiv         1   13[COMMON] unsigned char 
 40118 ;; Return value:  Size  Location     Type
 40119 ;;                  3    0[BANK0 ] unsigned um
 40120 ;; Registers used:
 40121 ;;		wreg, status,2, status,0
 40122 ;; Tracked objects:
 40123 ;;		On entry : 0/0
 40124 ;;		On exit  : 0/0
 40125 ;;		Unchanged: 0/0
 40126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40127 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40128 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40129 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40130 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40131 ;;Total ram usage:       11 bytes
 40132 ;; Hardware stack levels used:    1
 40133 ;; This function calls:
 40134 ;;		Nothing
 40135 ;; This function is called by:
 40136 ;;		i1_get_duty
 40137 ;; This function uses a non-reentrant model
 40138 ;;
 40139                           
 40140                           
 40141                           ;psect for function i1___ltdiv
 40142  57BB                     i1___ltdiv:	
 40143                           
 40144                           ;incstack = 0
 40145                           ; Regs used in i1___ltdiv: [wreg+status,2+status,0]
 40146  57BB  3000               	movlw	0
 40147  57BC  00FA               	movwf	i1___ltdiv@quotient
 40148  57BD  3000               	movlw	0
 40149  57BE  00FB               	movwf	i1___ltdiv@quotient+1
 40150  57BF  3000               	movlw	0
 40151  57C0  00FC               	movwf	i1___ltdiv@quotient+2
 40152  57C1  0140               	movlb	0	; select bank0
 40153  57C2  0822               	movf	i1___ltdiv@divisor+2,w
 40154  57C3  0421               	iorwf	i1___ltdiv@divisor+1,w
 40155  57C4  0420               	iorwf	i1___ltdiv@divisor,w
 40156  57C5  1903               	skipnz
 40157  57C6  2FF9               	goto	i1l12132
 40158  57C7  01FD               	clrf	i1___ltdiv@counter
 40159  57C8  0AFD               	incf	i1___ltdiv@counter,f
 40160  57C9                     i1l12118:	
 40161  57C9  1BA2               	btfsc	i1___ltdiv@divisor+2,7
 40162  57CA  2FD6               	goto	i1l12120
 40163  57CB  3001               	movlw	1
 40164  57CC                     u1255_25:	
 40165  57CC  35A0               	lslf	i1___ltdiv@divisor,f
 40166  57CD  0DA1               	rlf	i1___ltdiv@divisor+1,f
 40167  57CE  0DA2               	rlf	i1___ltdiv@divisor+2,f
 40168  57CF  0B89               	decfsz	9,f
 40169  57D0  2FCC               	goto	u1255_25
 40170  57D1  3001               	movlw	1
 40171  57D2  00F9               	movwf	??i1___ltdiv
 40172  57D3  0879               	movf	??i1___ltdiv,w
 40173  57D4  07FD               	addwf	i1___ltdiv@counter,f
 40174  57D5  2FC9               	goto	i1l12118
 40175  57D6                     i1l12120:	
 40176  57D6  3001               	movlw	1
 40177  57D7                     u1257_25:	
 40178  57D7  35FA               	lslf	i1___ltdiv@quotient,f
 40179  57D8  0DFB               	rlf	i1___ltdiv@quotient+1,f
 40180  57D9  0DFC               	rlf	i1___ltdiv@quotient+2,f
 40181  57DA  0B89               	decfsz	9,f
 40182  57DB  2FD7               	goto	u1257_25
 40183  57DC  0822               	movf	i1___ltdiv@divisor+2,w
 40184  57DD  0225               	subwf	i1___ltdiv@dividend+2,w
 40185  57DE  1D03               	skipz
 40186  57DF  2FE6               	goto	u1258_25
 40187  57E0  0821               	movf	i1___ltdiv@divisor+1,w
 40188  57E1  0224               	subwf	i1___ltdiv@dividend+1,w
 40189  57E2  1D03               	skipz
 40190  57E3  2FE6               	goto	u1258_25
 40191  57E4  0820               	movf	i1___ltdiv@divisor,w
 40192  57E5  0223               	subwf	i1___ltdiv@dividend,w
 40193  57E6                     u1258_25:	
 40194  57E6  1C03               	skipc
 40195  57E7  2FEF               	goto	i1l12128
 40196  57E8  0820               	movf	i1___ltdiv@divisor,w
 40197  57E9  02A3               	subwf	i1___ltdiv@dividend,f
 40198  57EA  0821               	movf	i1___ltdiv@divisor+1,w
 40199  57EB  3BA4               	subwfb	i1___ltdiv@dividend+1,f
 40200  57EC  0822               	movf	i1___ltdiv@divisor+2,w
 40201  57ED  3BA5               	subwfb	i1___ltdiv@dividend+2,f
 40202  57EE  147A               	bsf	i1___ltdiv@quotient,0
 40203  57EF                     i1l12128:	
 40204  57EF  3001               	movlw	1
 40205  57F0                     u1259_25:	
 40206  57F0  36A2               	lsrf	i1___ltdiv@divisor+2,f
 40207  57F1  0CA1               	rrf	i1___ltdiv@divisor+1,f
 40208  57F2  0CA0               	rrf	i1___ltdiv@divisor,f
 40209  57F3  0B89               	decfsz	9,f
 40210  57F4  2FF0               	goto	u1259_25
 40211  57F5  3001               	movlw	1
 40212  57F6  02FD               	subwf	i1___ltdiv@counter,f
 40213  57F7  1D03               	btfss	3,2
 40214  57F8  2FD6               	goto	i1l12120
 40215  57F9                     i1l12132:	
 40216  57F9  087A               	movf	i1___ltdiv@quotient,w
 40217  57FA  00A0               	movwf	?i1___ltdiv
 40218  57FB  087B               	movf	i1___ltdiv@quotient+1,w
 40219  57FC  00A1               	movwf	?i1___ltdiv+1
 40220  57FD  087C               	movf	i1___ltdiv@quotient+2,w
 40221  57FE  00A2               	movwf	?i1___ltdiv+2
 40222  57FF  0008               	return
 40223  5800                     __end_ofi1___ltdiv:	
 40224                           
 40225                           	psect	text144
 40226  553D                     __ptext144:	
 40227 ;; *************** function _pontencia_instantanea *****************
 40228 ;; Defined at:
 40229 ;;		line 246 in file "func.c"
 40230 ;; Parameters:    Size  Location     Type
 40231 ;;  d               1    wreg     unsigned char 
 40232 ;; Auto vars:     Size  Location     Type
 40233 ;;  d               1    4[BANK0 ] unsigned char 
 40234 ;; Return value:  Size  Location     Type
 40235 ;;                  2    0[BANK0 ] unsigned int 
 40236 ;; Registers used:
 40237 ;;		wreg, status,2, status,0, pclath, cstack
 40238 ;; Tracked objects:
 40239 ;;		On entry : 0/0
 40240 ;;		On exit  : 0/0
 40241 ;;		Unchanged: 0/0
 40242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40243 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40244 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40245 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40246 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40247 ;;Total ram usage:        5 bytes
 40248 ;; Hardware stack levels used:    1
 40249 ;; Hardware stack levels required when called:    1
 40250 ;; This function calls:
 40251 ;;		i1___lwdiv
 40252 ;;		i1___wmul
 40253 ;; This function is called by:
 40254 ;;		_INTERRUPT_InterruptManager
 40255 ;; This function uses a non-reentrant model
 40256 ;;
 40257                           
 40258                           
 40259                           ;psect for function _pontencia_instantanea
 40260  553D                     _pontencia_instantanea:	
 40261                           
 40262                           ;incstack = 0
 40263                           ; Regs used in _pontencia_instantanea: [wreg+status,2+status,0+pclath+cstack]
 40264                           ;pontencia_instantanea@d stored from wreg
 40265  553D  0140               	movlb	0	; select bank0
 40266  553E  00A4               	movwf	pontencia_instantanea@d
 40267                           
 40268                           ;func.c: 247: if(d>duty_ini)
 40269  553F  0824               	movf	pontencia_instantanea@d,w
 40270  5540  0143               	movlb	3	; select bank3
 40271  5541  025E               	subwf	_duty_ini^(0+384),w
 40272  5542  1803               	skipnc
 40273  5543  2D4E               	goto	i1l13052
 40274                           
 40275                           ;func.c: 248: duty = 2*(d-duty_ini);
 40276  5544  035E               	decf	_duty_ini^(0+384),w
 40277  5545  3AFF               	xorlw	255
 40278  5546  0140               	movlb	0	; select bank0
 40279  5547  0724               	addwf	pontencia_instantanea@d,w
 40280  5548  0709               	addwf	9,w
 40281  5549  00A2               	movwf	??_pontencia_instantanea
 40282  554A  0822               	movf	??_pontencia_instantanea,w
 40283  554B  0143               	movlb	3	; select bank3
 40284  554C  00DF               	movwf	_duty^(0+384)
 40285  554D  2D4F               	goto	i1l13054
 40286  554E                     i1l13052:	
 40287                           
 40288                           ;func.c: 249: else
 40289                           ;func.c: 250: duty = 0;
 40290  554E  01DF               	clrf	_duty^(0+384)
 40291  554F                     i1l13054:	
 40292                           
 40293                           ;func.c: 251: return (ret_pot*duty)/100;
 40294  554F  3064               	movlw	100
 40295  5550  00F6               	movwf	i1___lwdiv@divisor
 40296  5551  3000               	movlw	0
 40297  5552  00F7               	movwf	i1___lwdiv@divisor+1
 40298  5553  085F               	movf	_duty^(0+384),w
 40299  5554  0140               	movlb	0	; select bank0
 40300  5555  00A2               	movwf	??_pontencia_instantanea
 40301  5556  01A3               	clrf	??_pontencia_instantanea+1
 40302  5557  0822               	movf	??_pontencia_instantanea,w
 40303  5558  00F0               	movwf	i1___wmul@multiplier
 40304  5559  0823               	movf	??_pontencia_instantanea+1,w
 40305  555A  00F1               	movwf	i1___wmul@multiplier+1
 40306  555B  0144               	movlb	4	; select bank4
 40307  555C  0849               	movf	(_ret_pot+1)^(0+512),w
 40308  555D  00F3               	movwf	i1___wmul@multiplicand+1
 40309  555E  0848               	movf	_ret_pot^(0+512),w
 40310  555F  00F2               	movwf	i1___wmul@multiplicand
 40311  5560  31D0  20C7  31D5   	fcall	i1___wmul
 40312  5563  0871               	movf	?i1___wmul+1,w
 40313  5564  00F9               	movwf	i1___lwdiv@dividend+1
 40314  5565  0870               	movf	?i1___wmul,w
 40315  5566  00F8               	movwf	i1___lwdiv@dividend
 40316  5567  31D5  256F         	fcall	i1___lwdiv
 40317  5569  0877               	movf	?i1___lwdiv+1,w
 40318  556A  0140               	movlb	0	; select bank0
 40319  556B  00A1               	movwf	?_pontencia_instantanea+1
 40320  556C  0876               	movf	?i1___lwdiv,w
 40321  556D  00A0               	movwf	?_pontencia_instantanea
 40322  556E  0008               	return
 40323  556F                     __end_of_pontencia_instantanea:	
 40324                           
 40325                           	psect	text145
 40326  50C7                     __ptext145:	
 40327 ;; *************** function i1___wmul *****************
 40328 ;; Defined at:
 40329 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 40330 ;; Parameters:    Size  Location     Type
 40331 ;;  multiplier      2    0[COMMON] unsigned int 
 40332 ;;  multiplicand    2    2[COMMON] unsigned int 
 40333 ;; Auto vars:     Size  Location     Type
 40334 ;;  __wmul          2    4[COMMON] unsigned int 
 40335 ;; Return value:  Size  Location     Type
 40336 ;;                  2    0[COMMON] unsigned int 
 40337 ;; Registers used:
 40338 ;;		wreg, status,2, status,0
 40339 ;; Tracked objects:
 40340 ;;		On entry : 0/0
 40341 ;;		On exit  : 0/0
 40342 ;;		Unchanged: 0/0
 40343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40347 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40348 ;;Total ram usage:        6 bytes
 40349 ;; Hardware stack levels used:    1
 40350 ;; This function calls:
 40351 ;;		Nothing
 40352 ;; This function is called by:
 40353 ;;		_pontencia_instantanea
 40354 ;; This function uses a non-reentrant model
 40355 ;;
 40356                           
 40357                           
 40358                           ;psect for function i1___wmul
 40359  50C7                     i1___wmul:	
 40360                           
 40361                           ;incstack = 0
 40362                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
 40363  50C7  01F4               	clrf	i1___wmul@product
 40364  50C8  01F5               	clrf	i1___wmul@product+1
 40365  50C9                     i1l12086:	
 40366  50C9  1C70               	btfss	i1___wmul@multiplier,0
 40367  50CA  28CF               	goto	i1l2812
 40368  50CB  0872               	movf	i1___wmul@multiplicand,w
 40369  50CC  07F4               	addwf	i1___wmul@product,f
 40370  50CD  0873               	movf	i1___wmul@multiplicand+1,w
 40371  50CE  3DF5               	addwfc	i1___wmul@product+1,f
 40372  50CF                     i1l2812:	
 40373  50CF  3001               	movlw	1
 40374  50D0                     u1247_25:	
 40375  50D0  35F2               	lslf	i1___wmul@multiplicand,f
 40376  50D1  0DF3               	rlf	i1___wmul@multiplicand+1,f
 40377  50D2  0B89               	decfsz	9,f
 40378  50D3  28D0               	goto	u1247_25
 40379  50D4  3001               	movlw	1
 40380  50D5                     u1248_25:	
 40381  50D5  36F1               	lsrf	i1___wmul@multiplier+1,f
 40382  50D6  0CF0               	rrf	i1___wmul@multiplier,f
 40383  50D7  0B89               	decfsz	9,f
 40384  50D8  28D5               	goto	u1248_25
 40385  50D9  0870               	movf	i1___wmul@multiplier,w
 40386  50DA  0471               	iorwf	i1___wmul@multiplier+1,w
 40387  50DB  1D03               	btfss	3,2
 40388  50DC  28C9               	goto	i1l12086
 40389  50DD  0875               	movf	i1___wmul@product+1,w
 40390  50DE  00F1               	movwf	?i1___wmul+1
 40391  50DF  0874               	movf	i1___wmul@product,w
 40392  50E0  00F0               	movwf	?i1___wmul
 40393  50E1  0008               	return
 40394  50E2                     __end_ofi1___wmul:	
 40395                           
 40396                           	psect	text146
 40397  556F                     __ptext146:	
 40398 ;; *************** function i1___lwdiv *****************
 40399 ;; Defined at:
 40400 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 40401 ;; Parameters:    Size  Location     Type
 40402 ;;  divisor         2    6[COMMON] unsigned int 
 40403 ;;  dividend        2    8[COMMON] unsigned int 
 40404 ;; Auto vars:     Size  Location     Type
 40405 ;;  __lwdiv         2   11[COMMON] unsigned int 
 40406 ;;  __lwdiv         1   13[COMMON] unsigned char 
 40407 ;; Return value:  Size  Location     Type
 40408 ;;                  2    6[COMMON] unsigned int 
 40409 ;; Registers used:
 40410 ;;		wreg, status,2, status,0
 40411 ;; Tracked objects:
 40412 ;;		On entry : 0/0
 40413 ;;		On exit  : 0/0
 40414 ;;		Unchanged: 0/0
 40415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40416 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40417 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40419 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40420 ;;Total ram usage:        8 bytes
 40421 ;; Hardware stack levels used:    1
 40422 ;; This function calls:
 40423 ;;		Nothing
 40424 ;; This function is called by:
 40425 ;;		_INTERRUPT_InterruptManager
 40426 ;;		_pontencia_instantanea
 40427 ;; This function uses a non-reentrant model
 40428 ;;
 40429                           
 40430                           
 40431                           ;psect for function i1___lwdiv
 40432  556F                     i1___lwdiv:	
 40433                           
 40434                           ;incstack = 0
 40435                           ; Regs used in i1___lwdiv: [wreg+status,2+status,0]
 40436  556F  01FB               	clrf	i1___lwdiv@quotient
 40437  5570  01FC               	clrf	i1___lwdiv@quotient+1
 40438  5571  0876               	movf	i1___lwdiv@divisor,w
 40439  5572  0477               	iorwf	i1___lwdiv@divisor+1,w
 40440  5573  1903               	btfsc	3,2
 40441  5574  2D9E               	goto	i1l12158
 40442  5575  01FD               	clrf	i1___lwdiv@counter
 40443  5576  0AFD               	incf	i1___lwdiv@counter,f
 40444  5577                     i1l12146:	
 40445  5577  1BF7               	btfsc	i1___lwdiv@divisor+1,7
 40446  5578  2D83               	goto	i1l12148
 40447  5579  3001               	movlw	1
 40448  557A                     u1262_25:	
 40449  557A  35F6               	lslf	i1___lwdiv@divisor,f
 40450  557B  0DF7               	rlf	i1___lwdiv@divisor+1,f
 40451  557C  0B89               	decfsz	9,f
 40452  557D  2D7A               	goto	u1262_25
 40453  557E  3001               	movlw	1
 40454  557F  00FA               	movwf	??i1___lwdiv
 40455  5580  087A               	movf	??i1___lwdiv,w
 40456  5581  07FD               	addwf	i1___lwdiv@counter,f
 40457  5582  2D77               	goto	i1l12146
 40458  5583                     i1l12148:	
 40459  5583  3001               	movlw	1
 40460  5584                     u1264_25:	
 40461  5584  35FB               	lslf	i1___lwdiv@quotient,f
 40462  5585  0DFC               	rlf	i1___lwdiv@quotient+1,f
 40463  5586  0B89               	decfsz	9,f
 40464  5587  2D84               	goto	u1264_25
 40465  5588  0877               	movf	i1___lwdiv@divisor+1,w
 40466  5589  0279               	subwf	i1___lwdiv@dividend+1,w
 40467  558A  1D03               	skipz
 40468  558B  2D8E               	goto	u1265_25
 40469  558C  0876               	movf	i1___lwdiv@divisor,w
 40470  558D  0278               	subwf	i1___lwdiv@dividend,w
 40471  558E                     u1265_25:	
 40472  558E  1C03               	skipc
 40473  558F  2D95               	goto	i1l12154
 40474  5590  0876               	movf	i1___lwdiv@divisor,w
 40475  5591  02F8               	subwf	i1___lwdiv@dividend,f
 40476  5592  0877               	movf	i1___lwdiv@divisor+1,w
 40477  5593  3BF9               	subwfb	i1___lwdiv@dividend+1,f
 40478  5594  147B               	bsf	i1___lwdiv@quotient,0
 40479  5595                     i1l12154:	
 40480  5595  3001               	movlw	1
 40481  5596                     u1266_25:	
 40482  5596  36F7               	lsrf	i1___lwdiv@divisor+1,f
 40483  5597  0CF6               	rrf	i1___lwdiv@divisor,f
 40484  5598  0B89               	decfsz	9,f
 40485  5599  2D96               	goto	u1266_25
 40486  559A  3001               	movlw	1
 40487  559B  02FD               	subwf	i1___lwdiv@counter,f
 40488  559C  1D03               	btfss	3,2
 40489  559D  2D83               	goto	i1l12148
 40490  559E                     i1l12158:	
 40491  559E  087C               	movf	i1___lwdiv@quotient+1,w
 40492  559F  00F7               	movwf	?i1___lwdiv+1
 40493  55A0  087B               	movf	i1___lwdiv@quotient,w
 40494  55A1  00F6               	movwf	?i1___lwdiv
 40495  55A2  0008               	return
 40496  55A3                     __end_ofi1___lwdiv:	
 40497                           
 40498                           	psect	text147
 40499  2804                     __ptext147:	
 40500 ;; *************** function _load_bar *****************
 40501 ;; Defined at:
 40502 ;;		line 1248 in file "func.c"
 40503 ;; Parameters:    Size  Location     Type
 40504 ;;		None
 40505 ;; Auto vars:     Size  Location     Type
 40506 ;;		None
 40507 ;; Return value:  Size  Location     Type
 40508 ;;                  1    wreg      void 
 40509 ;; Registers used:
 40510 ;;		wreg, status,2, status,0, pclath, cstack
 40511 ;; Tracked objects:
 40512 ;;		On entry : 0/0
 40513 ;;		On exit  : 0/0
 40514 ;;		Unchanged: 0/0
 40515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40518 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40519 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40520 ;;Total ram usage:        3 bytes
 40521 ;; Hardware stack levels used:    1
 40522 ;; Hardware stack levels required when called:    1
 40523 ;; This function calls:
 40524 ;;		i1_clr
 40525 ;;		i1_data
 40526 ;; This function is called by:
 40527 ;;		_INTERRUPT_InterruptManager
 40528 ;; This function uses a non-reentrant model
 40529 ;;
 40530                           
 40531                           
 40532                           ;psect for function _load_bar
 40533  2804                     _load_bar:	
 40534                           
 40535                           ;func.c: 1249: clr();
 40536                           
 40537                           ;incstack = 0
 40538                           ; Regs used in _load_bar: [wreg+status,2+status,0+pclath+cstack]
 40539  2804  31E1  21FF  31A8   	fcall	i1_clr
 40540                           
 40541                           ;func.c: 1250: data(bar.POT100);
 40542  2807  0140               	movlb	0	; select bank0
 40543  2808  0C61               	rrf	_bar+1,w	;volatile
 40544  2809  3901               	andlw	1
 40545  280A  00F2               	movwf	??_load_bar
 40546  280B  01F3               	clrf	??_load_bar+1
 40547  280C  0872               	movf	??_load_bar,w
 40548  280D  00F0               	movwf	i1data@b
 40549  280E  0873               	movf	??_load_bar+1,w
 40550  280F  00F1               	movwf	i1data@b+1
 40551  2810  31E7  274D  31A8   	fcall	i1_data
 40552                           
 40553                           ;func.c: 1251: data(bar.POT90);
 40554  2813  0140               	movlb	0	; select bank0
 40555  2814  0861               	movf	_bar+1,w	;volatile
 40556  2815  3901               	andlw	1
 40557  2816  00F2               	movwf	??_load_bar
 40558  2817  01F3               	clrf	??_load_bar+1
 40559  2818  0872               	movf	??_load_bar,w
 40560  2819  00F0               	movwf	i1data@b
 40561  281A  0873               	movf	??_load_bar+1,w
 40562  281B  00F1               	movwf	i1data@b+1
 40563  281C  31E7  274D  31A8   	fcall	i1_data
 40564                           
 40565                           ;func.c: 1252: data(bar.POT80);
 40566  281F  0140               	movlb	0	; select bank0
 40567  2820  0D60               	rlf	_bar,w	;volatile
 40568  2821  0D60               	rlf	_bar,w	;volatile
 40569  2822  3901               	andlw	1
 40570  2823  00F2               	movwf	??_load_bar
 40571  2824  01F3               	clrf	??_load_bar+1
 40572  2825  0872               	movf	??_load_bar,w
 40573  2826  00F0               	movwf	i1data@b
 40574  2827  0873               	movf	??_load_bar+1,w
 40575  2828  00F1               	movwf	i1data@b+1
 40576  2829  31E7  274D  31A8   	fcall	i1_data
 40577                           
 40578                           ;func.c: 1253: data(bar.POT70);
 40579  282C  0140               	movlb	0	; select bank0
 40580  282D  0E60               	swapf	_bar,w	;volatile
 40581  282E  0C89               	rrf	9,f
 40582  282F  0C89               	rrf	9,f
 40583  2830  3901               	andlw	1
 40584  2831  00F2               	movwf	??_load_bar
 40585  2832  01F3               	clrf	??_load_bar+1
 40586  2833  0872               	movf	??_load_bar,w
 40587  2834  00F0               	movwf	i1data@b
 40588  2835  0873               	movf	??_load_bar+1,w
 40589  2836  00F1               	movwf	i1data@b+1
 40590  2837  31E7  274D  31A8   	fcall	i1_data
 40591                           
 40592                           ;func.c: 1254: data(bar.POT60);
 40593  283A  0140               	movlb	0	; select bank0
 40594  283B  0E60               	swapf	_bar,w	;volatile
 40595  283C  0C89               	rrf	9,f
 40596  283D  3901               	andlw	1
 40597  283E  00F2               	movwf	??_load_bar
 40598  283F  01F3               	clrf	??_load_bar+1
 40599  2840  0872               	movf	??_load_bar,w
 40600  2841  00F0               	movwf	i1data@b
 40601  2842  0873               	movf	??_load_bar+1,w
 40602  2843  00F1               	movwf	i1data@b+1
 40603  2844  31E7  274D  31A8   	fcall	i1_data
 40604                           
 40605                           ;func.c: 1255: data(bar.POT50);
 40606  2847  0140               	movlb	0	; select bank0
 40607  2848  0E60               	swapf	_bar,w	;volatile
 40608  2849  3901               	andlw	1
 40609  284A  00F2               	movwf	??_load_bar
 40610  284B  01F3               	clrf	??_load_bar+1
 40611  284C  0872               	movf	??_load_bar,w
 40612  284D  00F0               	movwf	i1data@b
 40613  284E  0873               	movf	??_load_bar+1,w
 40614  284F  00F1               	movwf	i1data@b+1
 40615  2850  31E7  274D  31A8   	fcall	i1_data
 40616                           
 40617                           ;func.c: 1256: data(bar.POT40);
 40618  2853  0140               	movlb	0	; select bank0
 40619  2854  0C60               	rrf	_bar,w	;volatile
 40620  2855  00F2               	movwf	??_load_bar
 40621  2856  0CF2               	rrf	??_load_bar,f
 40622  2857  0C72               	rrf	??_load_bar,w
 40623  2858  3901               	andlw	1
 40624  2859  00F3               	movwf	??_load_bar+1
 40625  285A  01F4               	clrf	??_load_bar+2
 40626  285B  0873               	movf	??_load_bar+1,w
 40627  285C  00F0               	movwf	i1data@b
 40628  285D  0874               	movf	??_load_bar+2,w
 40629  285E  00F1               	movwf	i1data@b+1
 40630  285F  31E7  274D  31A8   	fcall	i1_data
 40631                           
 40632                           ;func.c: 1257: data(bar.POT30);
 40633  2862  0140               	movlb	0	; select bank0
 40634  2863  0C60               	rrf	_bar,w	;volatile
 40635  2864  0C89               	rrf	9,f
 40636  2865  3901               	andlw	1
 40637  2866  00F2               	movwf	??_load_bar
 40638  2867  01F3               	clrf	??_load_bar+1
 40639  2868  0872               	movf	??_load_bar,w
 40640  2869  00F0               	movwf	i1data@b
 40641  286A  0873               	movf	??_load_bar+1,w
 40642  286B  00F1               	movwf	i1data@b+1
 40643  286C  31E7  274D  31A8   	fcall	i1_data
 40644                           
 40645                           ;func.c: 1258: data(bar.POT20);
 40646  286F  0140               	movlb	0	; select bank0
 40647  2870  0C60               	rrf	_bar,w	;volatile
 40648  2871  3901               	andlw	1
 40649  2872  00F2               	movwf	??_load_bar
 40650  2873  01F3               	clrf	??_load_bar+1
 40651  2874  0872               	movf	??_load_bar,w
 40652  2875  00F0               	movwf	i1data@b
 40653  2876  0873               	movf	??_load_bar+1,w
 40654  2877  00F1               	movwf	i1data@b+1
 40655  2878  31E7  274D  31A8   	fcall	i1_data
 40656                           
 40657                           ;func.c: 1259: data(bar.POT10);
 40658  287B  0140               	movlb	0	; select bank0
 40659  287C  0860               	movf	_bar,w	;volatile
 40660  287D  3901               	andlw	1
 40661  287E  00F2               	movwf	??_load_bar
 40662  287F  01F3               	clrf	??_load_bar+1
 40663  2880  0872               	movf	??_load_bar,w
 40664  2881  00F0               	movwf	i1data@b
 40665  2882  0873               	movf	??_load_bar+1,w
 40666  2883  00F1               	movwf	i1data@b+1
 40667  2884  31E7  274D  31A8   	fcall	i1_data
 40668                           
 40669                           ;func.c: 1260: data(led.ERR);
 40670  2887  0143               	movlb	3	; select bank3
 40671  2888  0C65               	rrf	_led^(0+384),w	;volatile
 40672  2889  0C89               	rrf	9,f
 40673  288A  3901               	andlw	1
 40674  288B  00F2               	movwf	??_load_bar
 40675  288C  01F3               	clrf	??_load_bar+1
 40676  288D  0872               	movf	??_load_bar,w
 40677  288E  00F0               	movwf	i1data@b
 40678  288F  0873               	movf	??_load_bar+1,w
 40679  2890  00F1               	movwf	i1data@b+1
 40680  2891  31E7  274D  31A8   	fcall	i1_data
 40681                           
 40682                           ;func.c: 1261: data(led.OVL);
 40683  2894  0143               	movlb	3	; select bank3
 40684  2895  0C65               	rrf	_led^(0+384),w	;volatile
 40685  2896  3901               	andlw	1
 40686  2897  00F2               	movwf	??_load_bar
 40687  2898  01F3               	clrf	??_load_bar+1
 40688  2899  0872               	movf	??_load_bar,w
 40689  289A  00F0               	movwf	i1data@b
 40690  289B  0873               	movf	??_load_bar+1,w
 40691  289C  00F1               	movwf	i1data@b+1
 40692  289D  31E7  274D  31A8   	fcall	i1_data
 40693                           
 40694                           ;func.c: 1262: data(led.HF);
 40695  28A0  0143               	movlb	3	; select bank3
 40696  28A1  0865               	movf	_led^(0+384),w	;volatile
 40697  28A2  3901               	andlw	1
 40698  28A3  00F2               	movwf	??_load_bar
 40699  28A4  01F3               	clrf	??_load_bar+1
 40700  28A5  0872               	movf	??_load_bar,w
 40701  28A6  00F0               	movwf	i1data@b
 40702  28A7  0873               	movf	??_load_bar+1,w
 40703  28A8  00F1               	movwf	i1data@b+1
 40704  28A9  31E7  274D         	fcall	i1_data
 40705  28AB  0008               	return
 40706  28AC                     __end_of_load_bar:	
 40707                           
 40708                           	psect	text148
 40709  674D                     __ptext148:	
 40710 ;; *************** function i1_data *****************
 40711 ;; Defined at:
 40712 ;;		line 1238 in file "func.c"
 40713 ;; Parameters:    Size  Location     Type
 40714 ;;  b               2    0[COMMON] unsigned int 
 40715 ;; Auto vars:     Size  Location     Type
 40716 ;;		None
 40717 ;; Return value:  Size  Location     Type
 40718 ;;                  1    wreg      void 
 40719 ;; Registers used:
 40720 ;;		wreg, status,0
 40721 ;; Tracked objects:
 40722 ;;		On entry : 0/0
 40723 ;;		On exit  : 0/0
 40724 ;;		Unchanged: 0/0
 40725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40726 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40729 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40730 ;;Total ram usage:        2 bytes
 40731 ;; Hardware stack levels used:    1
 40732 ;; This function calls:
 40733 ;;		Nothing
 40734 ;; This function is called by:
 40735 ;;		_load_bar
 40736 ;; This function uses a non-reentrant model
 40737 ;;
 40738                           
 40739                           
 40740                           ;psect for function i1_data
 40741  674D                     i1_data:	
 40742                           
 40743                           ;func.c: 1239: LATEbits.LATE1 = b;
 40744                           
 40745                           ;incstack = 0
 40746                           ; Regs used in i1_data: [wreg+status,0]
 40747  674D  0C70               	rrf	i1data@b,w
 40748  674E  0140               	movlb	0	; select bank0
 40749  674F  1C03               	skipc
 40750  6750  109A               	bcf	26,1	;volatile
 40751  6751  1803               	skipnc
 40752  6752  149A               	bsf	26,1	;volatile
 40753                           
 40754                           ;func.c: 1240: __nop();__nop();
 40755  6753  0000               	nop
 40756  6754  0000               	nop
 40757                           
 40758                           ;func.c: 1241: LATEbits.LATE0 = 1;
 40759  6755  0140               	movlb	0	; select bank0
 40760  6756  141A               	bsf	26,0	;volatile
 40761                           
 40762                           ;func.c: 1242: __nop();__nop();
 40763  6757  0000               	nop
 40764  6758  0000               	nop
 40765                           
 40766                           ;func.c: 1243: LATEbits.LATE0 = 0;
 40767  6759  0140               	movlb	0	; select bank0
 40768  675A  101A               	bcf	26,0	;volatile
 40769                           
 40770                           ;func.c: 1244: __nop();__nop();
 40771  675B  0000               	nop
 40772  675C  0000               	nop
 40773                           
 40774                           ;func.c: 1245: LATEbits.LATE1 = 0;
 40775  675D  0140               	movlb	0	; select bank0
 40776  675E  109A               	bcf	26,1	;volatile
 40777  675F  0008               	return
 40778  6760                     __end_ofi1_data:	
 40779                           
 40780                           	psect	text149
 40781  61FF                     __ptext149:	
 40782 ;; *************** function i1_clr *****************
 40783 ;; Defined at:
 40784 ;;		line 1231 in file "func.c"
 40785 ;; Parameters:    Size  Location     Type
 40786 ;;		None
 40787 ;; Auto vars:     Size  Location     Type
 40788 ;;		None
 40789 ;; Return value:  Size  Location     Type
 40790 ;;                  1    wreg      void 
 40791 ;; Registers used:
 40792 ;;		None
 40793 ;; Tracked objects:
 40794 ;;		On entry : 0/0
 40795 ;;		On exit  : 0/0
 40796 ;;		Unchanged: 0/0
 40797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40802 ;;Total ram usage:        0 bytes
 40803 ;; Hardware stack levels used:    1
 40804 ;; This function calls:
 40805 ;;		Nothing
 40806 ;; This function is called by:
 40807 ;;		_load_bar
 40808 ;; This function uses a non-reentrant model
 40809 ;;
 40810                           
 40811                           
 40812                           ;psect for function i1_clr
 40813  61FF                     i1_clr:	
 40814                           
 40815                           ;func.c: 1232: LATEbits.LATE2 = 0;
 40816                           
 40817                           ;incstack = 0
 40818                           ; Regs used in i1_clr: []
 40819  61FF  0140               	movlb	0	; select bank0
 40820  6200  111A               	bcf	26,2	;volatile
 40821                           
 40822                           ;func.c: 1233: __nop();__nop();__nop();__nop();
 40823  6201  0000               	nop
 40824  6202  0000               	nop
 40825  6203  0000               	nop
 40826  6204  0000               	nop
 40827                           
 40828                           ;func.c: 1234: LATEbits.LATE2 = 1;
 40829  6205  0140               	movlb	0	; select bank0
 40830  6206  151A               	bsf	26,2	;volatile
 40831                           
 40832                           ;func.c: 1235: __nop();
 40833  6207  0000               	nop
 40834  6208  0008               	return
 40835  6209                     __end_ofi1_clr:	
 40836                           
 40837                           	psect	text150
 40838  6235                     __ptext150:	
 40839 ;; *************** function _TMR5_Reload *****************
 40840 ;; Defined at:
 40841 ;;		line 2404 in file "func.c"
 40842 ;; Parameters:    Size  Location     Type
 40843 ;;		None
 40844 ;; Auto vars:     Size  Location     Type
 40845 ;;		None
 40846 ;; Return value:  Size  Location     Type
 40847 ;;                  1    wreg      void 
 40848 ;; Registers used:
 40849 ;;		wreg, status,2, status,0, pclath, cstack
 40850 ;; Tracked objects:
 40851 ;;		On entry : 0/0
 40852 ;;		On exit  : 0/0
 40853 ;;		Unchanged: 0/0
 40854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40859 ;;Total ram usage:        0 bytes
 40860 ;; Hardware stack levels used:    1
 40861 ;; Hardware stack levels required when called:    1
 40862 ;; This function calls:
 40863 ;;		_TMR5_WriteTimer
 40864 ;; This function is called by:
 40865 ;;		_INTERRUPT_InterruptManager
 40866 ;; This function uses a non-reentrant model
 40867 ;;
 40868                           
 40869                           
 40870                           ;psect for function _TMR5_Reload
 40871  6235                     _TMR5_Reload:	
 40872                           
 40873                           ;func.c: 2406: TMR5_WriteTimer(timer5ReloadVal);
 40874                           
 40875                           ;incstack = 0
 40876                           ; Regs used in _TMR5_Reload: [wreg+status,2+status,0+pclath+cstack]
 40877  6235  0144               	movlb	4	; select bank4
 40878  6236  0839               	movf	(_timer5ReloadVal+1)^(0+512),w	;volatile
 40879  6237  00F1               	movwf	TMR5_WriteTimer@timerVal+1
 40880  6238  0838               	movf	_timer5ReloadVal^(0+512),w	;volatile
 40881  6239  00F0               	movwf	TMR5_WriteTimer@timerVal
 40882  623A  31E2  2245         	fcall	_TMR5_WriteTimer
 40883  623C  0008               	return
 40884  623D                     __end_of_TMR5_Reload:	
 40885                           
 40886                           	psect	text151
 40887  6245                     __ptext151:	
 40888 ;; *************** function _TMR5_WriteTimer *****************
 40889 ;; Defined at:
 40890 ;;		line 2399 in file "func.c"
 40891 ;; Parameters:    Size  Location     Type
 40892 ;;  timerVal        2    0[COMMON] unsigned int 
 40893 ;; Auto vars:     Size  Location     Type
 40894 ;;		None
 40895 ;; Return value:  Size  Location     Type
 40896 ;;                  1    wreg      void 
 40897 ;; Registers used:
 40898 ;;		wreg, status,2
 40899 ;; Tracked objects:
 40900 ;;		On entry : 0/0
 40901 ;;		On exit  : 0/0
 40902 ;;		Unchanged: 0/0
 40903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40908 ;;Total ram usage:        2 bytes
 40909 ;; Hardware stack levels used:    1
 40910 ;; This function calls:
 40911 ;;		Nothing
 40912 ;; This function is called by:
 40913 ;;		_TMR5_Reload
 40914 ;; This function uses a non-reentrant model
 40915 ;;
 40916                           
 40917                           
 40918                           ;psect for function _TMR5_WriteTimer
 40919  6245                     _TMR5_WriteTimer:	
 40920                           
 40921                           ;func.c: 2401: TMR5H = (timerVal >> 8);
 40922                           
 40923                           ;incstack = 0
 40924                           ; Regs used in _TMR5_WriteTimer: [wreg+status,2]
 40925  6245  0871               	movf	TMR5_WriteTimer@timerVal+1,w
 40926  6246  0144               	movlb	4	; select bank4
 40927  6247  0099               	movwf	25	;volatile
 40928                           
 40929                           ;func.c: 2402: TMR5L = timerVal;
 40930  6248  0870               	movf	TMR5_WriteTimer@timerVal,w
 40931  6249  0098               	movwf	24	;volatile
 40932  624A  0008               	return
 40933  624B                     __end_of_TMR5_WriteTimer:	
 40934                           
 40935                           	psect	text152
 40936  623D                     __ptext152:	
 40937 ;; *************** function _TMR1_Reload *****************
 40938 ;; Defined at:
 40939 ;;		line 2372 in file "func.c"
 40940 ;; Parameters:    Size  Location     Type
 40941 ;;		None
 40942 ;; Auto vars:     Size  Location     Type
 40943 ;;		None
 40944 ;; Return value:  Size  Location     Type
 40945 ;;                  1    wreg      void 
 40946 ;; Registers used:
 40947 ;;		wreg, status,2, status,0, pclath, cstack
 40948 ;; Tracked objects:
 40949 ;;		On entry : 0/0
 40950 ;;		On exit  : 0/0
 40951 ;;		Unchanged: 0/0
 40952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 40953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40956 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 40957 ;;Total ram usage:        0 bytes
 40958 ;; Hardware stack levels used:    1
 40959 ;; Hardware stack levels required when called:    1
 40960 ;; This function calls:
 40961 ;;		_TMR1_WriteTimer
 40962 ;; This function is called by:
 40963 ;;		_INTERRUPT_InterruptManager
 40964 ;; This function uses a non-reentrant model
 40965 ;;
 40966                           
 40967                           
 40968                           ;psect for function _TMR1_Reload
 40969  623D                     _TMR1_Reload:	
 40970                           
 40971                           ;func.c: 2374: TMR1_WriteTimer(timer1ReloadVal);
 40972                           
 40973                           ;incstack = 0
 40974                           ; Regs used in _TMR1_Reload: [wreg+status,2+status,0+pclath+cstack]
 40975  623D  0144               	movlb	4	; select bank4
 40976  623E  083B               	movf	(_timer1ReloadVal+1)^(0+512),w	;volatile
 40977  623F  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 40978  6240  083A               	movf	_timer1ReloadVal^(0+512),w	;volatile
 40979  6241  00F0               	movwf	TMR1_WriteTimer@timerVal
 40980  6242  31E1  2184         	fcall	_TMR1_WriteTimer
 40981  6244  0008               	return
 40982  6245                     __end_of_TMR1_Reload:	
 40983                           
 40984                           	psect	text153
 40985  6184                     __ptext153:	
 40986 ;; *************** function _TMR1_WriteTimer *****************
 40987 ;; Defined at:
 40988 ;;		line 2350 in file "func.c"
 40989 ;; Parameters:    Size  Location     Type
 40990 ;;  timerVal        2    0[COMMON] unsigned int 
 40991 ;; Auto vars:     Size  Location     Type
 40992 ;;		None
 40993 ;; Return value:  Size  Location     Type
 40994 ;;                  1    wreg      void 
 40995 ;; Registers used:
 40996 ;;		wreg, status,2
 40997 ;; Tracked objects:
 40998 ;;		On entry : 0/0
 40999 ;;		On exit  : 0/0
 41000 ;;		Unchanged: 0/0
 41001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41002 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41005 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41006 ;;Total ram usage:        2 bytes
 41007 ;; Hardware stack levels used:    1
 41008 ;; This function calls:
 41009 ;;		Nothing
 41010 ;; This function is called by:
 41011 ;;		_TMR1_Reload
 41012 ;; This function uses a non-reentrant model
 41013 ;;
 41014                           
 41015                           
 41016                           ;psect for function _TMR1_WriteTimer
 41017  6184                     _TMR1_WriteTimer:	
 41018                           
 41019                           ;func.c: 2352: if (T1CONbits.nT1SYNC == 1)
 41020                           
 41021                           ;incstack = 0
 41022                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 41023  6184  0144               	movlb	4	; select bank4
 41024  6185  1D0E               	btfss	14,2	;volatile
 41025  6186  298E               	goto	i1l11744
 41026                           
 41027                           ;func.c: 2353: {
 41028                           ;func.c: 2355: T1CONbits.TMR1ON = 0;
 41029  6187  100E               	bcf	14,0	;volatile
 41030                           
 41031                           ;func.c: 2358: TMR1H = (timerVal >> 8);
 41032  6188  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 41033  6189  008D               	movwf	13	;volatile
 41034                           
 41035                           ;func.c: 2359: TMR1L = timerVal;
 41036  618A  0870               	movf	TMR1_WriteTimer@timerVal,w
 41037  618B  008C               	movwf	12	;volatile
 41038                           
 41039                           ;func.c: 2362: T1CONbits.TMR1ON =1;
 41040  618C  140E               	bsf	14,0	;volatile
 41041                           
 41042                           ;func.c: 2363: }
 41043  618D  0008               	return
 41044  618E                     i1l11744:	
 41045                           
 41046                           ;func.c: 2364: else
 41047                           ;func.c: 2365: {
 41048                           ;func.c: 2367: TMR1H = (timerVal >> 8);
 41049  618E  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 41050  618F  008D               	movwf	13	;volatile
 41051                           
 41052                           ;func.c: 2368: TMR1L = timerVal;
 41053  6190  0870               	movf	TMR1_WriteTimer@timerVal,w
 41054  6191  008C               	movwf	12	;volatile
 41055  6192  0008               	return
 41056  6193                     __end_of_TMR1_WriteTimer:	
 41057                           
 41058                           	psect	text154
 41059  5153                     __ptext154:	
 41060 ;; *************** function _EUSART_Transmit_ISR *****************
 41061 ;; Defined at:
 41062 ;;		line 126 in file "eusart.c"
 41063 ;; Parameters:    Size  Location     Type
 41064 ;;		None
 41065 ;; Auto vars:     Size  Location     Type
 41066 ;;		None
 41067 ;; Return value:  Size  Location     Type
 41068 ;;                  1    wreg      void 
 41069 ;; Registers used:
 41070 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 41071 ;; Tracked objects:
 41072 ;;		On entry : 0/0
 41073 ;;		On exit  : 0/0
 41074 ;;		Unchanged: 0/0
 41075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41078 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41079 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41080 ;;Total ram usage:        1 bytes
 41081 ;; Hardware stack levels used:    1
 41082 ;; This function calls:
 41083 ;;		Nothing
 41084 ;; This function is called by:
 41085 ;;		_EUSART_Initialize
 41086 ;;		_INTERRUPT_InterruptManager
 41087 ;; This function uses a non-reentrant model
 41088 ;;
 41089                           
 41090                           
 41091                           ;psect for function _EUSART_Transmit_ISR
 41092  5153                     _EUSART_Transmit_ISR:	
 41093                           
 41094                           ;eusart.c: 130: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 41095                           
 41096                           ;incstack = 0
 41097                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 41098  5153  3020               	movlw	32
 41099  5154  0143               	movlb	3	; select bank3
 41100  5155  0251               	subwf	_eusartTxBufferRemaining^(0+384),w	;volatile
 41101  5156  1803               	skipnc
 41102  5157  296E               	goto	i1l2197
 41103                           
 41104                           ;eusart.c: 131: {
 41105                           ;eusart.c: 132: TX1REG = eusartTxBuffer[eusartTxTail++];
 41106  5158  0852               	movf	_eusartTxTail^(0+384),w
 41107  5159  3E20               	addlw	(low (_eusartTxBuffer| (0+768)))& (0+255)
 41108  515A  0086               	movwf	6
 41109  515B  3003               	movlw	3	; select bank6/7
 41110  515C  0087               	movwf	7
 41111  515D  0801               	movf	1,w
 41112  515E  0142               	movlb	2	; select bank2
 41113  515F  009A               	movwf	26	;volatile
 41114  5160  3001               	movlw	1
 41115  5161  00F0               	movwf	??_EUSART_Transmit_ISR
 41116  5162  0870               	movf	??_EUSART_Transmit_ISR,w
 41117  5163  0143               	movlb	3	; select bank3
 41118  5164  07D2               	addwf	_eusartTxTail^(0+384),f	;volatile
 41119                           
 41120                           ;eusart.c: 133: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 41121  5165  3020               	movlw	32
 41122  5166  0252               	subwf	_eusartTxTail^(0+384),w	;volatile
 41123  5167  1803               	btfsc	3,0
 41124                           
 41125                           ;eusart.c: 134: {
 41126                           ;eusart.c: 135: eusartTxTail = 0;
 41127  5168  01D2               	clrf	_eusartTxTail^(0+384)	;volatile
 41128                           
 41129                           ;eusart.c: 136: }
 41130                           ;eusart.c: 137: eusartTxBufferRemaining++;
 41131  5169  3001               	movlw	1
 41132  516A  00F0               	movwf	??_EUSART_Transmit_ISR
 41133  516B  0870               	movf	??_EUSART_Transmit_ISR,w
 41134  516C  07D1               	addwf	_eusartTxBufferRemaining^(0+384),f	;volatile
 41135                           
 41136                           ;eusart.c: 138: }
 41137  516D  0008               	return
 41138  516E                     i1l2197:	
 41139                           
 41140                           ;eusart.c: 139: else
 41141                           ;eusart.c: 140: {
 41142                           ;eusart.c: 141: PIE3bits.TXIE = 0;
 41143  516E  014E               	movlb	14	; select bank14
 41144  516F  1219               	bcf	25,4	;volatile
 41145  5170  0008               	return
 41146  5171                     __end_of_EUSART_Transmit_ISR:	
 41147                           
 41148                           	psect	text155
 41149  50E2                     __ptext155:	
 41150 ;; *************** function _EUSART_Receive_ISR *****************
 41151 ;; Defined at:
 41152 ;;		line 145 in file "eusart.c"
 41153 ;; Parameters:    Size  Location     Type
 41154 ;;		None
 41155 ;; Auto vars:     Size  Location     Type
 41156 ;;		None
 41157 ;; Return value:  Size  Location     Type
 41158 ;;                  1    wreg      void 
 41159 ;; Registers used:
 41160 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 41161 ;; Tracked objects:
 41162 ;;		On entry : 0/0
 41163 ;;		On exit  : 0/0
 41164 ;;		Unchanged: 0/0
 41165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31  BANK32  BANK33  BANK34  BANK35  BANK36  BANK37  BANK38  BANK39  BANK40  BANK4
      +1  BANK42  BANK43  BANK44  BANK45  BANK46  BANK47  BANK48  BANK49  BANK50
 41166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41168 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0
 41170 ;;Total ram usage:        1 bytes
 41171 ;; Hardware stack levels used:    1
 41172 ;; This function calls:
 41173 ;;		Nothing
 41174 ;; This function is called by:
 41175 ;;		_EUSART_Initialize
 41176 ;;		_INTERRUPT_InterruptManager
 41177 ;; This function uses a non-reentrant model
 41178 ;;
 41179                           
 41180                           
 41181                           ;psect for function _EUSART_Receive_ISR
 41182  50E2                     _EUSART_Receive_ISR:	
 41183                           
 41184                           ;eusart.c: 148: if(1 == RC1STAbits.OERR)
 41185                           
 41186                           ;incstack = 0
 41187                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 41188  50E2  0142               	movlb	2	; select bank2
 41189  50E3  1C9D               	btfss	29,1	;volatile
 41190  50E4  28E7               	goto	i1l13144
 41191                           
 41192                           ;eusart.c: 149: {
 41193                           ;eusart.c: 152: RC1STAbits.CREN = 0;
 41194  50E5  121D               	bcf	29,4	;volatile
 41195                           
 41196                           ;eusart.c: 153: RC1STAbits.CREN = 1;
 41197  50E6  161D               	bsf	29,4	;volatile
 41198  50E7                     i1l13144:	
 41199                           
 41200                           ;eusart.c: 154: }
 41201                           ;eusart.c: 157: eusartRxBuffer[eusartRxHead++] = RC1REG;
 41202  50E7  0819               	movf	25,w	;volatile
 41203  50E8  00F0               	movwf	??_EUSART_Receive_ISR
 41204  50E9  0143               	movlb	3	; select bank3
 41205  50EA  0850               	movf	_eusartRxHead^(0+384),w
 41206  50EB  3EA0               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 41207  50EC  0086               	movwf	6
 41208  50ED  3003               	movlw	3	; select bank7/8
 41209  50EE  0087               	movwf	7
 41210  50EF  0870               	movf	??_EUSART_Receive_ISR,w
 41211  50F0  0081               	movwf	1
 41212  50F1  3001               	movlw	1
 41213  50F2  00F0               	movwf	??_EUSART_Receive_ISR
 41214  50F3  0870               	movf	??_EUSART_Receive_ISR,w
 41215  50F4  07D0               	addwf	_eusartRxHead^(0+384),f	;volatile
 41216                           
 41217                           ;eusart.c: 158: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 41218  50F5  3020               	movlw	32
 41219  50F6  0250               	subwf	_eusartRxHead^(0+384),w	;volatile
 41220  50F7  1803               	btfsc	3,0
 41221                           
 41222                           ;eusart.c: 159: {
 41223                           ;eusart.c: 160: eusartRxHead = 0;
 41224  50F8  01D0               	clrf	_eusartRxHead^(0+384)	;volatile
 41225                           
 41226                           ;eusart.c: 161: }
 41227                           ;eusart.c: 162: eusartRxCount++;
 41228  50F9  3001               	movlw	1
 41229  50FA  00F0               	movwf	??_EUSART_Receive_ISR
 41230  50FB  0870               	movf	??_EUSART_Receive_ISR,w
 41231  50FC  07CE               	addwf	_eusartRxCount^(0+384),f	;volatile
 41232  50FD  0008               	return
 41233  50FE                     __end_of_EUSART_Receive_ISR:	
 41234  007E                     btemp	set	126	;btemp
 41235  007E                     int$flags	set	126
 41236  007E                     wtemp0	set	126
 41237  2F28                     
 41238                           	psect	text9_split_1
 41239  0151                     l15098:	
 41240                           ;func.c: 1561: }
 41241                           
 41242                           ;func.c: 1560: break;
 41243                           
 41244                           ;func.c: 1559: flag.muda_valor = 1;
 41245                           
 41246  0151  0140               	movlb	0	; select bank0
 41247  0152  0864               	movf	_pagina,w	;volatile
 41248                           
 41249                           ; Switch size 1, requested type "space"
 41250                           ; Number of cases is 6, Range of values is 4 to 13
 41251                           ; switch strategies available:
 41252                           ; Name         Instructions Cycles
 41253                           ; simple_byte           19    10 (average)
 41254                           ; direct_byte           29     9 (fixed)
 41255                           ; jumptable            263     9 (fixed)
 41256                           ;	Chosen strategy is simple_byte
 41257  0153  3A04               	xorlw	4	; case 4
 41258  0154  1903               	skipnz
 41259  0155  2F82               	goto	__end_of_telas
 41260  0156  3A0C               	xorlw	12	; case 8
 41261  0157  1903               	skipnz
 41262  0158  2F82               	goto	L68
 41263  0159  3A01               	xorlw	1	; case 9
 41264  015A  31A4  1903         	skipnz
 41265  015C  2C8E  3181         	goto	l15080
 41266  015E  3A02               	xorlw	2	; case 11
 41267  015F  1903               	skipnz
 41268  0160  2F84               	goto	L69
 41269  0161  3A07               	xorlw	7	; case 12
 41270  0162  1903               	skipnz
 41271  0163  2F84               	goto	L70
 41272  0164  3A01               	xorlw	1	; case 13
 41273  0165  31A5  1903         	skipnz
 41274  0167  2D02               	goto	l1715
 41275  0168  31A5  2D04         	goto	l15088
 41276                           
 41277                           ;func.c: 1562: break;
 41278  016A  2F56               	goto	l15270
 41279  016B                     l15100:	
 41280                           ;func.c: 1566: case TELA_TMP_LOAD:
 41281                           
 41282                           ;func.c: 1565: switch (pagina){
 41283                           
 41284                           ;func.c: 1564: case 18:
 41285                           
 41286                           
 41287                           ;func.c: 1567: tmp_desce = carrega_EEPROM(addr_receitas(ee_addr,0));
 41288  016B  01AB               	clrf	addr_receitas@tempo
 41289  016C  0862               	movf	telas@ee_addr,w
 41290  016D  31D0  208C  3181   	fcall	_addr_receitas
 41291  0170  3198  2001  3181   	fcall	_carrega_EEPROM
 41292  0173  0140               	movlb	0	; select bank0
 41293  0174  082D               	movf	?_carrega_EEPROM+1,w
 41294  0175  0143               	movlb	3	; select bank3
 41295  0176  00C3               	movwf	(_tmp_desce+1)^(0+384)
 41296  0177  0140               	movlb	0	; select bank0
 41297  0178  082C               	movf	?_carrega_EEPROM,w
 41298  0179  0143               	movlb	3	; select bank3
 41299  017A  00C2               	movwf	_tmp_desce^(0+384)
 41300                           
 41301                           ;func.c: 1568: tmp_solda = carrega_EEPROM(addr_receitas(ee_addr,2));
 41302  017B  3002               	movlw	2
 41303  017C  0141               	movlb	1	; select bank1
 41304  017D  00A8               	movwf	??_telas^(0+128)
 41305  017E  0828               	movf	??_telas^(0+128),w
 41306  017F  0140               	movlb	0	; select bank0
 41307  0180  00AB               	movwf	addr_receitas@tempo
 41308  0181  0862               	movf	telas@ee_addr,w
 41309  0182  31D0  208C  3181   	fcall	_addr_receitas
 41310  0185  3198  2001  3181   	fcall	_carrega_EEPROM
 41311  0188  0140               	movlb	0	; select bank0
 41312  0189  082D               	movf	?_carrega_EEPROM+1,w
 41313  018A  0143               	movlb	3	; select bank3
 41314  018B  00C1               	movwf	(_tmp_solda+1)^(0+384)
 41315  018C  0140               	movlb	0	; select bank0
 41316  018D  082C               	movf	?_carrega_EEPROM,w
 41317  018E  0143               	movlb	3	; select bank3
 41318  018F  00C0               	movwf	_tmp_solda^(0+384)
 41319                           
 41320                           ;func.c: 1569: ener_solda = carrega_EEPROM(addr_receitas(ee_addr,4));
 41321  0190  3004               	movlw	4
 41322  0191  0141               	movlb	1	; select bank1
 41323  0192  00A8               	movwf	??_telas^(0+128)
 41324  0193  0828               	movf	??_telas^(0+128),w
 41325  0194  0140               	movlb	0	; select bank0
 41326  0195  00AB               	movwf	addr_receitas@tempo
 41327  0196  0862               	movf	telas@ee_addr,w
 41328  0197  31D0  208C  3181   	fcall	_addr_receitas
 41329  019A  3198  2001  3181   	fcall	_carrega_EEPROM
 41330  019D  0140               	movlb	0	; select bank0
 41331  019E  082D               	movf	?_carrega_EEPROM+1,w
 41332  019F  0143               	movlb	3	; select bank3
 41333  01A0  00BF               	movwf	(_ener_solda+1)^(0+384)
 41334  01A1  0140               	movlb	0	; select bank0
 41335  01A2  082C               	movf	?_carrega_EEPROM,w
 41336  01A3  0143               	movlb	3	; select bank3
 41337  01A4  00BE               	movwf	_ener_solda^(0+384)
 41338                           
 41339                           ;func.c: 1570: tmp_fixar = carrega_EEPROM(addr_receitas(ee_addr,6));
 41340  01A5  3006               	movlw	6
 41341  01A6  0141               	movlb	1	; select bank1
 41342  01A7  00A8               	movwf	??_telas^(0+128)
 41343  01A8  0828               	movf	??_telas^(0+128),w
 41344  01A9  0140               	movlb	0	; select bank0
 41345  01AA  00AB               	movwf	addr_receitas@tempo
 41346  01AB  0862               	movf	telas@ee_addr,w
 41347  01AC  31D0  208C  3181   	fcall	_addr_receitas
 41348  01AF  3198  2001  3181   	fcall	_carrega_EEPROM
 41349  01B2  0140               	movlb	0	; select bank0
 41350  01B3  082D               	movf	?_carrega_EEPROM+1,w
 41351  01B4  0143               	movlb	3	; select bank3
 41352  01B5  00BD               	movwf	(_tmp_fixar+1)^(0+384)
 41353  01B6  0140               	movlb	0	; select bank0
 41354  01B7  082C               	movf	?_carrega_EEPROM,w
 41355  01B8  0143               	movlb	3	; select bank3
 41356  01B9  00BC               	movwf	_tmp_fixar^(0+384)
 41357                           
 41358                           ;func.c: 1571: tmp_metal = carrega_EEPROM(addr_receitas(ee_addr,8));
 41359  01BA  3008               	movlw	8
 41360  01BB  0141               	movlb	1	; select bank1
 41361  01BC  00A8               	movwf	??_telas^(0+128)
 41362  01BD  0828               	movf	??_telas^(0+128),w
 41363  01BE  0140               	movlb	0	; select bank0
 41364  01BF  00AB               	movwf	addr_receitas@tempo
 41365  01C0  0862               	movf	telas@ee_addr,w
 41366  01C1  31D0  208C  3181   	fcall	_addr_receitas
 41367  01C4  3198  2001  3181   	fcall	_carrega_EEPROM
 41368  01C7  0140               	movlb	0	; select bank0
 41369  01C8  082D               	movf	?_carrega_EEPROM+1,w
 41370  01C9  0143               	movlb	3	; select bank3
 41371  01CA  00BB               	movwf	(_tmp_metal+1)^(0+384)
 41372  01CB  0140               	movlb	0	; select bank0
 41373  01CC  082C               	movf	?_carrega_EEPROM,w
 41374  01CD  0143               	movlb	3	; select bank3
 41375  01CE  00BA               	movwf	_tmp_metal^(0+384)
 41376                           
 41377                           ;func.c: 1572: flag.value |= (7&carrega_EEPROM(addr_receitas(ee_addr,10)));
 41378  01CF  300A               	movlw	10
 41379  01D0  0141               	movlb	1	; select bank1
 41380  01D1  00A8               	movwf	??_telas^(0+128)
 41381  01D2  0828               	movf	??_telas^(0+128),w
 41382  01D3  0140               	movlb	0	; select bank0
 41383  01D4  00AB               	movwf	addr_receitas@tempo
 41384  01D5  0862               	movf	telas@ee_addr,w
 41385  01D6  31D0  208C  3181   	fcall	_addr_receitas
 41386  01D9  3198  2001  3181   	fcall	_carrega_EEPROM
 41387  01DC  3007               	movlw	7
 41388  01DD  0140               	movlb	0	; select bank0
 41389  01DE  052C               	andwf	?_carrega_EEPROM,w
 41390  01DF  0141               	movlb	1	; select bank1
 41391  01E0  00A9               	movwf	(??_telas+1)^(0+128)
 41392  01E1  3000               	movlw	0
 41393  01E2  0140               	movlb	0	; select bank0
 41394  01E3  052D               	andwf	?_carrega_EEPROM+1,w
 41395  01E4  0141               	movlb	1	; select bank1
 41396  01E5  00AA               	movwf	(??_telas+2)^(0+128)
 41397  01E6  0829               	movf	(??_telas+1)^(0+128),w
 41398  01E7  00AB               	movwf	(??_telas+3)^(0+128)
 41399  01E8  082A               	movf	(??_telas+2)^(0+128),w
 41400  01E9  00AC               	movwf	((??_telas+3)^(0+128)+1)
 41401  01EA  01AD               	clrf	((??_telas+3)^(0+128)+2)
 41402  01EB  01AE               	clrf	((??_telas+3)^(0+128)+3)
 41403  01EC  082B               	movf	(??_telas+3)^(0+128),w
 41404  01ED  0143               	movlb	3	; select bank3
 41405  01EE  04AC               	iorwf	_flag^(0+384),f	;volatile
 41406  01EF  0141               	movlb	1	; select bank1
 41407  01F0  082C               	movf	(??_telas+4)^(0+128),w
 41408  01F1  0143               	movlb	3	; select bank3
 41409  01F2  04AD               	iorwf	(_flag+1)^(0+384),f	;volatile
 41410  01F3  0141               	movlb	1	; select bank1
 41411  01F4  082D               	movf	(??_telas+5)^(0+128),w
 41412  01F5  0143               	movlb	3	; select bank3
 41413  01F6  04AE               	iorwf	(_flag+2)^(0+384),f	;volatile
 41414  01F7  0141               	movlb	1	; select bank1
 41415  01F8  082E               	movf	(??_telas+6)^(0+128),w
 41416  01F9  0143               	movlb	3	; select bank3
 41417  01FA  04AF               	iorwf	(_flag+3)^(0+384),f	;volatile
 41418                           
 41419                           ;func.c: 1573: cont_pecas= carrega_EEPROM32(addr_receitas(ee_addr,12));
 41420  01FB  300C               	movlw	12
 41421  01FC  0141               	movlb	1	; select bank1
 41422  01FD  00A8               	movwf	??_telas^(0+128)
 41423  01FE  0828               	movf	??_telas^(0+128),w
 41424  01FF  0140               	movlb	0	; select bank0
 41425  0200  00AB               	movwf	addr_receitas@tempo
 41426  0201  0862               	movf	telas@ee_addr,w
 41427  0202  31D0  208C  3181   	fcall	_addr_receitas
 41428  0205  31CE  2654  3181   	fcall	_carrega_EEPROM32
 41429  0208  0140               	movlb	0	; select bank0
 41430  0209  082F               	movf	?_carrega_EEPROM32+3,w
 41431  020A  0143               	movlb	3	; select bank3
 41432  020B  00A7               	movwf	(_cont_pecas+3)^(0+384)
 41433  020C  0140               	movlb	0	; select bank0
 41434  020D  082E               	movf	?_carrega_EEPROM32+2,w
 41435  020E  0143               	movlb	3	; select bank3
 41436  020F  00A6               	movwf	(_cont_pecas+2)^(0+384)
 41437  0210  0140               	movlb	0	; select bank0
 41438  0211  082D               	movf	?_carrega_EEPROM32+1,w
 41439  0212  0143               	movlb	3	; select bank3
 41440  0213  00A5               	movwf	(_cont_pecas+1)^(0+384)
 41441  0214  0140               	movlb	0	; select bank0
 41442  0215  082C               	movf	?_carrega_EEPROM32,w
 41443  0216  0143               	movlb	3	; select bank3
 41444  0217  00A4               	movwf	_cont_pecas^(0+384)
 41445  0218  2AD5               	goto	L19
 41446  0219                     l15106:	
 41447                           ;func.c: 1577: case TELA_TMP_SAVE:
 41448                           
 41449                           ;func.c: 1576: break;
 41450                           
 41451                           ;func.c: 1575: flag.muda_valor = 0;
 41452                           
 41453                           ;func.c: 1574: flag.salvar = 1;
 41454                           
 41455                           
 41456                           ;func.c: 1578: salva_EEPROM(tmp_desce,addr_receitas(ee_addr,0));
 41457  0219  0143               	movlb	3	; select bank3
 41458  021A  0843               	movf	(_tmp_desce+1)^(0+384),w
 41459  021B  0140               	movlb	0	; select bank0
 41460  021C  00AF               	movwf	salva_EEPROM@valor+1
 41461  021D  0143               	movlb	3	; select bank3
 41462  021E  0842               	movf	_tmp_desce^(0+384),w
 41463  021F  0140               	movlb	0	; select bank0
 41464  0220  00AE               	movwf	salva_EEPROM@valor
 41465  0221  01AB               	clrf	addr_receitas@tempo
 41466  0222  0862               	movf	telas@ee_addr,w
 41467  0223  31D0  208C  3181   	fcall	_addr_receitas
 41468  0226  0141               	movlb	1	; select bank1
 41469  0227  00A8               	movwf	??_telas^(0+128)
 41470  0228  0828               	movf	??_telas^(0+128),w
 41471  0229  0140               	movlb	0	; select bank0
 41472  022A  00B0               	movwf	salva_EEPROM@address
 41473  022B  31D5  250D  3181   	fcall	_salva_EEPROM
 41474                           
 41475                           ;func.c: 1579: salva_EEPROM(tmp_solda,addr_receitas(ee_addr,2));
 41476  022E  0143               	movlb	3	; select bank3
 41477  022F  0841               	movf	(_tmp_solda+1)^(0+384),w
 41478  0230  0140               	movlb	0	; select bank0
 41479  0231  00AF               	movwf	salva_EEPROM@valor+1
 41480  0232  0143               	movlb	3	; select bank3
 41481  0233  0840               	movf	_tmp_solda^(0+384),w
 41482  0234  0140               	movlb	0	; select bank0
 41483  0235  00AE               	movwf	salva_EEPROM@valor
 41484  0236  3002               	movlw	2
 41485  0237  0141               	movlb	1	; select bank1
 41486  0238  00A8               	movwf	??_telas^(0+128)
 41487  0239  0828               	movf	??_telas^(0+128),w
 41488  023A  0140               	movlb	0	; select bank0
 41489  023B  00AB               	movwf	addr_receitas@tempo
 41490  023C  0862               	movf	telas@ee_addr,w
 41491  023D  31D0  208C  3181   	fcall	_addr_receitas
 41492  0240  0141               	movlb	1	; select bank1
 41493  0241  00A9               	movwf	(??_telas+1)^(0+128)
 41494  0242  0829               	movf	(??_telas+1)^(0+128),w
 41495  0243  0140               	movlb	0	; select bank0
 41496  0244  00B0               	movwf	salva_EEPROM@address
 41497  0245  31D5  250D  3181   	fcall	_salva_EEPROM
 41498                           
 41499                           ;func.c: 1580: salva_EEPROM(ener_solda,addr_receitas(ee_addr,4));
 41500  0248  0143               	movlb	3	; select bank3
 41501  0249  083F               	movf	(_ener_solda+1)^(0+384),w
 41502  024A  0140               	movlb	0	; select bank0
 41503  024B  00AF               	movwf	salva_EEPROM@valor+1
 41504  024C  0143               	movlb	3	; select bank3
 41505  024D  083E               	movf	_ener_solda^(0+384),w
 41506  024E  0140               	movlb	0	; select bank0
 41507  024F  00AE               	movwf	salva_EEPROM@valor
 41508  0250  3004               	movlw	4
 41509  0251  0141               	movlb	1	; select bank1
 41510  0252  00A8               	movwf	??_telas^(0+128)
 41511  0253  0828               	movf	??_telas^(0+128),w
 41512  0254  0140               	movlb	0	; select bank0
 41513  0255  00AB               	movwf	addr_receitas@tempo
 41514  0256  0862               	movf	telas@ee_addr,w
 41515  0257  31D0  208C  3181   	fcall	_addr_receitas
 41516  025A  0141               	movlb	1	; select bank1
 41517  025B  00A9               	movwf	(??_telas+1)^(0+128)
 41518  025C  0829               	movf	(??_telas+1)^(0+128),w
 41519  025D  0140               	movlb	0	; select bank0
 41520  025E  00B0               	movwf	salva_EEPROM@address
 41521  025F  31D5  250D  3181   	fcall	_salva_EEPROM
 41522                           
 41523                           ;func.c: 1581: salva_EEPROM(tmp_fixar,addr_receitas(ee_addr,6));
 41524  0262  0143               	movlb	3	; select bank3
 41525  0263  083D               	movf	(_tmp_fixar+1)^(0+384),w
 41526  0264  0140               	movlb	0	; select bank0
 41527  0265  00AF               	movwf	salva_EEPROM@valor+1
 41528  0266  0143               	movlb	3	; select bank3
 41529  0267  083C               	movf	_tmp_fixar^(0+384),w
 41530  0268  0140               	movlb	0	; select bank0
 41531  0269  00AE               	movwf	salva_EEPROM@valor
 41532  026A  3006               	movlw	6
 41533  026B  0141               	movlb	1	; select bank1
 41534  026C  00A8               	movwf	??_telas^(0+128)
 41535  026D  0828               	movf	??_telas^(0+128),w
 41536  026E  0140               	movlb	0	; select bank0
 41537  026F  00AB               	movwf	addr_receitas@tempo
 41538  0270  0862               	movf	telas@ee_addr,w
 41539  0271  31D0  208C  3181   	fcall	_addr_receitas
 41540  0274  0141               	movlb	1	; select bank1
 41541  0275  00A9               	movwf	(??_telas+1)^(0+128)
 41542  0276  0829               	movf	(??_telas+1)^(0+128),w
 41543  0277  0140               	movlb	0	; select bank0
 41544  0278  00B0               	movwf	salva_EEPROM@address
 41545  0279  31D5  250D  3181   	fcall	_salva_EEPROM
 41546                           
 41547                           ;func.c: 1582: salva_EEPROM(tmp_metal,addr_receitas(ee_addr,8));
 41548  027C  0143               	movlb	3	; select bank3
 41549  027D  083B               	movf	(_tmp_metal+1)^(0+384),w
 41550  027E  0140               	movlb	0	; select bank0
 41551  027F  00AF               	movwf	salva_EEPROM@valor+1
 41552  0280  0143               	movlb	3	; select bank3
 41553  0281  083A               	movf	_tmp_metal^(0+384),w
 41554  0282  0140               	movlb	0	; select bank0
 41555  0283  00AE               	movwf	salva_EEPROM@valor
 41556  0284  3008               	movlw	8
 41557  0285  0141               	movlb	1	; select bank1
 41558  0286  00A8               	movwf	??_telas^(0+128)
 41559  0287  0828               	movf	??_telas^(0+128),w
 41560  0288  0140               	movlb	0	; select bank0
 41561  0289  00AB               	movwf	addr_receitas@tempo
 41562  028A  0862               	movf	telas@ee_addr,w
 41563  028B  31D0  208C  3181   	fcall	_addr_receitas
 41564  028E  0141               	movlb	1	; select bank1
 41565  028F  00A9               	movwf	(??_telas+1)^(0+128)
 41566  0290  0829               	movf	(??_telas+1)^(0+128),w
 41567  0291  0140               	movlb	0	; select bank0
 41568  0292  00B0               	movwf	salva_EEPROM@address
 41569  0293  31D5  250D  3181   	fcall	_salva_EEPROM
 41570                           
 41571                           ;func.c: 1583: salva_EEPROM((7&flag.value),addr_receitas(ee_addr,10));
 41572  0296  3007               	movlw	7
 41573  0297  0143               	movlb	3	; select bank3
 41574  0298  052C               	andwf	_flag^(0+384),w	;volatile
 41575  0299  0140               	movlb	0	; select bank0
 41576  029A  00AE               	movwf	salva_EEPROM@valor
 41577  029B  3000               	movlw	0
 41578  029C  0143               	movlb	3	; select bank3
 41579  029D  052D               	andwf	(_flag+1)^(0+384),w	;volatile
 41580  029E  0140               	movlb	0	; select bank0
 41581  029F  00AF               	movwf	salva_EEPROM@valor+1
 41582  02A0  300A               	movlw	10
 41583  02A1  0141               	movlb	1	; select bank1
 41584  02A2  00A8               	movwf	??_telas^(0+128)
 41585  02A3  0828               	movf	??_telas^(0+128),w
 41586  02A4  0140               	movlb	0	; select bank0
 41587  02A5  00AB               	movwf	addr_receitas@tempo
 41588  02A6  0862               	movf	telas@ee_addr,w
 41589  02A7  31D0  208C  3181   	fcall	_addr_receitas
 41590  02AA  0141               	movlb	1	; select bank1
 41591  02AB  00A9               	movwf	(??_telas+1)^(0+128)
 41592  02AC  0829               	movf	(??_telas+1)^(0+128),w
 41593  02AD  0140               	movlb	0	; select bank0
 41594  02AE  00B0               	movwf	salva_EEPROM@address
 41595  02AF  31D5  250D  3181   	fcall	_salva_EEPROM
 41596                           
 41597                           ;func.c: 1584: salva_EEPROM32(cont_pecas,addr_receitas(ee_addr,12));
 41598  02B2  0143               	movlb	3	; select bank3
 41599  02B3  0827               	movf	(_cont_pecas+3)^(0+384),w
 41600  02B4  0140               	movlb	0	; select bank0
 41601  02B5  00B1               	movwf	salva_EEPROM32@valor+3
 41602  02B6  0143               	movlb	3	; select bank3
 41603  02B7  0826               	movf	(_cont_pecas+2)^(0+384),w
 41604  02B8  0140               	movlb	0	; select bank0
 41605  02B9  00B0               	movwf	salva_EEPROM32@valor+2
 41606  02BA  0143               	movlb	3	; select bank3
 41607  02BB  0825               	movf	(_cont_pecas+1)^(0+384),w
 41608  02BC  0140               	movlb	0	; select bank0
 41609  02BD  00AF               	movwf	salva_EEPROM32@valor+1
 41610  02BE  0143               	movlb	3	; select bank3
 41611  02BF  0824               	movf	_cont_pecas^(0+384),w
 41612  02C0  0140               	movlb	0	; select bank0
 41613  02C1  00AE               	movwf	salva_EEPROM32@valor
 41614  02C2  300C               	movlw	12
 41615  02C3  0141               	movlb	1	; select bank1
 41616  02C4  00A8               	movwf	??_telas^(0+128)
 41617  02C5  0828               	movf	??_telas^(0+128),w
 41618  02C6  0140               	movlb	0	; select bank0
 41619  02C7  00AB               	movwf	addr_receitas@tempo
 41620  02C8  0862               	movf	telas@ee_addr,w
 41621  02C9  31D0  208C  3181   	fcall	_addr_receitas
 41622  02CC  0141               	movlb	1	; select bank1
 41623  02CD  00A9               	movwf	(??_telas+1)^(0+128)
 41624  02CE  0829               	movf	(??_telas+1)^(0+128),w
 41625  02CF  0140               	movlb	0	; select bank0
 41626  02D0  00B2               	movwf	salva_EEPROM32@address
 41627  02D1  31CD  2527  3181   	fcall	_salva_EEPROM32
 41628                           
 41629                           ;func.c: 1585: flag.salvar = 1;
 41630  02D4  0143               	movlb	3	; select bank3
 41631  02D5                     L19:	
 41632  02D5  15AD               	bsf	(_flag^(0+384)+1),3	;volatile
 41633                           
 41634                           ;func.c: 1586: flag.muda_valor = 0;
 41635  02D6  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 41636                           
 41637                           ;func.c: 1587: break;
 41638  02D7  2F56               	goto	l15270
 41639  02D8                     l15112:	
 41640                           ;func.c: 1588: case TELA_TIPO_SOLDA:
 41641                           
 41642                           
 41643                           ;func.c: 1590: flag.energiaErro = ~flag.energiaErro;
 41644  02D8  1003               	clrc
 41645  02D9  0143               	movlb	3	; select bank3
 41646  02DA  1CAC               	btfss	_flag^(0+384),1	;volatile
 41647  02DB  1403               	setc
 41648  02DC  1C03               	btfss	3,0
 41649  02DD  2AE1               	goto	u16500
 41650  02DE  0143               	movlb	3	; select bank3
 41651  02DF  14AC               	bsf	_flag^(0+384),1	;volatile
 41652  02E0  2AE3               	goto	l15114
 41653  02E1                     u16500:	
 41654  02E1  0143               	movlb	3	; select bank3
 41655  02E2  10AC               	bcf	_flag^(0+384),1	;volatile
 41656  02E3                     l15114:	
 41657                           
 41658                           ;func.c: 1591: if(flag.energiaErro)
 41659  02E3  1CAC               	btfss	_flag^(0+384),1	;volatile
 41660  02E4  2AF0               	goto	l15118
 41661                           
 41662                           ;func.c: 1592: config_saidas(ERRO_ENE,OUT3);
 41663  02E5  3003               	movlw	3
 41664  02E6  0141               	movlb	1	; select bank1
 41665  02E7  00A8               	movwf	??_telas^(0+128)
 41666  02E8  0828               	movf	??_telas^(0+128),w
 41667  02E9  0140               	movlb	0	; select bank0
 41668  02EA  00AE               	movwf	config_saidas@ch
 41669  02EB  3004               	movlw	4
 41670  02EC  31CC  246B  3181   	fcall	_config_saidas
 41671  02EF  2B04               	goto	l1729
 41672  02F0                     l15118:	
 41673                           
 41674                           ;func.c: 1593: else
 41675                           ;func.c: 1594: config_saidas(STATUS_GERADOR,OUT3);
 41676  02F0  3003               	movlw	3
 41677  02F1  0141               	movlb	1	; select bank1
 41678  02F2  00A8               	movwf	??_telas^(0+128)
 41679  02F3  0828               	movf	??_telas^(0+128),w
 41680  02F4  0140               	movlb	0	; select bank0
 41681  02F5  00AE               	movwf	config_saidas@ch
 41682  02F6  3005               	movlw	5
 41683  02F7  31CC  246B  3181   	fcall	_config_saidas
 41684  02FA  2B04               	goto	l1729
 41685  02FB                     l1726:	
 41686                           ;func.c: 1597: case TELA_TIPO_CONT:
 41687                           
 41688                           ;func.c: 1596: break;
 41689                           
 41690                           ;func.c: 1595: flag.muda_valor = 1;
 41691                           
 41692                           
 41693                           ;func.c: 1598: flag.muda_valor = 0;
 41694  02FB  0143               	movlb	3	; select bank3
 41695  02FC  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 41696                           
 41697                           ;func.c: 1599: flag.salvar = 1;
 41698  02FD  15AD               	bsf	(_flag^(0+384)+1),3	;volatile
 41699                           
 41700                           ;func.c: 1600: break;
 41701  02FE  2F56               	goto	l15270
 41702  02FF                     l1727:	
 41703                           ;func.c: 1601: case TELA_TIPO_MAQU:
 41704                           
 41705  02FF  2B04               	goto	l1729
 41706  0300                     l1728:	
 41707                           ;func.c: 1604: case TELA_OP_TMP:
 41708                           
 41709                           ;func.c: 1603: break;
 41710                           
 41711                           ;func.c: 1602: flag.muda_valor = 1;
 41712                           
 41713                           
 41714                           ;func.c: 1605: flag.muda_valor = 0;
 41715  0300  0143               	movlb	3	; select bank3
 41716  0301  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 41717                           
 41718                           ;func.c: 1606: flag.salvar = 0;
 41719  0302  11AD               	bcf	(_flag^(0+384)+1),3	;volatile
 41720                           
 41721                           ;func.c: 1607: break;
 41722  0303  2F56               	goto	l15270
 41723  0304                     l1729:	
 41724                           ;func.c: 1608: case TELA_IDIOMA:
 41725                           
 41726                           
 41727                           ;func.c: 1609: flag.muda_valor = 1;
 41728  0304  0143               	movlb	3	; select bank3
 41729  0305  152D               	bsf	(_flag^(0+384)+1),2	;volatile
 41730                           
 41731                           ;func.c: 1610: break;
 41732  0306  2F56               	goto	l15270
 41733  0307                     l1730:	
 41734                           ;func.c: 1611: default:
 41735                           
 41736                           
 41737                           ;func.c: 1612: flag.muda_tela = 1;
 41738  0307  0143               	movlb	3	; select bank3
 41739  0308  14AD               	bsf	(_flag^(0+384)+1),1	;volatile
 41740                           
 41741                           ;func.c: 1613: if(flag.tela && tmp_soma == 1)
 41742  0309  1C2D               	btfss	(_flag^(0+384)+1),0	;volatile
 41743  030A  2B11               	goto	l1731
 41744  030B  0366               	decf	_tmp_soma^(0+384),w
 41745  030C  0467               	iorwf	(_tmp_soma+1)^(0+384),w
 41746  030D  1D03               	btfss	3,2
 41747  030E  2B11               	goto	l1731
 41748                           
 41749                           ;func.c: 1614: tmp_soma = 10;
 41750  030F  300A               	movlw	10
 41751  0310  2B1D               	goto	L13
 41752  0311                     l1731:	
 41753                           
 41754                           ;func.c: 1615: else if(flag.tela && tmp_soma == 10)
 41755  0311  1C2D               	btfss	(_flag^(0+384)+1),0	;volatile
 41756  0312  2B1A               	goto	l1733
 41757  0313  300A               	movlw	10
 41758  0314  0666               	xorwf	_tmp_soma^(0+384),w
 41759  0315  0467               	iorwf	(_tmp_soma+1)^(0+384),w
 41760  0316  1D03               	btfss	3,2
 41761  0317  2B1A               	goto	l1733
 41762                           
 41763                           ;func.c: 1616: tmp_soma = 100;
 41764  0318  3064               	movlw	100
 41765  0319  2B1D               	goto	L13
 41766  031A                     l1733:	
 41767                           
 41768                           ;func.c: 1617: else if(flag.tela)
 41769  031A  1C2D               	btfss	(_flag^(0+384)+1),0	;volatile
 41770  031B  2F56               	goto	l15270
 41771                           
 41772                           ;func.c: 1618: tmp_soma = 1;
 41773  031C  3001               	movlw	1
 41774  031D                     L13:	
 41775  031D  00E6               	movwf	_tmp_soma^(0+384)
 41776  031E  3000               	movlw	0
 41777  031F  00E7               	movwf	(_tmp_soma^(0+384)+1)
 41778                           
 41779                           ;func.c: 1620: }
 41780                           
 41781                           ;func.c: 1619: break;
 41782  0320  2F56               	goto	l15270
 41783  0321                     l15134:	
 41784  0321  0140               	movlb	0	; select bank0
 41785  0322  0864               	movf	_pagina,w	;volatile
 41786                           
 41787                           ; Switch size 1, requested type "space"
 41788                           ; Number of cases is 7, Range of values is 4 to 14
 41789                           ; switch strategies available:
 41790                           ; Name         Instructions Cycles
 41791                           ; simple_byte           22    12 (average)
 41792                           ; direct_byte           31     9 (fixed)
 41793                           ; jumptable            263     9 (fixed)
 41794                           ;	Chosen strategy is simple_byte
 41795  0323  3A04               	xorlw	4	; case 4
 41796  0324  1903               	skipnz
 41797  0325  2AD8               	goto	l15112
 41798  0326  3A0C               	xorlw	12	; case 8
 41799  0327  1903               	skipnz
 41800  0328  2AFB               	goto	l1726
 41801  0329  3A02               	xorlw	2	; case 10
 41802  032A  1903               	skipnz
 41803  032B  2AFF               	goto	l1727
 41804  032C  3A01               	xorlw	1	; case 11
 41805  032D  1903               	skipnz
 41806  032E  296B               	goto	l15100
 41807  032F  3A07               	xorlw	7	; case 12
 41808  0330  1903               	skipnz
 41809  0331  2A19               	goto	l15106
 41810  0332  3A01               	xorlw	1	; case 13
 41811  0333  1903               	skipnz
 41812  0334  2B00               	goto	l1728
 41813  0335  3A03               	xorlw	3	; case 14
 41814  0336  1903               	skipnz
 41815  0337  2B04               	goto	l1729
 41816  0338  2B07               	goto	l1730
 41817                           
 41818                           ;func.c: 1622: }
 41819                           
 41820                           ;func.c: 1621: break;
 41821  0339  2F56               	goto	l15270
 41822  033A                     l15138:	
 41823  033A  0141               	movlb	1	; select bank1
 41824  033B  0830               	movf	telas@b^(0+128),w
 41825                           
 41826                           ; Switch size 1, requested type "space"
 41827                           ; Number of cases is 5, Range of values is 10 to 34
 41828                           ; switch strategies available:
 41829                           ; Name         Instructions Cycles
 41830                           ; simple_byte           16     9 (average)
 41831                           ; direct_byte           59     9 (fixed)
 41832                           ; jumptable            263     9 (fixed)
 41833                           ;	Chosen strategy is simple_byte
 41834  033C  3A0A               	xorlw	10	; case 10
 41835  033D  31A2  1903         	skipnz
 41836  033F  2ADF  3181         	goto	l15012
 41837  0341  3A1B               	xorlw	27	; case 17
 41838  0342  1903               	skipnz
 41839  0343  2F86               	goto	L72
 41840  0344  3A03               	xorlw	3	; case 18
 41841  0345  1903               	skipnz
 41842  0346  2B21               	goto	l15134
 41843  0347  3A06               	xorlw	6	; case 20
 41844  0348  1903               	skipnz
 41845  0349  2951               	goto	l15098
 41846  034A  3A36               	xorlw	54	; case 34
 41847  034B  1903               	skipnz
 41848  034C  2F88               	goto	L74
 41849  034D  2F56               	goto	l15270
 41850                           
 41851                           ;func.c: 1629: switch (pagina){
 41852  034E  2F56               	goto	l15270
 41853  034F                     l1737:	
 41854                           ;func.c: 1630: case TELA_TMP_DESCE:
 41855                           
 41856                           
 41857                           ;func.c: 1632: if(flag.muda_valor){
 41858  034F  0143               	movlb	3	; select bank3
 41859  0350  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 41860  0351  2B5B               	goto	l15144
 41861                           
 41862                           ;func.c: 1633: tmp_desce = temp;
 41863  0352  0140               	movlb	0	; select bank0
 41864  0353  085B               	movf	telas@temp+1,w
 41865  0354  0143               	movlb	3	; select bank3
 41866  0355  00C3               	movwf	(_tmp_desce+1)^(0+384)
 41867  0356  0140               	movlb	0	; select bank0
 41868  0357  085A               	movf	telas@temp,w
 41869  0358  0143               	movlb	3	; select bank3
 41870  0359  00C2               	movwf	_tmp_desce^(0+384)
 41871                           
 41872                           ;func.c: 1634: flag.muda_valor = 0;
 41873  035A  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 41874  035B                     l15144:	
 41875                           
 41876                           ;func.c: 1635: }
 41877                           ;func.c: 1636: escreve_tempos(descida_str[idioma],tmp_desce,pagina);
 41878  035B  085A               	movf	_idioma^(0+384),w
 41879  035C  0141               	movlb	1	; select bank1
 41880  035D  00A8               	movwf	??_telas^(0+128)
 41881  035E  01A9               	clrf	(??_telas^(0+128)+1)
 41882  035F  0828               	movf	??_telas^(0+128),w
 41883  0360  0140               	movlb	0	; select bank0
 41884  0361  00AB               	movwf	___wmul@multiplier
 41885  0362  0141               	movlb	1	; select bank1
 41886  0363  0829               	movf	(??_telas+1)^(0+128),w
 41887  0364  0140               	movlb	0	; select bank0
 41888  0365  00AC               	movwf	___wmul@multiplier+1
 41889  0366  3011               	movlw	17
 41890  0367  00AD               	movwf	___wmul@multiplicand
 41891  0368  3000               	movlw	0
 41892  0369  00AE               	movwf	___wmul@multiplicand+1
 41893  036A  31D0  20FE  3181   	fcall	___wmul
 41894  036D  3056               	movlw	low (_descida_str| (0+32768))
 41895  036E  0141               	movlb	1	; select bank1
 41896  036F  00AA               	movwf	(??_telas+2)^(0+128)
 41897  0370  30E0               	movlw	high (_descida_str| (0+32768))
 41898  0371  00AB               	movwf	((??_telas+2)^(0+128)+1)
 41899  0372  0140               	movlb	0	; select bank0
 41900  0373  082B               	movf	?___wmul,w
 41901  0374  0141               	movlb	1	; select bank1
 41902  0375  072A               	addwf	(??_telas+2)^(0+128),w
 41903  0376  00B1               	movwf	_telas$4267^(0+128)
 41904  0377  0140               	movlb	0	; select bank0
 41905  0378  082C               	movf	?___wmul+1,w
 41906  0379  0141               	movlb	1	; select bank1
 41907  037A  3D2B               	addwfc	(??_telas+3)^(0+128),w
 41908  037B  00B2               	movwf	(_telas$4267+1)^(0+128)
 41909                           
 41910                           ;func.c: 1635: }
 41911                           ;func.c: 1636: escreve_tempos(descida_str[idioma],tmp_desce,pagina);
 41912  037C  0832               	movf	(_telas$4267+1)^(0+128),w
 41913  037D  0140               	movlb	0	; select bank0
 41914  037E  00D4               	movwf	escreve_tempos@s1+1
 41915  037F  0141               	movlb	1	; select bank1
 41916  0380  0831               	movf	_telas$4267^(0+128),w
 41917  0381  0140               	movlb	0	; select bank0
 41918  0382  00D3               	movwf	escreve_tempos@s1
 41919  0383  0143               	movlb	3	; select bank3
 41920  0384  0843               	movf	(_tmp_desce+1)^(0+384),w
 41921  0385  0140               	movlb	0	; select bank0
 41922  0386  00D6               	movwf	escreve_tempos@t+1
 41923  0387  0143               	movlb	3	; select bank3
 41924  0388  0842               	movf	_tmp_desce^(0+384),w
 41925  0389  0140               	movlb	0	; select bank0
 41926  038A  00D5               	movwf	escreve_tempos@t
 41927  038B  0864               	movf	_pagina,w	;volatile
 41928  038C  0141               	movlb	1	; select bank1
 41929  038D  00A8               	movwf	??_telas^(0+128)
 41930  038E  0828               	movf	??_telas^(0+128),w
 41931  038F  0140               	movlb	0	; select bank0
 41932  0390  00D7               	movwf	escreve_tempos@pag
 41933  0391  31A0  207D  3181   	fcall	_escreve_tempos
 41934                           
 41935                           ;func.c: 1637: temp = tmp_desce;
 41936  0394  0143               	movlb	3	; select bank3
 41937  0395  0842               	movf	_tmp_desce^(0+384),w
 41938  0396  0140               	movlb	0	; select bank0
 41939  0397  00DA               	movwf	telas@temp
 41940  0398  0143               	movlb	3	; select bank3
 41941  0399  0843               	movf	(_tmp_desce+1)^(0+384),w
 41942  039A  2E47               	goto	L18
 41943  039B                     l1740:	
 41944                           ;func.c: 1640: case TELA_TMP_SOLDA:
 41945                           
 41946                           ;func.c: 1638: break;
 41947                           
 41948                           
 41949                           ;func.c: 1642: if(flag.muda_valor){
 41950  039B  0143               	movlb	3	; select bank3
 41951  039C  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 41952  039D  2BA7               	goto	l15154
 41953                           
 41954                           ;func.c: 1643: tmp_solda = temp;
 41955  039E  0140               	movlb	0	; select bank0
 41956  039F  085B               	movf	telas@temp+1,w
 41957  03A0  0143               	movlb	3	; select bank3
 41958  03A1  00C1               	movwf	(_tmp_solda+1)^(0+384)
 41959  03A2  0140               	movlb	0	; select bank0
 41960  03A3  085A               	movf	telas@temp,w
 41961  03A4  0143               	movlb	3	; select bank3
 41962  03A5  00C0               	movwf	_tmp_solda^(0+384)
 41963                           
 41964                           ;func.c: 1644: flag.muda_valor = 0;
 41965  03A6  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 41966  03A7                     l15154:	
 41967                           
 41968                           ;func.c: 1645: }
 41969                           ;func.c: 1646: escreve_tempos(solda_str[idioma],tmp_solda,pagina);
 41970  03A7  085A               	movf	_idioma^(0+384),w
 41971  03A8  0141               	movlb	1	; select bank1
 41972  03A9  00A8               	movwf	??_telas^(0+128)
 41973  03AA  01A9               	clrf	(??_telas^(0+128)+1)
 41974  03AB  0828               	movf	??_telas^(0+128),w
 41975  03AC  0140               	movlb	0	; select bank0
 41976  03AD  00AB               	movwf	___wmul@multiplier
 41977  03AE  0141               	movlb	1	; select bank1
 41978  03AF  0829               	movf	(??_telas+1)^(0+128),w
 41979  03B0  0140               	movlb	0	; select bank0
 41980  03B1  00AC               	movwf	___wmul@multiplier+1
 41981  03B2  3011               	movlw	17
 41982  03B3  00AD               	movwf	___wmul@multiplicand
 41983  03B4  3000               	movlw	0
 41984  03B5  00AE               	movwf	___wmul@multiplicand+1
 41985  03B6  31D0  20FE  3181   	fcall	___wmul
 41986  03B9  3034               	movlw	low (_solda_str| (0+32768))
 41987  03BA  0141               	movlb	1	; select bank1
 41988  03BB  00AA               	movwf	(??_telas+2)^(0+128)
 41989  03BC  30E0               	movlw	high (_solda_str| (0+32768))
 41990  03BD  00AB               	movwf	((??_telas+2)^(0+128)+1)
 41991  03BE  0140               	movlb	0	; select bank0
 41992  03BF  082B               	movf	?___wmul,w
 41993  03C0  0141               	movlb	1	; select bank1
 41994  03C1  072A               	addwf	(??_telas+2)^(0+128),w
 41995  03C2  00B1               	movwf	_telas$4267^(0+128)
 41996  03C3  0140               	movlb	0	; select bank0
 41997  03C4  082C               	movf	?___wmul+1,w
 41998  03C5  0141               	movlb	1	; select bank1
 41999  03C6  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42000  03C7  00B2               	movwf	(_telas$4267+1)^(0+128)
 42001                           
 42002                           ;func.c: 1645: }
 42003                           ;func.c: 1646: escreve_tempos(solda_str[idioma],tmp_solda,pagina);
 42004  03C8  0832               	movf	(_telas$4267+1)^(0+128),w
 42005  03C9  0140               	movlb	0	; select bank0
 42006  03CA  00D4               	movwf	escreve_tempos@s1+1
 42007  03CB  0141               	movlb	1	; select bank1
 42008  03CC  0831               	movf	_telas$4267^(0+128),w
 42009  03CD  0140               	movlb	0	; select bank0
 42010  03CE  00D3               	movwf	escreve_tempos@s1
 42011  03CF  0143               	movlb	3	; select bank3
 42012  03D0  0841               	movf	(_tmp_solda+1)^(0+384),w
 42013  03D1  0140               	movlb	0	; select bank0
 42014  03D2  00D6               	movwf	escreve_tempos@t+1
 42015  03D3  0143               	movlb	3	; select bank3
 42016  03D4  0840               	movf	_tmp_solda^(0+384),w
 42017  03D5  0140               	movlb	0	; select bank0
 42018  03D6  00D5               	movwf	escreve_tempos@t
 42019  03D7  0864               	movf	_pagina,w	;volatile
 42020  03D8  0141               	movlb	1	; select bank1
 42021  03D9  00A8               	movwf	??_telas^(0+128)
 42022  03DA  0828               	movf	??_telas^(0+128),w
 42023  03DB  0140               	movlb	0	; select bank0
 42024  03DC  00D7               	movwf	escreve_tempos@pag
 42025  03DD  31A0  207D  3181   	fcall	_escreve_tempos
 42026                           
 42027                           ;func.c: 1647: temp = tmp_solda;
 42028  03E0  0143               	movlb	3	; select bank3
 42029  03E1  0840               	movf	_tmp_solda^(0+384),w
 42030  03E2  0140               	movlb	0	; select bank0
 42031  03E3  00DA               	movwf	telas@temp
 42032  03E4  0143               	movlb	3	; select bank3
 42033  03E5  0841               	movf	(_tmp_solda+1)^(0+384),w
 42034  03E6  2E47               	goto	L18
 42035  03E7                     l1742:	
 42036                           ;func.c: 1650: case TELA_TMP_JOULE:
 42037                           
 42038                           ;func.c: 1648: break;
 42039                           
 42040                           
 42041                           ;func.c: 1651: if(flag.muda_valor){
 42042  03E7  0143               	movlb	3	; select bank3
 42043  03E8  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 42044  03E9  2BF3               	goto	l15164
 42045                           
 42046                           ;func.c: 1652: ener_solda = temp;
 42047  03EA  0140               	movlb	0	; select bank0
 42048  03EB  085B               	movf	telas@temp+1,w
 42049  03EC  0143               	movlb	3	; select bank3
 42050  03ED  00BF               	movwf	(_ener_solda+1)^(0+384)
 42051  03EE  0140               	movlb	0	; select bank0
 42052  03EF  085A               	movf	telas@temp,w
 42053  03F0  0143               	movlb	3	; select bank3
 42054  03F1  00BE               	movwf	_ener_solda^(0+384)
 42055                           
 42056                           ;func.c: 1653: flag.muda_valor = 0;
 42057  03F2  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 42058  03F3                     l15164:	
 42059                           
 42060                           ;func.c: 1654: }
 42061                           ;func.c: 1655: escreve_tempos(joule_str[idioma],ener_solda,pagina);
 42062  03F3  085A               	movf	_idioma^(0+384),w
 42063  03F4  0141               	movlb	1	; select bank1
 42064  03F5  00A8               	movwf	??_telas^(0+128)
 42065  03F6  01A9               	clrf	(??_telas^(0+128)+1)
 42066  03F7  0828               	movf	??_telas^(0+128),w
 42067  03F8  0140               	movlb	0	; select bank0
 42068  03F9  00AB               	movwf	___wmul@multiplier
 42069  03FA  0141               	movlb	1	; select bank1
 42070  03FB  0829               	movf	(??_telas+1)^(0+128),w
 42071  03FC  0140               	movlb	0	; select bank0
 42072  03FD  00AC               	movwf	___wmul@multiplier+1
 42073  03FE  3011               	movlw	17
 42074  03FF  00AD               	movwf	___wmul@multiplicand
 42075  0400  3000               	movlw	0
 42076  0401  00AE               	movwf	___wmul@multiplicand+1
 42077  0402  31D0  20FE  3181   	fcall	___wmul
 42078  0405  3012               	movlw	low (_joule_str| (0+32768))
 42079  0406  0141               	movlb	1	; select bank1
 42080  0407  00AA               	movwf	(??_telas+2)^(0+128)
 42081  0408  30E0               	movlw	high (_joule_str| (0+32768))
 42082  0409  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42083  040A  0140               	movlb	0	; select bank0
 42084  040B  082B               	movf	?___wmul,w
 42085  040C  0141               	movlb	1	; select bank1
 42086  040D  072A               	addwf	(??_telas+2)^(0+128),w
 42087  040E  00B1               	movwf	_telas$4267^(0+128)
 42088  040F  0140               	movlb	0	; select bank0
 42089  0410  082C               	movf	?___wmul+1,w
 42090  0411  0141               	movlb	1	; select bank1
 42091  0412  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42092  0413  00B2               	movwf	(_telas$4267+1)^(0+128)
 42093                           
 42094                           ;func.c: 1654: }
 42095                           ;func.c: 1655: escreve_tempos(joule_str[idioma],ener_solda,pagina);
 42096  0414  0832               	movf	(_telas$4267+1)^(0+128),w
 42097  0415  0140               	movlb	0	; select bank0
 42098  0416  00D4               	movwf	escreve_tempos@s1+1
 42099  0417  0141               	movlb	1	; select bank1
 42100  0418  0831               	movf	_telas$4267^(0+128),w
 42101  0419  0140               	movlb	0	; select bank0
 42102  041A  00D3               	movwf	escreve_tempos@s1
 42103  041B  0143               	movlb	3	; select bank3
 42104  041C  083F               	movf	(_ener_solda+1)^(0+384),w
 42105  041D  0140               	movlb	0	; select bank0
 42106  041E  00D6               	movwf	escreve_tempos@t+1
 42107  041F  0143               	movlb	3	; select bank3
 42108  0420  083E               	movf	_ener_solda^(0+384),w
 42109  0421  0140               	movlb	0	; select bank0
 42110  0422  00D5               	movwf	escreve_tempos@t
 42111  0423  0864               	movf	_pagina,w	;volatile
 42112  0424  0141               	movlb	1	; select bank1
 42113  0425  00A8               	movwf	??_telas^(0+128)
 42114  0426  0828               	movf	??_telas^(0+128),w
 42115  0427  0140               	movlb	0	; select bank0
 42116  0428  00D7               	movwf	escreve_tempos@pag
 42117  0429  31A0  207D  3181   	fcall	_escreve_tempos
 42118                           
 42119                           ;func.c: 1656: temp = ener_solda;
 42120  042C  0143               	movlb	3	; select bank3
 42121  042D  083E               	movf	_ener_solda^(0+384),w
 42122  042E  0140               	movlb	0	; select bank0
 42123  042F  00DA               	movwf	telas@temp
 42124  0430  0143               	movlb	3	; select bank3
 42125  0431  083F               	movf	(_ener_solda+1)^(0+384),w
 42126  0432  2E47               	goto	L18
 42127  0433                     l1744:	
 42128                           ;func.c: 1659: case TELA_TMP_FIXAR:
 42129                           
 42130                           ;func.c: 1657: break;
 42131                           
 42132                           
 42133                           ;func.c: 1661: if(flag.muda_valor){
 42134  0433  0143               	movlb	3	; select bank3
 42135  0434  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 42136  0435  2C3F               	goto	l15174
 42137                           
 42138                           ;func.c: 1662: tmp_fixar = temp;
 42139  0436  0140               	movlb	0	; select bank0
 42140  0437  085B               	movf	telas@temp+1,w
 42141  0438  0143               	movlb	3	; select bank3
 42142  0439  00BD               	movwf	(_tmp_fixar+1)^(0+384)
 42143  043A  0140               	movlb	0	; select bank0
 42144  043B  085A               	movf	telas@temp,w
 42145  043C  0143               	movlb	3	; select bank3
 42146  043D  00BC               	movwf	_tmp_fixar^(0+384)
 42147                           
 42148                           ;func.c: 1663: flag.muda_valor = 0;
 42149  043E  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 42150  043F                     l15174:	
 42151                           
 42152                           ;func.c: 1664: }
 42153                           ;func.c: 1665: escreve_tempos(fixacao_str[idioma],tmp_fixar,pagina);
 42154  043F  085A               	movf	_idioma^(0+384),w
 42155  0440  0141               	movlb	1	; select bank1
 42156  0441  00A8               	movwf	??_telas^(0+128)
 42157  0442  01A9               	clrf	(??_telas^(0+128)+1)
 42158  0443  0828               	movf	??_telas^(0+128),w
 42159  0444  0140               	movlb	0	; select bank0
 42160  0445  00AB               	movwf	___wmul@multiplier
 42161  0446  0141               	movlb	1	; select bank1
 42162  0447  0829               	movf	(??_telas+1)^(0+128),w
 42163  0448  0140               	movlb	0	; select bank0
 42164  0449  00AC               	movwf	___wmul@multiplier+1
 42165  044A  3011               	movlw	17
 42166  044B  00AD               	movwf	___wmul@multiplicand
 42167  044C  3000               	movlw	0
 42168  044D  00AE               	movwf	___wmul@multiplicand+1
 42169  044E  31D0  20FE  3181   	fcall	___wmul
 42170  0451  30AC               	movlw	low (_fixacao_str| (0+32768))
 42171  0452  0141               	movlb	1	; select bank1
 42172  0453  00AA               	movwf	(??_telas+2)^(0+128)
 42173  0454  30DF               	movlw	high (_fixacao_str| (0+32768))
 42174  0455  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42175  0456  0140               	movlb	0	; select bank0
 42176  0457  082B               	movf	?___wmul,w
 42177  0458  0141               	movlb	1	; select bank1
 42178  0459  072A               	addwf	(??_telas+2)^(0+128),w
 42179  045A  00B1               	movwf	_telas$4267^(0+128)
 42180  045B  0140               	movlb	0	; select bank0
 42181  045C  082C               	movf	?___wmul+1,w
 42182  045D  0141               	movlb	1	; select bank1
 42183  045E  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42184  045F  00B2               	movwf	(_telas$4267+1)^(0+128)
 42185                           
 42186                           ;func.c: 1664: }
 42187                           ;func.c: 1665: escreve_tempos(fixacao_str[idioma],tmp_fixar,pagina);
 42188  0460  0832               	movf	(_telas$4267+1)^(0+128),w
 42189  0461  0140               	movlb	0	; select bank0
 42190  0462  00D4               	movwf	escreve_tempos@s1+1
 42191  0463  0141               	movlb	1	; select bank1
 42192  0464  0831               	movf	_telas$4267^(0+128),w
 42193  0465  0140               	movlb	0	; select bank0
 42194  0466  00D3               	movwf	escreve_tempos@s1
 42195  0467  0143               	movlb	3	; select bank3
 42196  0468  083D               	movf	(_tmp_fixar+1)^(0+384),w
 42197  0469  0140               	movlb	0	; select bank0
 42198  046A  00D6               	movwf	escreve_tempos@t+1
 42199  046B  0143               	movlb	3	; select bank3
 42200  046C  083C               	movf	_tmp_fixar^(0+384),w
 42201  046D  0140               	movlb	0	; select bank0
 42202  046E  00D5               	movwf	escreve_tempos@t
 42203  046F  0864               	movf	_pagina,w	;volatile
 42204  0470  0141               	movlb	1	; select bank1
 42205  0471  00A8               	movwf	??_telas^(0+128)
 42206  0472  0828               	movf	??_telas^(0+128),w
 42207  0473  0140               	movlb	0	; select bank0
 42208  0474  00D7               	movwf	escreve_tempos@pag
 42209  0475  31A0  207D  3181   	fcall	_escreve_tempos
 42210                           
 42211                           ;func.c: 1666: temp = tmp_fixar;
 42212  0478  0143               	movlb	3	; select bank3
 42213  0479  083C               	movf	_tmp_fixar^(0+384),w
 42214  047A  0140               	movlb	0	; select bank0
 42215  047B  00DA               	movwf	telas@temp
 42216  047C  0143               	movlb	3	; select bank3
 42217  047D  083D               	movf	(_tmp_fixar+1)^(0+384),w
 42218  047E  2E47               	goto	L18
 42219  047F                     l1746:	
 42220                           ;func.c: 1668: case TELA_METAL:
 42221                           
 42222                           ;func.c: 1667: break;
 42223                           
 42224                           
 42225                           ;func.c: 1669: if(flag.muda_valor){
 42226  047F  0143               	movlb	3	; select bank3
 42227  0480  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 42228  0481  2C8B               	goto	l15184
 42229                           
 42230                           ;func.c: 1670: tmp_metal = temp;
 42231  0482  0140               	movlb	0	; select bank0
 42232  0483  085B               	movf	telas@temp+1,w
 42233  0484  0143               	movlb	3	; select bank3
 42234  0485  00BB               	movwf	(_tmp_metal+1)^(0+384)
 42235  0486  0140               	movlb	0	; select bank0
 42236  0487  085A               	movf	telas@temp,w
 42237  0488  0143               	movlb	3	; select bank3
 42238  0489  00BA               	movwf	_tmp_metal^(0+384)
 42239                           
 42240                           ;func.c: 1671: flag.muda_valor = 0;
 42241  048A  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 42242  048B                     l15184:	
 42243                           
 42244                           ;func.c: 1672: }
 42245                           ;func.c: 1673: escreve_tempos(metal_str[idioma],tmp_metal,pagina);
 42246  048B  085A               	movf	_idioma^(0+384),w
 42247  048C  0141               	movlb	1	; select bank1
 42248  048D  00A8               	movwf	??_telas^(0+128)
 42249  048E  01A9               	clrf	(??_telas^(0+128)+1)
 42250  048F  0828               	movf	??_telas^(0+128),w
 42251  0490  0140               	movlb	0	; select bank0
 42252  0491  00AB               	movwf	___wmul@multiplier
 42253  0492  0141               	movlb	1	; select bank1
 42254  0493  0829               	movf	(??_telas+1)^(0+128),w
 42255  0494  0140               	movlb	0	; select bank0
 42256  0495  00AC               	movwf	___wmul@multiplier+1
 42257  0496  3011               	movlw	17
 42258  0497  00AD               	movwf	___wmul@multiplicand
 42259  0498  3000               	movlw	0
 42260  0499  00AE               	movwf	___wmul@multiplicand+1
 42261  049A  31D0  20FE  3181   	fcall	___wmul
 42262  049D  308A               	movlw	low (_metal_str| (0+32768))
 42263  049E  0141               	movlb	1	; select bank1
 42264  049F  00AA               	movwf	(??_telas+2)^(0+128)
 42265  04A0  30DF               	movlw	high (_metal_str| (0+32768))
 42266  04A1  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42267  04A2  0140               	movlb	0	; select bank0
 42268  04A3  082B               	movf	?___wmul,w
 42269  04A4  0141               	movlb	1	; select bank1
 42270  04A5  072A               	addwf	(??_telas+2)^(0+128),w
 42271  04A6  00B1               	movwf	_telas$4267^(0+128)
 42272  04A7  0140               	movlb	0	; select bank0
 42273  04A8  082C               	movf	?___wmul+1,w
 42274  04A9  0141               	movlb	1	; select bank1
 42275  04AA  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42276  04AB  00B2               	movwf	(_telas$4267+1)^(0+128)
 42277                           
 42278                           ;func.c: 1672: }
 42279                           ;func.c: 1673: escreve_tempos(metal_str[idioma],tmp_metal,pagina);
 42280  04AC  0832               	movf	(_telas$4267+1)^(0+128),w
 42281  04AD  0140               	movlb	0	; select bank0
 42282  04AE  00D4               	movwf	escreve_tempos@s1+1
 42283  04AF  0141               	movlb	1	; select bank1
 42284  04B0  0831               	movf	_telas$4267^(0+128),w
 42285  04B1  0140               	movlb	0	; select bank0
 42286  04B2  00D3               	movwf	escreve_tempos@s1
 42287  04B3  0143               	movlb	3	; select bank3
 42288  04B4  083B               	movf	(_tmp_metal+1)^(0+384),w
 42289  04B5  0140               	movlb	0	; select bank0
 42290  04B6  00D6               	movwf	escreve_tempos@t+1
 42291  04B7  0143               	movlb	3	; select bank3
 42292  04B8  083A               	movf	_tmp_metal^(0+384),w
 42293  04B9  0140               	movlb	0	; select bank0
 42294  04BA  00D5               	movwf	escreve_tempos@t
 42295  04BB  0864               	movf	_pagina,w	;volatile
 42296  04BC  0141               	movlb	1	; select bank1
 42297  04BD  00A8               	movwf	??_telas^(0+128)
 42298  04BE  0828               	movf	??_telas^(0+128),w
 42299  04BF  0140               	movlb	0	; select bank0
 42300  04C0  00D7               	movwf	escreve_tempos@pag
 42301  04C1  31A0  207D  3181   	fcall	_escreve_tempos
 42302                           
 42303                           ;func.c: 1674: temp = tmp_metal;
 42304  04C4  0143               	movlb	3	; select bank3
 42305  04C5  083A               	movf	_tmp_metal^(0+384),w
 42306  04C6  0140               	movlb	0	; select bank0
 42307  04C7  00DA               	movwf	telas@temp
 42308  04C8  0143               	movlb	3	; select bank3
 42309  04C9  083B               	movf	(_tmp_metal+1)^(0+384),w
 42310  04CA  2E47               	goto	L18
 42311  04CB                     l1748:	
 42312                           ;func.c: 1677: case TELA_TIPO_MAQU:
 42313                           
 42314                           ;func.c: 1675: break;
 42315                           
 42316                           
 42317                           ;func.c: 1678: if(flag.muda_valor){
 42318  04CB  0143               	movlb	3	; select bank3
 42319  04CC  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 42320  04CD  2CE0               	goto	l15200
 42321                           
 42322                           ;func.c: 1679: tipo_maquina++;
 42323  04CE  3001               	movlw	1
 42324  04CF  0141               	movlb	1	; select bank1
 42325  04D0  00A8               	movwf	??_telas^(0+128)
 42326  04D1  0828               	movf	??_telas^(0+128),w
 42327  04D2  0143               	movlb	3	; select bank3
 42328  04D3  07E0               	addwf	_tipo_maquina^(0+384),f
 42329                           
 42330                           ;func.c: 1680: if(tipo_maquina >= TAMANHO_MAQUINAS) tipo_maquina = PISTOLA_PULSADO;
 42331  04D4  3004               	movlw	4
 42332  04D5  0260               	subwf	_tipo_maquina^(0+384),w
 42333  04D6  1C03               	skipc
 42334  04D7  2CDA               	goto	l15196
 42335  04D8  01E0               	clrf	_tipo_maquina^(0+384)
 42336  04D9  0AE0               	incf	_tipo_maquina^(0+384),f
 42337  04DA                     l15196:	
 42338                           
 42339                           ;func.c: 1681: config_maq(tipo_maquina);
 42340  04DA  0860               	movf	_tipo_maquina^(0+384),w
 42341  04DB  31AB  234C  3181   	fcall	_config_maq
 42342                           
 42343                           ;func.c: 1682: flag.muda_valor = 0;
 42344  04DE  0143               	movlb	3	; select bank3
 42345  04DF  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 42346  04E0                     l15200:	
 42347                           
 42348                           ;func.c: 1683: }
 42349                           ;func.c: 1684: escreve_tempos(tipo_maquina_str[idioma],tipo_maquina,pagina);
 42350  04E0  085A               	movf	_idioma^(0+384),w
 42351  04E1  0141               	movlb	1	; select bank1
 42352  04E2  00A8               	movwf	??_telas^(0+128)
 42353  04E3  01A9               	clrf	(??_telas^(0+128)+1)
 42354  04E4  0828               	movf	??_telas^(0+128),w
 42355  04E5  0140               	movlb	0	; select bank0
 42356  04E6  00AB               	movwf	___wmul@multiplier
 42357  04E7  0141               	movlb	1	; select bank1
 42358  04E8  0829               	movf	(??_telas+1)^(0+128),w
 42359  04E9  0140               	movlb	0	; select bank0
 42360  04EA  00AC               	movwf	___wmul@multiplier+1
 42361  04EB  3011               	movlw	17
 42362  04EC  00AD               	movwf	___wmul@multiplicand
 42363  04ED  3000               	movlw	0
 42364  04EE  00AE               	movwf	___wmul@multiplicand+1
 42365  04EF  31D0  20FE  3181   	fcall	___wmul
 42366  04F2  3068               	movlw	low (_tipo_maquina_str| (0+32768))
 42367  04F3  0141               	movlb	1	; select bank1
 42368  04F4  00AA               	movwf	(??_telas+2)^(0+128)
 42369  04F5  30DF               	movlw	high (_tipo_maquina_str| (0+32768))
 42370  04F6  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42371  04F7  0140               	movlb	0	; select bank0
 42372  04F8  082B               	movf	?___wmul,w
 42373  04F9  0141               	movlb	1	; select bank1
 42374  04FA  072A               	addwf	(??_telas+2)^(0+128),w
 42375  04FB  00B1               	movwf	_telas$4267^(0+128)
 42376  04FC  0140               	movlb	0	; select bank0
 42377  04FD  082C               	movf	?___wmul+1,w
 42378  04FE  0141               	movlb	1	; select bank1
 42379  04FF  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42380  0500  00B2               	movwf	(_telas$4267+1)^(0+128)
 42381                           
 42382                           ;func.c: 1683: }
 42383                           ;func.c: 1684: escreve_tempos(tipo_maquina_str[idioma],tipo_maquina,pagina);
 42384  0501  0832               	movf	(_telas$4267+1)^(0+128),w
 42385  0502  0140               	movlb	0	; select bank0
 42386  0503  00D4               	movwf	escreve_tempos@s1+1
 42387  0504  0141               	movlb	1	; select bank1
 42388  0505  0831               	movf	_telas$4267^(0+128),w
 42389  0506  0140               	movlb	0	; select bank0
 42390  0507  00D3               	movwf	escreve_tempos@s1
 42391  0508  0143               	movlb	3	; select bank3
 42392  0509  0860               	movf	_tipo_maquina^(0+384),w
 42393  050A  0141               	movlb	1	; select bank1
 42394  050B  00A8               	movwf	??_telas^(0+128)
 42395  050C  01A9               	clrf	(??_telas^(0+128)+1)
 42396  050D  0828               	movf	??_telas^(0+128),w
 42397  050E  0140               	movlb	0	; select bank0
 42398  050F  00D5               	movwf	escreve_tempos@t
 42399  0510  0141               	movlb	1	; select bank1
 42400  0511  0829               	movf	(??_telas+1)^(0+128),w
 42401  0512  0140               	movlb	0	; select bank0
 42402  0513  00D6               	movwf	escreve_tempos@t+1
 42403  0514  0864               	movf	_pagina,w	;volatile
 42404  0515  0141               	movlb	1	; select bank1
 42405  0516  00AA               	movwf	(??_telas+2)^(0+128)
 42406  0517  082A               	movf	(??_telas+2)^(0+128),w
 42407  0518  0140               	movlb	0	; select bank0
 42408  0519  00D7               	movwf	escreve_tempos@pag
 42409  051A  31A0  207D  3181   	fcall	_escreve_tempos
 42410                           
 42411                           ;func.c: 1685: break;
 42412  051D  2F64               	goto	l1739
 42413  051E                     l1751:	
 42414                           ;func.c: 1691: case TELA_TMP_CONT:
 42415                           
 42416                           
 42417                           ;func.c: 1692: if(flag.muda_valor){
 42418  051E  0143               	movlb	3	; select bank3
 42419  051F  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 42420  0520  2D32               	goto	l15208
 42421                           
 42422                           ;func.c: 1693: cont_pecas = temp;
 42423  0521  0140               	movlb	0	; select bank0
 42424  0522  085D               	movf	telas@temp+3,w
 42425  0523  0143               	movlb	3	; select bank3
 42426  0524  00A7               	movwf	(_cont_pecas+3)^(0+384)
 42427  0525  0140               	movlb	0	; select bank0
 42428  0526  085C               	movf	telas@temp+2,w
 42429  0527  0143               	movlb	3	; select bank3
 42430  0528  00A6               	movwf	(_cont_pecas+2)^(0+384)
 42431  0529  0140               	movlb	0	; select bank0
 42432  052A  085B               	movf	telas@temp+1,w
 42433  052B  0143               	movlb	3	; select bank3
 42434  052C  00A5               	movwf	(_cont_pecas+1)^(0+384)
 42435  052D  0140               	movlb	0	; select bank0
 42436  052E  085A               	movf	telas@temp,w
 42437  052F  0143               	movlb	3	; select bank3
 42438  0530  00A4               	movwf	_cont_pecas^(0+384)
 42439                           
 42440                           ;func.c: 1694: flag.muda_valor = 0;
 42441  0531  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 42442  0532                     l15208:	
 42443                           
 42444                           ;func.c: 1695: }
 42445                           ;func.c: 1697: escreve_tempos(cont_pecas_str[idioma],cont_pecas,pagina);
 42446  0532  085A               	movf	_idioma^(0+384),w
 42447  0533  0141               	movlb	1	; select bank1
 42448  0534  00A8               	movwf	??_telas^(0+128)
 42449  0535  01A9               	clrf	(??_telas^(0+128)+1)
 42450  0536  0828               	movf	??_telas^(0+128),w
 42451  0537  0140               	movlb	0	; select bank0
 42452  0538  00AB               	movwf	___wmul@multiplier
 42453  0539  0141               	movlb	1	; select bank1
 42454  053A  0829               	movf	(??_telas+1)^(0+128),w
 42455  053B  0140               	movlb	0	; select bank0
 42456  053C  00AC               	movwf	___wmul@multiplier+1
 42457  053D  3011               	movlw	17
 42458  053E  00AD               	movwf	___wmul@multiplicand
 42459  053F  3000               	movlw	0
 42460  0540  00AE               	movwf	___wmul@multiplicand+1
 42461  0541  31D0  20FE  3181   	fcall	___wmul
 42462  0544  309C               	movlw	low (_cont_pecas_str| (0+32768))
 42463  0545  0141               	movlb	1	; select bank1
 42464  0546  00AA               	movwf	(??_telas+2)^(0+128)
 42465  0547  30DE               	movlw	high (_cont_pecas_str| (0+32768))
 42466  0548  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42467  0549  0140               	movlb	0	; select bank0
 42468  054A  082B               	movf	?___wmul,w
 42469  054B  0141               	movlb	1	; select bank1
 42470  054C  072A               	addwf	(??_telas+2)^(0+128),w
 42471  054D  00B1               	movwf	_telas$4267^(0+128)
 42472  054E  0140               	movlb	0	; select bank0
 42473  054F  082C               	movf	?___wmul+1,w
 42474  0550  0141               	movlb	1	; select bank1
 42475  0551  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42476  0552  00B2               	movwf	(_telas$4267+1)^(0+128)
 42477                           
 42478                           ;func.c: 1695: }
 42479                           ;func.c: 1697: escreve_tempos(cont_pecas_str[idioma],cont_pecas,pagina);
 42480  0553  0832               	movf	(_telas$4267+1)^(0+128),w
 42481  0554  0140               	movlb	0	; select bank0
 42482  0555  00D4               	movwf	escreve_tempos@s1+1
 42483  0556  0141               	movlb	1	; select bank1
 42484  0557  0831               	movf	_telas$4267^(0+128),w
 42485  0558  0140               	movlb	0	; select bank0
 42486  0559  00D3               	movwf	escreve_tempos@s1
 42487  055A  0143               	movlb	3	; select bank3
 42488  055B  0825               	movf	(_cont_pecas+1)^(0+384),w
 42489  055C  0140               	movlb	0	; select bank0
 42490  055D  00D6               	movwf	escreve_tempos@t+1
 42491  055E  0143               	movlb	3	; select bank3
 42492  055F  0824               	movf	_cont_pecas^(0+384),w
 42493  0560  0140               	movlb	0	; select bank0
 42494  0561  00D5               	movwf	escreve_tempos@t
 42495  0562  0864               	movf	_pagina,w	;volatile
 42496  0563  0141               	movlb	1	; select bank1
 42497  0564  00A8               	movwf	??_telas^(0+128)
 42498  0565  0828               	movf	??_telas^(0+128),w
 42499  0566  0140               	movlb	0	; select bank0
 42500  0567  00D7               	movwf	escreve_tempos@pag
 42501  0568  31A0  207D  3181   	fcall	_escreve_tempos
 42502                           
 42503                           ;func.c: 1698: temp = cont_pecas;
 42504  056B  0143               	movlb	3	; select bank3
 42505  056C  0827               	movf	(_cont_pecas+3)^(0+384),w
 42506  056D  0140               	movlb	0	; select bank0
 42507  056E  00DD               	movwf	telas@temp+3
 42508  056F  0143               	movlb	3	; select bank3
 42509  0570  0826               	movf	(_cont_pecas+2)^(0+384),w
 42510  0571  0140               	movlb	0	; select bank0
 42511  0572  00DC               	movwf	telas@temp+2
 42512  0573  0143               	movlb	3	; select bank3
 42513  0574  0825               	movf	(_cont_pecas+1)^(0+384),w
 42514  0575  0140               	movlb	0	; select bank0
 42515  0576  00DB               	movwf	telas@temp+1
 42516  0577  0143               	movlb	3	; select bank3
 42517  0578  0824               	movf	_cont_pecas^(0+384),w
 42518  0579  0140               	movlb	0	; select bank0
 42519  057A  00DA               	movwf	telas@temp
 42520                           
 42521                           ;func.c: 1699: break;
 42522  057B  2F64               	goto	l1739
 42523  057C                     l1753:	
 42524                           ;func.c: 1701: case TELA_TIPO_SOLDA:
 42525                           
 42526                           
 42527                           ;func.c: 1703: if(flag.salvar){
 42528  057C  0143               	movlb	3	; select bank3
 42529  057D  1DAD               	btfss	(_flag^(0+384)+1),3	;volatile
 42530  057E  2D8A               	goto	l15218
 42531                           
 42532                           ;func.c: 1704: flag.energia = ~flag.energia;
 42533  057F  1003               	clrc
 42534  0580  1C2C               	btfss	_flag^(0+384),0	;volatile
 42535  0581  1403               	setc
 42536  0582  1C03               	btfss	3,0
 42537  0583  2D87               	goto	u16670
 42538  0584  0143               	movlb	3	; select bank3
 42539  0585  142C               	bsf	_flag^(0+384),0	;volatile
 42540  0586  2D89               	goto	l15216
 42541  0587                     u16670:	
 42542  0587  0143               	movlb	3	; select bank3
 42543  0588  102C               	bcf	_flag^(0+384),0	;volatile
 42544  0589                     l15216:	
 42545                           
 42546                           ;func.c: 1705: flag.salvar = 0;
 42547  0589  11AD               	bcf	(_flag^(0+384)+1),3	;volatile
 42548  058A                     l15218:	
 42549                           
 42550                           ;func.c: 1706: }
 42551                           ;func.c: 1708: escreve_tempos(ctrl_solda_str[idioma],(char)flag.energia,pagina);
 42552  058A  085A               	movf	_idioma^(0+384),w
 42553  058B  0141               	movlb	1	; select bank1
 42554  058C  00A8               	movwf	??_telas^(0+128)
 42555  058D  01A9               	clrf	(??_telas^(0+128)+1)
 42556  058E  0828               	movf	??_telas^(0+128),w
 42557  058F  0140               	movlb	0	; select bank0
 42558  0590  00AB               	movwf	___wmul@multiplier
 42559  0591  0141               	movlb	1	; select bank1
 42560  0592  0829               	movf	(??_telas+1)^(0+128),w
 42561  0593  0140               	movlb	0	; select bank0
 42562  0594  00AC               	movwf	___wmul@multiplier+1
 42563  0595  3011               	movlw	17
 42564  0596  00AD               	movwf	___wmul@multiplicand
 42565  0597  3000               	movlw	0
 42566  0598  00AE               	movwf	___wmul@multiplicand+1
 42567  0599  31D0  20FE  3181   	fcall	___wmul
 42568  059C  30F0               	movlw	low (_ctrl_solda_str| (0+32768))
 42569  059D  0141               	movlb	1	; select bank1
 42570  059E  00AA               	movwf	(??_telas+2)^(0+128)
 42571  059F  30DF               	movlw	high (_ctrl_solda_str| (0+32768))
 42572  05A0  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42573  05A1  0140               	movlb	0	; select bank0
 42574  05A2  082B               	movf	?___wmul,w
 42575  05A3  0141               	movlb	1	; select bank1
 42576  05A4  072A               	addwf	(??_telas+2)^(0+128),w
 42577  05A5  00B1               	movwf	_telas$4267^(0+128)
 42578  05A6  0140               	movlb	0	; select bank0
 42579  05A7  082C               	movf	?___wmul+1,w
 42580  05A8  0141               	movlb	1	; select bank1
 42581  05A9  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42582  05AA  00B2               	movwf	(_telas$4267+1)^(0+128)
 42583                           
 42584                           ;func.c: 1706: }
 42585                           ;func.c: 1708: escreve_tempos(ctrl_solda_str[idioma],(char)flag.energia,pagina);
 42586  05AB  0832               	movf	(_telas$4267+1)^(0+128),w
 42587  05AC  0140               	movlb	0	; select bank0
 42588  05AD  00D4               	movwf	escreve_tempos@s1+1
 42589  05AE  0141               	movlb	1	; select bank1
 42590  05AF  0831               	movf	_telas$4267^(0+128),w
 42591  05B0  0140               	movlb	0	; select bank0
 42592  05B1  00D3               	movwf	escreve_tempos@s1
 42593  05B2  0143               	movlb	3	; select bank3
 42594  05B3  082C               	movf	_flag^(0+384),w	;volatile
 42595  05B4  3901               	andlw	1
 42596  05B5  0141               	movlb	1	; select bank1
 42597  05B6  00A8               	movwf	??_telas^(0+128)
 42598  05B7  01A9               	clrf	(??_telas^(0+128)+1)
 42599  05B8  0828               	movf	??_telas^(0+128),w
 42600  05B9  0140               	movlb	0	; select bank0
 42601  05BA  00D5               	movwf	escreve_tempos@t
 42602  05BB  0141               	movlb	1	; select bank1
 42603  05BC  0829               	movf	(??_telas+1)^(0+128),w
 42604  05BD  0140               	movlb	0	; select bank0
 42605  05BE  00D6               	movwf	escreve_tempos@t+1
 42606  05BF  0864               	movf	_pagina,w	;volatile
 42607  05C0  0141               	movlb	1	; select bank1
 42608  05C1  00AA               	movwf	(??_telas+2)^(0+128)
 42609  05C2  082A               	movf	(??_telas+2)^(0+128),w
 42610  05C3  0140               	movlb	0	; select bank0
 42611  05C4  00D7               	movwf	escreve_tempos@pag
 42612  05C5  31A0  207D  3181   	fcall	_escreve_tempos
 42613                           
 42614                           ;func.c: 1709: break;
 42615  05C8  2F64               	goto	l1739
 42616  05C9                     l1755:	
 42617                           ;func.c: 1711: case TELA_TIPO_CONT:
 42618                           
 42619                           
 42620                           ;func.c: 1713: if(flag.salvar){
 42621  05C9  0143               	movlb	3	; select bank3
 42622  05CA  1DAD               	btfss	(_flag^(0+384)+1),3	;volatile
 42623  05CB  2DD7               	goto	l15226
 42624                           
 42625                           ;func.c: 1714: flag.regressivo = ~flag.regressivo;
 42626  05CC  1003               	clrc
 42627  05CD  1D2C               	btfss	_flag^(0+384),2	;volatile
 42628  05CE  1403               	setc
 42629  05CF  1C03               	btfss	3,0
 42630  05D0  2DD4               	goto	u16700
 42631  05D1  0143               	movlb	3	; select bank3
 42632  05D2  152C               	bsf	_flag^(0+384),2	;volatile
 42633  05D3  2DD6               	goto	l15224
 42634  05D4                     u16700:	
 42635  05D4  0143               	movlb	3	; select bank3
 42636  05D5  112C               	bcf	_flag^(0+384),2	;volatile
 42637  05D6                     l15224:	
 42638                           
 42639                           ;func.c: 1715: flag.salvar = 0;
 42640  05D6  11AD               	bcf	(_flag^(0+384)+1),3	;volatile
 42641  05D7                     l15226:	
 42642                           
 42643                           ;func.c: 1716: }
 42644                           ;func.c: 1717: escreve_tempos(ctrl_pecas_str[idioma],(char)flag.regressivo,pagina);
 42645  05D7  085A               	movf	_idioma^(0+384),w
 42646  05D8  0141               	movlb	1	; select bank1
 42647  05D9  00A8               	movwf	??_telas^(0+128)
 42648  05DA  01A9               	clrf	(??_telas^(0+128)+1)
 42649  05DB  0828               	movf	??_telas^(0+128),w
 42650  05DC  0140               	movlb	0	; select bank0
 42651  05DD  00AB               	movwf	___wmul@multiplier
 42652  05DE  0141               	movlb	1	; select bank1
 42653  05DF  0829               	movf	(??_telas+1)^(0+128),w
 42654  05E0  0140               	movlb	0	; select bank0
 42655  05E1  00AC               	movwf	___wmul@multiplier+1
 42656  05E2  3011               	movlw	17
 42657  05E3  00AD               	movwf	___wmul@multiplicand
 42658  05E4  3000               	movlw	0
 42659  05E5  00AE               	movwf	___wmul@multiplicand+1
 42660  05E6  31D0  20FE  3181   	fcall	___wmul
 42661  05E9  30CE               	movlw	low (_ctrl_pecas_str| (0+32768))
 42662  05EA  0141               	movlb	1	; select bank1
 42663  05EB  00AA               	movwf	(??_telas+2)^(0+128)
 42664  05EC  30DF               	movlw	high (_ctrl_pecas_str| (0+32768))
 42665  05ED  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42666  05EE  0140               	movlb	0	; select bank0
 42667  05EF  082B               	movf	?___wmul,w
 42668  05F0  0141               	movlb	1	; select bank1
 42669  05F1  072A               	addwf	(??_telas+2)^(0+128),w
 42670  05F2  00B1               	movwf	_telas$4267^(0+128)
 42671  05F3  0140               	movlb	0	; select bank0
 42672  05F4  082C               	movf	?___wmul+1,w
 42673  05F5  0141               	movlb	1	; select bank1
 42674  05F6  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42675  05F7  00B2               	movwf	(_telas$4267+1)^(0+128)
 42676                           
 42677                           ;func.c: 1716: }
 42678                           ;func.c: 1717: escreve_tempos(ctrl_pecas_str[idioma],(char)flag.regressivo,pagina);
 42679  05F8  0832               	movf	(_telas$4267+1)^(0+128),w
 42680  05F9  0140               	movlb	0	; select bank0
 42681  05FA  00D4               	movwf	escreve_tempos@s1+1
 42682  05FB  0141               	movlb	1	; select bank1
 42683  05FC  0831               	movf	_telas$4267^(0+128),w
 42684  05FD  0140               	movlb	0	; select bank0
 42685  05FE  00D3               	movwf	escreve_tempos@s1
 42686  05FF  0143               	movlb	3	; select bank3
 42687  0600  0C2C               	rrf	_flag^(0+384),w	;volatile
 42688  0601  0C89               	rrf	9,f
 42689  0602  3901               	andlw	1
 42690  0603  0141               	movlb	1	; select bank1
 42691  0604  00A8               	movwf	??_telas^(0+128)
 42692  0605  01A9               	clrf	(??_telas^(0+128)+1)
 42693  0606  0828               	movf	??_telas^(0+128),w
 42694  0607  0140               	movlb	0	; select bank0
 42695  0608  00D5               	movwf	escreve_tempos@t
 42696  0609  0141               	movlb	1	; select bank1
 42697  060A  0829               	movf	(??_telas+1)^(0+128),w
 42698  060B  0140               	movlb	0	; select bank0
 42699  060C  00D6               	movwf	escreve_tempos@t+1
 42700  060D  0864               	movf	_pagina,w	;volatile
 42701  060E  0141               	movlb	1	; select bank1
 42702  060F  00AA               	movwf	(??_telas+2)^(0+128)
 42703  0610  082A               	movf	(??_telas+2)^(0+128),w
 42704  0611  0140               	movlb	0	; select bank0
 42705  0612  00D7               	movwf	escreve_tempos@pag
 42706  0613  31A0  207D  3181   	fcall	_escreve_tempos
 42707                           
 42708                           ;func.c: 1718: break;
 42709  0616  2F64               	goto	l1739
 42710  0617                     l1757:	
 42711                           ;func.c: 1720: case TELA_FREQ_INI:
 42712                           
 42713                           
 42714                           ;func.c: 1721: if(flag.muda_valor){
 42715  0617  0143               	movlb	3	; select bank3
 42716  0618  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 42717  0619  2E2B               	goto	l15234
 42718                           
 42719                           ;func.c: 1722: freq_inicial = temp;
 42720  061A  0140               	movlb	0	; select bank0
 42721  061B  085B               	movf	telas@temp+1,w
 42722  061C  0143               	movlb	3	; select bank3
 42723  061D  00B7               	movwf	(_freq_inicial+1)^(0+384)
 42724  061E  0140               	movlb	0	; select bank0
 42725  061F  085A               	movf	telas@temp,w
 42726  0620  0143               	movlb	3	; select bank3
 42727  0621  00B6               	movwf	_freq_inicial^(0+384)
 42728                           
 42729                           ;func.c: 1723: freq_atual = temp;
 42730  0622  0140               	movlb	0	; select bank0
 42731  0623  085B               	movf	telas@temp+1,w
 42732  0624  0143               	movlb	3	; select bank3
 42733  0625  00B5               	movwf	(_freq_atual+1)^(0+384)
 42734  0626  0140               	movlb	0	; select bank0
 42735  0627  085A               	movf	telas@temp,w
 42736  0628  0143               	movlb	3	; select bank3
 42737  0629  00B4               	movwf	_freq_atual^(0+384)
 42738                           
 42739                           ;func.c: 1724: flag.muda_valor = 0;
 42740  062A  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 42741  062B                     l15234:	
 42742                           
 42743                           ;func.c: 1725: }
 42744                           ;func.c: 1726: escreve_tempos(freq_ini_str,freq_inicial,pagina);
 42745  062B  306C               	movlw	low (_freq_ini_str| (0+32768))
 42746  062C  0140               	movlb	0	; select bank0
 42747  062D  00D3               	movwf	escreve_tempos@s1
 42748  062E  30E8               	movlw	high (_freq_ini_str| (0+32768))
 42749  062F  00D4               	movwf	escreve_tempos@s1+1
 42750  0630  0143               	movlb	3	; select bank3
 42751  0631  0837               	movf	(_freq_inicial+1)^(0+384),w
 42752  0632  0140               	movlb	0	; select bank0
 42753  0633  00D6               	movwf	escreve_tempos@t+1
 42754  0634  0143               	movlb	3	; select bank3
 42755  0635  0836               	movf	_freq_inicial^(0+384),w
 42756  0636  0140               	movlb	0	; select bank0
 42757  0637  00D5               	movwf	escreve_tempos@t
 42758  0638  0864               	movf	_pagina,w	;volatile
 42759  0639  0141               	movlb	1	; select bank1
 42760  063A  00A8               	movwf	??_telas^(0+128)
 42761  063B  0828               	movf	??_telas^(0+128),w
 42762  063C  0140               	movlb	0	; select bank0
 42763  063D  00D7               	movwf	escreve_tempos@pag
 42764  063E  31A0  207D  3181   	fcall	_escreve_tempos
 42765                           
 42766                           ;func.c: 1727: temp = freq_inicial;
 42767  0641  0143               	movlb	3	; select bank3
 42768  0642  0836               	movf	_freq_inicial^(0+384),w
 42769  0643  0140               	movlb	0	; select bank0
 42770  0644  00DA               	movwf	telas@temp
 42771  0645  0143               	movlb	3	; select bank3
 42772  0646  0837               	movf	(_freq_inicial+1)^(0+384),w
 42773  0647                     L18:	
 42774  0647  0140               	movlb	0	; select bank0
 42775  0648  00DB               	movwf	telas@temp+1
 42776  0649  01DC               	clrf	telas@temp+2
 42777  064A  01DD               	clrf	telas@temp+3
 42778                           
 42779                           ;func.c: 1728: break;
 42780  064B  2F64               	goto	l1739
 42781  064C                     l1759:	
 42782                           ;func.c: 1729: case TELA_TMP_LOAD:
 42783                           
 42784                           
 42785                           ;func.c: 1731: if(flag.salvar){
 42786  064C  0143               	movlb	3	; select bank3
 42787  064D  1DAD               	btfss	(_flag^(0+384)+1),3	;volatile
 42788  064E  2E66               	goto	l15242
 42789                           
 42790                           ;func.c: 1732: strcpy(str1,receita_carreg_str[idioma]);
 42791  064F  085A               	movf	_idioma^(0+384),w
 42792  0650  0141               	movlb	1	; select bank1
 42793  0651  00A8               	movwf	??_telas^(0+128)
 42794  0652  01A9               	clrf	(??_telas^(0+128)+1)
 42795  0653  0828               	movf	??_telas^(0+128),w
 42796  0654  0140               	movlb	0	; select bank0
 42797  0655  00AB               	movwf	___wmul@multiplier
 42798  0656  0141               	movlb	1	; select bank1
 42799  0657  0829               	movf	(??_telas+1)^(0+128),w
 42800  0658  0140               	movlb	0	; select bank0
 42801  0659  00AC               	movwf	___wmul@multiplier+1
 42802  065A  3011               	movlw	17
 42803  065B  00AD               	movwf	___wmul@multiplicand
 42804  065C  3000               	movlw	0
 42805  065D  00AE               	movwf	___wmul@multiplicand+1
 42806  065E  31D0  20FE  3181   	fcall	___wmul
 42807  0661  3036               	movlw	low (_receita_carreg_str| (0+32768))
 42808  0662  0141               	movlb	1	; select bank1
 42809  0663  00AA               	movwf	(??_telas+2)^(0+128)
 42810  0664  30DE               	movlw	high (_receita_carreg_str| (0+32768))
 42811  0665  2EB8               	goto	L20
 42812  0666                     l15242:	
 42813                           ;func.c: 1734: }
 42814                           
 42815                           ;func.c: 1733: flag.salvar = 0;
 42816                           
 42817                           
 42818                           ;func.c: 1735: else
 42819                           ;func.c: 1736: escreve_tempos(carrega_str[idioma],(ee_addr+1),pagina);
 42820  0666  085A               	movf	_idioma^(0+384),w
 42821  0667  0141               	movlb	1	; select bank1
 42822  0668  00A8               	movwf	??_telas^(0+128)
 42823  0669  01A9               	clrf	(??_telas^(0+128)+1)
 42824  066A  0828               	movf	??_telas^(0+128),w
 42825  066B  0140               	movlb	0	; select bank0
 42826  066C  00AB               	movwf	___wmul@multiplier
 42827  066D  0141               	movlb	1	; select bank1
 42828  066E  0829               	movf	(??_telas+1)^(0+128),w
 42829  066F  0140               	movlb	0	; select bank0
 42830  0670  00AC               	movwf	___wmul@multiplier+1
 42831  0671  3011               	movlw	17
 42832  0672  00AD               	movwf	___wmul@multiplicand
 42833  0673  3000               	movlw	0
 42834  0674  00AE               	movwf	___wmul@multiplicand+1
 42835  0675  31D0  20FE  3181   	fcall	___wmul
 42836  0678  3014               	movlw	low (_carrega_str| (0+32768))
 42837  0679  0141               	movlb	1	; select bank1
 42838  067A  00AA               	movwf	(??_telas+2)^(0+128)
 42839  067B  30DE               	movlw	high (_carrega_str| (0+32768))
 42840  067C  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42841  067D  0140               	movlb	0	; select bank0
 42842  067E  082B               	movf	?___wmul,w
 42843  067F  0141               	movlb	1	; select bank1
 42844  0680  072A               	addwf	(??_telas+2)^(0+128),w
 42845  0681  00B1               	movwf	_telas$4267^(0+128)
 42846  0682  0140               	movlb	0	; select bank0
 42847  0683  082C               	movf	?___wmul+1,w
 42848  0684  0141               	movlb	1	; select bank1
 42849  0685  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42850  0686  00B2               	movwf	(_telas$4267+1)^(0+128)
 42851                           
 42852                           ;func.c: 1735: else
 42853                           ;func.c: 1736: escreve_tempos(carrega_str[idioma],(ee_addr+1),pagina);
 42854  0687  0832               	movf	(_telas$4267+1)^(0+128),w
 42855  0688  0140               	movlb	0	; select bank0
 42856  0689  00D4               	movwf	escreve_tempos@s1+1
 42857  068A  0141               	movlb	1	; select bank1
 42858  068B  0831               	movf	_telas$4267^(0+128),w
 42859  068C  0140               	movlb	0	; select bank0
 42860  068D  00D3               	movwf	escreve_tempos@s1
 42861  068E  0862               	movf	telas@ee_addr,w
 42862  068F  3E01               	addlw	1
 42863  0690  00D5               	movwf	escreve_tempos@t
 42864  0691  3000               	movlw	0
 42865  0692  1803               	skipnc
 42866  0693  3001               	movlw	1
 42867  0694  00D6               	movwf	escreve_tempos@t+1
 42868  0695  0864               	movf	_pagina,w	;volatile
 42869  0696  0141               	movlb	1	; select bank1
 42870  0697  00A8               	movwf	??_telas^(0+128)
 42871  0698  0828               	movf	??_telas^(0+128),w
 42872  0699  0140               	movlb	0	; select bank0
 42873  069A  00D7               	movwf	escreve_tempos@pag
 42874  069B  31A0  207D  3181   	fcall	_escreve_tempos
 42875                           
 42876                           ;func.c: 1737: break;
 42877  069E  2F64               	goto	l1739
 42878  069F                     l1762:	
 42879                           ;func.c: 1739: case TELA_TMP_SAVE:
 42880                           
 42881                           
 42882                           ;func.c: 1741: if(flag.salvar){
 42883  069F  0143               	movlb	3	; select bank3
 42884  06A0  1DAD               	btfss	(_flag^(0+384)+1),3	;volatile
 42885  06A1  2ECB               	goto	l15250
 42886                           
 42887                           ;func.c: 1742: strcpy(str1,receita_salva_str[idioma]);
 42888  06A2  085A               	movf	_idioma^(0+384),w
 42889  06A3  0141               	movlb	1	; select bank1
 42890  06A4  00A8               	movwf	??_telas^(0+128)
 42891  06A5  01A9               	clrf	(??_telas^(0+128)+1)
 42892  06A6  0828               	movf	??_telas^(0+128),w
 42893  06A7  0140               	movlb	0	; select bank0
 42894  06A8  00AB               	movwf	___wmul@multiplier
 42895  06A9  0141               	movlb	1	; select bank1
 42896  06AA  0829               	movf	(??_telas+1)^(0+128),w
 42897  06AB  0140               	movlb	0	; select bank0
 42898  06AC  00AC               	movwf	___wmul@multiplier+1
 42899  06AD  3011               	movlw	17
 42900  06AE  00AD               	movwf	___wmul@multiplicand
 42901  06AF  3000               	movlw	0
 42902  06B0  00AE               	movwf	___wmul@multiplicand+1
 42903  06B1  31D0  20FE  3181   	fcall	___wmul
 42904  06B4  3058               	movlw	low (_receita_salva_str| (0+32768))
 42905  06B5  0141               	movlb	1	; select bank1
 42906  06B6  00AA               	movwf	(??_telas+2)^(0+128)
 42907  06B7  30DE               	movlw	high (_receita_salva_str| (0+32768))
 42908  06B8                     L20:	
 42909  06B8  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42910  06B9  0140               	movlb	0	; select bank0
 42911  06BA  082B               	movf	?___wmul,w
 42912  06BB  0141               	movlb	1	; select bank1
 42913  06BC  072A               	addwf	(??_telas+2)^(0+128),w
 42914  06BD  0140               	movlb	0	; select bank0
 42915  06BE  00B1               	movwf	strcpy@from
 42916  06BF  082C               	movf	?___wmul+1,w
 42917  06C0  0141               	movlb	1	; select bank1
 42918  06C1  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42919  06C2  0140               	movlb	0	; select bank0
 42920  06C3  00B2               	movwf	strcpy@from+1
 42921  06C4  3054               	movlw	(low (_str1| (0+768)))& (0+255)
 42922  06C5  31D1  211A  3181   	fcall	_strcpy
 42923                           
 42924                           ;func.c: 1743: flag.salvar = 0;
 42925  06C8  0143               	movlb	3	; select bank3
 42926  06C9  11AD               	bcf	(_flag^(0+384)+1),3	;volatile
 42927                           
 42928                           ;func.c: 1744: }
 42929  06CA  2F64               	goto	l1739
 42930  06CB                     l15250:	
 42931                           
 42932                           ;func.c: 1745: else
 42933                           ;func.c: 1746: escreve_tempos(salva_str[idioma],(ee_addr+1),pagina);
 42934  06CB  085A               	movf	_idioma^(0+384),w
 42935  06CC  0141               	movlb	1	; select bank1
 42936  06CD  00A8               	movwf	??_telas^(0+128)
 42937  06CE  01A9               	clrf	(??_telas^(0+128)+1)
 42938  06CF  0828               	movf	??_telas^(0+128),w
 42939  06D0  0140               	movlb	0	; select bank0
 42940  06D1  00AB               	movwf	___wmul@multiplier
 42941  06D2  0141               	movlb	1	; select bank1
 42942  06D3  0829               	movf	(??_telas+1)^(0+128),w
 42943  06D4  0140               	movlb	0	; select bank0
 42944  06D5  00AC               	movwf	___wmul@multiplier+1
 42945  06D6  3011               	movlw	17
 42946  06D7  00AD               	movwf	___wmul@multiplicand
 42947  06D8  3000               	movlw	0
 42948  06D9  00AE               	movwf	___wmul@multiplicand+1
 42949  06DA  31D0  20FE  3181   	fcall	___wmul
 42950  06DD  307A               	movlw	low (_salva_str| (0+32768))
 42951  06DE  0141               	movlb	1	; select bank1
 42952  06DF  00AA               	movwf	(??_telas+2)^(0+128)
 42953  06E0  30DE               	movlw	high (_salva_str| (0+32768))
 42954  06E1  00AB               	movwf	((??_telas+2)^(0+128)+1)
 42955  06E2  0140               	movlb	0	; select bank0
 42956  06E3  082B               	movf	?___wmul,w
 42957  06E4  0141               	movlb	1	; select bank1
 42958  06E5  072A               	addwf	(??_telas+2)^(0+128),w
 42959  06E6  00B1               	movwf	_telas$4267^(0+128)
 42960  06E7  0140               	movlb	0	; select bank0
 42961  06E8  082C               	movf	?___wmul+1,w
 42962  06E9  0141               	movlb	1	; select bank1
 42963  06EA  3D2B               	addwfc	(??_telas+3)^(0+128),w
 42964  06EB  00B2               	movwf	(_telas$4267+1)^(0+128)
 42965                           
 42966                           ;func.c: 1745: else
 42967                           ;func.c: 1746: escreve_tempos(salva_str[idioma],(ee_addr+1),pagina);
 42968  06EC  0832               	movf	(_telas$4267+1)^(0+128),w
 42969  06ED  0140               	movlb	0	; select bank0
 42970  06EE  00D4               	movwf	escreve_tempos@s1+1
 42971  06EF  0141               	movlb	1	; select bank1
 42972  06F0  0831               	movf	_telas$4267^(0+128),w
 42973  06F1  0140               	movlb	0	; select bank0
 42974  06F2  00D3               	movwf	escreve_tempos@s1
 42975  06F3  0862               	movf	telas@ee_addr,w
 42976  06F4  3E01               	addlw	1
 42977  06F5  00D5               	movwf	escreve_tempos@t
 42978  06F6  3000               	movlw	0
 42979  06F7  1803               	skipnc
 42980  06F8  3001               	movlw	1
 42981  06F9  00D6               	movwf	escreve_tempos@t+1
 42982  06FA  0864               	movf	_pagina,w	;volatile
 42983  06FB  0141               	movlb	1	; select bank1
 42984  06FC  00A8               	movwf	??_telas^(0+128)
 42985  06FD  0828               	movf	??_telas^(0+128),w
 42986  06FE  0140               	movlb	0	; select bank0
 42987  06FF  00D7               	movwf	escreve_tempos@pag
 42988  0700  31A0  207D  3181   	fcall	_escreve_tempos
 42989                           
 42990                           ;func.c: 1747: break;
 42991  0703  2F64               	goto	l1739
 42992  0704                     l1765:	
 42993                           ;func.c: 1749: case TELA_OP_TMP:
 42994                           
 42995                           
 42996                           ;func.c: 1750: flag.muda_tela = 0;
 42997  0704  0143               	movlb	3	; select bank3
 42998  0705  10AD               	bcf	(_flag^(0+384)+1),1	;volatile
 42999                           
 43000                           ;func.c: 1751: totalCiclos();
 43001  0706  31BE  263B  3181   	fcall	_totalCiclos
 43002                           
 43003                           ;func.c: 1752: break;
 43004  0709  2F64               	goto	l1739
 43005  070A                     l1766:	
 43006                           ;func.c: 1753: case TELA_IDIOMA:
 43007                           
 43008                           
 43009                           ;func.c: 1754: if(flag.muda_valor){
 43010  070A  0143               	movlb	3	; select bank3
 43011  070B  1D2D               	btfss	(_flag^(0+384)+1),2	;volatile
 43012  070C  2F18               	goto	l15264
 43013                           
 43014                           ;func.c: 1755: idioma++;
 43015  070D  3001               	movlw	1
 43016  070E  0141               	movlb	1	; select bank1
 43017  070F  00A8               	movwf	??_telas^(0+128)
 43018  0710  0828               	movf	??_telas^(0+128),w
 43019  0711  0143               	movlb	3	; select bank3
 43020  0712  07DA               	addwf	_idioma^(0+384),f
 43021                           
 43022                           ;func.c: 1756: if(idioma >= TAMANHO_IDIOMA) idioma = PORTUGUES;
 43023  0713  3002               	movlw	2
 43024  0714  025A               	subwf	_idioma^(0+384),w
 43025  0715  1803               	btfsc	3,0
 43026  0716  01DA               	clrf	_idioma^(0+384)
 43027                           
 43028                           ;func.c: 1757: flag.muda_valor = 0;
 43029  0717  112D               	bcf	(_flag^(0+384)+1),2	;volatile
 43030  0718                     l15264:	
 43031                           
 43032                           ;func.c: 1758: }
 43033                           ;func.c: 1759: escreve_tempos(idioma_str[idioma],idioma,pagina);
 43034  0718  085A               	movf	_idioma^(0+384),w
 43035  0719  0141               	movlb	1	; select bank1
 43036  071A  00A8               	movwf	??_telas^(0+128)
 43037  071B  01A9               	clrf	(??_telas^(0+128)+1)
 43038  071C  0828               	movf	??_telas^(0+128),w
 43039  071D  0140               	movlb	0	; select bank0
 43040  071E  00AB               	movwf	___wmul@multiplier
 43041  071F  0141               	movlb	1	; select bank1
 43042  0720  0829               	movf	(??_telas+1)^(0+128),w
 43043  0721  0140               	movlb	0	; select bank0
 43044  0722  00AC               	movwf	___wmul@multiplier+1
 43045  0723  3011               	movlw	17
 43046  0724  00AD               	movwf	___wmul@multiplicand
 43047  0725  3000               	movlw	0
 43048  0726  00AE               	movwf	___wmul@multiplicand+1
 43049  0727  31D0  20FE  3181   	fcall	___wmul
 43050  072A  30F4               	movlw	low (_idioma_str| (0+32768))
 43051  072B  0141               	movlb	1	; select bank1
 43052  072C  00AA               	movwf	(??_telas+2)^(0+128)
 43053  072D  30DB               	movlw	high (_idioma_str| (0+32768))
 43054  072E  00AB               	movwf	((??_telas+2)^(0+128)+1)
 43055  072F  0140               	movlb	0	; select bank0
 43056  0730  082B               	movf	?___wmul,w
 43057  0731  0141               	movlb	1	; select bank1
 43058  0732  072A               	addwf	(??_telas+2)^(0+128),w
 43059  0733  00B1               	movwf	_telas$4267^(0+128)
 43060  0734  0140               	movlb	0	; select bank0
 43061  0735  082C               	movf	?___wmul+1,w
 43062  0736  0141               	movlb	1	; select bank1
 43063  0737  3D2B               	addwfc	(??_telas+3)^(0+128),w
 43064  0738  00B2               	movwf	(_telas$4267+1)^(0+128)
 43065                           
 43066                           ;func.c: 1758: }
 43067                           ;func.c: 1759: escreve_tempos(idioma_str[idioma],idioma,pagina);
 43068  0739  0832               	movf	(_telas$4267+1)^(0+128),w
 43069  073A  0140               	movlb	0	; select bank0
 43070  073B  00D4               	movwf	escreve_tempos@s1+1
 43071  073C  0141               	movlb	1	; select bank1
 43072  073D  0831               	movf	_telas$4267^(0+128),w
 43073  073E  0140               	movlb	0	; select bank0
 43074  073F  00D3               	movwf	escreve_tempos@s1
 43075  0740  0143               	movlb	3	; select bank3
 43076  0741  085A               	movf	_idioma^(0+384),w
 43077  0742  0141               	movlb	1	; select bank1
 43078  0743  00A8               	movwf	??_telas^(0+128)
 43079  0744  01A9               	clrf	(??_telas^(0+128)+1)
 43080  0745  0828               	movf	??_telas^(0+128),w
 43081  0746  0140               	movlb	0	; select bank0
 43082  0747  00D5               	movwf	escreve_tempos@t
 43083  0748  0141               	movlb	1	; select bank1
 43084  0749  0829               	movf	(??_telas+1)^(0+128),w
 43085  074A  0140               	movlb	0	; select bank0
 43086  074B  00D6               	movwf	escreve_tempos@t+1
 43087  074C  0864               	movf	_pagina,w	;volatile
 43088  074D  0141               	movlb	1	; select bank1
 43089  074E  00AA               	movwf	(??_telas+2)^(0+128)
 43090  074F  082A               	movf	(??_telas+2)^(0+128),w
 43091  0750  0140               	movlb	0	; select bank0
 43092  0751  00D7               	movwf	escreve_tempos@pag
 43093  0752  31A0  207D  3181   	fcall	_escreve_tempos
 43094                           
 43095                           ;func.c: 1761: }
 43096                           
 43097                           ;func.c: 1760: break;
 43098  0755  2F64               	goto	l1739
 43099  0756                     l15270:	
 43100  0756  0140               	movlb	0	; select bank0
 43101  0757  0864               	movf	_pagina,w	;volatile
 43102                           
 43103                           ; Switch size 1, requested type "space"
 43104                           ; Number of cases is 14, Range of values is 1 to 14
 43105                           ; switch strategies available:
 43106                           ; Name         Instructions Cycles
 43107                           ; direct_byte           37     9 (fixed)
 43108                           ; simple_byte           43    22 (average)
 43109                           ; jumptable            263     9 (fixed)
 43110                           ;	Chosen strategy is direct_byte
 43111  0758  3EFF               	addlw	-1
 43112  0759  1C03               	skipc
 43113  075A  2F64               	goto	l1739
 43114  075B  0084               	movwf	4
 43115  075C  300E               	movlw	14
 43116  075D  0204               	subwf	4,w
 43117  075E  1803               	skipnc
 43118  075F  2F64               	goto	l1739
 43119  0760  31D0               	movlp	high S18602
 43120  0761  3504               	lslf	4,w
 43121  0762  3E70               	addlw	low S18602
 43122  0763  0082               	movwf	2
 43123  0764                     l1739:	
 43124                           
 43125                           ;func.c: 1764: if(flag.muda_tela){
 43126  0764  0143               	movlb	3	; select bank3
 43127  0765  1CAD               	btfss	(_flag^(0+384)+1),1	;volatile
 43128  0766  0008               	return
 43129                           
 43130                           ;func.c: 1765: Lcd_Clear();
 43131  0767  31E1  21DF  3181   	fcall	_Lcd_Clear
 43132                           
 43133                           ;func.c: 1766: escreve_LCD(1,1,str1);
 43134  076A  0140               	movlb	0	; select bank0
 43135  076B  01B5               	clrf	escreve_LCD@coluna
 43136  076C  0AB5               	incf	escreve_LCD@coluna,f
 43137  076D  3054               	movlw	low _str1
 43138  076E  00B6               	movwf	escreve_LCD@str
 43139  076F  3003               	movlw	high _str1
 43140  0770  00B7               	movwf	escreve_LCD@str+1
 43141  0771  3001               	movlw	1
 43142  0772  31E7  27C1  3181   	fcall	_escreve_LCD
 43143                           
 43144                           ;func.c: 1767: escreve_LCD(2,1,str2);
 43145  0775  0140               	movlb	0	; select bank0
 43146  0776  01B5               	clrf	escreve_LCD@coluna
 43147  0777  0AB5               	incf	escreve_LCD@coluna,f
 43148  0778  3040               	movlw	low _str2
 43149  0779  00B6               	movwf	escreve_LCD@str
 43150  077A  3003               	movlw	high _str2
 43151  077B  00B7               	movwf	escreve_LCD@str+1
 43152  077C  3002               	movlw	2
 43153  077D  31E7  27C1         	fcall	_escreve_LCD
 43154                           
 43155                           ;func.c: 1769: flag.muda_tela = 0;
 43156  077F  0143               	movlb	3	; select bank3
 43157  0780  10AD               	bcf	(_flag^(0+384)+1),1	;volatile
 43158  0781  0008               	return
 43159  0782                     L68:	
 43160  0782                     __end_of_telas:	
 43161  0782  31A5  2D01         	ljmp	l1714
 43162  0784                     L70:	
 43163  0784                     L69:	
 43164  0784  31A4  2C88         	ljmp	l15074
 43165  0786                     L72:	
 43166  0786                     L71:	
 43167  0786  31A4  2C69         	ljmp	l15072
 43168  0788                     L74:	
 43169  0788                     L73:	
 43170  0788  31A2  2AD1         	ljmp	l15004


Data Sizes:
    Strings     175
    Constant    2661
    Data        8
    BSS         329
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      69
    BANK1            80     77      77
    BANK2            80     48      48
    BANK3            80      0      72
    BANK4            80      0      80
    BANK5            80      0      70
    BANK6            80      0      72
    BANK7            80      0      32
    BANK8            80     51      51
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           80      0       0
    BANK26           80      0       0
    BANK27           80      0       0
    BANK28           80      0       0
    BANK29           80      0       0
    BANK30           80      0       0
    BANK31           80      0       0
    BANK32           80      0       0
    BANK33           80      0       0
    BANK34           80      0       0
    BANK35           80      0       0
    BANK36           80      0       0
    BANK37           80      0       0
    BANK38           80      0       0
    BANK39           80      0       0
    BANK40           80      0       0
    BANK41           80      0       0
    BANK42           80      0       0
    BANK43           80      0       0
    BANK44           80      0       0
    BANK45           80      0       0
    BANK46           80      0       0
    BANK47           80      0       0
    BANK48           40      0       0
    BANK49            0      0       0
    BANK50            0      0       0

Pointer List with Targets:

    telas$4267	PTR const unsigned char  size(2) Largest target is 34
		 -> idioma_str(CODE[34]), salva_str(CODE[34]), carrega_str(CODE[34]), ctrl_pecas_str(CODE[34]), 
		 -> ctrl_solda_str(CODE[34]), cont_pecas_str(CODE[34]), tipo_maquina_str(CODE[34]), metal_str(CODE[34]), 
		 -> fixacao_str(CODE[34]), joule_str(CODE[34]), solda_str(CODE[34]), descida_str(CODE[34]), 

    trata_dados$4262	PTR const unsigned char  size(2) Largest target is 34
		 -> energia_low_str(CODE[34]), tempo_ovf_str(CODE[34]), 

    main$4251	PTR const unsigned char  size(2) Largest target is 34
		 -> erro_senha_str(CODE[34]), erro_inv_str(CODE[34]), 

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK1[2]), floor@expon(BANK1[2]), trunc@expon(BANK1[2]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_29(CODE[12]), modelo_str(CODE[40]), STR_2(CODE[9]), STR_1(CODE[9]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_29(CODE[12]), modelo_str(CODE[40]), STR_2(CODE[9]), STR_1(CODE[9]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 34
		 -> teste_US1_str(CODE[34]), tipo_idioma_str(CODE[34]), tipo_maquina3_str(CODE[34]), tipo_maquina2_str(CODE[34]), 
		 -> tipo_maquina1_str(CODE[34]), tipo_progress_str(CODE[34]), tipo_regress_str(CODE[34]), tipo_energia_str(CODE[34]), 
		 -> tipo_tempo_str(CODE[34]), valor_a_str(CODE[34]), idioma_str(CODE[34]), salva_str(CODE[34]), 
		 -> receita_salva_str(CODE[34]), carrega_str(CODE[34]), receita_carreg_str(CODE[34]), freq_ini_str(CODE[13]), 
		 -> ctrl_pecas_str(CODE[34]), ctrl_solda_str(CODE[34]), cont_pecas_str(CODE[34]), tipo_maquina_str(CODE[34]), 
		 -> metal_str(CODE[34]), fixacao_str(CODE[34]), joule_str(CODE[34]), solda_str(CODE[34]), 
		 -> descida_str(CODE[34]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 20
		 -> str2(BANK6[20]), str1(BANK6[20]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 20
		 -> str2(BANK6[20]), str1(BANK6[20]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 5
		 -> senha_padrao(CODE[5]), senha_gerador(BANK5[5]), senha_user(BANK5[5]), 

    strcmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> Autenticar@senha(BANK1[5]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_24(CODE[4]), STR_22(CODE[4]), STR_21(CODE[4]), STR_17(CODE[3]), 
		 -> STR_16(CODE[3]), STR_15(CODE[2]), STR_14(CODE[2]), erro_energia_str(CODE[34]), 
		 -> str(BANK4[20]), 

    strcat@to	PTR unsigned char  size(1) Largest target is 20
		 -> str2(BANK6[20]), str1(BANK6[20]), 

    strcat@cp	PTR unsigned char  size(1) Largest target is 20
		 -> str2(BANK6[20]), str1(BANK6[20]), 

    ultoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    sp__ultoa	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    ltoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    ltoa@cp	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    utoa@buf	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    sp__itoa	PTR unsigned char  size(1) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), 
		 -> atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> EditSenhaUser@senha(BANK0[5]), STR_51(CODE[5]), STR_50(CODE[5]), senha_user(BANK5[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> EditSenhaUser@senha(BANK0[5]), senha_user(BANK5[5]), str(BANK4[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    verifSenhas@sh	PTR unsigned char  size(1) Largest target is 5
		 -> Autenticar@senha(BANK1[5]), 

    printTelaEditarSenha@s	PTR unsigned char  size(1) Largest target is 5
		 -> EditSenhaUser@senha(BANK0[5]), 

    printTelaSenha@s	PTR unsigned char  size(1) Largest target is 5
		 -> Autenticar@senha(BANK1[5]), 

    escreve_LCD@str	PTR const unsigned char  size(2) Largest target is 34
		 -> Autenticar@senha(BANK1[5]), EditSenhaUser@senha(BANK0[5]), edit_senha_str(CODE[34]), menu_senha_str(CODE[34]), 
		 -> STR_42(CODE[13]), STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[13]), 
		 -> STR_36(CODE[13]), STR_33(CODE[16]), STR_32(CODE[15]), STR_30(CODE[14]), 
		 -> modo_op_str(CODE[34]), modo_contByPulse_str(CODE[34]), modo_contnuo_str(CODE[34]), modo_rapido_str(CODE[34]), 
		 -> modo_normal_str(CODE[34]), STR_23(CODE[2]), teste_PN1_str(CODE[34]), str2(BANK6[20]), 
		 -> str1(BANK6[20]), STR_11(CODE[3]), STR_10(CODE[4]), Sonitron_str(CODE[14]), 
		 -> tempo_str(CODE[34]), energia_str(CODE[34]), emerg2_str(CODE[34]), Sai_enter_str(CODE[34]), 
		 -> zero_cont_str(CODE[34]), STR_4(CODE[2]), erro_str(CODE[34]), erro_ovl_str(CODE[34]), 
		 -> STR_3(CODE[2]), emergencia_str(CODE[34]), energia_low_str(CODE[34]), tempo_ovf_str(CODE[34]), 
		 -> fixando_str(CODE[34]), process_str(CODE[34]), aguarde_str(CODE[34]), solda_cont_str(CODE[34]), 
		 -> n_pecas_str(CODE[34]), descendo_str(CODE[34]), erro_senha_str(CODE[34]), erro_inv_str(CODE[34]), 

    Lcd_White_Center_String@a	PTR const unsigned char  size(2) Largest target is 40
		 -> STR_29(CODE[12]), modelo_str(CODE[40]), STR_2(CODE[9]), STR_1(CODE[9]), 

    Lcd_Write_String@a	PTR const unsigned char  size(2) Largest target is 34
		 -> Autenticar@senha(BANK1[5]), EditSenhaUser@senha(BANK0[5]), edit_senha_str(CODE[34]), menu_senha_str(CODE[34]), 
		 -> STR_49(CODE[7]), STR_48(CODE[4]), STR_47(CODE[6]), STR_46(CODE[4]), 
		 -> STR_45(CODE[6]), STR_44(CODE[4]), STR_43(CODE[8]), STR_42(CODE[13]), 
		 -> STR_41(CODE[13]), STR_40(CODE[4]), STR_39(CODE[13]), STR_38(CODE[4]), 
		 -> STR_37(CODE[13]), STR_36(CODE[13]), STR_35(CODE[5]), STR_34(CODE[8]), 
		 -> STR_33(CODE[16]), STR_32(CODE[15]), STR_31(CODE[4]), STR_30(CODE[14]), 
		 -> modo_op_str(CODE[34]), modo_contByPulse_str(CODE[34]), modo_contnuo_str(CODE[34]), modo_rapido_str(CODE[34]), 
		 -> modo_normal_str(CODE[34]), STR_23(CODE[2]), teste_PN1_str(CODE[34]), STR_20(CODE[6]), 
		 -> STR_19(CODE[6]), freq_str(CODE[8]), STR_18(CODE[5]), str2(BANK6[20]), 
		 -> str1(BANK6[20]), freq_ini_str(CODE[13]), STR_13(CODE[4]), STR_12(CODE[2]), 
		 -> STR_11(CODE[3]), STR_10(CODE[4]), Sonitron_str(CODE[14]), STR_9(CODE[4]), 
		 -> STR_8(CODE[3]), STR_7(CODE[4]), STR_6(CODE[2]), tempo_str(CODE[34]), 
		 -> STR_5(CODE[4]), energia_str(CODE[34]), emerg2_str(CODE[34]), Sai_enter_str(CODE[34]), 
		 -> zero_cont_str(CODE[34]), STR_4(CODE[2]), erro_str(CODE[34]), erro_ovl_str(CODE[34]), 
		 -> STR_3(CODE[2]), emergencia_str(CODE[34]), energia_low_str(CODE[34]), tempo_ovf_str(CODE[34]), 
		 -> fixando_str(CODE[34]), process_str(CODE[34]), aguarde_str(CODE[34]), solda_cont_str(CODE[34]), 
		 -> str(BANK4[20]), n_pecas_str(CODE[34]), descendo_str(CODE[34]), erro_senha_str(CODE[34]), 
		 -> erro_inv_str(CODE[34]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    selectModo@s	PTR unsigned char [4] size(2) Largest target is 34
		 -> modo_contByPulse_str(CODE[34]), modo_contnuo_str(CODE[34]), modo_rapido_str(CODE[34]), modo_normal_str(CODE[34]), 

    sp__utoa	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    sp__strcat	PTR unsigned char  size(1) Largest target is 20
		 -> str2(BANK6[20]), str1(BANK6[20]), 

    escreve_tempos@s1	PTR const unsigned char  size(2) Largest target is 34
		 -> idioma_str(CODE[34]), salva_str(CODE[34]), carrega_str(CODE[34]), freq_ini_str(CODE[13]), 
		 -> ctrl_pecas_str(CODE[34]), ctrl_solda_str(CODE[34]), cont_pecas_str(CODE[34]), tipo_maquina_str(CODE[34]), 
		 -> metal_str(CODE[34]), fixacao_str(CODE[34]), joule_str(CODE[34]), solda_str(CODE[34]), 
		 -> descida_str(CODE[34]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 20
		 -> str2(BANK6[20]), str1(BANK6[20]), 

    trava_erro@s	PTR const unsigned char  size(2) Largest target is 34
		 -> STR_42(CODE[13]), STR_41(CODE[13]), STR_39(CODE[13]), STR_37(CODE[13]), 
		 -> STR_36(CODE[13]), STR_33(CODE[16]), STR_32(CODE[15]), STR_30(CODE[14]), 
		 -> STR_23(CODE[2]), STR_4(CODE[2]), STR_3(CODE[2]), energia_low_str(CODE[34]), 
		 -> tempo_ovf_str(CODE[34]), erro_senha_str(CODE[34]), erro_inv_str(CODE[34]), 

    sp__ltoa	PTR unsigned char  size(1) Largest target is 20
		 -> str(BANK4[20]), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->i1___lwdiv
    i1_get_duty->i1___ltdiv
    i1___ltdiv->i1___tmul
    _pontencia_instantanea->i1___lwdiv
    i1___lwdiv->i1___wmul
    _load_bar->i1_data
    _TMR5_Reload->_TMR5_WriteTimer
    _TMR1_Reload->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_ciclar
    _main->_rotina_tela
    _teste_leds->_data
    _liberar->_ver_entrada
    _emergencia->_rotina_tela
    _telas->_escreve_tempos
    _totalCiclos->_ltoa
    _escreve_tempos->_ltoa
    _strcpy->___wmul
    _strcat->___wmul
    _config_maq->_config_entrada
    _config_maq->_config_saidas
    _selectModo->_liberar_tecla
    _salva_EEPROM->_addr_receitas
    _carrega_EEPROM->_eeprom_read
    _Lcd_White_Center_String->_Lcd_Set_Cursor
    _ini_GERADOR->_atan
    _round->_trunc
    _log->___ftmul
    _exp->_ldexp
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    _cos->_sin
    _sin->_floor
    ___fttol->___ftmul
    ___altoft->___ftpack
    ___ftsub->_floor
    ___ftneg->_trunc
    _eval_poly->___ftmul
    ___ftadd->___altoft
    _XC->___ftmul
    ___lwtoft->___ftpack
    ___lwtoft->___lwdiv
    ___ftmul->___ftadd
    ___ftdiv->___ftmul
    _get_duty->___ltdiv
    ___ltdiv->___tmul
    _func_rst->_set_freq
    _func_enter->_set_freq
    _utoa->___lwmod
    _config_maq_especial->_config_entrada
    _config_maq_especial->_config_saidas
    _config_saidas->_clear_saida
    _clear_saida->_config_flag_saida
    _config_entrada->_config_flag_entrada
    _ciclarPneumatico->_trava_erro
    _ciclar->_op_desce
    _ciclar->_op_solda
    _ciclar->_trava_erro
    _trata_dados->_trava_erro
    _trava_erro->_tela_inicial
    _tela_inicial->_ltoa
    _tela_ultima_solda->_ltoa
    _set_freq->_get_freq
    _rst_inversor->_saida
    _delay->___lwdiv
    _carrega_EEPROM32->_eeprom_read
    _op_solda->_ltoa
    _ver_freq->_get_freq
    _status_gerador->_saida
    _get_freq->___lldiv
    ___awmod->___wmul
    _escreve_freq->_ltoa
    _op_fixar->_escreve_LCD
    _salva_n_pecas->_salva_EEPROM32
    _salva_EEPROM32->_addr_receitas
    _op_desce->_ltoa
    _ver_entrada->_ISR_entrada
    _ltoa->_ultoa
    _ultoa->___lldiv
    ___lldiv->_SMT1_GetCapturedPeriod
    _SYSTEM_Initialize->_Inicia_LCD
    _PWM2_Initialize->_PWM2_LoadDutyValue
    _Inicia_LCD->_Lcd_Init
    _Lcd_Init->_Lcd_Cmd
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _Autenticar->_EditSenhaUser
    _verifSenhas->_strcmp
    _printTelaSenha->_sprintf
    _LoadSenhaGerador->_eeprom_read
    _EditSenhaUser->_printTelaEditarSenha
    _printTelaEditarSenha->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _escreve_LCD->_Lcd_Set_Cursor
    _escreve_LCD->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _liberar_tecla->___lwdiv
    _teclado->_bip_tecla
    _teclado->_start_timer
    _LoadSenhaUser->_eeprom_read

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    i1_get_duty->i1___ltdiv

Critical Paths under _main in BANK1

    _teste_pneumatico->_emergencia
    _teste_US->_emergencia
    _rotina_tela->_telas
    _telas->_totalCiclos
    _ini_ee_tempos->___ftneg
    _get_temp->___ftdiv
    _ini_GERADOR->_sqrt
    _sqrt->_pow
    _round->___ftneg
    _trunc->___fttol
    _pow->_exp
    _log->_eval_poly
    _exp->___ftsub
    _ldexp->_eval_poly
    _cos->_sin
    _sin->___ftsub
    _floor->___fttol
    ___fttol->___ftdiv
    ___ftsub->_floor
    _atan->_fabs
    _fabs->___ftneg
    ___ftneg->_trunc
    _XC->___ftdiv
    ___ftdiv->_eval_poly
    _ciclarPneumatico->_trava_erro
    _ciclar->_trata_dados
    _trata_dados->_tela_ultima_solda

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_ini_GERADOR
    _ini_GERADOR->_sqrt
    _sqrt->_pow

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    _main->_ini_GERADOR

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK36

    None.

Critical Paths under _main in BANK37

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK37

    None.

Critical Paths under _main in BANK38

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK38

    None.

Critical Paths under _main in BANK39

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK39

    None.

Critical Paths under _main in BANK40

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK40

    None.

Critical Paths under _main in BANK41

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK41

    None.

Critical Paths under _main in BANK42

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK42

    None.

Critical Paths under _main in BANK43

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK43

    None.

Critical Paths under _main in BANK44

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK44

    None.

Critical Paths under _main in BANK45

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK45

    None.

Critical Paths under _main in BANK46

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK46

    None.

Critical Paths under _main in BANK47

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK47

    None.

Critical Paths under _main in BANK48

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK48

    None.

Critical Paths under _main in BANK49

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK49

    None.

Critical Paths under _main in BANK50

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK50

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0 2662579
                                             36 BANK2     12    12      0
                         _Autenticar
                         _Inicia_LCD
                          _Lcd_Clear
                     _Lcd_Set_Cursor
            _Lcd_White_Center_String
                  _SYSTEM_Initialize
                             ___wmul
                             _ciclar
                   _ciclarPneumatico
                    _config_IO_start
                         _config_maq
                _config_maq_especial
                              _delay
                         _emergencia
                         _func_enter
                           _func_rst
                           _get_duty
                           _get_freq
                        _ini_GERADOR
                      _ini_ee_tempos
                            _liberar
                      _liberar_tecla
                           _op_desce
                           _op_fixar
                           _op_solda
                        _rotina_tela
                       _rst_inversor
                           _set_freq
                     _status_gerador
                            _teclado
                       _tela_inicial
                  _tela_ultima_solda
                           _teste_US
                         _teste_leds
                   _teste_pneumatico
                        _totalCiclos
                        _trata_dados
                         _trava_erro
                        _ver_entrada
                           _ver_freq
 ---------------------------------------------------------------------------------
 (1) _teste_pneumatico                                     6     6      0  243811
                                             24 BANK1      6     6      0
                          _Lcd_Clear
                             ___wmul
                         _emergencia
                        _escreve_LCD
                            _liberar
                      _liberar_tecla
                              _saida
                            _teclado
                        _ver_entrada
 ---------------------------------------------------------------------------------
 (1) _teste_leds                                           4     4      0     833
                                             13 BANK0      4     4      0
                                _clr
                               _data
 ---------------------------------------------------------------------------------
 (2) _data                                                 2     0      2     731
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _clr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teste_US                                             7     7      0  344880
                                             24 BANK1      7     7      0
                          _Lcd_Clear
                   _Lcd_Write_String
                             ___wmul
                         _emergencia
                        _escreve_LCD
                           _get_freq
                            _liberar
                      _liberar_tecla
                               _ltoa
                       _rst_inversor
                       _salva_EEPROM
                           _set_freq
                             _strcat
                             _strcpy
                            _teclado
                         _trava_erro
                        _ver_entrada
                           _ver_freq
 ---------------------------------------------------------------------------------
 (2) _liberar                                              0     0      0     288
                        _ver_entrada
 ---------------------------------------------------------------------------------
 (2) _emergencia                                           5     5      0  207804
                                             19 BANK1      5     5      0
                             ___wmul
                        _escreve_LCD
                        _rotina_tela
                     _status_gerador
                            _teclado
                       _tela_inicial
                        _ver_entrada
 ---------------------------------------------------------------------------------
 (3) _rotina_tela                                          2     2      0  132691
                                             56 BANK0      2     2      0
                              _delay
                       _eeprom_write
                      _liberar_tecla
                       _salva_EEPROM
                     _salva_EEPROM32
                           _set_freq
                            _teclado
                              _telas
                        _verifPagina
 ---------------------------------------------------------------------------------
 (4) _telas                                               11    11      0  109926
                                              8 BANK1     11    11      0
                          _Lcd_Clear
                             ___wmul
                      _addr_receitas
                     _carrega_EEPROM
                   _carrega_EEPROM32
                         _config_maq
                      _config_saidas
                        _escreve_LCD
                     _escreve_tempos
                       _salva_EEPROM
                     _salva_EEPROM32
                             _strcpy
                        _totalCiclos
                        _verifPagina
 ---------------------------------------------------------------------------------
 (4) _verifPagina                                          4     3      1     787
                                             11 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _totalCiclos                                          8     8      0   29535
                                              0 BANK1      8     8      0
                          _Lcd_Clear
                   _Lcd_Write_String
                            ___lldiv
                            ___llmod
                        _escreve_LCD
                               _ltoa
 ---------------------------------------------------------------------------------
 (5) _escreve_tempos                                       9     4      5   29317
                                             51 BANK0      5     0      5
                                              0 BANK1      4     4      0
                             ___wmul
                               _ltoa
                             _strcat
                             _strcpy
 ---------------------------------------------------------------------------------
 (5) _strcpy                                               5     3      2    1869
                                             17 BANK0      5     3      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) _strcat                                               5     3      2    1683
                                             17 BANK0      5     3      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _config_maq                                           4     4      0    6049
                                             17 BANK0      4     4      0
                     _config_entrada
                      _config_saidas
 ---------------------------------------------------------------------------------
 (5) _addr_receitas                                        3     2      1    1140
                                             11 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _ini_ee_tempos                                       35    31      4  110910
                                             51 BANK1     10     6      4
                                              0 BANK2     25    25      0
                          _Lcd_Clear
            _Lcd_White_Center_String
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                             ___wmul
                          _bip_tecla
                     _carrega_EEPROM
                   _carrega_EEPROM32
                        _eeprom_read
                       _eeprom_write
                           _get_temp
                       _salva_EEPROM
                     _salva_EEPROM32
                         _selectModo
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _selectModo                                          16    16      0   35850
                                             31 BANK0     16    16      0
                          _Lcd_Clear
                             ___wmul
                       _eeprom_write
                        _escreve_LCD
                      _liberar_tecla
                            _teclado
 ---------------------------------------------------------------------------------
 (5) _salva_EEPROM                                         5     2      3    5160
                                             14 BANK0      5     2      3
                      _addr_receitas (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (2) _get_temp                                            15    12      3   16493
                                             26 BANK1     15    12      3
                           ___awtoft
                            ___ftadd
                            ___ftdiv
 ---------------------------------------------------------------------------------
 (5) _carrega_EEPROM                                       5     3      2      93
                                             12 BANK0      5     3      2
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _Lcd_White_Center_String                             10     8      2    3362
                                             21 BANK0     10     8      2
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                            ___awdiv
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     207
                                             11 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     599
                                             11 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _ini_GERADOR                                         63    55      8  394492
                                             24 BANK2     12     4      8
                                              0 BANK8     51    51      0
                                 _XC
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lwtoft
                             ___wmul
                               _atan
                                _cos
                                _pow
                              _round
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                19    16      3   19288
                                             71 BANK1      6     3      3
                                             11 BANK2     13    13      0
                            ___ftdiv (ARG)
                             ___ftge
                            ___ftmul
                            ___ftsub
                                _pow (ARG)
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3   14348
                                             51 BANK1      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                            ___ftneg
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    5248
                                             56 BANK0      1     1      0
                                             40 BANK1      8     5      3
                           ___altoft
                            ___ftadd (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (2) _pow                                                 18    12      6  149509
                                             64 BANK1      7     1      6
                                              0 BANK2     11    11      0
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     3      3   52839
                                             56 BANK0      1     1      0
                                             10 BANK1      5     2      3
                           ___awtoft
                            ___ftadd
                             ___ftge
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 10     7      3   80210
                                             54 BANK1     10     7      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5    3483
                                             56 BANK0      2     2      0
                                             10 BANK1      5     0      5
                             ___ftge
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             6     3      3    3085
                                             19 BANK0      6     3      3
                           ___ftpack
                     _carrega_EEPROM (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             6     2      4    2823
                                             19 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _cos                                                  6     3      3   90827
                                             67 BANK1      6     3      3
                            ___ftadd
                             ___ftge
                                _sin
 ---------------------------------------------------------------------------------
 (3) _sin                                                 14    11      3   80208
                                             57 BANK0      1     1      0
                                             54 BANK1     13    10      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                          _eval_poly
                              _floor
 ---------------------------------------------------------------------------------
 (4) _floor                                                9     6      3   15753
                                             56 BANK0      1     1      0
                                             40 BANK1      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     784
                                             11 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4    1064
                                             26 BANK1     14    10      4
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___lwtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    3002
                                             19 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftsub                                              6     0      6    8123
                                             48 BANK1      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
                              _floor (ARG)
 ---------------------------------------------------------------------------------
 (2) _atan                                                17    14      3   60414
                                             57 BANK0      1     1      0
                                             54 BANK1     16    13      3
                            ___ftadd
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                          _eval_poly
                               _fabs
 ---------------------------------------------------------------------------------
 (3) _fabs                                                 3     0      3    4360
                                             51 BANK1      3     0      3
                             ___ftge
                            ___ftneg
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3    1220
                                             48 BANK1      3     0      3
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           _get_temp (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftge                                               9     3      6    2970
                                             11 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           10     3      7   30647
                                              0 BANK1     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    7411
                                             27 BANK0     13     7      6
                           ___altoft (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (2) _XC                                                  10     6      4   18379
                                             26 BANK1     10     6      4
                            ___ftdiv
                            ___ftmul
                            ___lwdiv
                           ___lwtoft
 ---------------------------------------------------------------------------------
 (2) ___lwtoft                                             4     1      3    3060
                                             19 BANK0      4     1      3
                           ___ftpack
                            ___lwdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    7558
                                             40 BANK0     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                           ___lwtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             16    10      6    5682
                                             10 BANK1     16    10      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                           ___lwtoft (ARG)
                             ___wmul (ARG)
                     _carrega_EEPROM (ARG)
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2644
                                             11 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _get_duty                                             0     0      0     685
                            ___ltdiv
                             ___tmul
 ---------------------------------------------------------------------------------
 (2) ___tmul                                               9     3      6     290
                                             11 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (2) ___ltdiv                                             11     5      6     395
                                             20 BANK0     11     5      6
                             ___tmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _func_rst                                             1     1      0   14970
                                             46 BANK0      1     1      0
                      _liberar_tecla
                       _rst_inversor
                     _salva_EEPROM32
                           _set_freq
 ---------------------------------------------------------------------------------
 (1) _func_enter                                           2     2      0   19509
                                             46 BANK0      2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                      _liberar_tecla
                           _set_freq
                            _teclado
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     5      4    3142
                                             25 BANK0      9     5      4
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _config_maq_especial                                  3     3      0    6018
                                             17 BANK0      3     3      0
                     _config_entrada
                      _config_saidas
 ---------------------------------------------------------------------------------
 (5) _config_saidas                                        3     2      1    2948
                                             14 BANK0      3     2      1
                        _clear_saida
                  _config_flag_saida
 ---------------------------------------------------------------------------------
 (6) _clear_saida                                          1     1      0     433
                                             13 BANK0      1     1      0
                  _config_flag_saida
 ---------------------------------------------------------------------------------
 (6) _config_flag_saida                                    2     1      1     402
                                             11 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (6) _config_entrada                                       4     3      1    2810
                                             13 BANK0      4     3      1
                _config_flag_entrada
 ---------------------------------------------------------------------------------
 (7) _config_flag_entrada                                  2     1      1     464
                                             11 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _config_IO_start                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ciclarPneumatico                                     8     8      0   90974
                                              7 BANK1      8     8      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___lwdiv
                               _ltoa
                              _saida
                            _teclado
                         _trava_erro
 ---------------------------------------------------------------------------------
 (1) _ciclar                                              10    10      0  440845
                                             57 BANK0      1     1      0
                                             23 BANK1      9     9      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___lwdiv
                              _delay
                       _escreve_freq
                               _ltoa
                           _op_desce
                           _op_fixar
                           _op_solda
                           _set_freq
                     _status_gerador
                            _teclado
                        _trata_dados
                         _trava_erro
 ---------------------------------------------------------------------------------
 (1) _trata_dados                                         15    15      0  175893
                                              8 BANK1     15    15      0
                         _Inicia_LCD
                          _Lcd_Clear
                   _Lcd_Write_String
                            ___lldiv
                             ___wmul
                   _carrega_EEPROM32
                              _delay
                        _escreve_LCD
                               _ltoa
                       _rst_inversor
                      _salva_n_pecas
                           _set_freq
                     _status_gerador
                            _teclado
                  _tela_ultima_solda
                         _trava_erro
                           _ver_freq
 ---------------------------------------------------------------------------------
 (1) _trava_erro                                           9     7      2   71699
                                             55 BANK0      2     0      2
                                              0 BANK1      7     7      0
                             ___wmul
                            _entrada
                        _escreve_LCD
                            _teclado
                       _tela_inicial
 ---------------------------------------------------------------------------------
 (2) _tela_inicial                                         4     4      0   41438
                                             51 BANK0      4     4      0
                          _Lcd_Clear
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             ___wmul
                        _escreve_LCD
                               _ltoa
 ---------------------------------------------------------------------------------
 (2) _entrada                                              6     4      2      65
                                             11 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _tela_ultima_solda                                   12    12      0   43573
                                             51 BANK0      4     4      0
                                              0 BANK1      8     8      0
                          _Lcd_Clear
                   _Lcd_Write_String
                            ___lldiv
                            ___llmod
                             ___wmul
                        _escreve_LCD
                               _ltoa
 ---------------------------------------------------------------------------------
 (2) _set_freq                                             8     6      2    4489
                                             38 BANK0      8     6      2
                 _PWM2_LoadDutyValue
                           _get_freq
 ---------------------------------------------------------------------------------
 (2) _rst_inversor                                         2     2      0    1852
                                             16 BANK0      2     2      0
                              _saida
 ---------------------------------------------------------------------------------
 (2) _delay                                                8     6      2     912
                                             19 BANK0      8     6      2
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _carrega_EEPROM32                                     7     3      4     155
                                             12 BANK0      7     3      4
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _op_solda                                             8     6      2   71212
                                             51 BANK0      6     4      2
                                              0 BANK1      2     2      0
                   _Lcd_Write_String
                            ___lldiv
                            ___llmod
                             ___wmul
                        _escreve_LCD
                       _escreve_freq
                           _get_freq
                               _ltoa
                     _salva_EEPROM32
                        _start_timer
                     _status_gerador
                         _stop_timer
                        _ver_entrada
                           _ver_freq
 ---------------------------------------------------------------------------------
 (1) _ver_freq                                             2     0      2     432
                                             38 BANK0      2     0      2
                           _get_freq (ARG)
 ---------------------------------------------------------------------------------
 (2) _status_gerador                                       3     1      2    4473
                                             16 BANK0      3     1      2
                              _saida
 ---------------------------------------------------------------------------------
 (3) _get_freq                                             9     7      2    2738
                                             29 BANK0      9     7      2
             _SMT1_GetCapturedPeriod
                            ___awmod
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4    1203
                                             17 BANK0      7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _SMT1_GetCapturedPeriod                               4     0      4       0
                                             11 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _escreve_freq                                         0     0      0   14656
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _ltoa
 ---------------------------------------------------------------------------------
 (1) _op_fixar                                             8     6      2   35420
                                             26 BANK0      8     6      2
                             ___wmul
                        _escreve_LCD
                              _saida
                      _salva_n_pecas
                        _start_timer
                         _stop_timer
                        _ver_entrada
 ---------------------------------------------------------------------------------
 (2) _salva_n_pecas                                        1     1      0    4144
                                             21 BANK0      1     1      0
                     _salva_EEPROM32
 ---------------------------------------------------------------------------------
 (3) _salva_EEPROM32                                       7     2      5    4144
                                             14 BANK0      7     2      5
                      _addr_receitas (ARG)
                       _eeprom_write
 ---------------------------------------------------------------------------------
 (1) _op_desce                                             6     4      2   44409
                                             51 BANK0      6     4      2
                     _Lcd_Write_Char
                   _Lcd_Write_String
                             ___wmul
                        _escreve_LCD
                               _ltoa
                              _saida
                        _start_timer
                         _stop_timer
                        _ver_entrada
 ---------------------------------------------------------------------------------
 (1) _ver_entrada                                          1     1      0     288
                                             18 BANK0      1     1      0
                        _ISR_entrada
 ---------------------------------------------------------------------------------
 (2) _ISR_entrada                                          7     7      0     288
                                             11 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (3) _saida                                                5     3      2    1852
                                             11 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _ltoa                                                 9     3      6    8414
                                             42 BANK0      9     3      6
                              _ultoa
 ---------------------------------------------------------------------------------
 (4) _ultoa                                               13     7      6    2945
                                             29 BANK0     13     7      6
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (5) ___llmod                                             10     2      8     848
                                             11 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8    1473
                                             15 BANK0     14     6      8
             _SMT1_GetCapturedPeriod (ARG)
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1011
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _EUSART_Initialize
                         _Inicia_LCD
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM2_Initialize
                    _SMT1_Initialize
                    _SMT2_Initialize
                    _TMR1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SMT1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0     361
                 _PWM2_LoadDutyValue
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadDutyValue                                   2     0      2     361
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Inicia_LCD                                           1     1      0     434
                                             15 BANK0      1     1      0
                          _Lcd_Clear
                           _Lcd_Init
 ---------------------------------------------------------------------------------
 (3) _Lcd_Init                                             1     1      0     279
                                             14 BANK0      1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     216
                                             13 BANK0      1     1      0
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     108
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     108
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Autenticar                                           9     9      0   92663
                                             55 BANK0      2     2      0
                                              0 BANK1      7     7      0
                      _EditSenhaUser
                   _LoadSenhaGerador
                      _LoadSenhaUser
                      _liberar_tecla
                     _printTelaSenha
                            _teclado
                        _verifSenhas
 ---------------------------------------------------------------------------------
 (2) _verifSenhas                                          1     1      0     622
                                             16 BANK0      1     1      0
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               5     3      2     463
                                             11 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (2) _printTelaSenha                                       6     5      1   36780
                                             41 BANK0      6     5      1
                          _Lcd_Clear
                   _Lcd_Write_String
                             ___wmul
                        _escreve_LCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _LoadSenhaGerador                                     1     1      0      31
                                             12 BANK0      1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (2) _EditSenhaUser                                        8     8      0   48765
                                             47 BANK0      8     8      0
                      _LoadSenhaUser
                       _eeprom_write
                      _liberar_tecla
               _printTelaEditarSenha
                            _sprintf
                            _teclado
 ---------------------------------------------------------------------------------
 (3) _printTelaEditarSenha                                 6     5      1   36780
                                             41 BANK0      6     5      1
                          _Lcd_Clear
                   _Lcd_Write_String
                             ___wmul
                        _escreve_LCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             24    18      6    3398
                                             25 BANK0     16    10      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     540
                                             19 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _escreve_LCD                                          5     2      3   14035
                                             21 BANK0      5     2      3
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_String                                     5     3      2    4542
                                             16 BANK0      5     3      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (5) _Lcd_Write_Char                                       4     4      0     254
                                             12 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       7     6      1    1700
                                             14 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4   14038
                                             11 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              2     2      0     155
                                             12 BANK0      2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Port                                             1     1      0     124
                                             11 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _liberar_tecla                                       12    10      2    4485
                                             19 BANK0     12    10      2
                            ___lwdiv
                            _teclado
 ---------------------------------------------------------------------------------
 (2) _teclado                                              1     1      0     801
                                             13 BANK0      1     1      0
                          _bip_tecla
                        _start_timer
                         _stop_timer
 ---------------------------------------------------------------------------------
 (3) _stop_timer                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _start_timer                                          2     0      2     801
                                             11 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _bip_tecla                                            2     2      0       0
                                             11 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4    1641
                                             11 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (4) _eeprom_write                                         2     1      1    1987
                                             11 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _LoadSenhaUser                                        1     1      0      31
                                             12 BANK0      1     1      0
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          1     1      0      31
                                             11 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _INTERRUPT_InterruptManager                          5     5      0    1744
                                              6 BANK0      5     5      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                        _TMR1_Reload
                        _TMR5_Reload
                           _load_bar
              _pontencia_instantanea
                          i1___lwdiv
                         i1_get_duty
                       i1_stop_timer
 ---------------------------------------------------------------------------------
 (11) i1_stop_timer                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) i1_get_duty                                          0     0      0     358
                          i1___ltdiv
                           i1___tmul
 ---------------------------------------------------------------------------------
 (12) i1___tmul                                            9     3      6     144
                                              0 COMMON     9     3      6
 ---------------------------------------------------------------------------------
 (12) i1___ltdiv                                          11     5      6     214
                                              9 COMMON     5     5      0
                                              0 BANK0      6     0      6
                           i1___tmul (ARG)
 ---------------------------------------------------------------------------------
 (11) _pontencia_instantanea                               5     3      2     454
                                              0 BANK0      5     3      2
                          i1___lwdiv
                           i1___wmul
 ---------------------------------------------------------------------------------
 (12) i1___wmul                                            6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (11) i1___lwdiv                                           8     4      4     266
                                              6 COMMON     8     4      4
                           i1___wmul (ARG)
 ---------------------------------------------------------------------------------
 (11) _load_bar                                            3     3      0     360
                                              2 COMMON     3     3      0
                              i1_clr
                             i1_data
 ---------------------------------------------------------------------------------
 (12) i1_data                                              2     0      2     360
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (12) i1_clr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR5_Reload                                         0     0      0     108
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR5_WriteTimer                                     2     0      2     108
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_Reload                                         0     0      0     152
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (12) _TMR1_WriteTimer                                     2     0      2     152
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Autenticar
     _EditSenhaUser
       _LoadSenhaUser
         _eeprom_read
       _eeprom_write
       _liberar_tecla
         ___lwdiv
         _teclado
           _bip_tecla
           _start_timer
           _stop_timer
       _printTelaEditarSenha
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _LoadSenhaGerador
       _eeprom_read
     _LoadSenhaUser
       _eeprom_read
     _liberar_tecla
       ___lwdiv
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _printTelaSenha
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _verifSenhas
       _strcmp
   _Inicia_LCD
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Init
       _Lcd_Cmd
         _Lcd_Port
       _Lcd_Port
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_White_Center_String
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     ___awdiv
     _strlen
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CLC1_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _Inicia_LCD
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Init
         _Lcd_Cmd
           _Lcd_Port
         _Lcd_Port
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM2_Initialize
       _PWM2_LoadDutyValue
     _SMT1_Initialize
     _SMT2_Initialize
     _TMR1_Initialize
     _TMR5_Initialize
     _TMR6_Initialize
   ___wmul
   _ciclar
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lwdiv
     _delay
       ___lwdiv (ARG)
     _escreve_freq
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
     _op_desce
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
       _saida
       _start_timer
       _stop_timer
       _ver_entrada
         _ISR_entrada
     _op_fixar
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _saida
       _salva_n_pecas
         _salva_EEPROM32
           _addr_receitas (ARG)
           _eeprom_write (ARG)
       _start_timer
       _stop_timer
       _ver_entrada
         _ISR_entrada
     _op_solda
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)
       ___llmod
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _escreve_freq
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
       _salva_EEPROM32
         _addr_receitas (ARG)
         _eeprom_write (ARG)
       _start_timer
       _status_gerador
         _saida
       _stop_timer
       _ver_entrada
         _ISR_entrada
       _ver_freq
         _get_freq (ARG)
           _SMT1_GetCapturedPeriod
           ___awmod
             ___wmul (ARG)
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
     _set_freq
       _PWM2_LoadDutyValue
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
     _status_gerador
       _saida
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _trata_dados
       _Inicia_LCD
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Init
           _Lcd_Cmd
             _Lcd_Port
           _Lcd_Port
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)
       ___wmul
       _carrega_EEPROM32
         _eeprom_read
       _delay
         ___lwdiv (ARG)
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
       _rst_inversor
         _saida
       _salva_n_pecas
         _salva_EEPROM32
           _addr_receitas (ARG)
           _eeprom_write (ARG)
       _set_freq
         _PWM2_LoadDutyValue
         _get_freq
           _SMT1_GetCapturedPeriod
           ___awmod
             ___wmul (ARG)
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
       _status_gerador
         _saida
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_ultima_solda
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
       _trava_erro
         ___wmul
         _entrada
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _teclado
           _bip_tecla
           _start_timer
           _stop_timer
         _tela_inicial
           _Lcd_Clear
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_Char
             _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul
           _escreve_LCD
             _Lcd_Set_Cursor
               _Lcd_Cmd
                 _Lcd_Port
             _Lcd_Write_String
               _Lcd_Write_Char
                 _Lcd_Port
             ___wmul (ARG)
           _ltoa
             _ultoa
               ___lldiv
                 _SMT1_GetCapturedPeriod (ARG)
               ___llmod
       _ver_freq
         _get_freq (ARG)
           _SMT1_GetCapturedPeriod
           ___awmod
             ___wmul (ARG)
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
     _trava_erro
       ___wmul
       _entrada
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_inicial
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_Char
           _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
   _ciclarPneumatico
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lwdiv
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
     _saida
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _trava_erro
       ___wmul
       _entrada
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_inicial
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_Char
           _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
   _config_IO_start
   _config_maq
     _config_entrada
       _config_flag_entrada
     _config_saidas
       _clear_saida
         _config_flag_saida
       _config_flag_saida
   _config_maq_especial
     _config_entrada
       _config_flag_entrada
     _config_saidas
       _clear_saida
         _config_flag_saida
       _config_flag_saida
   _delay
     ___lwdiv (ARG)
   _emergencia
     ___wmul
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _rotina_tela
       _delay
         ___lwdiv (ARG)
       _eeprom_write
       _liberar_tecla
         ___lwdiv
         _teclado
           _bip_tecla
           _start_timer
           _stop_timer
       _salva_EEPROM
         _addr_receitas (ARG)
         _eeprom_write (ARG)
       _salva_EEPROM32
         _addr_receitas (ARG)
         _eeprom_write (ARG)
       _set_freq
         _PWM2_LoadDutyValue
         _get_freq
           _SMT1_GetCapturedPeriod
           ___awmod
             ___wmul (ARG)
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _telas
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         ___wmul
         _addr_receitas
         _carrega_EEPROM
           _eeprom_read
         _carrega_EEPROM32
           _eeprom_read
         _config_maq
           _config_entrada
             _config_flag_entrada
           _config_saidas
             _clear_saida
               _config_flag_saida
             _config_flag_saida
         _config_saidas
           _clear_saida
             _config_flag_saida
           _config_flag_saida
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _escreve_tempos
           ___wmul
           _ltoa
             _ultoa
               ___lldiv
                 _SMT1_GetCapturedPeriod (ARG)
               ___llmod
           _strcat
             ___wmul (ARG)
           _strcpy
             ___wmul (ARG)
         _salva_EEPROM
           _addr_receitas (ARG)
           _eeprom_write (ARG)
         _salva_EEPROM32
           _addr_receitas (ARG)
           _eeprom_write (ARG)
         _strcpy
           ___wmul (ARG)
         _totalCiclos
           _Lcd_Clear
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
           _escreve_LCD
             _Lcd_Set_Cursor
               _Lcd_Cmd
                 _Lcd_Port
             _Lcd_Write_String
               _Lcd_Write_Char
                 _Lcd_Port
             ___wmul (ARG)
           _ltoa
             _ultoa
               ___lldiv
                 _SMT1_GetCapturedPeriod (ARG)
               ___llmod
         _verifPagina
       _verifPagina
     _status_gerador
       _saida
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _tela_inicial
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
     _ver_entrada
       _ISR_entrada
   _func_enter
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _liberar_tecla
       ___lwdiv
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _set_freq
       _PWM2_LoadDutyValue
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _utoa
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _func_rst
     _liberar_tecla
       ___lwdiv
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _rst_inversor
       _saida
     _salva_EEPROM32
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _set_freq
       _PWM2_LoadDutyValue
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
   _get_duty
     ___ltdiv
       ___tmul (ARG)
     ___tmul
   _get_freq
     _SMT1_GetCapturedPeriod
     ___awmod
       ___wmul (ARG)
     ___lldiv
       _SMT1_GetCapturedPeriod (ARG)
   _ini_GERADOR
     _XC
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___lwdiv
       ___lwtoft
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _carrega_EEPROM (ARG)
         _eeprom_read
       _eval_poly (ARG)
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___wmul
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       _frexp (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___lwtoft
       ___ftpack
       ___lwdiv (ARG)
       ___wmul (ARG)
     ___wmul
     _atan
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftneg
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         _get_temp (ARG)
           ___awtoft
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _frexp (ARG)
       _eval_poly
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___wmul
       _fabs
         ___ftge
         ___ftneg
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           _get_temp (ARG)
             ___awtoft
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp (ARG)
     _cos
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftge
       _sin
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _carrega_EEPROM (ARG)
             _eeprom_read
           _eval_poly (ARG)
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftneg
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           _get_temp (ARG)
             ___awtoft
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp (ARG)
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           _floor (ARG)
             ___altoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp
         _eval_poly
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _frexp
     _pow
       ___ftge
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftneg
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         _get_temp (ARG)
           ___awtoft
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _frexp (ARG)
       ___fttol
         ___altoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _carrega_EEPROM (ARG)
             _eeprom_read
           _eval_poly (ARG)
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
       ___lltoft
         ___ftpack
       _exp
         ___awtoft
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _carrega_EEPROM (ARG)
             _eeprom_read
           _eval_poly (ARG)
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftneg
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           _get_temp (ARG)
             ___awtoft
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp (ARG)
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           _floor (ARG)
             ___altoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         _eval_poly
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _frexp
         _ldexp
           ___ftge
           _eval_poly (ARG)
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
       _log
         ___awtoft
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
         _frexp
     _round
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftneg (ARG)
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         _get_temp (ARG)
           ___awtoft
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         _frexp (ARG)
     _sqrt
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
       ___ftge (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftsub (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         _floor (ARG)
           ___altoft
             ___ftpack
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _frexp
       _pow (ARG)
         ___ftge
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftneg
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           _get_temp (ARG)
             ___awtoft
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
           _trunc (ARG)
             ___altoft
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___fttol (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         ___lltoft
           ___ftpack
         _exp
           ___awtoft
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftneg
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             _get_temp (ARG)
               ___awtoft
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
             _trunc (ARG)
               ___altoft
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___fttol (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   ___wmul (ARG)
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                   _eval_poly (ARG)
                     ___ftadd
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftadd (ARG)
                         ___altoft (ARG)
                           ___ftpack
                         ___awtoft (ARG)
                           ___ftpack
                           _carrega_EEPROM (ARG)
                             _eeprom_read
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                         ___lwdiv (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                     ___wmul
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             _floor (ARG)
               ___altoft
                 ___ftpack
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftge
               ___fttol
                 ___altoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   ___wmul (ARG)
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                   _eval_poly (ARG)
                     ___ftadd
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftmul
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftadd (ARG)
                         ___altoft (ARG)
                           ___ftpack
                         ___awtoft (ARG)
                           ___ftpack
                           _carrega_EEPROM (ARG)
                             _eeprom_read
                         ___ftpack (ARG)
                         ___ftpack (ARG)
                         ___wmul (ARG)
                         _frexp (ARG)
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___lwtoft (ARG)
                         ___ftpack
                         ___lwdiv (ARG)
                         ___wmul (ARG)
                       _frexp (ARG)
                     ___wmul
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
               _frexp
           ___fttol
             ___altoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
               _carrega_EEPROM (ARG)
                 _eeprom_read
               _eval_poly (ARG)
                 ___ftadd
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___wmul
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___fttol
               ___altoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftadd (ARG)
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___lwtoft (ARG)
                     ___ftpack
                     ___lwdiv (ARG)
                     ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 ___wmul (ARG)
                 _carrega_EEPROM (ARG)
                   _eeprom_read
                 _eval_poly (ARG)
                   ___ftadd
                     ___altoft (ARG)
                       ___ftpack
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                     _frexp (ARG)
                   ___ftmul
                     ___awtoft (ARG)
                       ___ftpack
                       _carrega_EEPROM (ARG)
                         _eeprom_read
                     ___ftadd (ARG)
                       ___altoft (ARG)
                         ___ftpack
                       ___awtoft (ARG)
                         ___ftpack
                         _carrega_EEPROM (ARG)
                           _eeprom_read
                       ___ftpack (ARG)
                       ___ftpack (ARG)
                       ___wmul (ARG)
                       _frexp (ARG)
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___lwtoft (ARG)
                       ___ftpack
                       ___lwdiv (ARG)
                       ___wmul (ARG)
                     _frexp (ARG)
                   ___wmul
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               ___wmul (ARG)
             _frexp
           _ldexp
             ___ftge
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
             _frexp
         _log
           ___awtoft
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
           _frexp
   _ini_ee_tempos
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_White_Center_String
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       ___awdiv
       _strlen
     ___awmod
       ___wmul (ARG)
     ___awtoft
       ___ftpack
       _carrega_EEPROM (ARG)
         _eeprom_read
     ___ftadd
       ___altoft (ARG)
         ___ftpack
       ___awtoft (ARG)
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
       _carrega_EEPROM (ARG)
         _eeprom_read
       _eval_poly (ARG)
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___wmul
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
       ___ftpack (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       _frexp (ARG)
     ___ftneg
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       _get_temp (ARG)
         ___awtoft
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
           _carrega_EEPROM (ARG)
             _eeprom_read
           _eval_poly (ARG)
             ___ftadd
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___wmul
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftadd (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___lwtoft (ARG)
                 ___ftpack
                 ___lwdiv (ARG)
                 ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             ___wmul (ARG)
             _carrega_EEPROM (ARG)
               _eeprom_read
             _eval_poly (ARG)
               ___ftadd
                 ___altoft (ARG)
                   ___ftpack
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                   _carrega_EEPROM (ARG)
                     _eeprom_read
                 ___ftadd (ARG)
                   ___altoft (ARG)
                     ___ftpack
                   ___awtoft (ARG)
                     ___ftpack
                     _carrega_EEPROM (ARG)
                       _eeprom_read
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___lwtoft (ARG)
                   ___ftpack
                   ___lwdiv (ARG)
                   ___wmul (ARG)
                 _frexp (ARG)
               ___wmul
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           ___wmul (ARG)
         _frexp (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftadd (ARG)
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         _frexp (ARG)
       ___lwtoft (ARG)
         ___ftpack
         ___lwdiv (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
     ___wmul
     _bip_tecla
     _carrega_EEPROM
       _eeprom_read
     _carrega_EEPROM32
       _eeprom_read
     _eeprom_read
     _eeprom_write
     _get_temp
       ___awtoft
         ___ftpack
         _carrega_EEPROM (ARG)
           _eeprom_read
       ___ftadd
         ___altoft (ARG)
           ___ftpack
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
           _carrega_EEPROM (ARG)
             _eeprom_read
         ___ftadd (ARG)
           ___altoft (ARG)
             ___ftpack
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
             _carrega_EEPROM (ARG)
               _eeprom_read
           ___ftadd (ARG)
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___lwtoft (ARG)
             ___ftpack
             ___lwdiv (ARG)
             ___wmul (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         ___lwtoft (ARG)
           ___ftpack
           ___lwdiv (ARG)
           ___wmul (ARG)
         ___wmul (ARG)
         _carrega_EEPROM (ARG)
           _eeprom_read
         _eval_poly (ARG)
           ___ftadd
             ___altoft (ARG)
               ___ftpack
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
               _carrega_EEPROM (ARG)
                 _eeprom_read
             ___ftadd (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___awtoft (ARG)
                 ___ftpack
                 _carrega_EEPROM (ARG)
                   _eeprom_read
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___lwtoft (ARG)
               ___ftpack
               ___lwdiv (ARG)
               ___wmul (ARG)
             _frexp (ARG)
           ___wmul
     _salva_EEPROM
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _salva_EEPROM32
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _selectModo
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       ___wmul
       _eeprom_write
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _liberar_tecla
         ___lwdiv
         _teclado
           _bip_tecla
           _start_timer
           _stop_timer
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
   _liberar
     _ver_entrada
       _ISR_entrada
   _liberar_tecla
     ___lwdiv
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
   _op_desce
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___wmul
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
     _saida
     _start_timer
     _stop_timer
     _ver_entrada
       _ISR_entrada
   _op_fixar
     ___wmul
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _saida
     _salva_n_pecas
       _salva_EEPROM32
         _addr_receitas (ARG)
         _eeprom_write (ARG)
     _start_timer
     _stop_timer
     _ver_entrada
       _ISR_entrada
   _op_solda
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lldiv
       _SMT1_GetCapturedPeriod (ARG)
     ___llmod
     ___wmul
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _escreve_freq
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
     _get_freq
       _SMT1_GetCapturedPeriod
       ___awmod
         ___wmul (ARG)
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
     _salva_EEPROM32
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _start_timer
     _status_gerador
       _saida
     _stop_timer
     _ver_entrada
       _ISR_entrada
     _ver_freq
       _get_freq (ARG)
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
   _rotina_tela
     _delay
       ___lwdiv (ARG)
     _eeprom_write
     _liberar_tecla
       ___lwdiv
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _salva_EEPROM
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _salva_EEPROM32
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _set_freq
       _PWM2_LoadDutyValue
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _telas
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       ___wmul
       _addr_receitas
       _carrega_EEPROM
         _eeprom_read
       _carrega_EEPROM32
         _eeprom_read
       _config_maq
         _config_entrada
           _config_flag_entrada
         _config_saidas
           _clear_saida
             _config_flag_saida
           _config_flag_saida
       _config_saidas
         _clear_saida
           _config_flag_saida
         _config_flag_saida
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _escreve_tempos
         ___wmul
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
         _strcat
           ___wmul (ARG)
         _strcpy
           ___wmul (ARG)
       _salva_EEPROM
         _addr_receitas (ARG)
         _eeprom_write (ARG)
       _salva_EEPROM32
         _addr_receitas (ARG)
         _eeprom_write (ARG)
       _strcpy
         ___wmul (ARG)
       _totalCiclos
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
       _verifPagina
     _verifPagina
   _rst_inversor
     _saida
   _set_freq
     _PWM2_LoadDutyValue
     _get_freq
       _SMT1_GetCapturedPeriod
       ___awmod
         ___wmul (ARG)
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)
   _status_gerador
     _saida
   _teclado
     _bip_tecla
     _start_timer
     _stop_timer
   _tela_inicial
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_Char
       _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___wmul
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
   _tela_ultima_solda
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lldiv
       _SMT1_GetCapturedPeriod (ARG)
     ___llmod
     ___wmul
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
   _teste_US
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___wmul
     _emergencia
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _rotina_tela
         _delay
           ___lwdiv (ARG)
         _eeprom_write
         _liberar_tecla
           ___lwdiv
           _teclado
             _bip_tecla
             _start_timer
             _stop_timer
         _salva_EEPROM
           _addr_receitas (ARG)
           _eeprom_write (ARG)
         _salva_EEPROM32
           _addr_receitas (ARG)
           _eeprom_write (ARG)
         _set_freq
           _PWM2_LoadDutyValue
           _get_freq
             _SMT1_GetCapturedPeriod
             ___awmod
               ___wmul (ARG)
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
         _teclado
           _bip_tecla
           _start_timer
           _stop_timer
         _telas
           _Lcd_Clear
             _Lcd_Cmd
               _Lcd_Port
           ___wmul
           _addr_receitas
           _carrega_EEPROM
             _eeprom_read
           _carrega_EEPROM32
             _eeprom_read
           _config_maq
             _config_entrada
               _config_flag_entrada
             _config_saidas
               _clear_saida
                 _config_flag_saida
               _config_flag_saida
           _config_saidas
             _clear_saida
               _config_flag_saida
             _config_flag_saida
           _escreve_LCD
             _Lcd_Set_Cursor
               _Lcd_Cmd
                 _Lcd_Port
             _Lcd_Write_String
               _Lcd_Write_Char
                 _Lcd_Port
             ___wmul (ARG)
           _escreve_tempos
             ___wmul
             _ltoa
               _ultoa
                 ___lldiv
                   _SMT1_GetCapturedPeriod (ARG)
                 ___llmod
             _strcat
               ___wmul (ARG)
             _strcpy
               ___wmul (ARG)
           _salva_EEPROM
             _addr_receitas (ARG)
             _eeprom_write (ARG)
           _salva_EEPROM32
             _addr_receitas (ARG)
             _eeprom_write (ARG)
           _strcpy
             ___wmul (ARG)
           _totalCiclos
             _Lcd_Clear
               _Lcd_Cmd
                 _Lcd_Port
             _Lcd_Write_String
               _Lcd_Write_Char
                 _Lcd_Port
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
             _escreve_LCD
               _Lcd_Set_Cursor
                 _Lcd_Cmd
                   _Lcd_Port
               _Lcd_Write_String
                 _Lcd_Write_Char
                   _Lcd_Port
               ___wmul (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                   _SMT1_GetCapturedPeriod (ARG)
                 ___llmod
           _verifPagina
         _verifPagina
       _status_gerador
         _saida
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_inicial
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_Char
           _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
       _ver_entrada
         _ISR_entrada
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _get_freq
       _SMT1_GetCapturedPeriod
       ___awmod
         ___wmul (ARG)
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)
     _liberar
       _ver_entrada
         _ISR_entrada
     _liberar_tecla
       ___lwdiv
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
     _rst_inversor
       _saida
     _salva_EEPROM
       _addr_receitas (ARG)
       _eeprom_write (ARG)
     _set_freq
       _PWM2_LoadDutyValue
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
     _strcat
       ___wmul (ARG)
     _strcpy
       ___wmul (ARG)
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _trava_erro
       ___wmul
       _entrada
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_inicial
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_Char
           _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
     _ver_entrada
       _ISR_entrada
     _ver_freq
       _get_freq (ARG)
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
   _teste_leds
     _clr
     _data
   _teste_pneumatico
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     ___wmul
     _emergencia
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _rotina_tela
         _delay
           ___lwdiv (ARG)
         _eeprom_write
         _liberar_tecla
           ___lwdiv
           _teclado
             _bip_tecla
             _start_timer
             _stop_timer
         _salva_EEPROM
           _addr_receitas (ARG)
           _eeprom_write (ARG)
         _salva_EEPROM32
           _addr_receitas (ARG)
           _eeprom_write (ARG)
         _set_freq
           _PWM2_LoadDutyValue
           _get_freq
             _SMT1_GetCapturedPeriod
             ___awmod
               ___wmul (ARG)
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
         _teclado
           _bip_tecla
           _start_timer
           _stop_timer
         _telas
           _Lcd_Clear
             _Lcd_Cmd
               _Lcd_Port
           ___wmul
           _addr_receitas
           _carrega_EEPROM
             _eeprom_read
           _carrega_EEPROM32
             _eeprom_read
           _config_maq
             _config_entrada
               _config_flag_entrada
             _config_saidas
               _clear_saida
                 _config_flag_saida
               _config_flag_saida
           _config_saidas
             _clear_saida
               _config_flag_saida
             _config_flag_saida
           _escreve_LCD
             _Lcd_Set_Cursor
               _Lcd_Cmd
                 _Lcd_Port
             _Lcd_Write_String
               _Lcd_Write_Char
                 _Lcd_Port
             ___wmul (ARG)
           _escreve_tempos
             ___wmul
             _ltoa
               _ultoa
                 ___lldiv
                   _SMT1_GetCapturedPeriod (ARG)
                 ___llmod
             _strcat
               ___wmul (ARG)
             _strcpy
               ___wmul (ARG)
           _salva_EEPROM
             _addr_receitas (ARG)
             _eeprom_write (ARG)
           _salva_EEPROM32
             _addr_receitas (ARG)
             _eeprom_write (ARG)
           _strcpy
             ___wmul (ARG)
           _totalCiclos
             _Lcd_Clear
               _Lcd_Cmd
                 _Lcd_Port
             _Lcd_Write_String
               _Lcd_Write_Char
                 _Lcd_Port
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
             _escreve_LCD
               _Lcd_Set_Cursor
                 _Lcd_Cmd
                   _Lcd_Port
               _Lcd_Write_String
                 _Lcd_Write_Char
                   _Lcd_Port
               ___wmul (ARG)
             _ltoa
               _ultoa
                 ___lldiv
                   _SMT1_GetCapturedPeriod (ARG)
                 ___llmod
           _verifPagina
         _verifPagina
       _status_gerador
         _saida
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_inicial
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_Char
           _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
       _ver_entrada
         _ISR_entrada
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _liberar
       _ver_entrada
         _ISR_entrada
     _liberar_tecla
       ___lwdiv
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
     _saida
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _ver_entrada
       _ISR_entrada
   _totalCiclos
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lldiv
       _SMT1_GetCapturedPeriod (ARG)
     ___llmod
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
   _trata_dados
     _Inicia_LCD
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Init
         _Lcd_Cmd
           _Lcd_Port
         _Lcd_Port
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___lldiv
       _SMT1_GetCapturedPeriod (ARG)
     ___wmul
     _carrega_EEPROM32
       _eeprom_read
     _delay
       ___lwdiv (ARG)
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _ltoa
       _ultoa
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
         ___llmod
     _rst_inversor
       _saida
     _salva_n_pecas
       _salva_EEPROM32
         _addr_receitas (ARG)
         _eeprom_write (ARG)
     _set_freq
       _PWM2_LoadDutyValue
       _get_freq
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
     _status_gerador
       _saida
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _tela_ultima_solda
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)
       ___llmod
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
     _trava_erro
       ___wmul
       _entrada
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _teclado
         _bip_tecla
         _start_timer
         _stop_timer
       _tela_inicial
         _Lcd_Clear
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_Char
           _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul
         _escreve_LCD
           _Lcd_Set_Cursor
             _Lcd_Cmd
               _Lcd_Port
           _Lcd_Write_String
             _Lcd_Write_Char
               _Lcd_Port
           ___wmul (ARG)
         _ltoa
           _ultoa
             ___lldiv
               _SMT1_GetCapturedPeriod (ARG)
             ___llmod
     _ver_freq
       _get_freq (ARG)
         _SMT1_GetCapturedPeriod
         ___awmod
           ___wmul (ARG)
         ___lldiv
           _SMT1_GetCapturedPeriod (ARG)
   _trava_erro
     ___wmul
     _entrada
     _escreve_LCD
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul (ARG)
     _teclado
       _bip_tecla
       _start_timer
       _stop_timer
     _tela_inicial
       _Lcd_Clear
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_Char
         _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___wmul
       _escreve_LCD
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___wmul (ARG)
       _ltoa
         _ultoa
           ___lldiv
             _SMT1_GetCapturedPeriod (ARG)
           ___llmod
   _ver_entrada
     _ISR_entrada
   _ver_freq
     _get_freq (ARG)
       _SMT1_GetCapturedPeriod
       ___awmod
         ___wmul (ARG)
       ___lldiv
         _SMT1_GetCapturedPeriod (ARG)

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR1_Reload *
     _TMR1_WriteTimer
   _TMR5_Reload *
     _TMR5_WriteTimer
   _load_bar *
     i1_clr
     i1_data
   _pontencia_instantanea *
     i1___lwdiv
       i1___wmul (ARG)
     i1___wmul
   i1___lwdiv *
     i1___wmul (ARG)
   i1_get_duty *
     i1___ltdiv
       i1___tmul (ARG)
     i1___tmul
   i1_stop_timer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FF0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      45       5       86.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4D      4D       7       96.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     30      30       9       60.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      48      11       90.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      50      13      100.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      46      15       87.5%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      48      17       90.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0      20      19       40.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK8            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK8               50     33      33      21       63.8%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK9            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK9               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK10           50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK10              50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK11           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK11              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
ABS                  0      0     249      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           50      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              50      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITBANK26           50      0       0      57        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BANK26              50      0       0      58        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
DATA                 0      0     249      59        0.0%
BITBANK27           50      0       0      60        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BANK27              50      0       0      61        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITBANK28           50      0       0      62        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BANK28              50      0       0      63        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITBANK29           50      0       0      64        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%
BANK29              50      0       0      65        0.0%
BITBANK30           50      0       0      66        0.0%
BANK30              50      0       0      67        0.0%
BITBANK31           50      0       0      68        0.0%
BANK31              50      0       0      69        0.0%
BITBANK32           50      0       0      70        0.0%
BANK32              50      0       0      71        0.0%
BITBANK33           50      0       0      72        0.0%
BANK33              50      0       0      73        0.0%
BITBANK34           50      0       0      74        0.0%
BANK34              50      0       0      75        0.0%
BITBANK35           50      0       0      76        0.0%
BANK35              50      0       0      77        0.0%
BITBANK36           50      0       0      78        0.0%
BANK36              50      0       0      79        0.0%
BITBANK37           50      0       0      80        0.0%
BANK37              50      0       0      81        0.0%
BITBANK38           50      0       0      82        0.0%
BANK38              50      0       0      83        0.0%
BITBANK39           50      0       0      84        0.0%
BANK39              50      0       0      85        0.0%
BITBANK40           50      0       0      86        0.0%
BANK40              50      0       0      87        0.0%
BITBANK41           50      0       0      88        0.0%
BANK41              50      0       0      89        0.0%
BITBANK42           50      0       0      90        0.0%
BANK42              50      0       0      91        0.0%
BITBANK43           50      0       0      92        0.0%
BANK43              50      0       0      93        0.0%
BITBANK44           50      0       0      94        0.0%
BANK44              50      0       0      95        0.0%
BITBANK45           50      0       0      96        0.0%
BANK45              50      0       0      97        0.0%
BITBANK46           50      0       0      98        0.0%
BANK46              50      0       0      99        0.0%
BITBANK47           50      0       0     100        0.0%
BANK47              50      0       0     101        0.0%
BITBANK48           50      0       0     102        0.0%
BANK48              28      0       0     103        0.0%
BITBANK49           50      0       0     104        0.0%
BANK49               0      0       0     105        0.0%
BITBANK50           50      0       0     106        0.0%
BANK50               0      0       0     107        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat May 10 16:05:56 2025

                     __end_of_energia_low_str 5A7E                     ??_Lcd_White_Center_String 0037  
               ?_EUSART_SetRxInterruptHandler 002B                                  ___altoft@exp 0039  
                                  __CFG_CP$ON 0000                __size_of_pontencia_instantanea 0032  
                                 _trata_dados 199E                     __end_of_receita_salva_str 5E7A  
                                           pc 0002                 __end_of_pontencia_instantanea 556F  
                          liberar_tecla@tempo 003C                       __end_of_SMT2_Initialize 6165  
                               ___altoft@sign 003A                                   __CFG_CPD$ON 0000  
                                          _XC 424A                                            _WR 40F1  
                                ___awdiv@sign 0031                                            _ee 01A8  
                                          _in 02B8                      __end_of_tipo_regress_str 5B8E  
                           ?_ciclarPneumatico 0070                           ___wmul@multiplicand 002D  
                             _modo_normal_str 5F24                              i1___wmul@product 0074  
                           ??_TMR5_WriteTimer 0072                        __end_of_tipo_tempo_str 5BB0  
                                ___ftadd@exp1 0047                                  ___ftadd@exp2 0046  
                                 __CFG_LVP$ON 0000                                   _rotina_tela 346B  
                                         ?_XC 00BA                                   _totalCiclos 3E3B  
                                ___ftadd@sign 0045                                           XC@f 00BA  
                                         l409 12C1                                           l427 1397  
                                         l380 117B                                           l429 13B5  
                                ini_GERADOR@c 013C                                           l390 117A  
                                ini_GERADOR@f 0138                            ??_ciclarPneumatico 00A7  
                                ini_GERADOR@i 0444                                  ini_GERADOR@p 013A  
                                ini_GERADOR@v 013E                  __size_of_config_maq_especial 00A1  
                                         _PWM 01CA                                           _t1s 02C8  
                             _timer1ReloadVal 023A                                           _bar 0060  
                                         _cfg 01B0                                           _clr 61EB  
                                         _cos 2001                                           _led 01E5  
                                         _btt 01E4                                           _exp 36C4  
                                         _log 1003                                           _sin 2E53  
                                         _num 0220                                           _pow 3232  
                                         _out 02B0                                           _str 025C  
                                 _start_timer 6165                       __size_of_PMD_Initialize 0008  
                                ___awmod@sign 0037                                   config_maq@i 0033  
                                __CFG_BORV$LO 0000                                   config_maq@x 0032  
                                         wreg 0009                         __size_of_rst_inversor 0021  
                           teste_pneumatico@b 00BC                                    i1_get_duty 5309  
                                 _statusSolda 01DB                                          ??_XC 0058  
                      __size_of_ini_ee_tempos 05B4                                  __CFG_ZCD$OFF 0000  
                                ___ftdiv@cntr 00B4                                   main@gerador 014E  
                                 get_temp@adc 00C6                                  ___ftdiv@sign 00B9  
                                        l1206 1473                                          l2022 0FFF  
                                        l2104 40C1                                          l1170 4632  
                                        l2018 0FD5                                          l1331 3D47  
                                        l1315 3D08                                          l1420 4119  
                                        l1180 45C0                                          l1413 40FE  
                                        l1253 3457                                          l2230 50A9  
                                        l1430 4139                                          l1414 410C  
                                        l1334 3D59                                          l1318 3D41  
                                        l1270 260B                                          l1342 19C6  
                                        l3014 4E35                                          l2070 3483  
                                        l1423 411E                                          l1415 4109  
                                        l1407 40EE                                          l1255 3454  
                                        l1247 343F                                          l1319 3D11  
                                        l3015 4E3D                                          l3007 4E22  
                                        l2071 34D0                                          l2232 50AE  
                                        l1424 412C                                          l1408 40FC  
                                        l1360 1B14                                          l1425 4129  
                                        l1409 40F9                                          l1249 3450  
                                        l3113 4DD8                                          l2226 509F  
                                        l1418 410E                                          l1450 4EE7  
                                        l1370 1C4E                                          l1362 1B5B  
                                        l1419 411C                                          l1267 25F9  
                                        l2091 405B                                          l2075 34AB  
                                        l1603 565C                                          l2228 50A4  
                                        l1428 412E                                          l1436 414A  
                                        l1460 4F1F                                          l1444 4ED5  
                                        l1292 267D                                          l1268 2603  
                                        l1524 2CA4                                          l1700 243B  
                                        l1285 266B                                          l1277 2664  
                                        l1533 4F2A                                          l1701 243D  
                                        l2077 34CF                                          l1462 4F1D  
                                        l1446 4F15                                          l1286 272E  
                                        l1382 46D0                                          l1542 4F48  
                                        l3038 30C6                                          l1526 2CB2  
                                        l2094 4087                                          l1383 4702  
                                        l1551 4F66                                          l1519 2C44  
                                        l1536 4F34                                          l2264 4056  
                                        l2257 518E                                          l1545 4F52  
                                        l2097 4077                                          l1377 61BB  
                                        l1650 4349                                          l1634 42DB  
                                        l1554 4F70                                          l1730 0307  
                                        l1714 2501                                          XC@nF 00BC  
                                        l1459 4F19                                          l1387 4741  
                                        l1539 4F3E                                          l1731 0311  
                                        l1715 2502                                          l1644 4324  
                                        l1548 4F5C                                          l1572 4BDE  
                                        l1740 039B                                          l1396 44D1  
                                        l1389 4749                                          l1557 4F7A  
                                        l1581 4BFC                                          l3261 2F60  
                                        l1733 031A                                          l1638 42FF  
                                        l1566 4BCA                                          l3238 3257  
                                        l1742 03E7                                          l1726 02FB  
                                        ?_clr 0070                                          l1663 574B  
                                        l1559 4F88                                          l1575 4BE8  
                                        l3271 18B3                                          l1751 051E  
                                        l1727 02FF                                          l1831 3199  
                                        l1584 4C06                                          l1744 0433  
                                        l1728 0300                                          l2721 529B  
                                        l1569 4BD4                                          l1753 057C  
                                        l1737 034F                                          l1729 0304  
                                        l1841 1D3E                                          l1578 4BF2  
                                        l1586 4C14                                          l3098 43BF  
                                        l1762 069F                                          l1746 047F  
                                        l1842 1DDE                                          l1755 05C9  
                                        l1739 0764                                          l2812 5107  
                                        l3196 444F                                          l1748 04CB  
                                        l1844 1FE0                                          l2725 52B6  
                                        l3269 1867                                          l1781 2130  
                                        l1765 0704                                          l1757 0617  
                                        l1829 322F                                          ?_cos 00E3  
                                        l1766 070A                                          l1846 1DED  
                                        l1759 064C                                          l2912 2902  
                                        l1848 1DF2                                          l1872 1FFD  
                                        l1881 4CD3                                          l2913 29BD  
                                        l1777 20C6                                          l1857 1E1F  
                                        l1891 4D0F                                          l1883 4CDF  
                                        l1859 1E60                                          l1980 3909  
                                        l1885 4CEB                                          l1893 4D26  
                                        l1887 4CF7                                          l1879 4CC7  
                                        l1889 4D03                                          l2699 6116  
                                        ?_exp 00D6                                          ?_log 00AA  
                                ?_escreve_LCD 0035                                          ?_sin 00D6  
                                        ?_pow 00E0                                          STR_1 68BE  
                                        STR_2 68B5                                          STR_3 6918  
                                        STR_4 6918                                          STR_5 6903  
                                        STR_6 691A                                          STR_7 68FB  
                                        STR_8 6915                                          STR_9 6907  
                               _LoadSenhaUser 5274                                          _LATA 0016  
                                        _LATB 0017                                          _LATC 0018  
                                        _LATD 0019                                          _LATE 001A  
                                        _T6PR 0299                                          _PMD0 0796  
                                        _PMD1 0797                                          _PMD2 0798  
                                        _PMD3 0799                                          _PMD4 079A  
                                        _PMD5 079B                                _cont_pecas_str 5E9C  
                                        _WPUA 1F39                                          _WPUB 1F44  
                                        _WPUC 1F4F                                ??_eeprom_write 002C  
                                        _WPUD 1F5A                                          _WPUE 1F65  
                                __CFG_WRT$OFF 0000                                 __CFG_FCMEN$ON 0000  
                              _salva_EEPROM32 4D27                         salva_EEPROM32@address 0032  
                                        _fabs 5359                                          _data 6786  
                           ?_Lcd_Write_String 0030                                          _atan 28AC  
                                        _flag 01AC                                          _main 10D2  
                                        _erro 0063                                  ___ftpack@arg 002B  
                                        _duty 01DF                                          _modo 01DC  
                                        cos@f 00E3                                  ___ftpack@exp 002E  
                                        _ltoa 54DE                                          _str1 0354  
                                        _str2 0340                                          fsr0h 0005  
                                        fsr1h 0007                                          indf0 0000  
                                        fsr0l 0004                                          indf1 0001  
                                        fsr1l 0006                                          btemp 007E  
                                        _sqrt 1833                                          _utoa 4D8B  
                                        exp@x 00D6                                          log@x 00AA  
                               __CFG_BOREN$ON 0000                                          sin@f 00D6  
                                        sin@y 00D9                                          pow@x 00E0  
                                        pow@y 00E3                                          start 00E3  
                             _timer5ReloadVal 0238                            ??_Lcd_Write_String 0032  
                      __size_of_liberar_tecla 0043                       __size_of_escreve_tempos 0250  
                             __end_of_Lcd_Cmd 50C7                                 __CFG_CSWEN$ON 0000  
                               __CFG_MCLRE$ON 0000                                  ___ftmul@cntr 0056  
                          teste_pneumatico@bt 00BD                          __end_ofi1_stop_timer 2804  
                                ___ftmul@sign 0057                        ??_printTelaEditarSenha 004A  
                                       S18610 60E8                                         S18602 5070  
                                       S18612 6145                                         S18604 61F5  
                                       S18614 6100                                         S18606 6135  
                                       S18608 61D3                                  emergencia@bt 00B7  
                                ___fttol@exp1 00C7                              _ini_GERADOR$4252 044F  
                            _ini_GERADOR$4260 043E                              _ini_GERADOR$4253 0429  
                            _ini_GERADOR$4254 042C                              _ini_GERADOR$4255 042F  
                            _ini_GERADOR$4256 0432                                         ??_clr 002B  
                            _ini_GERADOR$4257 0435                              _ini_GERADOR$4258 0438  
                            _ini_GERADOR$4259 043B                                         ??_cos 005A  
                                       ??_exp 00D9                                         ??_log 0058  
                                ___fttol@lval 00C3                                         ??_sin 0059  
                                       ??_pow 00E6                       __end_of_PWM2_Initialize 61AF  
                                _rst_inversor 520E                                 verifPagina@ok 002D  
                         _config_flag_entrada 4F21                __size_of_OSCILLATOR_Initialize 0009  
               __end_of_OSCILLATOR_Initialize 621B                                         l14002 4411  
                                       l14110 4C8F                                         l14112 4C9A  
                                       l14106 4C72                                         l14204 4909  
                                       l14108 4C84                                         l14116 4CAD  
                                       l15100 016B                                         l15020 22FD  
                                       l15012 22DF                                         l15004 22D1  
                                       l14230 493F                                         l14222 492E  
                                       l14118 4CBC                                         l14142 5387  
                                       l14128 5266                                         l14152 5101  
                                       l14216 4916                                         l14208 4910  
                                       l14080 41CC                                         l14240 2B53  
                                       l14144 5393                                         l14136 5120  
                                       l15200 04E0                                         l15112 02D8  
                                       l15032 2356                                         l15016 22E7  
                                       l15008 22DD                                         l14066 54FD  
                                       l14218 4922                                         l14226 4937  
                                       l14090 4221                                         l14082 41DD  
                                       l15114 02E3                                         l15106 0219  
                                       l15042 23AB                                         l15026 2309  
                                       l15018 22ED                                         l14340 42DF  
                                       l16100 3407                                         l14084 41EE  
                                       l14172 4DFF                                         l16012 4017  
                                       l14252 2B71                                         l14148 539B  
                                       l15052 23FF                                         l15036 235E  
                                       l15028 2318                                         l15310 3BCA  
                                       l14430 51A6                                         l16102 3429  
                                       l14414 462A                                         l14086 41FF  
                                       l14094 4238                                         l14182 4E27  
                                       l14174 4E09                                         l16022 403D  
                                       l14262 2B96                                         l14246 2B6C  
                                       l15118 02F0                                         l15134 0321  
                                       l15046 23B3                                         l15038 236D  
                                       l14360 4305                                         l14416 4698  
                                       l14088 4210                                         l14096 4242  
                                       l14184 4E2F                                         l14176 4E0E  
                                       l14168 4DF8                                         l14272 2BE6  
                                       l15224 05D6                                         l15216 0589  
                                       l15208 0532                                         l15144 035B  
                                       l15080 248E                                         l15064 2440  
                                       l15056 2407                                         l15048 23C1  
                                       l15072 2469                                         l14346 42EB  
                                       l15410 3AB1                                         l17002 394D  
                                       l14290 2C8B                                         l14258 2B8A  
                                       l14602 229D                                         l15250 06CB  
                                       l15242 0666                                         l15234 062B  
                                       l15226 05D7                                         l15218 058A  
                                       l15154 03A7                                         l15074 2488  
                                       l15066 244F                                         l15138 033A  
                                       l14364 4310                                         l15340 3C3D  
                                       l13820 4BD7                                         l13812 4BC4  
                                       l14284 2C46                                         l14268 2BD2  
                                       l14612 22B7                                         l14532 40AE  
                                       l14516 4092                                         l15164 03F3  
                                       l15084 24F6                                         l16060 44F0  
                                       l14382 4335                                         l15334 3C1E  
                                       l15318 3C02                                         l13902 57B2  
                                       l16134 3463                                         l16214 262D  
                                       l16206 2619                                         l16222 264E  
                                       l15502 4563                                         l17030 3674  
                                       l17022 3659                                         l14278 2C2B  
                                       l14606 22AA                                         l14526 40A2  
                                       l15174 043F                                         l15270 0756  
                                       l16038 447B                                         l15328 3C18  
                                       l17112 3B77                                         l16072 3356  
                                       l16400 3D3B                                         l16240 2675  
                                       l13832 4BF5                                         l13824 4BE1  
                                       l13816 4BCD                                         l14640 3056  
                                       l14704 5697                                         l14624 570D  
                                       l17032 367A                                         l17040 369A  
                                       l17024 365B                                         l14544 40CC  
                                       l15264 0718                                         l15184 048B  
                                       l15088 2504                                         l16048 4474  
                                       l18000 1E19                                         l14378 432A  
                                       l15354 3C4F                                         l15346 3C4B  
                                       l17122 3B8A                                         l16138 3468  
                                       l13842 4C09                                         l15418 3ACA  
                                       l14626 571D                                         l14802 43B6  
                                       l17034 368C                                         l17026 366D  
                                       l17018 364E                                         l14298 2CA6  
                                       l15098 0151                                         l14396 434F  
                                       l15356 3BD4                                         l17132 3B93  
                                       l17108 3B67                                         l16316 27A0  
                                       l16308 2781                                         l16260 26A6  
                                       l16148 2555                                         l15604 472D  
                                       l13836 4BFF                                         l13828 4BEB  
                                       l14732 39BC                                         l14636 304F  
                                       l14708 56AD                                         l14804 43C2  
                                       l15452 385F                                         l15380 523A  
                                       l17044 3642                                         l14572 2159  
                                       l14564 20E0                                         l14556 2087  
                                       l15196 04DA                                         l18020 1E8E  
                                       l14830 55CA                                         l14822 55AC  
                                       l13782 50AA                                         l13774 50A0  
                                       l13918 55EA                                         l15358 3C89  
                                       l17134 3B97                                         l17118 3B80  
                                       l13870 4B8D                                         l15526 4D1B  
                                       l16238 266E                                         l16182 25AA  
                                       l14910 460C                                         l15606 4734  
                                       l16510 1B43                                         l13950 4F37  
                                       l13942 4F24                                         l15390 3A5A  
                                       l14726 39A6                                         l14670 30A5  
                                       l14646 3065                                         l15438 54B8  
                                       l17046 36A8                                         l17038 368F  
                                       l14582 21D9                                         l14574 2180  
                                       l18030 1ED3                                         l18110 1161  
                                       l18102 112F                                         l14824 55B8  
                                       l13928 560B                                         l17128 3B8C  
                                       l17152 5453                                         l16088 33B6  
                                       l16096 33EA                                         l16408 3D4E  
                                       l16328 3C9B                                         l15720 5643  
                                       l15712 5636                                         l15704 5629  
                                       l16272 272C                                         l16248 2680  
                                       l14904 45E8                                         l16432 19C9  
                                       l14760 3A1B                                         l14744 39F7  
                                       l14664 3092                                         l15368 41C2  
                                       l14808 43D0                                         l15456 3867  
                                       l17320 0FE1                                         l17240 0A62  
                                       l14834 55D3                                         l13778 50A5  
                                       l13938 5175                                         l17082 3B1C  
                                       l15810 5334                                         l13882 4BB8  
                                       l16354 3CE3                                         l16338 3CA3  
                                       l16274 2730                                         l16194 25F1  
                                       l15730 2CBF                                         l16530 1B91  
                                       l16434 19CC                                         l13970 4F69  
                                       l13962 4F55                                         l13954 4F41  
                                       l13946 4F2D                                         l17162 300F  
                                       l14682 30D8                                         l14666 309C  
                                       l14658 307F                                         l15466 38D4  
                                       l17402 1479                                         l17322 0FE4  
                                       l14586 2206                                         l14578 21AC  
                                       l14498 4067                                         l15634 34AD  
                                       l18026 1EA4                                         l18106 1148  
                                       l14852 541A                                         l17076 3BA7  
                                       l15812 533C                                         l17148 5451  
                                       l13868 4B7F                                         l13892 5781  
                                       l16292 2769                                         l14908 4607  
                                       l16540 1BEE                                         l13980 4F7D  
                                       l15396 3A70                                         l14756 3A13  
                                       l14748 39FF                                         l14676 30B8  
                                       l14668 30A1                                         l15476 4500  
                                       l17412 1488                                         l17332 0FF3  
                                       l17260 0A92                                         l14588 222D  
                                       l18060 1FBC                                         l18140 11D7  
                                       l18124 11B9                                         l14846 5402  
                                       l17078 3B15                                         l13878 4BAD  
                                       l13894 578F                                         l15558 4EDF  
                                       l15566 4EF0                                         l16366 3D0B  
                                       l16286 275C                                         l14926 4FD1  
                                       l16542 1BF6                                         l16454 1A18  
                                       l16438 19E0                                         l13974 4F73  
                                       l13966 4F5F                                         l13958 4F4B  
                                       l17350 477E                                         l17190 48F7  
                                       l17158 3007                                         l14686 30EA  
                                       l14678 30C2                                         l15910 3816  
                                       l15486 452A                                         l17406 1483  
                                       l17262 0A97                                         l15638 34B5  
                                       l18038 1F27                                         l14848 540E  
                                       l14856 5423                                         l15816 5353  
                                       l13992 43E3                                         l15576 4F01  
                                       l16376 3D1E                                         l16368 3D0E  
                                       l16288 2762                                         l16536 1BE1  
                                       l16480 1AAD                                         l16472 1A6F  
                                       l16448 19F6                                         l16456 1A3E  
                                       l17600 09A7                                         l17344 4765  
                                       l17176 48C7                                         l14696 3105  
                                       l14776 436B                                         l16712 325F  
                                       l15840 4B32                                         l17280 0EAE  
                                       l15648 34D9                                         l18312 13E5  
                                       l18232 12EF                                         l18160 11FF  
                                       l18144 11DB                                         l14946 576F  
                                       l17098 3B56                                         l13898 57A7  
                                       l16298 2772                                         l14882 513B  
                                       l15754 2DCB                                         l16482 1AB3  
                                       l17362 479C                                         l16810 4D91  
                                       l17186 48ED                                         l17178 48D4  
                                       l14794 439B                                         l15498 455B  
                                       l15930 103A                                         l16730 32E5  
                                       l17418 14A7                                         l15850 4B3A  
                                       l15834 4B27                                         l17258 0A8D  
                                       l17266 0A9D                                         l18170 123A  
                                       l18138 11D3                                         l18146 11E4  
                                       l16388 3D28                                         l16556 1C70  
                                       l17700 2AD4                                         l17356 4783  
                                       l16820 4DB0                                         l14796 43A9  
                                       l14868 56CF                                         l15908 3806  
                                       l15924 1027                                         l15852 4B46  
                                       l17268 0AA7                                         l18076 1FF8  
                                       l18332 141F                                         l18252 1349  
                                       l18244 1326                                         l18156 12B6  
                                       l18092 10FA                                         l14958 51E0  
                                       l16398 3D39                                         l16574 1C8E  
                                       l16558 1C73                                         l16486 1ABD  
                                       l17622 09F9                                         l17542 08D9  
                                       l17526 08A0                                         l17702 29FC  
                                       l16726 32CC                                         l16718 326B  
                                       l16750 186F                                         l15862 4B61  
                                       l15790 51C0                                         l18342 142F  
                                       l18318 13F6                                         l18270 135E  
                                       l18238 131F                                         l18182 1263  
                                       l18094 10FF                                         l17720 3FDF  
                                       l15696 561C                                         l14896 45B0  
                                       l17608 09B8                                         l17632 0A09  
                                       l17384 47EC                                         l15952 36F6  
                                       l18328 1412                                         l18280 137B  
                                       l17722 3F41                                         l16498 1AD9  
                                       l17634 0A35                                         l15890 2F1C  
                                       l15946 36D1                                         l17394 1469  
                                       l15866 4B69                                         l15858 4B58  
                                       l17490 567A                                         l18346 1434  
                                       l18098 1117                                         ?_fabs 00D3  
                                       l17740 3F68                                         l14996 413C  
                                       l17572 0949                                         l17564 093D  
                                       l17548 08EB                                         l17812 3D72  
                                       l16684 28C9                                         l16780 204B  
                                       l15964 374B                                         l15788 51B4  
                                       l18196 127E                                         ?_data 002B  
                                       l15878 2E7E                                         l15982 37EA  
                                       l15958 371A                                         l17744 3F6A  
                                       l17728 3F4B                                         l17680 2AC4  
                                       l17832 3DCE                                         l17920 3214  
                                       l17762 3F93                                         l17754 3F7C  
                                       l17586 0966                                         l17578 0956  
                                       l17842 3DE7                                         l16698 29DB  
                                       l15994 4AE7                                         l17906 31A5  
                                       l17772 3FA5                                         l17844 3DEC  
                                       l17782 3FBE                                         l17774 3FB0  
                                       l17758 3F7E                                         l17678 2A4C  
                                       l17854 3E1A                                         l17862 3E2C  
                                       l17838 3DDD                                         l17870 4955  
                                       l17926 3224                                         l17792 3FC7  
                                       l17768 3F95                                         l16992 38F0  
                                       l17794 3FCD                                         l17778 3FB2  
                                       l17788 3FC0                                         l16996 390E  
                                       l17878 4983                                         l17978 1DE5  
                                       l17988 1DF7                                         l17998 1E17  
                                       ?_atan 00D6                                         _ADCAP 009B  
                                       _ADACT 0099                                         ?_main 0070  
                              ini_GERADOR@Xc1 0446                                         _ADCLK 0098  
                              ini_GERADOR@Xc2 0449                                         _ADPCH 009E  
                                       _ADREF 009A                               __end_of___awdiv 4B6E  
                             __end_of___ftadd 311D                                         STR_10 68FF  
                                       ?_ltoa 004A                                         STR_11 6912  
                                       STR_20 68E0                                         STR_12 691A  
                                       STR_13 68FB                                         STR_21 690B  
                                       STR_14 68F9                                         STR_22 690B  
                                       STR_30 685E                                         STR_23 6918  
                                       STR_31 68F2                                         STR_15 6916  
                                       STR_40 68F2                                         STR_16 690C  
                                       STR_24 690B                                         STR_32 6841  
                                       STR_25 68B5                                         STR_41 6886  
                                       STR_17 6908                                         STR_33 60D8  
                               __CFG_WDTE$OFF 0000                                         STR_26 68B5  
                                       STR_18 68F6                                         STR_50 68EC  
                                       STR_34 68CF                                         STR_42 6879  
                                       STR_19 68E0                                         STR_27 68B5  
                                       STR_51 68EC                                         STR_35 68F1  
                                       STR_43 68D7                                         STR_44 68F2  
                                       STR_28 68B5                                         STR_36 6886  
                             __end_of___awmod 4944                                         STR_37 6886  
                                       STR_45 68E6                                         STR_29 689F  
                                       STR_46 68F2                                         STR_38 68F2  
                                       STR_47 68E6                                         STR_39 6886  
                                       STR_48 68F2                                         _ADRPT 010D  
                                       STR_49 68DF                               __end_of___ftdiv 3AFA  
                              ini_GERADOR@ang 0423                               __end_of___ftneg 6212  
                             __end_of___lldiv 4BC1                                         ?_sqrt 00E7  
                                       ?_utoa 0039                               __end_of___ftmul 3A43  
                                       _T1CLK 0211                               ___awdiv@divisor 002B  
                                       _T1CON 020E                               __end_of___llmod 57BB  
                             __end_of___ftsub 54DE                               __end_of___fttol 43D9  
                                       u14155 5493                                         u14315 5784  
                                       u20707 36BA                                         u14245 4B82  
                                       u20717 5522                                 get_freq@i_arr 01D7  
                                       u16015 55AF                                         u14335 579D  
                                       u20807 4E79                                         u20727 5538  
                                       _T5CLK 021D                                         u16105 5414  
                                       u14265 4B8E                                         u14345 57A8  
                                       u20817 4E8F                                         u20737 38F6  
                                       u20657 3190                                         u16035 55B9  
                                       u16115 541B                                         u20907 4AA3  
                                       u14275 4BA2                                         u20827 4EA5  
                                       u20747 3902                                         u20667 5663  
                                       u14604 41EB                                         u16045 55C3  
                                       u20917 3F39                                         u14285 4BAE  
                                       u20837 4D44                                         u14605 41EA  
                                       u20757 1810                                         u20677 1E94  
                                       u14614 41FC                                         u16055 55CB  
                                       u14375 55E6                                         u20927 549D  
                                       u15175 519A                                         u20847 4D5A  
                                       u14615 41FB                                         u20767 1826  
                                       u20687 0A6F                                         u14624 420D  
                                       _T5CON 021A                                         u16225 576A  
                                       u14705 5108                                         u20937 54A9  
                                       u20857 4D70                                         u16145 514F  
                                       u20777 4610                                         u14625 420C  
                                       u15505 5712                                         u20697 0EB4  
                                       u14634 421E                                         u14571 6115  
                                       u20947 50BE                                         u14715 510D  
                                       u14395 55F7                                         u20867 4D86  
                                       u20787 5220                                         u16155 45A3  
                                       u14635 421D                               __end_of___ltdiv 48FE  
                                       u14644 422C                                         u16500 02E1  
                                       u20957 525C                                         u16085 5405  
                                       u20877 676E                                         u20797 4E63  
                                       u16165 45AE                                         u14645 422B  
                                       u17045 4535                                         u20967 526C  
                                       u20887 4A89                                         u16175 45D6  
                                       u15615 3080                                         _T6CON 029A  
                                       u20897 4A96                                         u14905 4928  
                                       u16185 45F5                                         u15705 30B9  
                                       u14594 41DA                                         u14915 492F  
                                       u14595 41D9                                         u14835 4E44  
                                       u14755 4E04                                         u15395 5091  
                                       u16700 05D4                                         u15805 39C8  
                                       u15645 3093                                         u16453 2432  
                                       u14775 4E1D                                         u15815 39D8  
                                       u17370 472B                                         u14795 4E2A  
                                       u15835 3A00                                         u15675 30A6  
                                       u15915 4372                                         u16483 24B8  
                                       u19060 28E3                                         u14885 4919  
                                       u15845 3A06                                         u19070 28E4  
                                       u16670 0587                                         u16815 3C33  
                                       u16905 3A82                                         u15945 439C  
                             __end_of___lwdiv 55D8                                         u17555 5618  
                                       u16915 3A92                                         u15875 3A1C  
                                       u19155 32BD                                         u17715 4B47  
                                       u17900 3734                                         _T6HLT 029B  
                                       u17565 5625                                         u18285 2624  
                                       u19405 3010                                         u16925 3AB2  
                                       u15885 3A22                                         u17725 4B51  
                                       u17575 5632                                         u19415 3016  
                                       u16935 3AC1                                         u15975 43B7  
                                       u17735 4B59                                         u17585 563F  
                                       u16945 3ACB                                         u17825 380B  
                                       u19195 1896                                         u17780 2F16  
                                       u19445 48CA                                         u17790 2F17  
                                       u17695 4B3D                                         u18905 1A4C  
                                       u19465 48D5                                         u19810 3F1D  
                                       u17890 3733                                         u18915 1A76  
                                       u19475 48E4                                         u19485 48EE  
                                       u19695 08E3                                         u19775 2A78  
                             __end_of___lwmod 5428                                         u19795 2B00  
                                       _T6TMR 0298                                         _T6RST 029D  
                       __end_of_opc_saida_str 5070                               ___awdiv@counter 0030  
                                       _OSCEN 0891                                         _TMR1H 020D  
                                       _TMR1L 020C                                         _TMR5H 0219  
                                       _TMR5L 0218                                         _PORTA 000C  
                                       _PORTD 000F                       __size_of_Lcd_Set_Cursor 0036  
                                       _TRISA 0011                                         _TRISB 0012  
                                       _TRISC 0013                                         _TRISD 0014  
                                       _TRISE 0015                                ini_ee_tempos@K 012D  
                          __end_ofsin@coeff_a 6832                            __end_ofsin@coeff_b 689F  
                              ini_ee_tempos@i 0130                                ini_ee_tempos@t 00D3  
                                       i1_clr 61FF                                 ?_escreve_freq 0070  
                           printTelaSenha@col 0049                      __end_of_modo_contnuo_str 5F02  
                               __CFG_PWRTE$ON 0000                                         _t10ms 005E  
                                ___lltoft@exp 0038                       __end_of_modo_rapido_str 5F24  
                                       _t5min 0250                   Lcd_White_Center_String@size 003E  
                               ___awtoft@sign 0038                                         _delay 5136  
                                main@senha_OK 014B                        __end_of_cont_pecas_str 5EBE  
                             __end_of_liberar 61C7                               __end_of_entrada 67C1  
                     __size_of_status_gerador 0063                               __end_of_dpowers 68B5  
                                       fabs@d 00D3                                         data@b 002B  
                             __end_of_nao_str 58A2                                         _floor 382B  
                                       _ldexp 44F3                                         _frexp 56BC  
                                       _errno 02CF                                         _saida 51CE  
                               verifSenhas@sh 0030                                         atan@f 00D6  
                                       atan@x 00DC                                         atan@y 00D9  
                              ?_LoadSenhaUser 0070                                         _telas 22CD  
                               ___ftpack@sign 002F                        __end_of_salva_EEPROM32 4D8B  
                                       _round 078A                                         main@i 014C  
                                       _ultoa 43D9                                         _trunc 4ACA  
                         verifPagina@bt_local 002B                               __end_of_teclado 4352  
                            ?_SMT1_Initialize 0070                       __end_of_TMR1_Initialize 67AD  
                        ?_config_flag_entrada 002B                                         pclath 000A  
                                       sin@x2 00DF                              __end_ofi1___tmul 5309  
                            __end_ofi1___wmul 50E2                               __end_of_sim_str 58C4  
                                       pow@yi 0127                               ??_config_saidas 002F  
                                       sqrt@a 00E7                                         sqrt@i 0131  
                                       utoa@c 0040                                         sqrt@q 0132  
                                       sqrt@x 0135                                         sqrt@z 012E  
                                       utoa@v 003E                                         status 0003  
                         i1___wmul@multiplier 0070                                         wtemp0 007E  
                             __end_of_sprintf 3C8F                                    _Autenticar 3F1B  
                                  _Inicia_LCD 6760                               escreve_tempos@t 0055  
                          __size_ofi1___ltdiv 0045                               _TMR1_WriteTimer 6184  
                        __end_of_descendo_str 5DF2                            __size_ofi1___lwdiv 0034  
                       __end_of_salva_n_pecas 4C6B                                   exp@exponent 00DD  
                            __end_of_Lcd_Init 4ACA                               _TMR5_Initialize 67D6  
                            __end_of_Lcd_Port 50B0                                   ldexp@newexp 00AD  
                     __end_of_modo_normal_str 5F46                               __initialization 00E5  
                                 log@exponent 00AD                                  __end_of_fabs 5381  
                                __end_of_data 6799                                  __end_of_atan 29EC  
                                __end_of_main 1462                                 _ini_ee_tempos 0A4C  
                                __end_of_ltoa 550D                     __size_of_LoadSenhaGerador 0025  
                                __end_of_sqrt 199E                                  __end_of_utoa 4DEF  
                        __size_of_clear_saida 000C                              ?_SMT2_Initialize 0070  
                 ?_INTERRUPT_InterruptManager 0070                           __end_of_Sai_RST_str 58E6  
              ??_EUSART_SetRxInterruptHandler 002D                                        ??_fabs 0059  
                                      ??_data 002D                                        ??_atan 0059  
                                      ??_main 0144                                 ___fttol@sign1 00C2  
                                      ??_ltoa 0050                                        ??_sqrt 00EA  
                                      ??_utoa 003D                            __size_of_Lcd_Clear 000C  
                 INTERRUPT_InterruptManager@i 002A                                ??_escreve_freq 0053  
                           salva_EEPROM@valor 002E                                verifPagina@pag 002E  
                                trata_dados@f 00AE                                  trata_dados@i 00B6  
                                      ?i1_clr 0070                                 _liberar_tecla 5735  
                             _TMR6_Initialize 6773                                 get_temp@adc_c 00C2  
                              _carrega_EEPROM 1801                                   ?i1_get_duty 0070  
                           ?_carrega_EEPROM32 002C                                        ?_delay 0033  
                                      _ADCON0 0093                                        _ADCON1 0094  
                                      _ADCON2 0095                                        _ADCON3 0096  
                                      ?_floor 00C8                                        ?_ldexp 00AA  
                                      ?_frexp 002B                              __end_of___altoft 5735  
                                      ?_saida 002B                              ___llmod@dividend 002F  
                                      _ADLTHH 010F                                        _ADLTHL 010E  
                                      _ADRESH 008D                                        _ADRESL 008C  
                                      _CCPR2H 0311                                        _CCPR2L 0310  
                                      _ADSTAT 0097                                        ?_telas 0070  
                                      _ADUTHH 0111                              ___awdiv@dividend 002D  
                                      _ADUTHL 0110                             _n_pecas_total_str 59B2  
                          ??_carrega_EEPROM32 0030                              __end_of___awtoft 5251  
                                      _ANSELA 1F38                                        _ANSELB 1F43  
                                      _ANSELC 1F4E                                        _ANSELD 1F59  
                                      _ANSELE 1F64                              __end_of___ftpack 4E54  
                                      ?_round 00D3                              ??_printTelaSenha 004A  
                                      ?_ultoa 003D                               ?_salva_EEPROM32 002E  
                       ??_config_flag_entrada 002C                                        _T1GATE 0210  
                                      _T1GCON 020F                                        ?_trunc 00C8  
                                      _T5GATE 021C                                        _T5GCON 021B  
                                      _RC1REG 0119                                        _RC1PPS 1F21  
                                      _RC1STA 011D                              __end_of___lltoft 382B  
                     TMR1_WriteTimer@timerVal 0070                                        i1l1140 00CB  
                                      i1l1154 00DE                                        _ODCONA 1F3A  
                                      _ODCONB 1F45                                        _ODCONC 1F50  
                                      _RC6PPS 1F26                                        _ODCOND 1F5B  
                                      _ODCONE 1F66                                        i1l2197 516E  
                                      i1l2812 50CF                              __end_of___lwtoft 6800  
                                      _OSCFRQ 0893                              _trata_dados$4262 00B4  
                                   ??_Lcd_Cmd 002C                                        _SMT1PR 0495  
                                      _SMT2PR 0515                                        _TX1REG 011A  
                                      _TX1STA 011E                       __size_of_Lcd_Write_Char 002E  
                              liberar_tecla@b 0039                               ini_ee_tempos@b1 012C  
                             ini_ee_tempos@b2 012B                                liberar_tecla@t 0033  
                                      i1_data 674D                                  trava_erro@bt 00A6  
                             _opc_entrada_str 4800                                  ?_ISR_entrada 0070  
                              _SMT1SIGPPSbits 1EAA                          __size_of_ini_GERADOR 039E  
                        __size_of_eeprom_read 0012                                  _CCPTMRS0bits 021E  
                            __end_of_get_freq 46BE                                ?_ini_ee_tempos 00D3  
                Lcd_White_Center_String@linha 003A                              __end_of_get_duty 082D  
                            _erro_energia_str 5A7E                              __end_of_get_temp 398F  
                                      ___ftge 5680                                  ?_TMR1_Reload 0070  
                                      ___tmul 3000                                teste_leds@temp 002F  
                                      ___wmul 50FE                                     ??___awdiv 002F  
                                   ??___ftadd 0041                                __CFG_STVREN$ON 0000  
                                   ??___awmod 0035                                     ??___ftdiv 00B0  
                                      _ciclar 082D                                     ??___ftneg 0059  
                                   ??___lldiv 0037                                     ??___ftmul 004E  
                                   ??___llmod 0033                                     ??___ftsub 0059  
                                   ??___fttol 00BE                                     ??___ltdiv 003A  
                                   ??___lwdiv 002F                              __end_of_freq_str 68CF  
                                   ??___lwmod 0037                      __size_of_config_IO_start 0020  
                                      _idioma 01DA                                        _k_temp 02CC  
                              _SMT2SIGPPSbits 1EAC                           _EUSART_Transmit_ISR 5153  
                            __end_of_load_bar 28AC                                        _pagina 0064  
                            ?_PWM2_Initialize 0070                                  ?_TMR5_Reload 0070  
                            __end_of_func_rst 498D                              __end_of_erro_str 5C9E  
                                      delay@t 0039                              ___awdiv@quotient 0032  
                             _erro_sobrecarga 01DD                               ___awmod@divisor 0031  
                                      _t_tela 01E3                          __end_of_eeprom_write 52BE  
                             ___awmod@counter 0036                              __end_of_op_desce 346B  
                                      main@bt 014F                                        main@ii 014D  
                                      _strcat 5381                                        _strcmp 5331  
                                      _strcpy 511A                                        _strlen 51AF  
                            __end_of_op_fixar 3D63                                        floor@i 00CB  
                                      floor@x 00C8                         ___ftmul@f3_as_product 0053  
                             _ADCC_Initialize 48A1                                     ??_liberar 0033  
                                   ??_entrada 002D                              __end_of_op_solda 2800  
                      __end_of_carrega_EEPROM 1833                                ?_liberar_tecla 0033  
                              _PMD_Initialize 622D                                        saida@b 002B  
                           __end_ofi1___ltdiv 5800                                        saida@x 002F  
                           __end_ofi1___lwdiv 55A3                              __end_of_set_freq 461D  
                                      ltoa@cp 0051                         i1___tmul@multiplicand 0073  
                   __size_of_teste_pneumatico 0115                                        sin@sgn 00E2  
                            ??_config_entrada 002E                                        telas@b 00B0  
                                   ??_teclado 002D                              __end_of_teste_US 2000  
                            __end_of_ver_freq 5645                     __end_of_n_pecas_total_str 59D4  
                                  _t1msMM_ISR 0256                               ??_LoadSenhaUser 002C  
                      __size_of_addr_receitas 000D                                        round@f 00D6  
                                      round@x 00D3                                        ultoa@c 0048  
                                      sqrt@og 012B                                        ultoa@v 0044  
                             _CLC1_Initialize 6124                                     ??_sprintf 003F  
                                      trunc@i 00CB                                        trunc@x 00C8  
                                ?_ver_entrada 0070                       __end_of_TMR1_WriteTimer 6193  
                                ?_verifPagina 002B                               Lcd_Set_Cursor@a 0031  
                             Lcd_Set_Cursor@b 002E                                _SMT1WINPPSbits 1EA9  
                             Lcd_Set_Cursor@y 0033                               Lcd_Set_Cursor@z 0032  
                        ?_EUSART_Transmit_ISR 0070                                 _Sai_enter_str 5C9E  
                                ?_verifSenhas 0070                              escreve_tempos@s1 0053  
                                start_timer@t 002B                              ?_TMR1_Initialize 0070  
                     __end_of_TMR5_Initialize 67EB                             _t_solda_total_str 5990  
                            __end_ofexp@coeff 60B8                             _SYSTEM_Initialize 53A9  
                            __end_oflog@coeff 60D3                       __end_of__initialization 014D  
                                  ___altoft@c 0033                                config_saidas@x 0030  
                             eeprom_read@addr 002B                          __size_of_escreve_LCD 0015  
                       __size_ofi1_stop_timer 0003                                    ___ftadd@f1 003B  
                                  ___ftadd@f2 003E                               __CFG_FEXTOSC$HS 0000  
                                 ?_Autenticar 0070                                    ___ftge@ff1 002B  
                                  ___ftge@ff2 002E                                   ?_Inicia_LCD 0070  
                         _config_maq_especial 475F                            ?_SYSTEM_Initialize 0070  
                           __end_of_Lcd_Clear 61EB                        _tela_ultima_solda$4263 00A0  
                      _tela_ultima_solda$4264 00A4                    __end_of_PWM2_LoadDutyValue 51AF  
                                eval_poly@res 00A7                                    _t1ms_solda 01C6  
                                  ___ftdiv@f1 00AD                                    ___ftdiv@f2 00AA  
                                  ___ftdiv@f3 00B5                                 _zero_cont_str 5C16  
                                _t100ms_solda 022C                               _TMR5_WriteTimer 6245  
                              _SMT2WINPPSbits 1EAB                            trata_dados@bt_2483 00B3  
                              _escreve_tempos 207D                                    ___ftneg@f1 00D0  
                                  ___awtoft@c 0033          __end_of_EUSART_SetTxInterruptHandler 6224  
       __size_of_EUSART_SetTxInterruptHandler 0009                  _EUSART_SetTxInterruptHandler 621B  
                               __end_ofi1_clr 6209                                    ___ftmul@f1 0048  
                                  ___ftmul@f2 004B                                    ___ftsub@f1 00D3  
                                  ___ftsub@f2 00D0                                    ___fttol@f1 00BA  
                                 _Sai_RST_str 58C4                                __pcstackCOMMON 0070  
                         __size_ofi1_get_duty 0028                                  __pidataBANK0 1800  
                                __pidataBANK3 0002                                  __pidataBANK5 07FB  
                                ?_trata_dados 0070                           ??_SYSTEM_Initialize 0030  
                             printTelaSenha@s 004E                                 __end_of_delay 5153  
                                  ___lltoft@c 0033                               _t1ms_solda_acum 0224  
                               __end_of_floor 38DC                                 __end_of_ldexp 4585  
                               __end_of_frexp 56F8                                 __end_of_saida 51EE  
                               __end_of_telas 0782                                 __end_of_round 07FB  
                               __end_of_ultoa 4464                                 __end_of_trunc 4B1C  
                     __end_of_TMR6_Initialize 6786                      ??_SMT1_GetCapturedPeriod 002F  
                                  __end_of_XC 42CC                                _freq_atual_arr 2F28  
                      __end_of_PMD_Initialize 6235                                    ___lwtoft@c 0033  
                          __size_of_bip_tecla 0023                                  ?_rotina_tela 0070  
                                ?_totalCiclos 0070                                     ?i1___tmul 0070  
                                   ?i1___wmul 0070                          ?_config_maq_especial 0070  
                             status_gerador@b 0030                               status_gerador@x 0032  
                              _Lcd_Set_Cursor 55D8                               ?_carrega_EEPROM 002C  
                                ?_start_timer 002B                                       ??i1_clr 0070  
                               ?_salva_EEPROM 002E                               ver_entrada@temp 01D6  
                           eeprom_write@value 002B                                _status_gerador 4CC4  
                                   ?_Lcd_Init 0070                                  i1_stop_timer 2801  
                                     ??_delay 0035                                     ?_Lcd_Port 0070  
                                     ??_floor 0058                                       ??_ldexp 0058  
                                     ??_frexp 002F                     __end_of_t_solda_total_str 59B2  
                                     ??_saida 002D                     __end_of_SYSTEM_Initialize 53D2  
                         i1___tmul@multiplier 0070                         ??_EUSART_Transmit_ISR 0070  
                                     ??_telas 00A8                       __end_of_opc_entrada_str 48A0  
                                     ??_round 0059                                       ??_ultoa 0043  
                                     ??_trunc 0058                     __size_of_ciclarPneumatico 0160  
                                  __pbssBANK0 005A                                    __pbssBANK3 01A0  
                                  __pbssBANK4 0220                                    __pbssBANK5 02A0  
                                  __pbssBANK6 0320                                    __pbssBANK7 03A0  
                          __size_of_eval_poly 007E                             _t100ms_solda_cont 0228  
                      __end_of_escreve_tempos 22CD                       carrega_EEPROM32@address 0032  
                               trata_dados@bt 00B2                                       ?i1_data 0070  
                           i1___ltdiv@divisor 0020                   __size_of_EUSART_Receive_ISR 001C  
                           i1___ltdiv@counter 007D                               ??_ini_ee_tempos 00D7  
                        __end_of_escreve_freq 53FB                             EditSenhaUser@bt_a 0055  
                               _addr_receitas 508C                                    __pmaintext 10D2  
                               _CLCIN0PPSbits 1EBB                           EditSenhaUser@coluna 0056  
               ?_EUSART_SetTxInterruptHandler 002B              _EUSART_TxDefaultInterruptHandler 0236  
                                     ?___ftge 002B                    op_solda@subida_acionamento 00A0  
                        __end_of_freq_ini_str 6879                                       ?___tmul 002B  
                            _LoadSenhaGerador 52BE                                       ?___wmul 002B  
                             __CFG_PPS1WAY$ON 0000                                       ?_ciclar 0070  
                     __end_of_ADCC_Initialize 48B9                                    __pintentry 0004  
                                     _CCP2CON 0312                                     ?___altoft 0033  
                                     _CLC1CON 1E10                                       _CLC1POL 1E11  
                   __size_of_Lcd_Write_String 001F                                     ?___awtoft 0033  
                                   ?___ftpack 002B                         _pontencia_instantanea 553D  
                      __end_of_Lcd_Set_Cursor 560E                                       _ADSTPTH 0113  
                                     _ADSTPTL 0112                                 ?_tela_inicial 0070  
                                  _branco_str 6812                               ??_liberar_tecla 0035  
                             ?_PMD_Initialize 0070                                     ?___lltoft 0033  
                       ??_config_maq_especial 0031                                    ??i1___tmul 0076  
                                     _XC$4261 00C1                                       ?_strcat 0031  
                                  _emerg2_str 5D04                                    ??i1___wmul 0074  
                                     ?_strcmp 002B                                       ?_strcpy 0031  
                                     ?_strlen 002B                                     ?___lwtoft 0033  
                             get_freq@acumulo 0045                                       u1402_24 00AF  
                                     u1402_25 00AD                                       u1251_25 52F2  
                     __end_of_CLC1_Initialize 6135                                       u1252_25 52F8  
                                     u1262_25 557A                                       u1247_25 50D0  
                                     u1255_25 57CC                                       u1264_25 5584  
                                     u1248_25 50D5                                       u1265_25 558E  
                                     u1257_25 57D7                                       u1266_25 5596  
                                     u1258_25 57E6                                ??_salva_EEPROM 0031  
                                     u1259_25 57F0                                 _eusartRxCount 01CE  
                                     i1l12100 52E9                                       i1l12120 57D6  
                                     i1l12104 52F1                                       i1l12132 57F9  
                                     i1l12118 57C9                                       i1l12128 57EF  
                                     i1l12154 5595                                       i1l12146 5577  
                                     i1l12148 5583                                       i1l13052 554E  
                                     i1l12158 559E                                       i1l12086 50C9  
                                     i1l13054 554F                                       i1l13144 50E7  
                                     i1l13502 00A1                                       i1l11744 618E  
                                     i1l13504 00BA                                       i1l13506 00C2  
                                     i1l13516 00D4                                       u1392_25 001C  
                                     i1l13454 0021                                       i1l13470 0049  
                                     i1l13464 0041                                       i1l13466 0044  
                                     i1l13492 0082                                       i1l13496 0088  
                                     u1395_25 0035                           __size_of_Autenticar 00E5  
                                     u1399_25 0074                           __size_of_Inicia_LCD 0013  
                                _descendo_str 5DD0                        __end_of_status_gerador 4D27  
                           ??_config_IO_start 002B                                       _SP1BRGH 011C  
                                     _SP1BRGL 011B                                       _OSCCON1 088D  
                                     _OSCCON3 088F                                    _config_maq 2B4C  
                       __end_of_tempo_ovf_str 5A5C                                    _emergencia 4464  
                                     _NVMADRH 081B                                       _SMT1CLK 049B  
                                     _NVMADRL 081A                                       _SMT2CLK 051B  
                                     _NVMDATH 081D                                       _OSCTUNE 0892  
                                     _SMT1CPR 048F                                       _NVMDATL 081C  
                                     _SMT1CPW 0492                                       _SMT2CPR 050F  
                                     _NVMCON2 081F                                       _SMT2CPW 0512  
                                     _SMT1SIG 049C                                       _SMT1PRH 0496  
                                     _SMT2SIG 051C                                       _SMT1PRL 0495  
                                  ??_Lcd_Init 002E                                       _SMT2PRH 0516  
                                     _SMT2PRL 0515                                       _SMT1PRU 0497  
                                     _SMT1WIN 049D                                       _SMT2PRU 0517  
                                     _SMT2WIN 051D                                    _idioma_str 5BF4  
                                  ??_Lcd_Port 002B                        __size_of_EditSenhaUser 00CA  
                                  _ener_solda 01BE                                   selectModo@b 004E  
                                 selectModo@s 0046                                     ?_get_freq 003D  
                                   ?_get_duty 0070                                     ?_get_temp 00BA  
                             liberar_tecla@tc 003E                              ?_TMR1_WriteTimer 0070  
                     __end_of_TMR5_WriteTimer 624B                                    _cont_pecas 01A4  
                                     i1data@b 0070                              ?_TMR5_Initialize 0070  
                              _Lcd_Write_Char 5482                             __end_of_falha_str 5908  
                                     _Lcd_Cmd 50B0                                _ctrl_pecas_str 5FCE  
                                   ?_load_bar 0070                                     ?_func_rst 0070  
                             ?_escreve_tempos 0053                             __end_of_bip_tecla 5274  
                    ?_Lcd_White_Center_String 0035                               __size_ofi1_data 0013  
                       __end_of_teste_PN1_str 5CE2                                    _freq_atual 01B4  
                                   ?_op_desce 0053                                     ?_op_fixar 003A  
                              ?_addr_receitas 002B                                     ?_op_solda 0053  
                                  _inicia_str 592A                             _tipo_maquina1_str 5B28  
                           _tipo_maquina2_str 5B06                         __end_of_teste_US1_str 5D04  
                           _tipo_maquina3_str 5AE4                                     ?_set_freq 0046  
                        __size_of_ISR_entrada 007A                         __size_of_eeprom_write 0025  
                                   ?_teste_US 0070                          __CFG_SCANE$available 0000  
                                   ?_ver_freq 0046                                       _t1ms_OP 0254  
                             __size_of___ftge 003C                                       ___awdiv 4B1C  
                                     ___ftadd 3027                                       ___awmod 48FE  
                                     ___ftdiv 3A43                                       ___ftneg 6209  
                             __size_of___tmul 0027                                       ___lldiv 4B6E  
                             __size_of___wmul 001C                                       ___ftmul 398F  
                                     ___llmod 5778                                       ___ftsub 54B0  
                                     ___fttol 4352                                       ___ltdiv 48B9  
                                     ___lwdiv 55A3                          __end_of_erro_inv_str 5C5A  
                                _tInatividade 0252                               __size_of_ciclar 021F  
                                  _func_enter 3D63                                       ___lwmod 53FB  
               __size_of_printTelaEditarSenha 004D                                    ??___altoft 0037  
                              ??_tela_inicial 0053                            _ini_ee_tempos$4270 0126  
                          _ini_ee_tempos$4268 0120                            _ini_ee_tempos$4269 0123  
                                func_enter@bt 004F                          __size_of_TMR1_Reload 0008  
                                  ??___awtoft 0036                                    ??___ftpack 0030  
                           __end_of_eval_poly 41C9                              ?_TMR6_Initialize 0070  
                             ?_Lcd_Set_Cursor 002E                          __end_of_erro_ovl_str 5C7C  
             __size_of_SMT1_GetCapturedPeriod 000E                                    ??___lltoft 0037  
                                     _flag_in 01CC                                       __ptext1 311D  
                                     __ptext2 5645                                       __ptext3 6786  
                                     __ptext4 61EB                                       __ptext5 1C99  
                                     __ptext6 61BB                                       __ptext7 4464  
                                     __ptext8 346B                                       __ptext9 22CD  
                                  ciclar@temp 00BC                                    ??___lwtoft 0036  
                             __size_of_strcat 0028                          __size_of_TMR5_Reload 0008  
                             __size_of_strcmp 0028                               __size_of_strcpy 001C  
                             __size_of_strlen 001F                                     _T1CONbits 020E  
                                     _n_pecas 01A0                                       _liberar 61BB  
                              _ctrl_solda_str 5FF0                                       _entrada 67AD  
                                     _dpowers 68AB                             i1___lwdiv@divisor 0076  
                       _OSCILLATOR_Initialize 6212                                       _nao_str 5880  
                              _edit_senha_str 59F6                                       _byte_in 02A8  
                                __size_of_clr 000A                                  __size_of_cos 007C  
                                __size_of_exp 013C                                  __size_of_log 00CF  
                              Autenticar@bt_a 00A5                               atan@val_squared 00E0  
                                __size_of_sin 01AD                             i1___lwdiv@counter 007D  
                                __size_of_pow 011A                               ?_status_gerador 0030  
                            _teste_pneumatico 311D                                       delay@ms 0033  
                                     _mod_pot 0246                              ??_salva_EEPROM32 0033  
                            ___awmod@dividend 0033                                 rotina_tela@bt 01D4  
                           __end_of_metal_str 5FAC                                       _teclado 42CC  
                    ??_PIN_MANAGER_Initialize 002B                                       _periodo 02D1  
                                   _IOCAFbits 1F3F                                       atan@val 00E3  
                                   _T5CONbits 021A                                  ??i1_get_duty 007E  
                                  _modelo_str 5858                                       _ret_pot 0248  
                                   _IOCANbits 1F3E                                    _telas$4267 00B1  
                           __end_of_saida_str 5858                                     _IOCAPbits 1F3D  
                                   _T6CONbits 029A                                       _sim_str 58A2  
                    __end_of_erro_energia_str 5AA0                    __size_of_SYSTEM_Initialize 0029  
                                     _sprintf 3BC4                                       clrloop0 61B0  
                                  ??_get_freq 003F                                    ??_get_duty 003F  
                      __end_of_Lcd_Write_Char 54B0                                    ??_get_temp 00BD  
                      __end_of_ctrl_pecas_str 5FF0                             __end_of_joule_str 6034  
                        end_of_initialization 014D                                       exp@sign 00DF  
                           __end_of_salva_str 5E9C                          __size_of_ver_entrada 0067  
                                  ??_load_bar 0072                           config_flag_saida@ch 002B  
                                  _selectModo 358D                          __size_of_verifPagina 0079  
                                _eeprom_write 5299                                    ??_func_rst 004E  
                        __size_of_verifSenhas 002D                     __end_of_tipo_maquina1_str 5B4A  
                       __end_of_config_saidas 4CC4                     __end_of_tipo_maquina2_str 5B28  
                                     ltoa@buf 0052                     __end_of_tipo_maquina3_str 5B06  
                                  _senha_user 02D7                                       ltoa@val 004A  
                           _EUSART_Initialize 5455                                    ??_op_desce 0055  
                           __end_of_tempo_str 5AC2                                    ??_op_fixar 003C  
                             ___lldiv@divisor 002F                              ___ltdiv@dividend 0037  
                                     pow@sign 0126                               ___lldiv@counter 003C  
                               ??_clear_saida 002D                                    ??_op_solda 0055  
                   __size_of_carrega_EEPROM32 0066                      __size_of_SMT1_Initialize 000F  
                                  ??_set_freq 0048                             __end_of_solda_str 6056  
                          ?_EUSART_Initialize 0070                                    _serial_str 596E  
                               _EditSenhaUser 3AFA                                    ??_teste_US 00B8  
                                  ??_ver_freq 0048                                       psplit$0 85011F  
                                   Lcd_Port@a 002B                            __end_ofi1_get_duty 5331  
                            ?_ADCC_Initialize 0070                                       utoa@buf 0041  
                      ?_pontencia_instantanea 0020                                       utoa@val 0039  
                  __end_of_receita_carreg_str 5E58                         i1___wmul@multiplicand 0072  
                                     strcmp@r 002E                                       strlen@s 002B  
                        __size_of_trata_dados 02FB                             __end_ofmain@t_amb 6912  
                         ??_EUSART_Initialize 002D                        __end_of_ctrl_solda_str 6012  
              ??_EUSART_SetTxInterruptHandler 002D                        __end_of_edit_senha_str 5A18  
                                   _PORTDbits 000F                          __CFG_WDTCCS$HFINTOSC 0000  
                             config_entrada@x 0030                                    _teste_leds 5645  
                            ?_CLC1_Initialize 0070                             escreve_tempos@pag 0057  
                 __end_of_config_flag_entrada 4F89                          __size_of_rotina_tela 0122  
                        __size_of_totalCiclos 00E0                            op_solda@conta_erro 00A1  
                      __size_of_salva_n_pecas 0056                                   ?_config_maq 0070  
                    __size_of_SMT2_Initialize 0010                                     _TRISBbits 0012  
                                 ?_emergencia 0070                              ___ltdiv@quotient 003B  
                             config_saidas@ch 002E                          __size_of_start_timer 0010  
                           liberar_tecla@temp 003A                                     i1___ltdiv 57BB  
                                   i1___lwdiv 556F                                    _trava_erro 46BE  
                             ?_Lcd_Write_Char 0070                              _ciclarPneumatico 29EC  
                          ini_ee_tempos@k_int 0129               __end_of_Lcd_White_Center_String 4058  
                                _t10ms_global 01C4                                    get_freq@pp 02C0  
                           Lcd_Write_String@a 0030                              ?_TMR5_WriteTimer 0070  
                           Lcd_Write_String@i 0033                                     _RXPPSbits 1ECB  
                       __size_of_escreve_freq 0029                       TMR5_WriteTimer@timerVal 0070  
                      _SMT1_GetCapturedPeriod 6193                                    _troca_tela 01E2  
                   __end_of_EUSART_Initialize 5482                           salva_EEPROM32@valor 002E  
                               ??_ini_GERADOR 0140                                  ??_Autenticar 0057  
                                 ___ftdiv@exp 00B8                                  ??_Inicia_LCD 002F  
                               ??_eeprom_read 002B                                   _CCP2CONbits 0312  
                             ??_addr_receitas 002C                                   teste_leds@i 0030  
                        __end_of_salva_EEPROM 553D                                __end_ofi1_data 6760  
                              ?_EditSenhaUser 0070                           __end_of_carrega_str 5E36  
                                 ___ftmul@exp 0052                                    _stop_timer 1000  
                                 _CCP1PPSbits 1EA1                                     _Lcd_Clear 61DF  
                         __end_of_aguarde_str 5D8C                                   ?_func_enter 0070  
                              __end_of___ftge 56BC                              ??_carrega_EEPROM 002E  
                              __end_of___tmul 3027                                __end_of___wmul 511A  
                              __end_of_ciclar 0A4C                              _Lcd_Write_String 5171  
                         __end_of_clear_saida 61D3                            _PWM2_LoadDutyValue 5190  
                      ?_OSCILLATOR_Initialize 0070                                    floor@expon 00CE  
                         __end_of_descida_str 6078                                __end_of_strcat 53A9  
                              __end_of_strcmp 5359                                __end_of_strcpy 5136  
                              __end_of_strlen 51CE                                 _opc_saida_str 5000  
                         start_initialization 00E5                            __end_of_Autenticar 4000  
                           __size_ofi1___tmul 0026                            __end_of_Inicia_LCD 6773  
                           __size_ofi1___wmul 001B                                  _escreve_freq 53D2  
                                  eval_poly@d 00A3                                    eval_poly@n 00A5  
                                  eval_poly@x 00A0                      __size_of_PWM2_Initialize 000E  
                                  ldexp@value 00AA                           ?_PWM2_LoadDutyValue 002B  
             __size_of_PIN_MANAGER_Initialize 0051                          ini_GERADOR@Pot_3Vref 044C  
                                _freq_gerador 0244                                   __end_of_clr 61F5  
                                 __end_of_cos 207D                                   __end_of_exp 3800  
                                 __end_of_log 10D2                                   __end_of_sin 3000  
                                 __end_of_pow 334C                                    ?i1___ltdiv 0020  
                                  ?i1___lwdiv 0076  EUSART_SetRxInterruptHandler@interruptHandler 002B  
EUSART_SetTxInterruptHandler@interruptHandler 002B                                  _freq_inicial 01B6  
                    __end_of_LoadSenhaGerador 52E3                                  _freq_ini_str 686C  
                       __end_of_LoadSenhaUser 5299                                 ??_escreve_LCD 0038  
                           __size_of_Lcd_Init 0052                            teste_US@conta_erro 00BE  
                           __size_of_Lcd_Port 0017                          __end_of_tela_inicial 5000  
                           pnum$text9_split_1 011F                                    frexp@value 002B  
                                 ?_selectModo 0070                               ___llmod@divisor 002B  
                                    ??i1_data 0072                          __end_of_senha_padrao 60D8  
                           __CFG_RSTOSC$EXT1X 0000                               ___llmod@counter 0034  
                              _erro_senha_str 59D4                                   trava_erro@s 0057  
                                 trava_erro@t 00A4                          config_maq_especial@i 0032  
                         __end_of_atencao_str 592A                                 _salva_n_pecas 4C15  
                            __CFG_LPBOREN$OFF 0000                       printTelaEditarSenha@col 0049  
                        ??_PWM2_LoadDutyValue 002D                                 clear_saida@ch 002D  
                    __size_of_TMR1_Initialize 0014                       __size_of_printTelaSenha 004D  
                                  ?_Lcd_Clear 0070                   PWM2_LoadDutyValue@dutyValue 002B  
                         __size_of_config_maq 0167                              ??_PMD_Initialize 002B  
                                    ??___ftge 0031                           __end_of_ini_GERADOR 1800  
                             _config_IO_start 51EE                           __size_of_emergencia 008F  
                                    ??___tmul 0031                                      ??___wmul 002F  
                         __end_of_eeprom_read 6124                                      ??_ciclar 0059  
                                 __pdataBANK0 0064                                   __pdataBANK3 01E6  
                                 __pdataBANK5 02E1                                 ?_rst_inversor 0070  
                         salva_EEPROM@address 0030                               Lcd_Write_Char@a 002F  
                             Lcd_Write_Char@y 002E                             ??_SMT1_Initialize 002B  
                              ___tmul@product 0031                              _tipo_energia_str 5BB0  
                                    ??_strcat 0033                                      ??_strcmp 002D  
                                    ??_strcpy 0033                                      ??_strlen 002D  
                           __size_of___altoft 003D                                   ?_teste_leds 0070  
                            _totalCiclos$4265 00A0                              _totalCiclos$4266 00A4  
                           __size_of___awtoft 0022                             __size_of___ftpack 0065  
                         __end_of_energia_str 5AE4                                   __pbssBIGRAM 2F28  
                 __end_of_EUSART_Transmit_ISR 5171                             __size_of___lltoft 002A  
                   config_maq_especial@i_2517 0033                                     ___latbits 0004  
                           __size_of___lwtoft 0015                                 __pcstackBANK0 0020  
                               __pcstackBANK1 00A0                                 __pcstackBANK2 0120  
                               __pcstackBANK8 0420                              ??_escreve_tempos 00A0  
                         __end_of_fixacao_str 5FCE                                   ?_trava_erro 0057  
                    Lcd_White_Center_String@a 0035                      Lcd_White_Center_String@i 003C  
                               _senha_gerador 02DC                            i1___ltdiv@dividend 0023  
                                _erro_inv_str 5C38                              eeprom_write@addr 002C  
                         __size_of_func_enter 00D8                    __end_of_EUSART_Receive_ISR 50FE  
                           ??_SMT2_Initialize 002B                         printTelaEditarSenha@s 004E  
                  __size_of_EUSART_Initialize 002D                             __size_of_get_freq 00A1  
                                    ?_Lcd_Cmd 0070                             __size_of_get_duty 002D  
                                 _carrega_str 5E14                             __size_of_get_temp 00B3  
                                 sprintf@flag 0044                        __end_of_erro_senha_str 59F6  
                                  sin@coeff_a 6823                                    sin@coeff_b 6893  
                         __end_of_fixando_str 5DAE                                  _erro_ovl_str 5C5A  
                                 sprintf@prec 0045              _EUSART_RxDefaultInterruptHandler 0234  
                     __size_of_config_entrada 0081                                   _aguarde_str 5D6A  
                             ??_EditSenhaUser 004F                                ?_salva_n_pecas 0070  
                         __end_of_escreve_LCD 67D6                             __size_of_load_bar 00A8  
                    __end_of_teste_pneumatico 3232                             __size_of_func_rst 0049  
                            _carrega_EEPROM32 4E54                                     _falha_str 58E6  
                                   _main$4251 0149                              ___lwdiv@dividend 002D  
                      _PIN_MANAGER_Initialize 4A27                              Autenticar@F15930 02E1  
                         __end_of_n_pecas_str 609A                                   _clear_saida 61C7  
                                   _bip_tecla 5251                                   ?_stop_timer 0070  
                       __end_of_ini_ee_tempos 1000                              ??_Lcd_Set_Cursor 002F  
                           __size_of_op_desce 011F                             __size_of_op_fixar 00D4  
                          EditSenhaUser@senha 0050                   __end_of_config_maq_especial 4800  
                                    ?___awdiv 002B                                     __ptext100 6175  
                                   __ptext101 61A1                                     __ptext110 6224  
                                   __ptext102 5190                                     __ptext111 6124  
                                   __ptext103 622D                                     __ptext120 3BC4  
                                   __ptext112 48A1                                     __ptext104 4A27  
                                   __ptext121 53FB                                     __ptext113 3F1B  
                                   __ptext105 6212                                     __ptext130 5735  
                                   __ptext122 67C1                                     __ptext114 5428  
                                   __ptext106 6760                                     __ptext131 42CC  
                                   __ptext123 5171                                     __ptext115 5331  
                                   __ptext107 4A78                                     __ptext140 2801  
                                   __ptext132 1000                                     __ptext124 5482  
                                   __ptext116 49DA                                     __ptext108 5455  
                                   __ptext141 5309                                     __ptext133 6165  
                                   __ptext125 55D8                                     __ptext117 52BE  
                                   __ptext109 621B                                      ?___ftadd 003B  
                                   __ptext150 6235                                     __ptext142 52E3  
                                   __ptext134 5251                                     __ptext126 50FE  
                                   __ptext118 3AFA                                     __ptext151 6245  
                                   __ptext143 57BB                                     __ptext135 55A3  
                                   __ptext127 61DF                                     __ptext119 498D  
                                   __ptext152 623D                                     __ptext144 553D  
                                   __ptext136 5299                                     __ptext128 50B0  
                                   __ptext153 6184                                     __ptext145 50C7  
                                   __ptext137 5274                                     __ptext129 5099  
                                   __ptext154 5153                                     __ptext146 556F  
                                   __ptext138 6112                                     __ptext155 50E2  
                                   __ptext147 2804                                     __ptext148 674D  
                                   __ptext149 61FF                             __size_of_op_solda 02B5  
                                    ?___awmod 0031                                      ?___ftdiv 00AA  
                              ??_rst_inversor 0030                                      ?___ftneg 00D0  
                                    ?___lldiv 002F                                  ciclar@ciclos 00BD  
                                    ?___ftmul 0048                                      ?___llmod 002B  
                                    ?___ftsub 00D0                                      ?___fttol 00BA  
                                    ?___ltdiv 0034                             __size_of_set_freq 0098  
                                    ?___lwdiv 002B                                      ?___lwmod 0033  
                                 _descida_str 6056                                 ISR_entrada@ch 002D  
                      pontencia_instantanea@d 0024                                  _eusartRxHead 01D0  
                                _eusartTxHead 01D3                         carrega_EEPROM@address 0030  
                                _eusartRxTail 01CF                           __end_of_entrada_str 5830  
                            ??_status_gerador 0032                             __size_of_teste_US 0367  
                                _eusartTxTail 01D2                             __size_of_ver_freq 0037  
                ??_INTERRUPT_InterruptManager 0026                            i1___ltdiv@quotient 007A  
            __size_of_Lcd_White_Center_String 0058                                     __pswtext1 5070  
                                   __pswtext2 61F5                                     __pswtext3 6135  
                                   __pswtext4 61D3                                     __pswtext5 60E8  
                                   __pswtext6 6145                                     __pswtext7 6100  
              ciclarPneumatico@contarDescidas 00AB                             ini_GERADOR@Xc1Xc2 0441  
                     _eusartTxBufferRemaining 01D1                           __size_of_selectModo 0137  
                                    _BAUD1CON 011F                                      ?_liberar 0070  
                                    ?_entrada 002B                         __end_of_liberar_tecla 5778  
                                    _CLC1GLS0 1E16                                      _CLC1GLS1 1E17  
                                    _CLC1GLS2 1E18                                      _CLC1GLS3 1E19  
                           ini_GERADOR@i_2420 0445                             ini_GERADOR@i_2421 0452  
                                    _CLC1SEL0 1E12                                      _CLC1SEL1 1E13  
                                    _CLC1SEL2 1E14                                      _CLC1SEL3 1E15  
                                    XC@freq_l 00BE                                     _eval_poly 414B  
                                   _n_pecas_l 0230                                __size_ofi1_clr 000A  
                           _tela_ultima_solda 2CB3                                      ?_teclado 0070  
                          ?_tela_ultima_solda 0070                                   ??i1___ltdiv 0079  
                            ___lwdiv@quotient 0031                                   ??i1___lwdiv 007A  
                              __size_of_delay 001D                  __end_of_printTelaEditarSenha 49DA  
                            _tipo_maquina_str 5F68                                      ?_sprintf 0039  
                              __size_of_floor 00B1                                __size_of_ldexp 0092  
                              __size_of_frexp 003C                                __size_of_saida 0020  
                                   _limite_22 023E                                     _limite_24 0242  
                                   _limite_16 0240                                     _limite_17 023C  
                                   _metal_str 5F8A                                __size_of_telas E4B5  
      INTERRUPT_InterruptManager@duty_mod_pot 01D9                                __size_of_round 0071  
                              __size_of_ultoa 008B                              Autenticar@coluna 00A6  
                              __size_of_trunc 0052                                   __size_of_XC 0082  
                                    _T6CLKCON 029C                                   _atencao_str 5908  
                                   _saida_str 5830                                 set_freq@f_get 004C  
                       __size_of_salva_EEPROM 0030                                _eusartRxBuffer 03A0  
                                  set_freq@ok 004B                             ??_PWM2_Initialize 002D  
                              _eusartTxBuffer 0320                                ___wmul@product 002F  
                         ??_tela_ultima_solda 0053                                      _LATBbits 0017  
                                    _LATDbits 0019                                      _LATEbits 001A  
                                   _nextSolda 025A                                   _ini_GERADOR 1462  
                     __end_of_config_IO_start 520E                                     _joule_str 6012  
                               ??_ISR_entrada 002B                           ini_GERADOR@IT_3Vref 0426  
                                   clear_ram0 61AF                                     atan@recip 00DF  
                                 _eeprom_read 6112                                      _PIE0bits 0716  
                                    _PIE3bits 0719                                     _salva_str 5E7A  
                          config_flag_saida@x 002C                                      _PIE4bits 071A  
                         __size_of_teste_leds 003B                      __size_of_TMR1_WriteTimer 000F  
         __size_of_INTERRUPT_InterruptManager 00DF                                      Lcd_Cmd@a 002D  
                             ___ltdiv@divisor 0034                       ??_pontencia_instantanea 0022  
                                    _PIR3bits 070F                                      _PIR4bits 0710  
                                  ?_bip_tecla 0070                                      _PIR8bits 0714  
                             ___ltdiv@counter 003E                                      _SMT1CON0 0498  
                                    _SMT1CON1 0499                      __size_of_TMR5_Initialize 0015  
                                    _SMT2CON0 0518                                      _SMT2CON1 0519  
                                 ??_Lcd_Clear 002E                                 ??_TMR1_Reload 0072  
                                    _SMT1STAT 049A                                      _SMT2STAT 051A  
                                   _tempo_str 5AA0                          __CFG_WDTCPS$WDTCPS_8 0000  
                        __end_of_Sonitron_str 685E                                   _energia_str 5AC2  
                    __end_of_ciclarPneumatico 2B4C                           __size_of_trava_erro 00A1  
                               ??_TMR5_Reload 0072                                     _solda_str 6034  
                                   _tmp_desce 01C2                             _tipo_progress_str 5B4A  
                                   _tmp_fixar 01BC                                     _tmp_metal 01BA  
                           ??_TMR1_Initialize 002B                                    teste_US@bt 00BD  
                                  _ADCON0bits 0093                                     _tmp_solda 01C0  
                                    i1___tmul 52E3                             ___wmul@multiplier 002B  
                                    i1___wmul 50C7                             ini_ee_tempos@_num 0131  
                   __end_of_tela_ultima_solda 2E53                                     get_freq@i 01D8  
                                   get_freq@p 02C4                                  telas@ee_addr 0062  
                           ini_ee_tempos@tipo 00D6                                   _fixacao_str 5FAC  
                         __end_of_modo_op_str 5F68                                     get_temp@K 00BA  
                                   get_temp@i 00C5                              ??_Lcd_Write_Char 002C  
                                  ?_eval_poly 00A0                                     main@t_amb 690F  
                              _menu_senha_str 5A18                                  _salva_EEPROM 550D  
                         ___tmul@multiplicand 002E                                  ??_config_maq 0031  
                                ??_emergencia 00B3                           __end_ofatan@coeff_a 6812  
                         __end_ofatan@coeff_b 6841                         __size_of_tela_inicial 0077  
                                    _Lcd_Init 4A78                      __size_of_TMR6_Initialize 0013  
                                 _fixando_str 5D8C                                      _Lcd_Port 5099  
                           _config_flag_saida 4BC1                                  _SMT1CON1bits 0499  
                     ?_SMT1_GetCapturedPeriod 002B                            _receita_carreg_str 5E36  
                         __size_of_stop_timer 0003                                 ??_ver_entrada 0032  
                       __end_of_Sai_enter_str 5CC0                                 ??_verifPagina 002C  
                          ciclar@temp_n_pecas 00B7                                  _SMT2CON1bits 0519  
                               ??_verifSenhas 0030                                   _escreve_LCD 67C1  
                          ?_config_flag_saida 002B                              _tipo_regress_str 5B6C  
                    __end_of_Lcd_Write_String 5190                              _energia_total_kJ 024C  
                                 _n_pecas_str 6078                               ??_salva_n_pecas 0035  
                       config_flag_entrada@ch 002B                         __end_of_zero_cont_str 5C38  
                            __size_of_Lcd_Cmd 0017                                     frexp@eptr 002E  
                          __end_of_branco_str 6823                           ini_GERADOR@Pot_real 0420  
                          __end_of_emerg2_str 5D26                           ??_config_flag_saida 002C  
                                 _entrada_str 5800                                _printTelaSenha 49DA  
                             __pstringtext100 6915                               __pstringtext101 6918  
                             __pstringtext102 691A                               __pstringtext103 0000  
                               ??_trata_dados 00A8                            __end_of_config_maq 2CB3  
                   __end_of_tipo_progress_str 5B6C                               _tipo_idioma_str 5BD2  
                         __end_of_ISR_entrada 414B                            __end_of_emergencia 44F3  
                                ??_func_enter 004E                       ??_OSCILLATOR_Initialize 002B  
                                   saida@port 002E                                      _t1ms_ISR 01C8  
                            __size_of___awdiv 0052                            __end_of_idioma_str 5C16  
                            __size_of___ftadd 00F6                              __size_of___awmod 0046  
                            __size_of___ftdiv 00B7                              __size_of___ftneg 0009  
                            __size_of___lldiv 0053                                      ___altoft 56F8  
                            __size_of___ftmul 00B4                              __size_of___llmod 0043  
                            __size_of___ftsub 002E                              __size_of___fttol 0087  
                                    _cos$4271 00E6                              __size_of___ltdiv 0045  
                            __size_of___lwdiv 0035                              __size_of___lwmod 002D  
                __end_of_modo_contByPulse_str 5EE0                                      ___awtoft 522F  
                                    ___ftpack 4DEF                                 ??_rotina_tela 0058  
                               ??_totalCiclos 0053                   ciclarPneumatico@contarTempo 00AD  
                                _tela_inicial 4F89                                      ___lltoft 3801  
                         __end_of_TMR1_Reload 6245                        __end_of_menu_senha_str 5A3A  
                                    ___lwtoft 67EB                                  _senha_padrao 60D3  
                               ??_start_timer 002D                                      _exp$4275 00DA  
                          op_fixar@conta_erro 0041                                    sprintf@val 0046  
                            __size_of_liberar 000C                        __size_of_config_saidas 0059  
                    __size_of_ADCC_Initialize 0018                                    strcat@from 0031  
                            __size_of_entrada 0014                     __end_of_config_flag_saida 4C15  
                                   op_desce@t 0053                           __end_of_TMR5_Reload 623D  
                                    _ciclador 01E1                __end_of_SMT1_GetCapturedPeriod 61A1  
                         __end_of_valor_a_str 5E14                               ___lwdiv@divisor 002B  
                              _solda_cont_str 5D48                                 ?i1_stop_timer 0070  
                                   op_fixar@e 0040                              __size_of_teclado 0086  
                                   op_fixar@t 003A                               ___lwdiv@counter 0030  
                               _tempo_ovf_str 5A3A                                      __ptext10 4058  
                                    __ptext11 3E3B                                      __ptext20 38DC  
                                    __ptext12 207D                                      __ptext21 1801  
                                    __ptext13 511A                                      __ptext30 1003  
                                    __ptext22 4000                                      __ptext14 5381  
                                    __ptext31 36C4                                      __ptext23 51AF  
                                    __ptext15 2B4C                                      __ptext40 56F8  
                                    __ptext32 44F3                                      __ptext24 4B1C  
                                    __ptext16 508C                                      __ptext41 54B0  
                                    __ptext33 522F                                      __ptext25 1462  
                                    __ptext17 0A4C                                      __ptext50 398F  
                                    __ptext42 28AC                                      __ptext34 3801  
                                    __ptext26 1833                                      __ptext18 358D  
                                    __ptext51 3A43                                      __ptext43 5359  
                                    __ptext35 2001                                      __ptext27 078A  
                                    __ptext19 550D                                      __ptext60 4C6B  
                                    __ptext52 4DEF                                      __ptext44 6209  
                                    __ptext36 2E53                                      __ptext28 4ACA  
                                    __ptext61 61C7                                      __ptext53 0800  
                                    __ptext45 5680                                      __ptext37 382B  
                                    __ptext29 3232                                      __ptext70 4F89  
                                    __ptext62 4BC1                                      __ptext54 3000  
                                    __ptext46 414B                                      __ptext38 56BC  
                                    __ptext71 67AD                                      __ptext63 41C9  
                                    __ptext55 48B9                                      __ptext47 3027  
                                    __ptext39 4352                                      __ptext80 461D  
                                    __ptext72 2CB3                                      __ptext64 4F21  
                                    __ptext56 4944                                      __ptext48 424A  
                                    __ptext81 48FE                                      __ptext73 4585  
                                    __ptext65 51EE                                      __ptext57 3D63  
                                    __ptext49 67EB                                      __ptext90 51CE  
                                    __ptext82 6193                                      __ptext74 520E  
                                    __ptext66 29EC                                      __ptext58 4D8B  
                                    __ptext91 54DE                                      __ptext83 53D2  
                                    __ptext75 5136                                      __ptext67 082D  
                                    __ptext59 475F                                      __ptext92 43D9  
                                    __ptext84 3C8F                                      __ptext76 4E54  
                                    __ptext68 199E                                      __ptext93 5778  
                                    __ptext85 4C15                                      __ptext77 254B  
                                    __ptext69 46BE                                      __ptext94 4B6E  
                                    __ptext86 4D27                                      __ptext78 560E  
                                    __ptext95 53A9                                      __ptext87 334C  
                                    __ptext79 4CC4                                      __ptext96 6773  
                                    __ptext88 4EBA                                      __ptext97 67D6  
                                    __ptext89 40D1                                      __ptext98 6799  
                                    __ptext99 6155                                      _sin$4274 00DC  
                                ISR_entrada@b 0030                                  ISR_entrada@p 002E  
                          __end_of_inicia_str 594C                                   ciclar@etapa 00BF  
                                ISR_entrada@x 002F                                      _get_freq 461D  
                                    _amostras 02D3                                      _get_duty 0800  
                                    _get_temp 38DC                             ?_LoadSenhaGerador 0070  
                                    _pow$4272 0120                                      _pow$4273 0123  
                        __end_of_rst_inversor 522F                      __size_of_CLC1_Initialize 0011  
                            __size_of_sprintf 00CB                                     telas@temp 005A  
                __size_of_config_flag_entrada 0068                            i1___lwdiv@dividend 0078  
                                  strcpy@from 0031                                     op_solda@t 0053  
                                    _freq_str 68C7                                  ??_selectModo 003F  
                          ??_LoadSenhaGerador 002C                            __end_of_func_enter 3E3B  
                                    _load_bar 2804                                    trunc@expon 00CE  
                               __size_of_fabs 0028                                 __size_of_data 0013  
                              _config_entrada 41C9                                      _byte_out 02A0  
                               __size_of_atan 0140                                      _erro_ovl 025B  
                     __size_of_salva_EEPROM32 0064                                 __size_of_main 0390  
                                    _func_rst 4944                                      _erro_str 5C7C  
                    __end_of_tipo_energia_str 5BD2                                     pnum$text9 0085  
                               __size_of_ltoa 002F                                      ciclar@bt 00BB  
                         __end_of_posicao_str 596E                                 __size_of_sqrt 016B  
                               __size_of_utoa 0064                                     set_freq@f 0046  
                                   set_freq@i 004A                              ?_config_IO_start 0070  
                      __end_of_printTelaSenha 4A27                                      _duty_ini 01DE  
                         __end_of_ver_entrada 4F21                               Autenticar@senha 00A0  
                         __end_of_verifPagina 40D1                                      _op_desce 334C  
                             _SMT1_Initialize 6175                          __CFG_WDTCWS$WDTCWS_7 0000  
                                    _op_fixar 3C8F                                      _periodo1 0258  
                                    _periodo2 02D5                              _modo_contnuo_str 5EE0  
                               _teste_PN1_str 5CC0                           __end_of_verifSenhas 5455  
                       __end_of_addr_receitas 5099                           __end_of_process_str 5DD0  
                                    _op_solda 254B                      __size_of_TMR5_WriteTimer 0006  
                                  _RC1STAbits 011D                                   ??_bip_tecla 002B  
                                    _set_freq 4585                                 _teste_US1_str 5CE2  
                                    _teste_US 1C99                                      _pot_inst 024E  
                                    _ver_freq 560E                                      _potencia 024A  
                           escreve_LCD@coluna 0035                                      int$flags 007E  
                          __end_of_modelo_str 5880                                   _modo_op_str 5F46  
                                   teste_US@b 00BC                                      _tmp_soma 01E6  
                        _printTelaEditarSenha 498D                                     ver_freq@f 0046  
          __end_of_INTERRUPT_InterruptManager 00E3                    _INTERRUPT_InterruptManager 0004  
                     _Lcd_White_Center_String 4000                             ??_TMR1_WriteTimer 0072  
                                    main@tipo 0148                                _emergencia_str 5D26  
                             _energia_low_str 5A5C                                   atan@coeff_a 6800  
                                 atan@coeff_b 6832                             ??_TMR5_Initialize 002B  
                                    exp@coeff 609A                            i1___lwdiv@quotient 007B  
                  __size_of_tela_ultima_solda 01A0                                  ??_teste_leds 002D  
                         __end_of_trata_dados 1C99                                      log@coeff 60B8  
                          __end_of_selectModo 36C4                        __end_of_solda_cont_str 5D6A  
                        config_flag_entrada@x 002C                               _SMT2_Initialize 6155  
                                    entrada@p 0030                                      entrada@x 002F  
                                  _INTCONbits 000B                                   ??_eval_poly 0058  
                                 _NVMCON1bits 081E                      __end_of_carrega_EEPROM32 4EBA  
                              ??i1_stop_timer 0070                                    _FVRCONbits 090C  
                              __pstringtext10 592A                                __pstringtext11 594C  
                              __pstringtext20 59F6                                __pstringtext12 596E  
                              __pstringtext21 5A18                                __pstringtext13 5990  
                              __pstringtext30 5B4A                                __pstringtext22 5A3A  
                              __pstringtext14 59B2                                __pstringtext31 5B6C  
                              __pstringtext23 5A5C                                __pstringtext15 6812  
                              __pstringtext40 5C9E                                __pstringtext32 5B8E  
                              __pstringtext24 5A7E                                __pstringtext16 68AB  
                              __pstringtext41 5CC0                                __pstringtext33 5BB0  
                              __pstringtext25 5AA0                                __pstringtext17 690F  
                              __pstringtext50 5DF2                                __pstringtext42 5CE2  
                              __pstringtext34 5BD2                                __pstringtext26 5AC2  
                              __pstringtext18 5858                                __pstringtext51 5E14  
                              __pstringtext43 5D04                                __pstringtext35 5BF4  
                              __pstringtext27 5AE4                                __pstringtext19 59D4  
                              __pstringtext60 5F46                                __pstringtext52 5E36  
                              __pstringtext44 5D26                                __pstringtext36 5C16  
                              __pstringtext28 5B06                                __pstringtext61 5F68  
                              __pstringtext53 5E58                                __pstringtext45 5D48  
                              __pstringtext37 5C38                                __pstringtext29 5B28  
                              __pstringtext70 609A                                __pstringtext62 5F8A  
                              __pstringtext54 5E7A                                __pstringtext46 5D6A  
                              __pstringtext38 5C5A                                __pstringtext71 60B8  
                              __pstringtext63 5FAC                                __pstringtext55 5E9C  
                              __pstringtext47 5D8C                                __pstringtext39 5C7C  
                              __pstringtext80 6841                                __pstringtext72 6800  
                              __pstringtext64 5FCE                                __pstringtext56 5EBE  
                              __pstringtext48 5DAE                                __pstringtext81 685E  
                              __pstringtext73 6823                                __pstringtext65 5FF0  
                              __pstringtext57 5EE0                                __pstringtext49 5DD0  
                              __pstringtext90 68E6                                __pstringtext82 6879  
                              __pstringtext74 6832                                __pstringtext66 6012  
                              __pstringtext58 5F02                                __pstringtext91 68EC  
                              __pstringtext83 6886                                __pstringtext75 6850  
                              __pstringtext67 6034                                __pstringtext59 5F24  
                              __pstringtext92 68F1                                __pstringtext84 689F  
                              __pstringtext76 686C                                __pstringtext68 6056  
                              __pstringtext93 68F6                                __pstringtext85 68B5  
                              __pstringtext77 6893                                __pstringtext69 6078  
                              __pstringtext94 68FB                                __pstringtext86 68BE  
                              __pstringtext78 68C7                                __pstringtext95 68FF  
                              __pstringtext87 68CF                                __pstringtext79 60D3  
                              __pstringtext96 6903                                __pstringtext88 68D7  
                              __pstringtext97 6907                                __pstringtext89 68DF  
                              __pstringtext98 690B                                __pstringtext99 6912  
                         __end_of_rotina_tela 358D                           __end_of_totalCiclos 3F1B  
                                   ultoa@base 0041                                  ??_trava_erro 00A0  
                          __end_of_serial_str 5990                            Lcd_Write_Char@temp 002D  
                         __end_of_start_timer 6175                        __end_of_config_entrada 424A  
                                    intlevel1 0000                                     sprintf@ap 0043  
                                   sprintf@sp 0039                              i1___tmul@product 0076  
                                    ltoa@base 004E                                      teclado@b 01D5  
                            ___lwmod@dividend 0035                              ___lldiv@dividend 0033  
                     ?_PIN_MANAGER_Initialize 0070                             ??_TMR6_Initialize 002B  
                           __CFG_CLKOUTEN$OFF 0000                               ?_printTelaSenha 0049  
                            config_maq@i_2523 0034                       __end_of_tipo_idioma_str 5BF4  
                                 _ISR_entrada 40D1                                 _config_saidas 4C6B  
        __end_of_EUSART_SetRxInterruptHandler 622D         __size_of_EUSART_SetRxInterruptHandler 0009  
                _EUSART_SetRxInterruptHandler 6224                            __end_of_teste_leds 5680  
                                ?_clear_saida 0070                             ?_teste_pneumatico 0070  
                                ??_stop_timer 002B                   __size_of_PWM2_LoadDutyValue 001F  
                            escreve_LCD@linha 0039                                   _TMR1_Reload 623D  
                          ??_teste_pneumatico 00B8                            _EUSART_Receive_ISR 50E2  
                    __end_of_tipo_maquina_str 5F8A                        __end_of_emergencia_str 5D48  
                           ___tmul@multiplier 002B                         ?_printTelaEditarSenha 0049  
                      __size_of_LoadSenhaUser 0025                            Lcd_Set_Cursor@temp 0034  
                                 _TMR5_Reload 6235                            __end_of_trava_erro 475F  
                           _receita_salva_str 5E58                                   _valor_a_str 5DF2  
                               __pstringtext1 4800                                 __pstringtext2 5000  
                               __pstringtext3 5800                                 __pstringtext4 5830  
                               __pstringtext5 5880                                 __pstringtext6 58A2  
                               __pstringtext7 58C4                                 __pstringtext8 58E6  
                               __pstringtext9 5908                                      utoa@base 003B  
                                    ultoa@buf 0049                                      ultoa@val 003D  
                                    sprintf@c 0048                                      sprintf@f 003B  
                         ?_EUSART_Receive_ISR 0070                                      strcat@cp 0034  
                                    strcat@to 0035                                _tipo_tempo_str 5B8E  
                                    strcmp@s1 002F                                      strcmp@s2 002B  
                            ___lldiv@quotient 0038                               ___lwmod@divisor 0033  
                             _PWM2_Initialize 61A1                                      strcpy@cp 0034  
                                    strlen@cp 002F                                      strcpy@to 0035  
                  __size_of_config_flag_saida 0054                               ___lwmod@counter 0038  
                     __size_of_carrega_EEPROM 0032                                    _TX1STAbits 011E  
                               _energia_total 01B8                                   _posicao_str 594C  
                          addr_receitas@tempo 002B                                   _ver_entrada 4EBA  
                          __end_of_stop_timer 1003                                   _verifPagina 4058  
                     __end_of_SMT1_Initialize 6184                              config_entrada@ch 002D  
                                _Sonitron_str 6850                  __size_of_EUSART_Transmit_ISR 001E  
                             ?_config_entrada 002D                                   _verifSenhas 5428  
              __end_of_PIN_MANAGER_Initialize 4A78                             ??_ADCC_Initialize 002B  
                                _tipo_maquina 01E0                                   _process_str 5DAE  
                             _modo_rapido_str 5F02                             addr_receitas@addr 002D  
                               ?_eeprom_write 002B                                selectModo@loop 0045  
                              escreve_LCD@str 0036                          _modo_contByPulse_str 5EBE  
                                  _STATUSbits 0003                                  ?_ini_GERADOR 0138  
                        ??_EUSART_Receive_ISR 0070                                  ?_eeprom_read 0070  
                              ?_config_saidas 002E                 Lcd_White_Center_String@coluna 003B  
                             _TMR1_Initialize 6799                             ??_CLC1_Initialize 002B  
                       __end_of_EditSenhaUser 3BC4  
